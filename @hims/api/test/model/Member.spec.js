/**
 * HIMS API - Client
 * HIMS API Defintions for Client Subsystem
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hims-info@veridata.com.ph
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HimsApiClient);
  }
}(this, function(expect, HimsApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HimsApiClient.Member();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Member', function() {
    it('should create an instance of Member', function() {
      // uncomment below and update the code to test Member
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be.a(HimsApiClient.Member);
    });

    it('should have the property id (base name: "_id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property memberCardNo (base name: "member_card_no")', function() {
      // uncomment below and update the code to test the property memberCardNo
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middle_name")', function() {
      // uncomment below and update the code to test the property middleName
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property suffix (base name: "suffix")', function() {
      // uncomment below and update the code to test the property suffix
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "date_of_birth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property civilStatus (base name: "civil_status")', function() {
      // uncomment below and update the code to test the property civilStatus
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property emailAddress (base name: "email_address")', function() {
      // uncomment below and update the code to test the property emailAddress
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property memberType (base name: "member_type")', function() {
      // uncomment below and update the code to test the property memberType
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property planType (base name: "plan_type")', function() {
      // uncomment below and update the code to test the property planType
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

    it('should have the property contracts (base name: "contracts")', function() {
      // uncomment below and update the code to test the property contracts
      //var instane = new HimsApiClient.Member();
      //expect(instance).to.be();
    });

  });

}));
