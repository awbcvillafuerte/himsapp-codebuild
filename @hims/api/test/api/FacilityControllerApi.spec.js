/**
 * HIMS API - Client
 * HIMS API Defintions for Client Subsystem
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hims-info@veridata.com.ph
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HimsApiClient);
  }
}(this, function(expect, HimsApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HimsApiClient.FacilityControllerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FacilityControllerApi', function() {
    describe('facilityControllerCount', function() {
      it('should call facilityControllerCount successfully', function(done) {
        //uncomment below and update the code to test facilityControllerCount
        //instance.facilityControllerCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('facilityControllerCreate', function() {
      it('should call facilityControllerCreate successfully', function(done) {
        //uncomment below and update the code to test facilityControllerCreate
        //instance.facilityControllerCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('facilityControllerDeleteById', function() {
      it('should call facilityControllerDeleteById successfully', function(done) {
        //uncomment below and update the code to test facilityControllerDeleteById
        //instance.facilityControllerDeleteById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('facilityControllerFind', function() {
      it('should call facilityControllerFind successfully', function(done) {
        //uncomment below and update the code to test facilityControllerFind
        //instance.facilityControllerFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('facilityControllerFindById', function() {
      it('should call facilityControllerFindById successfully', function(done) {
        //uncomment below and update the code to test facilityControllerFindById
        //instance.facilityControllerFindById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('facilityControllerReplaceById', function() {
      it('should call facilityControllerReplaceById successfully', function(done) {
        //uncomment below and update the code to test facilityControllerReplaceById
        //instance.facilityControllerReplaceById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('facilityControllerUpdateAll', function() {
      it('should call facilityControllerUpdateAll successfully', function(done) {
        //uncomment below and update the code to test facilityControllerUpdateAll
        //instance.facilityControllerUpdateAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('facilityControllerUpdateById', function() {
      it('should call facilityControllerUpdateById successfully', function(done) {
        //uncomment below and update the code to test facilityControllerUpdateById
        //instance.facilityControllerUpdateById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
