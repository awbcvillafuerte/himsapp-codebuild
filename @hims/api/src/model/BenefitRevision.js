/**
 * HIMS API - Client
 * HIMS API Defintions for Client Subsystem
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hims-info@veridata.com.ph
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BenefitRevision model module.
 * @module model/BenefitRevision
 * @version 1.0.0
 */
class BenefitRevision {
    /**
     * Constructs a new <code>BenefitRevision</code>.
     * Benefit revision entity
     * @alias module:model/BenefitRevision
     * @param documentId {Object} 
     * @param op {module:model/BenefitRevision.OpEnum} 
     * @param path {String} 
     */
    constructor(documentId, op, path) { 
        
        BenefitRevision.initialize(this, documentId, op, path);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentId, op, path) { 
        obj['document_id'] = documentId;
        obj['op'] = op;
        obj['path'] = path;
    }

    /**
     * Constructs a <code>BenefitRevision</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BenefitRevision} obj Optional instance to populate.
     * @return {module:model/BenefitRevision} The populated <code>BenefitRevision</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BenefitRevision();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('delete_dt')) {
                obj['delete_dt'] = ApiClient.convertToType(data['delete_dt'], 'Date');
            }
            if (data.hasOwnProperty('document_id')) {
                obj['document_id'] = ApiClient.convertToType(data['document_id'], Object);
            }
            if (data.hasOwnProperty('op')) {
                obj['op'] = ApiClient.convertToType(data['op'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
        }
        return obj;
    }


}

/**
 * Primary key of a document in a MongoDB collection.
 * @member {String} _id
 */
BenefitRevision.prototype['_id'] = undefined;

/**
 * Date an item is deleted. Null/undefined value means the item is not yet deleted.
 * @member {Date} delete_dt
 */
BenefitRevision.prototype['delete_dt'] = undefined;

/**
 * @member {Object} document_id
 */
BenefitRevision.prototype['document_id'] = undefined;

/**
 * @member {module:model/BenefitRevision.OpEnum} op
 */
BenefitRevision.prototype['op'] = undefined;

/**
 * @member {String} from
 */
BenefitRevision.prototype['from'] = undefined;

/**
 * @member {String} path
 */
BenefitRevision.prototype['path'] = undefined;

/**
 * @member {Object} value
 */
BenefitRevision.prototype['value'] = undefined;





/**
 * Allowed values for the <code>op</code> property.
 * @enum {String}
 * @readonly
 */
BenefitRevision['OpEnum'] = {

    /**
     * value: "add"
     * @const
     */
    "add": "add",

    /**
     * value: "remove"
     * @const
     */
    "remove": "remove",

    /**
     * value: "replace"
     * @const
     */
    "replace": "replace",

    /**
     * value: "move"
     * @const
     */
    "move": "move",

    /**
     * value: "copy"
     * @const
     */
    "copy": "copy",

    /**
     * value: "test"
     * @const
     */
    "test": "test"
};



export default BenefitRevision;

