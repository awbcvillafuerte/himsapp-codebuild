/**
 * HIMS API - Client
 * HIMS API Defintions for Client Subsystem
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: hims-info@veridata.com.ph
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UsersFields from './UsersFields';

/**
 * The Filter15 model module.
 * @module model/Filter15
 * @version 1.0.0
 */
class Filter15 {
    /**
     * Constructs a new <code>Filter15</code>.
     * @alias module:model/Filter15
     */
    constructor() { 
        
        Filter15.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Filter15</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Filter15} obj Optional instance to populate.
     * @return {module:model/Filter15} The populated <code>Filter15</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Filter15();

            if (data.hasOwnProperty('where')) {
                obj['where'] = ApiClient.convertToType(data['where'], Object);
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = UsersFields.constructFromObject(data['fields']);
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('skip')) {
                obj['skip'] = ApiClient.convertToType(data['skip'], 'Number');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {Object} where
 */
Filter15.prototype['where'] = undefined;

/**
 * @member {module:model/UsersFields} fields
 */
Filter15.prototype['fields'] = undefined;

/**
 * @member {Number} offset
 */
Filter15.prototype['offset'] = undefined;

/**
 * @member {Number} limit
 */
Filter15.prototype['limit'] = undefined;

/**
 * @member {Number} skip
 */
Filter15.prototype['skip'] = undefined;

/**
 * @member {Array.<String>} order
 */
Filter15.prototype['order'] = undefined;






export default Filter15;

