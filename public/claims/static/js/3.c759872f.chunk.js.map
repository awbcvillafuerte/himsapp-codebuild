{"version":3,"sources":["Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete2/AutoComplete2.module.scss","SharedComponents/DatePicker2/DatePicker2.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.module.scss","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.module.scss","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.module.scss","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","SharedComponents/FileViewer/FileViewer.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.module.scss","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.module.scss","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.module.scss","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.module.scss","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.module.scss","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.module.scss","Pages/Protected/Claims/Components/Test/Test.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/Table/Table.js","SharedComponents/LoadingIndicator/LoadingIndicator.js","SharedComponents/TableSortLabel/TableSortLabel.js","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Utilities/TextFormatter.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/Claims/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete2/AutoComplete2.js","SharedComponents/DatePicker2/DatePicker2.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Alert/Alert.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Services/ExtractValidationResult.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Services/Api/FacilitiesServices.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Services/Api/Claims/ClaimsEncodingServices.js","Utilities/PromiseUtil.js","Services/ArrayToCSV.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Services/Api/Claims/ClaimsServices.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","SharedComponents/AutoComplete/AutoComplete.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.js","Services/Api/Claims/CustomerCareServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Services/Api/Claims/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsReconServices.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/types.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/Chart/Chart.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/dropdown.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.js","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.js","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.js","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.js","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.js","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.js","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.js","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.js","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.js","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.js","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.js","Pages/Protected/Claims/Routes/Reports.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/Claims/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/Claims/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/NoticeValidator.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.js","SharedComponents/FileViewer/FileViewer.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/Claims/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/Claims/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Services/Api/Claims/MedicalConsultantServices.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/Claims/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.js","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.js","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.js","Pages/Protected/Claims/Components/Test/Validations/DateValidator.js","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.js","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.js","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.js","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.js","Pages/Protected/Claims/Components/Test/Test.js","Pages/Protected/Claims/Constant/ClaimUsers.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js"],"names":["module","exports","DashboardTileComponent","children","count","header","title","viewList","actionHeader","onFilterChange","isFilterShown","id","React","useState","filter","setFilter","Paper","className","classes","root","wrapper","Typography","variant","color","value","FormControl","Select","onChange","event","target","MenuItem","input","selected","action","list","Children","map","child","displayName","useStyles1","makeStyles","theme","flexShrink","marginLeft","spacing","TablePaginationActions","props","useTheme","page","rowsPerPage","onChangePage","IconButton","onClick","disabled","aria-label","direction","Math","ceil","max","CustomTable","TableContainerProps","TableProps","head","body","footer","pagination","limit","rowsPerPageOptions","footerComponent","Fragment","TableContainer","component","table","TableHead","TableFooter","TableCell","float","TablePagination","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","LoadingIndicator","type","loading","style","CircularProgress","animation","size","overlay","_TableSortLabel","field","label","others","TableSortLabel","hideSortIcon","icon","CustomizedDialogs","columns","searchTextPlaceHolder","setViewList","onViewListChange","fetching","handleOnClose","p","show","search","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","PaperProps","height","display","DialogTitle","disableTypography","button","DialogContent","dividers","content","SearchTextComponent","e","clearTimeout","setTimeout","placeholder","overflow","position","stickyHeader","headCell","key","sortField","name","order","orderBy","sort","args","match","handleColumnFiltering","align","colSpan","length","data","CurrencyFormatter","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","_value","moment","isValid","CreatedBundlesTile","services","sizes","sm","items","setItems","initialValue","setFetching","fetchingViewList","setFetchingViewList","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","finally","state","Button","LoadingService","createBundle","res","history","push","prevState","item","index","bundle_number","date_due","facility_name","to","params","_params","_data","row","SubmittedBundlesTile","TaskTrayComponent","showTitle","toArray","cloneElement","_sizes","xs","lg","Grid","container","itemSize","s","TicketListComponent","viewAllLink","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","AutoComplete2","required","readOnly","other","error","suggestions","focus","setFocus","_error","setError","trim","handleOnChange","onBlur","currentTarget","contains","relatedTarget","Autocomplete","options","noOptionsText","renderInput","TextField","ref","InputProps","disableUnderline","endAdornment","getOptionLabel","option","onInputChange","onFocus","inputValue","freeSolo","autoSelect","openOnFocus","autoHighlight","disableClearable","DatePicker","noMargin","tabindex","disableComponents","maxDate","InputRef","useRef","selectedDate","setSelectedDate","handleOnFocus","current","handleDateChange","date","utils","MomentUtils","allowKeyboardControl","helperText","clearable","TextFieldCurrency","currency","customInput","InputBase","isNumericString","displayType","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","autoComplete","TextFieldNumber","formattedValue","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","facility_id","doctor_id","doctor_name","getMedicalPartnerSuggestions","by","lookups","query","getDoctorPartnerSuggestions","i","full_name","handleOnChangeAutosuggest","handleOnChangeMedicalPartner","handleOnChangeDoctorPartner","term","earliest_term","isNaN","newDate","date_received","add","md","total_rcs","toISOString","due_date","soa_number","total_soa_amt","reassign_notes","multiline","rows","useStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","width","marginTop","paper","marginBottom","minWidth","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","margin","padding","top","EnhancedTable","headCells","handleRequestSort","handleSelectAllClick","checkAll","sorter","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","selectStatus","Checkbox","center","numeric","disablePadding","sortDirection","active","Alert","defaultFunction","message","cancelLabel","okLabel","onOk","onCancel","aria-describedby","DialogActions","autoFocus","BatchList","batches","onDelete","openDialog","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","batch","setBatch","includes","claim","toLowerCase","parseFloat","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","Boolean","_index","handleClick","buttonWrapper","deleteMessage","getMessage","MenuProps","maxHeight","ITEM_HEIGHT","DropDown","addNew","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","startsWith","extract","_errors","path","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestion","resetSuggestion","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","setSelectedBatch","claim_types","ClaimTypes","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","claimSource","setClaimSource","setErrors","status","_results","description","catch","err","console","log","CustomTextField","doctor","BatchFormValidator","FacilitiesServices","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","defClaimSource","setDefClaimSource","getBundleDetails","getBundle","_status","received","due","soa","amount","facility","getBatches","getDefaultClaimSource","cancelBundle","handleOnSubmit","submitBundle","getDoctorSuggestions","suggestion","handleOnDeleteBatch","getFacilityById","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","onOpen","source","ClaimsEncodingServices","claim_number","responseType","Accept","sub_document_id","claimNo","info_id","PromiseUtil","executeInSequence","promises","callback","a","alert","chain","ArrayToCSV","fileName","extension","statics","mimeType","newLine","c_header","c_footer","_rows","joined","currentValue","fromBlob","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","RCSNum","Diagnosis","Procedure","downloadTemplate","columnTemplates","Object","keys","transform","dataRows","dataMapping","defaults","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","batchIndex","batchParam","claims","batchPromise","resolveBatch","rejectBatch","addClaim","claimsErr","addClaims","addBatches","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","memberName","nameParts","parseFullName","member_account_number","member_first_name","first","member_middle_name","middle","member_last_name","last","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","IP","OPP","OPC","__index__","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","doctor_full_name","NewBundleValidator","form","inputs","save","file","onComplete","onError","reader","FileReader","onload","workbook","XLSX","read","result","sheet","Sheets","SheetNames","sheet_to_json","raw","shift","_item","onerror","ex","readAsBinaryString","Progress","withStyles","borderRadius","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","click","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","trimmedItems","setTrimmedItems","_items","find","handleOnChangeItems","startAt","endAt","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","pair","DataPairContainer","onClickAddNew","claim_sources","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","d","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsAdjudicationServices","client","SafeAccess","def","delimeter","obj","completeColumns","remarks","AutoComplete","square","hint","handleItemClick","ClaimsUtilLedgerReport","username","total","ar_amount","signatories","CustomerCareServices","account_number","mct_id","token","window","localStorage","getItem","baseURL","CLAIMS_URL","process","replace","where","skip","offset","client_account_no","UserManagementServices","role_name","this","getUsers","class","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_name","doctors","setDoctors","partner_doctor_name","total_amount","grand_total","session","date_issued","concat","headCellsComplete","randomRange","random","Utilization","ClaimsAnalysis","fetchService","isMember","member","utilizationLoa","hideSearchBar","hideActionColumn","dataColumns","fromUtilReport","claimUtilizations","setHeadCells","setRows","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","filtered","entry","indexOf","benefit_limits","member_account_no","info","member_id","icd_code","icd","category_code","IcdCptStorageServices","diagnosis_code","_utilizationLoa","_search","some","procedure_name","cpt_code","toString","itemFilter","handleSearchChange","handleOnPaginate","exc","lodash","take","chunk","setPaginate","background","hover","role","tabIndex","cell","renderRows","getClaimResponse","analyzeRespone","analysis_results","filters","ClaimsReconServices","InPatient","OutPatientProcedure","OutPatientConsultation","MedicineAllowance","MedicalSupplies","ClinicManagement","mockData","months","getDefault","month","legend","hoverBorderWidth","hoverBorderColor","Array","from","inititalDate","Date","clientColumns","memberDataColumns","id_row","label_left","label_right","name_row","bundle_row","date_row","bundles","total_approved_amount","total_tax_amount","initialDetails","total_pr_amount","discount_amount","PaymentRequestReport","medical_partner_id","medical_partner_name","searchValue","setSearchValue","setClaims","setDetails","dateRangeError","setDateRangeError","column","isSuggestionClick","ClaimsServices","getBundleSoaSuggestions","handlePagination","paymentRequestClaims","handleGenerateReport","c","approved_amount","tax_amount","static_header","hasOwnProperty","_columns","no","static_footer","staticHeaderFooter","handleOnChangeBundleSoa","disableFuture","submit","DateRangeValidator","_claims","paymentRequestReport","handleOnFilter","fontSize","typo","TextFieldStyle","member_name","handling","date_max","initialClaims","processed","total_received","total_processed","contract_plan","claim_status","user","geography","label2","suffix","other_name","subType","reportPages","transmittal","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","transmittalReport","_totam_amout","_ar_amount","total_due_from_member","col","formatData","contracts","output","property","PdfViewer2Service","service","getTransmittalReportPdf","colIndex","utilizationLedger","hideReport","hideHeader","dateRange","refresh","btnDisabled","setBtnDisabled","fetchLedger","utilizationLegder","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","claimIndex","treasuryTransmittalReport","reports","setReports","fetchReport","_reports","report","date_requested","check_date","minHeight","utilizationReport","client_id","reportType","setReportType","chartData","setChartData","totalAmount","setTotalAmount","ABL","MBL","limitType","graphFilter","setGraphFilter","account_no","setMember","setUtilizationLoa","setMemberFetchStatus","memberUtilizations","setMemberUtilizations","searchBy","setSearchBy","getField","fetchTable","getMember","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","covered_months","_field","getMonth","covered","uniq","getCoveredMonths","utilizationClientTable","getSuggestions","client_name","like","and","v","or","first_name","middle_name","last_name","getMembers2","getMemberUtilizationLoa","response","getMemberUtilizations","dropdown","pop","RadioGroup","Radio","handleOnChangeDropdown","auto","textAlign","mergeResultsbyMonth","r","parsedData","_merge","dynamic","uniqBy","j","filteredData","u","labels","datasets","formatChart","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","getUtilizations","prReports","loadingHimsData","fetchHIMSData","loadingHIMSData","availment_date","approved_date","posted_date","date_admitted","date_discharged","payment_due_date","handleOnColumnFilter","confinementReport","setColumns","fetchRecords","reimbursementReport","grandTotal","reimbursementClaimReport","word","substring","hidden","claimsSummaryReport","geopgraphy","_category","lookupsQuery","year","productivityPerformaceReport","region","receivedTotal","processedTotal","productivityReport","received_total","processed_total","grand","returnedClaimsReport","setDateRange","handleOnClickFilter","_total","claim_amount","return_reason","performanceReport","contract_plan_type","average","work","agingPartialApprovedReport","rawData","setRawData","facility_region","total15Days","total1Week","total1Month","totalAll","agingPartialApprovedClaimsReport","fetchCSV","agingReturnedClaims","agingReturnClaimsReport","claimsBeyond3Months","date_of_service","agingReimbursement","reimbursement_count","reimbursement_percent","reimbursement_category","reimbursmentAgingReport","const_types","detailedClaimsReport","detailedPerformanceReport","detailedMonitoringReport","reportsItems","BATCH_ENCODER","BATCH_ENCODER_SUPERVISOR","CLAIMS_DETAILS_ENCODER","CLAIMS_DETAILS_ENCODER_SUPERVISOR","CLAIMS_ANALYST","PR_OFFICER","PR_OFFICER_SUPERVISOR","MEDICAL_CONSULTANT","CLAIMS_RECON","CLAIMS_VERIFIER_SUPERVISOR","CLAIMS_MANAGER","generateBreadCrumbs","userRole","breads","generateSideBar","generateRoutes","exact","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","comment","assign","ReassignValidator","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","retainSpace","autoWidth","showIcon","anchorEl","setAnchorEl","setMessage","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","setLoading","fetchData","translateRows","filterData","fetches","responses","colIdx","val","handleOnSort","handleColumnFilter","_row","entries","revertRow","ClientMemberModal","CustomerCareService","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","first_middle","given_name","common","loa_no","proc","diagnosis_given_diagnosis","diagnosis_description","prof","diag","room","date_admitted_date","now","date_discharged_date","corp_guarantee","partner_id","rooms","localeCompare","sensitivity","desc","rate","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","recommendation","reimbursement_type","customer_account_number","company_name","medicine_category","tooth_number","tooth_numbers","date_issued_date","claim_remarks","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","showReimbursement","showApprovalCode","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","isCM","memberAccountNumber","setMemberAccountNumber","contractPlanTypeLoading","setContractPlanTypeLoading","memberModal","setMemberModal","clientModal","setClientModal","handleOnClickClientLookup","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","getMemberContractPlanType","handleSetMember","getClients","getClientrContractPlanType","handleSetClient","ICDTextFields","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","delete","Tooltip","GivenDiagnosisField","givenDiag","onChangeGivenDiag","given_diagnosis","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","getIcd10Suggestions","synonym","getICDSynonyms","handleOnConfirmDelete","create","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","prop","handleOnChangeCpt","getCptSuggestions","handleOnChangeDiagnosis","fieldArr","search_field","search_value","sort_field","sort_direction","cpt","reason_charging","amount_due_from_client","reason_for_charging_client","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","ProcedureList","handleClickLineDiscrepancy","Set","expand","right","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","major","getSpecializationSuggestions","getDoctorSpecilizations","handleOnChangeSpecialization","professional_fee","ProfessionalFeeList","ClaimFooter","onReject","onViewAnalysisSheet","onViewLetterOfAdvice","onReassign","onEscalate","onApprove","isReimbursement","onRemove","onViewClaimNotice","onReturn","reimbursement_info","reimbursement_info_analyst","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","discrepancyModal","setDiscrepancyModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","hasNotCovered","setHasNotCovered","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersWithRole","sortBy","notCovered","hasAmountNotCovered","handleOnShowApprovalMatrix","AuthorityMatrix","approve","other_types","selected_amount","goBack","doValidateMiddleware","left","return_advice","infos","date_released","date_return","rmLogicReturn","analysis_sheet","enabled","visible","letter_of_advice","escalate","handleOnApproval","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","Unit","rollover","eligible_availees","days_deployed","eligibility","empty","RB","EM","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","onQuery","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partners","setPartners","fetchPartner","fetchDoctors","onQueryColumn","collection","onQueryAll","location","handleOnClickAffiliated","schedule","Contract","setFileName","setService","getMemberContractUrl","initial","abr","lastName","firstName","middleName","format1","format2","NameFormatter","getClientContractUrl","brand_name","pdf","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","memberFetchMessage","getPartners","getDoctors","getMemberContract","getClientContract","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","contract_year_from","contract_year_to","official_receipt_number","getValidators","getValidators2","ClaimInPatient","onChangeFacility","onChangePro","_type","getClaimDetails","getReason","getSubTypes","doValidateAll","doValidateProcedure","doValidateHospitalItem","doValidateProfessionalFee","_allowedFields","_lineItemFields","getRooms","pro","claim_sub","sub_type","base","startOf","sub_types","sub_sub_types","constainerStyle","validator","MainValidator","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","_details","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","complied","date_complied","date_created","date_encoded","prepared_by","array","other_details","released_to","ReimbursementInfo","canPrintNotice","setShowModal","doReject","doViewClaimNotice","lookup","claimNumber","showAdd","setShowAdd","noticeModal","setNoticeModal","reasonDropdown","setReasonDropdown","insertNotice","addReimburesmentInfo","ff","updateNotice","updateReimburesmentInfo","handleOnItemSave","handleOnClickPrintNotice","document_id","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnClickSave","validateItems","scrollTo","scrollHeight","behavior","ItemForm","notice","setNotice","today","handleOnChangeReason","NoticeValidator","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","setType","setBatchNumber","allowedFields","setAllowedFields","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","reimbursement_info_analysts","endOf","wrap","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","hasPrimary","itemError","ClaimAnalysis","breadCrumbsList","isManager","icd10","setMemberFetchMessage","setClientFetchStatus","setGrandTotal","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","group","groupEnd","getProSuggestions","proUsersLookup","getAnaesthesiologistSuggestions","anaesthesiologist","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","getReturnAdvice","doValidateBase","rest","doValidateDiagnosis","DiagnosisListValidator","not","ProcedureValidator","diagnosisError","exists","ProcedureDiagnosisValidator","HospitalItemValidator","HospitalItemDiagnosisValidator","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","subValues","subSubValues","subTypes","subSubTypes","inquire","receiver_id","onInquire","pr_officer","employee_id","removeClaim","returnClaim","base_errors","createdBundles","specificClaim","utilization","contact","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","processor_id","setOrder","setOrderBy","claim_numbers","claimNumbers","rowsLength","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","batchNumber","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","reqApprovalCode","reqLoaNumber","ClaimsEncoding","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","handleOnChangeProcedureForm","diagnosi","handleOnUpdateProcedure","HospitalItemTextFields","HospitalItemTextField","onChangeName","handleOnChangeHospitalForm","handleOnUpdateHospitalItem","handleOnChangeProfessionalFeeForm","handleOnUpdateProfessionalFee","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","isAdd","hasClaimChanges","next","saveAlert","setSaveAlert","doSaveMiddleware","initDefault","lineItemFields","setlineItemFields","ToothNumber","DentalProcedureForm","dentalProcedure","doValidateDentalProcedure","UploadedList","uploads","setUploads","getUploads","file_name","fileType","file_type","BaseUrlFetcher","getClaimsBaseUrl","aria-controls","aria-haspopup","FileViewer","fromUrl","filePath","errorComponent","prevClaim","_claimNumber","viewFile","setViewFile","initial_values","isEqual","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","resetGrandTotal","ClaimPage","_dentalProcedure","_procedure","_hospitalItem","_professionalFee","pageTitle","breadCrumbs","getBatchDetails","DentalProcedureValidator","DentalProcedureDiagnosisValidator","override","claimFields","updateClaim","specificBatch","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","getUsersByRole","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","cesFooter","prev_user","getEncoderBatch","assigned","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ReturnedEscalatedClaimsTile","escalated","analyze","exclusions","ForPaymentRequestTile","mTitle","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","discount_rate","pr_amount","submittedHeadCells","PaymentRequestPage","setBundleNumber","prRemarks","setPrRemarks","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","utilization_amount","selectedBatches","_batch","getSelectedPending","cIndex","submitPromise","should_include","submitBatches","supervisor","paymentRequest","specificPaymentRequest","submittedPaymentRequest","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","PaymentRequestSupervisorServices","getPaymentRequestBundles","handleOnSearchColumn","MedicalConsultantServices","for_review","handleOnReview","review","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","rejected","getItemCount","addtl_cond","$ne","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getClaimsVerifierSupervisors","analystRes","supervisorRes","getApprovedClaims","overrideClaims","handling_time_formatted","initialItem","deactivate","handling_time","kpi_columns","MaintenancePage","setLookup","setItem","showAddItem","setShowAddItem","setSection","setindex","lookupsAll","ClaimsMaintainerServices","isActive","handleOnSaveItem","initialLookup","storeLookups","updateLookups","handleOnEditItem","handleOnCancelItem","activate","showSeconds","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","AutoCompletes","storage","handleOnChangeAutosuggest2","facilities","DatePickers","DateValidator","pdfjs","GlobalWorkerOptions","workerSrc","version","getMozillaPdfViewerUrl","MozillaPdf","forwardRef","Slide","setUrl","_blob","Blob","blobUrl","URL","createObjectURL","_url","encodeURIComponent","blobToBase64","pdfAsDataUri","pdfArray","convertDataURIToBinary","PdfViewer","document","getElementById","contentWindow","PDFViewerApplication","blob","base64Index","base64","atob","rawLength","Uint8Array","ArrayBuffer","charCodeAt","readAsDataURL","iframe","src","MozillaPdfURL","mct","Service","FaultyButton","Error","ErrorProducers","notDefined","boom","setBoom","Test","setStorage","toggle","setToggle","sidebar","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","errorReducer","discrepancyReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","setUserRole","isLoading","setIsLoading","mapRoles","store","Store","render","SideBarService","BatchEncoderRoutes","removeItem","batchEncoderLogic","BatchEncoderSupervisorRoutes","ClaimsDetailsEncoderRoutes","BatchePage","ClaimsDetailsEncoderSupervisorRoutes","ClaimsAnalystRoutes","SubmittedPaymentRequestPage","PaymentRequestRoutes","SubmittedPaymentRequestList","PaymentRequestSupervisorRoutes","MedicalConsultantRoutes","ClaimsReconRoutes","ClaimsList","ClaimsVerifierSupervisorRoutes","ClaimsManagerRoutes"],"mappings":"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","file":"static/js/3.c759872f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"LoadingIndicator_loading__3Nv8i\",\"overlay\":\"LoadingIndicator_overlay__Ci9Ox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__11iKj\",\"label\":\"AutoComplete2_label__3pWjU\",\"wrapper\":\"AutoComplete2_wrapper__126-b\",\"read-only-value\":\"AutoComplete2_read-only-value__CcS5n\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__3jz9Q\",\"form-control\":\"AutoComplete2_form-control__1SPaQ\",\"input\":\"AutoComplete2_input__1qyu3\",\"suggestions\":\"AutoComplete2_suggestions__33g20\",\"hint\":\"AutoComplete2_hint__1Dtzi\",\"focus\":\"AutoComplete2_focus__2pS9H\",\"has-error\":\"AutoComplete2_has-error__lIYZv\",\"error\":\"AutoComplete2_error__xx6tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__1xO2P\",\"label\":\"DatePicker2_label__2TSn5\",\"wrapper\":\"DatePicker2_wrapper__1Zm8_\",\"read-only-value\":\"DatePicker2_read-only-value__2H1Jw\",\"text-field\":\"DatePicker2_text-field__a4Jqy\",\"no-margin\":\"DatePicker2_no-margin__2hfWg\",\"input\":\"DatePicker2_input__1BmqV\",\"date-button\":\"DatePicker2_date-button__3AEOq\",\"focus\":\"DatePicker2_focus__3d53X\",\"has-error\":\"DatePicker2_has-error__2wab-\",\"disabled\":\"DatePicker2_disabled__hHKql\",\"error\":\"DatePicker2_error__3f2g3\",\"date\":\"DatePicker2_date__3D12q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"table\":\"DataPairs_table__1nH2P\",\"header\":\"DataPairs_header__Bkti-\",\"pair\":\"DataPairs_pair__2QYar\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSoaPage_root__1JzXF\",\"table\":\"UploadSoaPage_table__3q8r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__2f7j7\",\"header\":\"ClaimsUtilLedgerReport_header__3SkBF\",\"typo\":\"ClaimsUtilLedgerReport_typo__2Javr\",\"disabled\":\"ClaimsUtilLedgerReport_disabled__z8zbA\",\"content\":\"ClaimsUtilLedgerReport_content__1W3eV\",\"filter\":\"ClaimsUtilLedgerReport_filter__3QHK8\",\"input\":\"ClaimsUtilLedgerReport_input__W6YU-\",\"submit\":\"ClaimsUtilLedgerReport_submit__f-hsB\",\"body\":\"ClaimsUtilLedgerReport_body__3G83I\",\"table\":\"ClaimsUtilLedgerReport_table__3TNU0\",\"remarks\":\"ClaimsUtilLedgerReport_remarks__3Z9th\",\"table-cell\":\"ClaimsUtilLedgerReport_table-cell__1plst\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__3Y-tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"hint\":\"AutoComplete_hint__1J8Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3oHfX\",\"total\":\"Footer_total__3_8Xj\",\"total-row\":\"Footer_total-row__1NiIX\",\"total-cell\":\"Footer_total-cell__2ExBc\",\"all-signatories\":\"Footer_all-signatories__AM-GJ\",\"signatories\":\"Footer_signatories__2V122\",\"username\":\"Footer_username__1whot\",\"line-note\":\"Footer_line-note__1BI5X\",\"line-received\":\"Footer_line-received__KlyKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__13RYz\",\"header\":\"TransmittalReport_header__1LohO\",\"typo\":\"TransmittalReport_typo__2QKnI\",\"disabled\":\"TransmittalReport_disabled__3_q8n\",\"content\":\"TransmittalReport_content__3_9vc\",\"filter\":\"TransmittalReport_filter__27k1z\",\"input\":\"TransmittalReport_input__OnyIq\",\"submit\":\"TransmittalReport_submit__VuyPg\",\"search-header\":\"TransmittalReport_search-header__xdK5O\",\"search-header-child\":\"TransmittalReport_search-header-child__10jDH\",\"column\":\"TransmittalReport_column__1dPqY\",\"body\":\"TransmittalReport_body__26j71\",\"table\":\"TransmittalReport_table__1u_Pl\",\"right\":\"TransmittalReport_right__3OOJU\",\"h_amount\":\"TransmittalReport_h_amount__1-OuF\",\"h_ar\":\"TransmittalReport_h_ar__M03I0\",\"h_member\":\"TransmittalReport_h_member__2fOhO\",\"h_date\":\"TransmittalReport_h_date__14PcF\",\"handling\":\"TransmittalReport_handling__1t_0M\",\"table-row\":\"TransmittalReport_table-row__1nh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__RmXBp\",\"header\":\"TreasuryTransmittalReport_header__3p3Rf\",\"content\":\"TreasuryTransmittalReport_content__1wzny\",\"filter\":\"TreasuryTransmittalReport_filter__2GQoK\",\"input\":\"TreasuryTransmittalReport_input__3hS-d\",\"submit\":\"TreasuryTransmittalReport_submit__FP1Mo\",\"body\":\"TreasuryTransmittalReport_body__HvS7_\",\"table\":\"TreasuryTransmittalReport_table__WES8q\",\"table-row\":\"TreasuryTransmittalReport_table-row__2lid3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__2WSai\",\"header\":\"PRCheckReport_header__3S6zh\",\"content\":\"PRCheckReport_content__3989Q\",\"filter\":\"PRCheckReport_filter__1-XzS\",\"input\":\"PRCheckReport_input__29L_D\",\"submit\":\"PRCheckReport_submit__3VE-t\",\"body\":\"PRCheckReport_body__1ZDmc\",\"table\":\"PRCheckReport_table__2MkNN\",\"table-row\":\"PRCheckReport_table-row__e88aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__29RLR\",\"header\":\"UtilizationReport_header__F8Q9y\",\"content\":\"UtilizationReport_content__KyGyi\",\"filter\":\"UtilizationReport_filter__3HaBQ\",\"auto\":\"UtilizationReport_auto__BN3cW\",\"dropdown\":\"UtilizationReport_dropdown__1nPLg\",\"input\":\"UtilizationReport_input__1NNnv\",\"submit\":\"UtilizationReport_submit__gyDiv\",\"radio-group\":\"UtilizationReport_radio-group__2NtcH\",\"radio-container\":\"UtilizationReport_radio-container___KTHn\",\"body\":\"UtilizationReport_body__pKJ3l\",\"chart\":\"UtilizationReport_chart__11CVV\",\"table\":\"UtilizationReport_table__3QcuP\",\"graph-reports\":\"UtilizationReport_graph-reports__35PtI\",\"graph-legend\":\"UtilizationReport_graph-legend__1VYWe\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__OXtbJ\",\"legend-group\":\"UtilizationReport_legend-group__3M_DG\",\"legend\":\"UtilizationReport_legend__2OmGP\",\"header-report\":\"UtilizationReport_header-report__39ovc\",\"report-primary\":\"UtilizationReport_report-primary__2Vx_L\",\"title\":\"UtilizationReport_title__1jyQx\",\"line-graph\":\"UtilizationReport_line-graph__3TWay\",\"container\":\"UtilizationReport_container__1tdjp\",\"line-container\":\"UtilizationReport_line-container__3vPZy\",\"item\":\"UtilizationReport_item__MLRbC\",\"line-details\":\"UtilizationReport_line-details__24PJo\",\"label\":\"UtilizationReport_label__1Bnmb\",\"color\":\"UtilizationReport_color__fO6V5\",\"graph-plot\":\"UtilizationReport_graph-plot__2918H\",\"plot-items\":\"UtilizationReport_plot-items__21fJr\",\"graph-group\":\"UtilizationReport_graph-group__TSW3K\",\"graph-container\":\"UtilizationReport_graph-container__2GdhR\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3nonl\",\"bar-chart\":\"UtilizationReport_bar-chart__2qoxe\",\"graph\":\"UtilizationReport_graph__3KuFD\",\"tooltip\":\"UtilizationReport_tooltip__17mGM\",\"graph-category\":\"UtilizationReport_graph-category__3HxMk\",\"footer\":\"UtilizationReport_footer__Rz3yK\",\"table-row\":\"UtilizationReport_table-row__1LDFs\",\"memberinfo\":\"UtilizationReport_memberinfo__2VG76\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__UAA-3\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__3qy2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingHimsData_root__3WU8t\",\"header\":\"LoadingHimsData_header__3AgKz\",\"typo\":\"LoadingHimsData_typo__2IkSb\",\"disabled\":\"LoadingHimsData_disabled__31oIJ\",\"content\":\"LoadingHimsData_content__ck1LN\",\"filter\":\"LoadingHimsData_filter__1TZ1x\",\"input\":\"LoadingHimsData_input__YHPrG\",\"submit\":\"LoadingHimsData_submit__qqksA\",\"body\":\"LoadingHimsData_body__3yN6l\",\"table\":\"LoadingHimsData_table__11EHs\",\"table-row\":\"LoadingHimsData_table-row__1ltt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ConfinementReport_root__1uSjB\",\"header\":\"ConfinementReport_header__16HCk\",\"content\":\"ConfinementReport_content__HdGg-\",\"filter\":\"ConfinementReport_filter__24wrc\",\"input\":\"ConfinementReport_input__auX4A\",\"submit\":\"ConfinementReport_submit__1ztRA\",\"body\":\"ConfinementReport_body__16cNS\",\"table\":\"ConfinementReport_table__3HeUY\",\"remarks\":\"ConfinementReport_remarks__15eon\",\"table-cell\":\"ConfinementReport_table-cell__3g-6U\",\"table-row\":\"ConfinementReport_table-row__1Ag6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NykO\",\"total\":\"Footer_total__106js\",\"total-row\":\"Footer_total-row__2oNxf\",\"total-cell\":\"Footer_total-cell__2mlRs\",\"bundle\":\"Footer_bundle__cygl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestReport_root__1yyHg\",\"header\":\"PaymentRequestReport_header__1hEoh\",\"typo\":\"PaymentRequestReport_typo__lzZPi\",\"disabled\":\"PaymentRequestReport_disabled__7bH-b\",\"content\":\"PaymentRequestReport_content__3Xk-l\",\"filter\":\"PaymentRequestReport_filter__2HiUS\",\"input\":\"PaymentRequestReport_input__1BVX2\",\"submit\":\"PaymentRequestReport_submit__nlqNw\",\"search-header\":\"PaymentRequestReport_search-header__13iAT\",\"search-header-child\":\"PaymentRequestReport_search-header-child__3hgZo\",\"column-label\":\"PaymentRequestReport_column-label__28Gps\",\"column-input\":\"PaymentRequestReport_column-input__zavve\",\"column-label2\":\"PaymentRequestReport_column-label2__38wK2\",\"body\":\"PaymentRequestReport_body__Qp11G\",\"table\":\"PaymentRequestReport_table__25wJP\",\"right\":\"PaymentRequestReport_right__ZClv0\",\"handling\":\"PaymentRequestReport_handling__cz42W\",\"table-row\":\"PaymentRequestReport_table-row__3HEQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementReport_root__32Om0\",\"header\":\"ReimbursementReport_header__12zwF\",\"typo\":\"ReimbursementReport_typo__36kbp\",\"disabled\":\"ReimbursementReport_disabled__1QoJ6\",\"content\":\"ReimbursementReport_content__mbnn4\",\"filter\":\"ReimbursementReport_filter__1WwW5\",\"input\":\"ReimbursementReport_input__kohO7\",\"submit\":\"ReimbursementReport_submit__1MEua\",\"body\":\"ReimbursementReport_body__2-ZBv\",\"table\":\"ReimbursementReport_table__3HtyM\",\"hidden\":\"ReimbursementReport_hidden__kOzBm\",\"remarks\":\"ReimbursementReport_remarks__3VTZf\",\"table-cell\":\"ReimbursementReport_table-cell__1DP3G\",\"table-row\":\"ReimbursementReport_table-row__3QOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsSummaryReport_root__1ka3i\",\"header\":\"ClaimsSummaryReport_header__39eJB\",\"field-filter\":\"ClaimsSummaryReport_field-filter__2SIg-\",\"input\":\"ClaimsSummaryReport_input__2fYOe\",\"content\":\"ClaimsSummaryReport_content__2_BF2\",\"filter\":\"ClaimsSummaryReport_filter__id9k7\",\"submit\":\"ClaimsSummaryReport_submit__FEVvZ\",\"body\":\"ClaimsSummaryReport_body__13Jph\",\"table\":\"ClaimsSummaryReport_table__7Ph-I\",\"remarks\":\"ClaimsSummaryReport_remarks__2FkBN\",\"table-cell\":\"ClaimsSummaryReport_table-cell__2Ld-d\",\"handling\":\"ClaimsSummaryReport_handling__25OHB\",\"footer\":\"ClaimsSummaryReport_footer__1028J\",\"label\":\"ClaimsSummaryReport_label__4CdeZ\",\"received\":\"ClaimsSummaryReport_received__2ZOV5\",\"processed\":\"ClaimsSummaryReport_processed__KMDYx\",\"total\":\"ClaimsSummaryReport_total__Adq-O\",\"table-row\":\"ClaimsSummaryReport_table-row__4aT6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductivityPerformaceReport_root__2dUB0\",\"header\":\"ProductivityPerformaceReport_header__2jbkM\",\"field-filter\":\"ProductivityPerformaceReport_field-filter__35OXP\",\"input\":\"ProductivityPerformaceReport_input__2o3yw\",\"content\":\"ProductivityPerformaceReport_content__1p5h0\",\"filter\":\"ProductivityPerformaceReport_filter__3M0No\",\"submit\":\"ProductivityPerformaceReport_submit__2SI5D\",\"body\":\"ProductivityPerformaceReport_body__3eVBy\",\"table\":\"ProductivityPerformaceReport_table__J_Mgn\",\"remarks\":\"ProductivityPerformaceReport_remarks__1pXa6\",\"table-cell\":\"ProductivityPerformaceReport_table-cell__1Q-O3\",\"footer\":\"ProductivityPerformaceReport_footer__2ioMa\",\"received\":\"ProductivityPerformaceReport_received__3SdAJ\",\"processed\":\"ProductivityPerformaceReport_processed__2ECP_\",\"table-row\":\"ProductivityPerformaceReport_table-row__2Wduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReturnedClaimsReport_root__3miJ9\",\"header\":\"ReturnedClaimsReport_header__2QSE3\",\"typo\":\"ReturnedClaimsReport_typo__3UFCW\",\"disabled\":\"ReturnedClaimsReport_disabled__182Sx\",\"content\":\"ReturnedClaimsReport_content__14MOK\",\"filter\":\"ReturnedClaimsReport_filter__2meIS\",\"input\":\"ReturnedClaimsReport_input__19ygB\",\"submit\":\"ReturnedClaimsReport_submit__1Mgt8\",\"body\":\"ReturnedClaimsReport_body__220AW\",\"table\":\"ReturnedClaimsReport_table__1WY5j\",\"remarks\":\"ReturnedClaimsReport_remarks__10htg\",\"table-cell\":\"ReturnedClaimsReport_table-cell__aqjTo\",\"handling\":\"ReturnedClaimsReport_handling__10Zah\",\"table-row\":\"ReturnedClaimsReport_table-row__3MQ-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PerformanceReport_root__3v0l5\",\"header\":\"PerformanceReport_header__2cAig\",\"field-filter\":\"PerformanceReport_field-filter__1J_xd\",\"input\":\"PerformanceReport_input__qTNUq\",\"content\":\"PerformanceReport_content__1RJ-f\",\"filter\":\"PerformanceReport_filter__3HVDH\",\"submit\":\"PerformanceReport_submit__1sQmg\",\"body\":\"PerformanceReport_body__3mx5Y\",\"table\":\"PerformanceReport_table__1eG1Z\",\"remarks\":\"PerformanceReport_remarks__3BqBk\",\"table-cell\":\"PerformanceReport_table-cell__XM63r\",\"footer\":\"PerformanceReport_footer__1gA8-\",\"count\":\"PerformanceReport_count__2u4Ue\",\"average\":\"PerformanceReport_average__sBrEV\",\"work\":\"PerformanceReport_work__1YnhR\",\"table-row\":\"PerformanceReport_table-row__2u1xW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingPartialApprovedReport_root__njXRF\",\"header\":\"AgingPartialApprovedReport_header__33b_k\",\"disabled\":\"AgingPartialApprovedReport_disabled__24a81\",\"typo\":\"AgingPartialApprovedReport_typo__3ewzs\",\"field-filter\":\"AgingPartialApprovedReport_field-filter__3Z1mh\",\"input\":\"AgingPartialApprovedReport_input__3a_o0\",\"content\":\"AgingPartialApprovedReport_content__1pWFX\",\"filter\":\"AgingPartialApprovedReport_filter__3sVP8\",\"submit\":\"AgingPartialApprovedReport_submit__3D5zL\",\"body\":\"AgingPartialApprovedReport_body__39FC8\",\"table\":\"AgingPartialApprovedReport_table__2EheT\",\"remarks\":\"AgingPartialApprovedReport_remarks__2lfE6\",\"table-cell\":\"AgingPartialApprovedReport_table-cell__dRnX7\",\"handling\":\"AgingPartialApprovedReport_handling__3jl7y\",\"footer\":\"AgingPartialApprovedReport_footer__33O-v\",\"label\":\"AgingPartialApprovedReport_label__20iKa\",\"total15Days\":\"AgingPartialApprovedReport_total15Days__8bxW0\",\"total1Week\":\"AgingPartialApprovedReport_total1Week__SaR2_\",\"total1Month\":\"AgingPartialApprovedReport_total1Month__2zxDm\",\"totalAll\":\"AgingPartialApprovedReport_totalAll__1KEoW\",\"table-row\":\"AgingPartialApprovedReport_table-row__TdYPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingReturnClaimReport_root__2ZjYN\",\"header\":\"AgingReturnClaimReport_header__2pYrS\",\"disabled\":\"AgingReturnClaimReport_disabled__1aF_t\",\"typo\":\"AgingReturnClaimReport_typo__HVrxs\",\"field-filter\":\"AgingReturnClaimReport_field-filter__3bBD5\",\"input\":\"AgingReturnClaimReport_input__yJYHL\",\"content\":\"AgingReturnClaimReport_content__2dDb7\",\"filter\":\"AgingReturnClaimReport_filter__J2zBy\",\"submit\":\"AgingReturnClaimReport_submit__2ONSY\",\"body\":\"AgingReturnClaimReport_body__2v_Du\",\"table\":\"AgingReturnClaimReport_table__3OBJ-\",\"remarks\":\"AgingReturnClaimReport_remarks__1NXHH\",\"table-cell\":\"AgingReturnClaimReport_table-cell__gHjGb\",\"handling\":\"AgingReturnClaimReport_handling__KERnH\",\"footer\":\"AgingReturnClaimReport_footer__3M3iw\",\"label\":\"AgingReturnClaimReport_label__1bL4K\",\"total15Days\":\"AgingReturnClaimReport_total15Days__3Dg8C\",\"total1Week\":\"AgingReturnClaimReport_total1Week__WroA2\",\"total1Month\":\"AgingReturnClaimReport_total1Month__2Z9vs\",\"totalAll\":\"AgingReturnClaimReport_totalAll__2LXXw\",\"table-row\":\"AgingReturnClaimReport_table-row__2LK4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsBeyond3MonthsReport_root__3VXaM\",\"header\":\"ClaimsBeyond3MonthsReport_header__3lsVk\",\"typo\":\"ClaimsBeyond3MonthsReport_typo__264r4\",\"field-filter\":\"ClaimsBeyond3MonthsReport_field-filter__3_-_O\",\"input\":\"ClaimsBeyond3MonthsReport_input__3rZEj\",\"content\":\"ClaimsBeyond3MonthsReport_content__2QCP_\",\"filter\":\"ClaimsBeyond3MonthsReport_filter__1_UPE\",\"submit\":\"ClaimsBeyond3MonthsReport_submit__3Ixe3\",\"body\":\"ClaimsBeyond3MonthsReport_body__1a198\",\"table\":\"ClaimsBeyond3MonthsReport_table__3XK2P\",\"remarks\":\"ClaimsBeyond3MonthsReport_remarks__2x-XG\",\"table-cell\":\"ClaimsBeyond3MonthsReport_table-cell__2Bcc3\",\"handling\":\"ClaimsBeyond3MonthsReport_handling__1s9wT\",\"table-row\":\"ClaimsBeyond3MonthsReport_table-row__1FRZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementAgingReport_root__3Qevg\",\"header\":\"ReimbursementAgingReport_header__2fR1j\",\"field-filter\":\"ReimbursementAgingReport_field-filter__3omDl\",\"input\":\"ReimbursementAgingReport_input__uImhm\",\"content\":\"ReimbursementAgingReport_content__kcYV4\",\"filter\":\"ReimbursementAgingReport_filter__2vQYS\",\"submit\":\"ReimbursementAgingReport_submit__34jwM\",\"body\":\"ReimbursementAgingReport_body__1Aq7Z\",\"table\":\"ReimbursementAgingReport_table__2m2l3\",\"remarks\":\"ReimbursementAgingReport_remarks__3qa3B\",\"table-cell\":\"ReimbursementAgingReport_table-cell__3QyBG\",\"footer\":\"ReimbursementAgingReport_footer__3RAWu\",\"table-row\":\"ReimbursementAgingReport_table-row__3R0lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedClaimsReport_root__pZDjc\",\"header\":\"DetailedClaimsReport_header__b7pO0\",\"typo\":\"DetailedClaimsReport_typo__-qeZp\",\"disabled\":\"DetailedClaimsReport_disabled__32hnn\",\"content\":\"DetailedClaimsReport_content__30k_Y\",\"filter\":\"DetailedClaimsReport_filter__3uIPD\",\"input\":\"DetailedClaimsReport_input__3mk2W\",\"submit\":\"DetailedClaimsReport_submit__28yJR\",\"body\":\"DetailedClaimsReport_body__2wNh-\",\"table\":\"DetailedClaimsReport_table__1QGoK\",\"label\":\"DetailedClaimsReport_label__y28Kk\",\"hidden\":\"DetailedClaimsReport_hidden__1H_Ss\",\"remarks\":\"DetailedClaimsReport_remarks__E0xIw\",\"table-cell\":\"DetailedClaimsReport_table-cell__3rPot\",\"handling\":\"DetailedClaimsReport_handling__WipVd\",\"footer\":\"DetailedClaimsReport_footer__10ig-\",\"table-row\":\"DetailedClaimsReport_table-row__TiSmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedPerformanceReport_root__3lPH7\",\"header\":\"DetailedPerformanceReport_header__1FlLI\",\"typo\":\"DetailedPerformanceReport_typo__1SeuS\",\"field-filter\":\"DetailedPerformanceReport_field-filter__3G5pv\",\"input\":\"DetailedPerformanceReport_input__1uLNQ\",\"content\":\"DetailedPerformanceReport_content__2MZx8\",\"filter\":\"DetailedPerformanceReport_filter__2HFAt\",\"submit\":\"DetailedPerformanceReport_submit___T5Hi\",\"body\":\"DetailedPerformanceReport_body__37Z1n\",\"table\":\"DetailedPerformanceReport_table__1DoqJ\",\"remarks\":\"DetailedPerformanceReport_remarks__3bm40\",\"table-cell\":\"DetailedPerformanceReport_table-cell__1X1h4\",\"handling\":\"DetailedPerformanceReport_handling__2bFLc\",\"table-row\":\"DetailedPerformanceReport_table-row__XZFGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedMonitoringReport_root__LgC3Q\",\"header\":\"DetailedMonitoringReport_header__3LHkv\",\"typo\":\"DetailedMonitoringReport_typo__3spA7\",\"field-filter\":\"DetailedMonitoringReport_field-filter__2ZzJm\",\"input\":\"DetailedMonitoringReport_input__1_QJS\",\"content\":\"DetailedMonitoringReport_content__3_FYj\",\"filter\":\"DetailedMonitoringReport_filter__3eYWk\",\"submit\":\"DetailedMonitoringReport_submit__o8fc7\",\"body\":\"DetailedMonitoringReport_body__2Dq-U\",\"table\":\"DetailedMonitoringReport_table__13f4R\",\"remarks\":\"DetailedMonitoringReport_remarks__3vGUl\",\"table-cell\":\"DetailedMonitoringReport_table-cell__1xIUc\",\"handling\":\"DetailedMonitoringReport_handling__FZhM-\",\"table-row\":\"DetailedMonitoringReport_table-row__1dc8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__tUggz\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__NjIhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"error\":\"ReimbursementInfo_error__1CY-r\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1LMgs\",\"header\":\"UploadedList_header__2KeVk\",\"header-text\":\"UploadedList_header-text__2VqnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"wrap\":\"ClaimReimbursement_wrap__1ey6r\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__1PFMi\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"packages\":\"ClaimAPE_packages__38JZk\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"packages\":\"ClaimECU_packages__1pncE\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1kTdz\",\"header\":\"UploadedList_header__-de1J\",\"header-text\":\"UploadedList_header-text__39rqd\",\"handling\":\"UploadedList_handling__1_Ulf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FileViewer_root__3eOTH\",\"header-container\":\"FileViewer_header-container__3MWL_\",\"header\":\"FileViewer_header__26RQA\",\"title\":\"FileViewer_title__2Ar9A\",\"content\":\"FileViewer_content__1Ozo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"wrap\":\"ClaimReimbursement_wrap__3HMhP\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"group\":\"PaymentRequestPage_group__JBVfR\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"row\":\"Dashboard_row__3jP5M\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\",\"completed_task\":\"Dashboard_completed_task__3VhqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\",\"button-wrapper-kpi\":\"MaintenancePage_button-wrapper-kpi__1hwlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoCompletes_root__GqW9d\",\"row\":\"AutoCompletes_row__hY4Cp\",\"input\":\"AutoCompletes_input__1JWqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__3Z4u_\",\"label\":\"AutoComplete2_label__1UMnf\",\"wrapper\":\"AutoComplete2_wrapper__mUNcc\",\"read-only-value\":\"AutoComplete2_read-only-value__1a9p_\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__37KBN\",\"form-control\":\"AutoComplete2_form-control__2AFVD\",\"input\":\"AutoComplete2_input__15dWt\",\"suggestions\":\"AutoComplete2_suggestions__1OFwm\",\"hint\":\"AutoComplete2_hint__3TRnC\",\"focus\":\"AutoComplete2_focus__3Xz7d\",\"has-error\":\"AutoComplete2_has-error__j-hAu\",\"error\":\"AutoComplete2_error__wPImV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__3pohK\",\"label\":\"DatePicker2_label__kClQ4\",\"wrapper\":\"DatePicker2_wrapper__3ICMR\",\"read-only-value\":\"DatePicker2_read-only-value__2DDSM\",\"text-field\":\"DatePicker2_text-field__Zdavd\",\"no-margin\":\"DatePicker2_no-margin__2ksyg\",\"input\":\"DatePicker2_input__vwvQ-\",\"date-button\":\"DatePicker2_date-button__2avzL\",\"focus\":\"DatePicker2_focus__7xrY-\",\"has-error\":\"DatePicker2_has-error__1Ccy6\",\"disabled\":\"DatePicker2_disabled__3cyux\",\"error\":\"DatePicker2_error__3iYWh\",\"date\":\"DatePicker2_date__3C5ua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePickers_root__3JJHS\",\"row\":\"DatePickers_row__2lQ4O\",\"input\":\"DatePickers_input__3mJCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__3Nbxo\",\"root\":\"PdfViewer2_root__OnpQ7\",\"controls\":\"PdfViewer2_controls__39uMf\",\"file-name\":\"PdfViewer2_file-name__1gGwZ\",\"search\":\"PdfViewer2_search__3kgG8\",\"control\":\"PdfViewer2_control__34TU3\",\"disabled\":\"PdfViewer2_disabled__Es9Vn\",\"text-field\":\"PdfViewer2_text-field__3xc6o\",\"viewport\":\"PdfViewer2_viewport__1dkcA\",\"pdf\":\"PdfViewer2_pdf__3uFCA\",\"page\":\"PdfViewer2_page__5EQuW\",\"page-number\":\"PdfViewer2_page-number__wuwZN\",\"iframe\":\"PdfViewer2_iframe__2wl51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PdfViewers_root__2i2A-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ErrorProducers_root__3mazu\",\"row\":\"ErrorProducers_row__2lI2A\",\"input\":\"ErrorProducers_input__-8Wlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Test_root__3x8F1\",\"sidebar\":\"Test_sidebar__p1pYj\",\"content\":\"Test_content__2tpHK\",\"title\":\"Test_title__8pTcD\",\"wrapper\":\"Test_wrapper__1mg0_\"};","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { type = 'replace', loading = false, children, style } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {type === 'replace' ? (\n        loading ? (\n          <div className={classes.loading} id='loading-overlay'>\n            <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n          </div>\n        ) : (\n          children\n        )\n      ) : (\n        type === 'overlay' && (\n          <React.Fragment>\n            {loading && (\n              <div className={classes.overlay} id='loading-overlay'>\n                <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n              </div>\n            )}\n            {children}\n          </React.Fragment>\n        )\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Style\n// import classes from './TableSortLabel.module.module.scss'\n\nexport default function _TableSortLabel (props) {\n  // Variables\n  const { field = '', label = '', selected = '', direction = 'asc', ...others } = props\n  // Services\n  // Events\n  const { onClick = () => {} } = props\n  // Callbacks\n  // Local Variables\n\n  return (\n    // <TableSortLabel active={showArrow} direction={direction} onClick={onClick} {...others}>\n\n    <React.Fragment>\n      <TableSortLabel hideSortIcon onClick={onClick} {...others}>\n        {label}\n      </TableSortLabel>\n      {selected === field ? (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={direction === 'asc' ? 'sort-up' : 'sort-down'} />\n      ) : (\n        <FontAwesomeIcon style={{ marginLeft: '10px' }} icon={'sort'} />\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\nimport TableSortLabel from 'SharedComponents/TableSortLabel/TableSortLabel'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  id,\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body,\n  fetching = false\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({\n      ...p,\n      show: false,\n      count: 0,\n      search: '',\n      limit: 10,\n      page: 1,\n      filter: {}\n    }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  {/* <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel> */}\n                  <TableSortLabel\n                    field={headCell.sortField}\n                    label={headCell.name}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    selected={viewList.orderBy}\n                    onClick={handleOnSort(headCell.sortField)}\n                  />\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                  {/* {(headCell.type && headCell.type === 'date') || headCell.match === 'date' ? (\n                    <DatePicker\n                      noMargin\n                      id={`${headCell.field}`}\n                      onChange={date => {\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                      value={null}\n                    />\n                  ) : (\n                    <TextField\n                      noMargin\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  )} */}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={\n            fetching ? (\n              <TableRow>\n                <TableCell colSpan={columns.length}>\n                  <LoadingIndicator loading={fetching} />\n                </TableCell>\n              </TableRow>\n            ) : (\n              body(viewList.data)\n            )\n          }\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'created', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`created-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='created-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`submitted-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n                disableClearable\n                // forcePopupIcon={false}\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    maxDate,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(value)\n    // setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      setSelectedDate(date)\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={selectedDate}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  maxDate={maxDate}\n                  helperText={''}\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({\n                ...state,\n                doctorPartner: data.map(i => ({ ...i, name: i.full_name }))\n              }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      onChange({ field, value })\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name', field })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name', field })\n          break\n        default:\n          break\n      }\n    } else {\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(details.date_received)\n      .add(term, 'days')\n      .format('MM/DD/YYYY')\n    onChange({ field: 'facility_id', value: value.id })\n    onChange({ field: 'facility_name', value: value.name })\n    onChange({ field: 'due_date', value: newDate })\n  }\n\n  const handleOnChangeDoctorPartner = ({ value, field }) => {\n    onChange({ field: 'doctor_name', value: value.full_name })\n    onChange({ field: 'doctor_id', value: value.id })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ field: 'total_rcs', value: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={date => onChange({ field: 'date_received', value: date.toISOString() })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={date => onChange({ field: 'due_date', value: date.toISOString() })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ field: 'soa_number', value: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ field: 'total_soa_amt', value: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'id'}\n            loading={fetching['facility_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'name'}\n            loading={fetching['facility_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'id'}\n            loading={fetching['doctor_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'name'}\n            loading={fetching['doctor_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './DropDown.module.scss'\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                  MenuProps={MenuProps}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push({ text: type, value: type })\n      }\n    } else {\n      list.push({ text: type, value: type })\n    }\n  }\n  return list\n}\n\nconst suggestion = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push(type)\n      }\n    } else {\n      list.push(type)\n    }\n  }\n  return list\n}\nexport default { types, dropdown, suggestion }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(0)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\nimport { resetError, setError } from './error'\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee,\n  resetError,\n  setError\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport { resetReturn, setReturnNote } from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents,\n  fetching\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n  const [claimSource, setClaimSource] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    BatchEncodingServices.lookups({ on: 'maintenance', params: { field: 'claims-source', filter: { status: { value: 'Active', match: 'start' } } } }).then(({data: res}) => {\n      const { results } = res.data\n      const _results = results.map(i => (\n        {\n          value: i.description,\n          text: i.description\n        }))\n      if (results) setClaimSource(_results)\n    }).catch(err => {\n      console.log('Claim Source Error', err)\n      setClaimSource([])\n    })\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claimSource}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/p/f')\n\nexport default class FacilitiesServices {\n  static getFacilities () {\n    return axios({\n      url: '/partners/facilities',\n      method: 'GET'\n    })\n  }\n\n  static getFacilityByName ({ name }) {\n    return axios({\n      url: `/partners/facilities/${name}`,\n      method: 'GET'\n    })\n  }\n\n  static getFacilityById ({ id }) {\n    return axios({\n      url: `/partners/facilities/id/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `\"Due Date\" should have a maximum length of Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .less(100000000)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` })\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport FacilitiesServices from 'Services/Api/FacilitiesServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n  const [defClaimSource, setDefClaimSource] = React.useState('')\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n      getDefaultClaimSource({ id: data.facility.id })\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setSelectedBatch({ [field]: value }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(setSelectedBatch({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    dispatch(resetSuggestionObject({ field: 'doctor' }))\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          setFetching(state => ({ ...state, [by]: true }))\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ field, value }) => {\n    setBundle(state => ({ ...state, [field]: value }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      getDefaultClaimSource({ id: data.facility_id })\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: defClaimSource,\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const getDefaultClaimSource = ({ id }) => {\n    FacilitiesServices.getFacilityById({ id }).then(res => {\n      const { type = '' } = res.data.data\n      let claim_source = ''\n\n      switch (type.toLowerCase()) {\n        case 'hospital':\n          claim_source = 'Hospital'\n          break\n        case 'clinic':\n        case 'dental_clinic':\n          claim_source = 'Clinic'\n          break\n      }\n\n      setDefClaimSource(claim_source)\n    })\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n            fetching={fetching}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      disabled={batches.length >= 1}\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claim_number, sub_document_id }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/return`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params: { sub_document_id }\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static addReimburesmentInfo ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/add`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static updateReimburesmentInfo ({ claim_number, info_id, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/${info_id}/update`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","function PromiseUtil () { }\n\n/**\n * Execute in sequence the list of promises\n *\n * @param {array} tasks list of tasks or promises\n */\nPromiseUtil.executeInSequence = async function (promises, callback) {\n  // return promises.reduce((p, task) => p.then(task), Promise.resolve())\n  // for (const fn of promises) {\n  //     await fn()\n  // }\n  \n  var chain\n  for (let i in promises){\n      alert(i)\n    if (chain) chain = chain.then(promises[i]);\n    if (!chain) chain = promises[i]();\n\n    // TODO: remove\n    break\n  }\n\n  callback()\n}\n\nexport default PromiseUtil\n","import { fromBlob } from 'Services/Download'\n\nexport default function ArrayToCSV (props) {\n  const {\n    fileName = 'CSV',\n    header = [],\n    rows = [],\n    extension = 'csv',\n    statics = [],\n    data = [],\n    mimeType = 'data:text/csv;charset=utf-8'\n  } = props\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  let _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n\n  if (data && data.length) _rows = data\n\n  fromBlob({ fileName, extension, content: _rows, mimeType })\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport { parseFullName } from 'parse-full-name'\nimport { to } from 'await-to-js'\n\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\nimport PromiseUtil from 'Utilities/PromiseUtil'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n/**\n * SOA ETL Controller.\n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController () {}\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT: {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    RCSNum: SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    Diagnosis: SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    Procedure: SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs download of template for SOA File Import\n *\n * @param columnTemplates template mapping\n */\nSoaEtlController.downloadTemplate = function (columnTemplates = SoaEtlController.COLUMN_TEMPLATES.DEFAULT) {\n  console.log('soa_etl', 'downloadTemplate')\n\n  ArrayToCSV({\n    fileName: 'SOA_import',\n    extension: 'xls',\n    header: Object.keys(columnTemplates),\n    rows: [],\n    mimeType: 'application/vnd.ms-excel'\n  })\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (\n    !dataRows ||\n    !dataMapping ||\n    !dataMapping.columns ||\n    !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n  )\n    throw { error: 'invalid parameters' }\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/**\n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n *\n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam })\n        .then(res => {\n          // Create promise for each add batch operation (which contains add-claims operation)\n          const addBatchPromises = []\n\n          async function addBatches () {\n            for (let batchIndex in bundle.batches) {\n              const batch = bundle.batches[batchIndex]\n              const batchParam = { ...batch }\n              delete batchParam.claims\n\n              let batchPromise = new Promise(function (resolveBatch, rejectBatch) {\n                // Call create batch API\n                BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n                  .then(res => {\n                    const { data } = res.data\n                    batch.batch_number = data.batch_number\n\n                    async function addClaims () {\n                      for (let i = 0; i < batch.claims.length; i++) {\n                        const claim = batch.claims[i]\n                        // Invoke create claim\n                        const [claimsErr, claimsRes] = await to(ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim }))\n\n                        // Halt operation based on VNI requirement\n                        // Reference: https://gitlab.com/VeridataTSA/hims-app/-/issues/7817#note_414738627\n                        if (claimsErr) {\n                          console.log(claimsErr)\n                          reject('Failed adding of claim under batch: ' + batch.batch_number)\n                          break;\n                        } \n                        // if (claimsRes) {\n                        //   console.log(claimsRes)\n                        // }\n                      }\n                      resolveBatch()\n                    }\n\n                    // Create claims for batch\n                    addClaims()\n                  })\n                  .catch(() => {\n                    rejectBatch('Batch creation failed')\n                  })\n              })\n\n              await batchPromise\n            }\n            resolve(bundle.bundle_number)\n          }\n\n          addBatches()\n\n          // Note: VNI requirement, is to not perform automatic bundle submission\n          //       and consequentially, no automatic claims creation for claims under the\n          //       automatically created batches. That is the function requirement.\n          //       The technical operation however, needs claims to be created but just\n          //       NOT visible as of yet to claims encoders (and up).\n          // // Todo: refactor to wait for all batches to be created before submitting bundle\n          // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n          //   if (successCallback) { successCallback();}\n          //   resolve()\n          //   // batch.claims.forEach(element => {\n          //   //   let claim = element\n          //   // })\n          // }).catch(() => {\n          //   reject('Bundle submission failed')\n          // })\n\n          // console.log(addBatchPromises)\n          // resolve(bundle.bundle_number)\n          //PromiseUtil.executeInSequence(addBatchPromises, () => { resolve(bundle.bundle_number) })\n          // Promise.all(addBatchPromises)\n          //   .then(() => {\n          //     console.log('success SOA loading unto API')\n          //     //alert('success SOA loading unto API')\n          //     resolve(bundle.bundle_number)\n          //   })\n        })\n        .catch(() => {\n          console.log('failed SOA loading unto API')\n          //alert('failed SOA loading unto API')\n          reject('Bundle creation failed')\n        })\n    })\n  })\n\n  return promise\n}\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) {\n          outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n          if (!outputEntry[fieldKey]) throw 'Missing claim type or wrong data format in the uploaded SOA file.'\n        }\n      })\n\n      outputEntries.push(outputEntry)\n    }\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n  return outputEntries\n}\n\n/**\n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n *\n * @param prepDataRows output from _transformPreviewDataToPrepData()\n *\n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived)\n          .add(30, 'days')\n          .format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: 'SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n',\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (\n      !currentClaim ||\n      (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])\n    ) {\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = parseFullName(memberName)\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts.first,\n        member_middle_name: nameParts.middle,\n        member_last_name: nameParts.last,\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: ''\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries\n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee\n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n\n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n\n      currentClaim.professional_fees.push({\n        doctor_name: lineItem,\n        doctor_id: 'unknown',\n        gross_amount: lineAmount,\n        specialization: 'unknown',\n        vat_amount: 0,\n        amount_paid_by_member: 0,\n        philhealth_amount_paid: 0,\n        philhealth_remarks: '',\n        amount_not_covered: 0,\n        reason: '',\n        amount_due_from_member: 0,\n        reason_for_charging_member: ''\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem,\n          item_code: 'unknown',\n          gross_amount: lineAmount,\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: '',\n          amount_not_covered: 0,\n          reason: '',\n          amount_due_from_member: 0,\n          reason_for_charging_member: ''\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n      // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem,\n          gross_amount: lineAmount,\n          code: 'unknown',\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: ''\n        })\n      }\n    }\n  })\n\n  return bundle\n}\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 0\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 1\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 2\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 3\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        __index__: 4\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 5\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 6\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 7\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 8\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 10\n      }\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {\n          IP: 'In Patient',\n          OPP: 'Out Patient Procedure',\n          OPC: 'Out Patient Consultation'\n        }\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital'\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `The \"Due Date\" should be later than the Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` }),\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_full_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`doctor_${by}`]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, doctorPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`doctor_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      setNewBundle(state => ({ ...state, [field]: value }))\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name' })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name' })\n          break\n        default:\n          break\n      }\n    } else {\n      const _value = value || {}\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value: _value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value: _value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value = {}, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(newBundle.date_received).add(term, 'days')\n\n    setNewBundle(state => ({\n      ...state,\n      facility_id: value.id,\n      facility_name: value.name,\n      due_date: newDate,\n      due_date_adjustment: term\n    }))\n    // }\n  }\n\n  const handleOnChangeDoctorPartner = ({ value = {}, field }) => {\n    setNewBundle(state => ({ ...state, doctor_id: value.id, doctor_name: value.full_name }))\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = () => {\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    const { error } = NewBundleValidator({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    if (validate()) {\n      setDisableControls(false)\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const handleOnDownloadTemplate = () => {\n    LoadingService.loading(true)\n    SoaEtlController.downloadTemplate()\n    LoadingService.loading(false)\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography\n            id='upload-soa-button'\n            variant='subtitle2'\n            className={`bold text-link ${classes.label}`}\n            display='inline'\n          >\n            + Upload SOA\n          </Typography>\n        </Link>\n        <Typography\n          onClick={handleOnDownloadTemplate}\n          id='download-soa-template-button'\n          variant='subtitle2'\n          className={`bold text-link ${classes.label}`}\n          display='inline'\n          style={{ marginLeft: 10 }}\n        >\n          + Download SOA Template\n        </Typography>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = date.add(newBundle.due_date_adjustment, 'days').toISOString()\n\n                setNewBundle(state => ({ ...state, date_received: date.toISOString(), due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date.toISOString() }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              //* e.target is in an asynchronous context (setNewBundle)\n              //* moved e.target.value outside asynchronous context\n              onChange={e => {\n                const { value } = e.target\n                // setNewBundle(state => ({ ...state, soa_number: e.target.value }))\n                setNewBundle(state => ({ ...state, soa_number: value }))\n              }}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'id'}\n              loading={fetching['facility_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'name'}\n              loading={fetching['facility_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'id'}\n              loading={fetching['doctor_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'full_name'}\n              loading={fetching['doctor_full_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              !validate() &&\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete, onError }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n    onComplete({ headers, results })\n  }\n\n  reader.onerror = ex => onError(ex)\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    console.log(file)\n    const validTypes = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel']\n    if (!validTypes.includes(file.type)) return\n\n    setFileLoaded(true)\n\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      },\n      onError: ex => {\n        console.log(ex)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop file to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    rows: [],\n    count: 0,\n    limit: 10,\n    page: 1\n  })\n\n  const [trimmedItems, setTrimmedItems] = React.useState([])\n\n  React.useEffect(() => {\n    // Trim the actual passed items\n    const _items = []\n\n    for (let index = 0; index < items.length; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => {\n        return item[key] && item[key].trim().length > 0\n      })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    // Store trimmed items\n    setTrimmedItems(_items)\n\n    // Trigger the callback sending all trimmed items\n    onDetectDataRows(_items)\n  }, [])\n\n  React.useEffect(() => {\n    // Trigger set rows\n    handleOnChangeItems({})\n  }, [trimmedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n    setTableState(state => ({ ...state, rows: trimmedItems.slice(startAt, endAt), count: items.length }))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={tableState.rows.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={tableState.count}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.pair}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes.header}>\n          {headers.map((head, index) => (\n            <Typography key={`heade-${index}`} variant='h6'>\n              {head}\n            </Typography>\n          ))}\n        </div>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: []\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({ ...state, facility: [] }))\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, facility: data }))\n            })\n            .finally(() => {\n              setFetching((state = { ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      setFacilityTemplate(state => ({ ...state, [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    } else {\n      const _value = value || {}\n      setFacilityTemplate(state => ({ ...state, facility_id: _value.id, facility_name: _value.name }))\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  search\n                })\n              }\n              field={'id'}\n              loading={fetching['facility_id']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  search\n                })\n              }\n              field={'name'}\n              loading={fetching['facility_name']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      console.log('Transform Error', ex)\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex.message || ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(bundle_number => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch((message) => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed.\\n' + message\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <div className={classes.table}>\n          <DynamicTable\n            data={data}\n            onRemoveFile={handleOnRemoveFile}\n            onDetectDataRows={dataRows => {\n              setDataRows(dataRows)\n            }}\n          />\n        </div>\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n\n  static loadingHIMSData (params) {\n    return axios({\n      url: `/loading-hims-data`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static confinementReport (params) {\n    return axios({\n      url: `/confinement-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestReport (params) {\n    return axios({\n      url: '/payment-request-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestClaims (params, bundle_number) {\n    return axios({\n      url: `/payment-request-report/${bundle_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursementClaimReport (params) {\n    return axios({\n      url: '/reimbursement-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static productivityReport (params) {\n    return axios({\n      url: '/productivity-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static claimsSummaryReport (params) {\n    return axios({\n      url: '/claims-summary-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookupsQuery ({ category, field, value }) {\n    return axios({\n      url: `/lookups/auto-suggest`,\n      method: 'GET',\n      params: { category, field, value },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static lookupsAll ({ category }) {\n    return axios({\n      url: `/lookups/auto-suggest/${category}`,\n      method: 'GET',\n      params: { category },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static returnedClaimsReport (params) {\n    return axios({\n      url: `/returned-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingPartialApprovedClaimsReport (params) {\n    return axios({\n      url: `/aging-partial-approved-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingReturnClaimsReport (params) {\n    return axios({\n      url: `/aging-return-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static claimsBeyond3Months (params) {\n    return axios({\n      url: `/claims-beyond-3-months`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursmentAgingReport (params) {\n    return axios({\n      url: `/reimbursement-aging`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static performanceReport (params) {\n    return axios({\n      url: `/performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedPerformanceReport (params) {\n    return axios({\n      url: `/detailed-performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedMonitoringReport (params) {\n    return axios({\n      url: `/detailed-monitoring-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedClaimsReport (params) {\n    return axios({\n      url: `/detailed-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static genericURL (params) {\n    const { url, method = 'GET', ...others } = params\n    return axios({\n      url: url,\n      method: method,\n      params: others\n    })\n  }\n\n  static getUploads (params) {\n    return axios({\n      url: '/file',\n      method: 'GET',\n      params\n    })\n  }\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Date Range From\" should be on or before \"Date Range To\"`\n    }),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'Given Diagnosis', type: 'array', data: 'diagnosis.given_diagnosis', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount due From Client',\n    type: 'array',\n    data: 'procedures.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Client',\n    type: 'array',\n    data: 'procedures.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount due From Client',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Client',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount due From Client',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Client',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any', remarks: true }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  // const [columns, setColumns] = React.useState(completeColumns)\n\n  const [btnDisabled, setBtnDisabled] = React.useState(true)\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['utilizationLedger'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  // React.useEffect(() => {\n  //   setClaims(state => ({\n  //     ...state,\n  //     range: {\n  //       ...state.range,\n  //       to: dateRange ? dateRange.to : new Date().toISOString(),\n  //       from: dateRange ? dateRange.from : new Date().toISOString()\n  //     }\n  //   }))\n  // }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchLedger = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setBtnDisabled(!_claims.length)\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    setBtnDisabled(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return completeColumns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = completeColumns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n      LoadingService.loading(false)\n      setBtnDisabled(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchLedger()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={btnDisabled}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${btnDisabled ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {completeColumns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            // onChange={event =>\n                            //   handleOnFilter({\n                            //     field: headCell.data,\n                            //     value: event.target.value,\n                            //     match: headCell.match\n                            //   })\n                            // }\n                            onChange={event => {\n                              const search = event.target.value\n                              clearTimeout(debounce)\n                              setDebounce(\n                                setTimeout(() => {\n                                  handleOnFilter({\n                                    field: headCell.data,\n                                    value: search,\n                                    match: headCell.match\n                                  })\n                                }, 500)\n                              )\n                            }}\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {completeColumns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.length < 1 ? (\n                    <MenuItem className={classes.hint} disabled>\n                      Enter atleast 3 characters to search.\n                    </MenuItem>\n                  ) : (\n                    suggestions.map((suggestion, index) => (\n                      <MenuItem\n                        id={`${props.id}-suggestion-${index}`}\n                        key={`${props.id}-suggestion-${index}`}\n                        onClick={() => {\n                          setFocus(true)\n                          handleItemClick(index)\n                        }}\n                      >\n                        {suggestion}\n                      </MenuItem>\n                    ))\n                  )}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getMemberContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/member/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/client/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL.replace(/\\/$/, '')\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET'\n    })\n  }\n  static getMemberContractPlanType ({ account_number }) {\n    return axios({\n      url: `/member/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClientrContractPlanType ({ account_number }) {\n    return axios({\n      url: `/client/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getDoctorSpecilizations ({ data }) {\n    return axios({\n      url: '/doctor-specializations',\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { data }\n    })\n  }\n\n  static getMembers2 (query) {\n    return axios({\n      url: `/members-lookup`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { args: query }\n    })\n  }\n}\n","import instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersWithRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"or\":[{\"roles.name\":{\"like\":\"${role_name}.*\",\"options\":\"i\"}}, {\"main_role.name\":\"${role_name}\"}]}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', data: 'no', sort: false, align: 'left', class: 'h_no', type: 'number' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', data: 'loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', data: 'date', sort: true, align: 'left', class: 'h_date', type: 'date' },\n  { label: 'MEMBER', sortField: 'member_name', data: 'member_name', sort: true, align: 'left', class: 'h_member' },\n  {\n    label: 'AMOUNT',\n    sortField: 'total_amount',\n    data: 'total_amount',\n    sort: false,\n    align: 'right',\n    class: 'h_amount',\n    type: 'currency'\n  },\n  {\n    label: 'AR',\n    sortField: 'total_due_from_member',\n    data: 'total_due_from_member',\n    sort: false,\n    align: 'right',\n    class: 'h_ar',\n    type: 'currency'\n  }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      LoadingService.loading(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    LoadingService.loading(true)\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    // const rows = []\n\n    // claims.raw.forEach(item => {\n    //   item.date = DateFormatter(item.date)\n    //   rows.push(Object.values(item))\n    // })\n\n    const rows = claims.raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n    LoadingService.loading(true)\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n    LoadingService.loading(false)\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                        align={col.align}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasuryTransmittalReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['prReports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns,\n    //* For Utilization Report (Member Centric)\n    fromUtilReport = false,\n    claimUtilizations = []\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        if (member.benefit_limits.length > 0) {\n          const types = ['ABL', 'MBL']\n          for (let i = 0; i < member.benefit_limits.length; i++) {\n            if (types.includes(member.benefit_limits[i].type)) {\n              type = member.benefit_limits[i].type\n              limit = member.benefit_limits[i].limit\n              break\n            }\n          }\n        }\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          let data = []\n\n          if (!fromUtilReport) {\n            const { data: _data } = res.data\n            data = _data\n          } else data = claimUtilizations\n\n          const list = mapData({\n            data: [\n              ...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n              ...data.map(i => ({ ...i, status: 'Approved' }))\n            ]\n          })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n\n          // If claim have no diagnosis field then return all\n          primary.code ? (primary.category_code = diagnosis_code) : (primary.category_code = '')\n\n          // TODO\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            let data = []\n\n            if (!fromUtilReport) {\n              const { data: _data } = res.data\n              data = _data\n            } else data = claimUtilizations\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({\n              data: [\n                ..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n                ...data.map(i => ({ ...i, status: 'Approved' }))\n              ]\n            })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claim_number, sub_document_id }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/return`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params: { sub_document_id }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static addReimburesmentInfo ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/add`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static updateReimburesmentInfo ({ claim_number, info_id, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/${info_id}/update`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n\n  static getMemberUtilizations ({ member_account_no, range }) {\n    return axios({\n      url: `/claims/${member_account_no}/member-utilizations`,\n      method: 'GET',\n      params: { range }\n    })\n  }\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: 'rgba(237, 237, 237, 0.9)',\n  OutPatientProcedure: 'rgba(222, 222, 222, 0.9)',\n  OutPatientConsultation: 'rgba(158, 163, 172, 0.9)',\n  Reimbursement: 'rgba(13, 94, 64, 0.9)',\n  Emergency: 'rgba(250, 180, 53, 0.9)',\n  Dental: 'rgba(128, 52, 173, 0.9)',\n  MedicineAllowance: 'rgba(26, 177, 196, 0.9)',\n  APE: 'rgba(58, 183, 125, 0.9)',\n  ECU: 'rgba(253, 84, 81, 0.9)',\n  Pharmacy: 'rgba(98, 255, 183, 0.9)',\n  PPE: 'rgba(30, 32, 113, 0.9)',\n  MedicalSupplies: 'rgba(230, 168, 228, 0.9)',\n  ClinicManagement: 'rgba(102, 175, 190, 0.9)'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import legend from '../data/legend'\nimport theme from '../style/theme'\n\nconst getDefault = ({ month = [] }) => {\n  const count = month.length\n  const _legend = legend.map(i => ({\n    label: i.description,\n    hoverBorderWidth: 1,\n    hoverBorderColor: '#000',\n    // hidden: type === 'all' ? false : type !== i.description.replace(/ /g, ''),\n    backgroundColor: theme[i.description.replace(/ /g, '')] }))\n\n  return _legend.map(i => ({ ...i, data: Array.from(Array(count), () => 0) }))\n}\n\nexport default getDefault\n","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nexport default function BundlePage (props) {\n  const { data, options } = props\n  return (\n    <React.Fragment>\n      <Bar data={data} options={options} />\n    </React.Fragment>\n  )\n}\n","const items = [\n  { value: 'Search by ID', text: 'Search by ID', type: 'client', field: 'client_id' },\n  { value: 'Search by Name', text: 'Search by Name', type: 'client', field: 'client_name' },\n  { value: 'Search by ID', text: 'Search by ID', type: 'member', field: 'member_id' },\n  { value: 'Search by Name', text: 'Search by Name', type: 'member', field: 'member_name' }\n]\n\nexport default items\n","import React from 'react'\n\nimport moment from 'moment'\nimport lodash from 'lodash'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from './../../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\nimport getDefault from './config/types'\nimport Chart from './Chart/Chart'\nimport dropdown from './config/dropdown'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\nconst inititalDate = { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' }\n\nconst clientColumns = [\n  { label: 'Type', field: 'type', search: true, match: 'any', align: 'left' },\n  { label: 'Total Amount', field: 'total_amount', search: true, match: 'number', align: 'center' },\n  { label: 'Number of Cases', field: 'cases', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Principals', field: 'availed_by_principals', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Dependents', field: 'availed_by_dependents', search: true, match: 'number', align: 'center' }\n]\n\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: { client: { index: '', key: '' }, member: { index: '', key: '' } },\n    range: { client_id: inititalDate, member_id: inititalDate },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n  const [chartData, setChartData] = React.useState({})\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [fetching, setFetching] = React.useState({\n    main: false\n  })\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n  const [limitType, setLimitType] = React.useState({ ABL: 'Annual Benefit Limit', MBL: 'Maximum Benefit Limit' })\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  const [client, setClient] = React.useState({ name: '--', account_no: '', limit: { type: '', limit: 0 } })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [suggestion, setSuggestion] = React.useState({\n    client: [],\n    member: []\n  })\n  const [memberUtilizations, setMemberUtilizations] = React.useState([])\n  const [searchBy, setSearchBy] = React.useState({ value: '', field: '' })\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilizationReport'])\n    setSearchBy({ value: 'Search by ID', field: getField({ value: 'Search by ID', type: reportType }) })\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const validate = () => {\n    const field = reportType === 'client' ? 'client_id' : 'member_id'\n    const { error } = DateRangeValidator({\n      date_from: reports.range[field].from,\n      date_to: reports.range[field].to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const getCoveredMonths = ({ data = [] }) => {\n    const _field = reportType === 'client' ? 'client_id' : 'member_id'\n    const from = new Date(reports.range[_field].from).getMonth()\n    const to = new Date(reports.range[_field].to).getMonth()\n    const covered = []\n    const result = data.map(i => i.month - 1)\n\n    for (let i = from; i <= to; i++) {\n      covered.push(i)\n    }\n\n    return lodash.uniq([...covered, ...result]).map(i => months[i])\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'client' && reports.search.client.key === '') return\n    if (reportType === 'member' && reports.search.member.key === '') return\n\n    LoadingService.loading(true)\n    if (reportType === 'member') {\n      getMember(reports.search.member.key)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n    } else {\n      Promise.all([\n        ClaimsServices.utilizationClient({\n          search: reports.search.client.key,\n          range: reports.range.client_id,\n          filter: reports.filter,\n          sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n          page: reports.page,\n          limit: reports.limit,\n          type: graphFilter\n        }),\n        ClaimsReconServices.getClientUtilization({ client_account_no: reports.search.client.key }),\n        CustomerCareServices.getClientUtilizationLoa({ client_account_no: reports.search.client.key })\n      ])\n        .then(res => {\n          const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n          const { data: graph } = graphClientRes.data\n          const { data: utilAmount } = clientUtilRes.data\n          const { data: loaAmount } = clientUtilLoaRes.data\n          // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n          setGraph(state => ({\n            ...state,\n            total: graph.client.limit.limit,\n            utilized: utilAmount.total_utilization_amount || 0,\n            ibnr: loaAmount.total_ibnr_amount || 0\n          }))\n          // setGraphData(p => ({ ...p, initial: graph.results }))\n          setTotalAmount(graph.grand_total || 0)\n          setClient(state => ({\n            ...state,\n            name: graph.client.name,\n            account_no: graph.client.account_number,\n            limit: graph.client.limit\n          }))\n\n          const covered_months = getCoveredMonths({ data: graph.results })\n          setChartData({ ...graph, covered_months })\n          fetchTable()\n        })\n        .catch(err => console.error(`Error Fetching Data: ${err}`))\n    }\n  }\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search.client_id,\n      range: reports.range.client_id,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = ({ value, field, search }) => {\n    if (search) {\n      setSuggestion(state => ({ ...state, [field]: [] }))\n      getSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      setReports(state => ({ ...state, search: { ...state.search, [field]: { index: searchBy.value.includes('ID') ? _value.id : _value.name, key: _value.id } } }))\n      setSuggestion(state => ({ ...state, [field]: [] }))\n    }\n  }\n\n  const getSuggestions = ({ value = '', field }) => {\n    setReports(state => ({ ...state, search: { ...state.search, [field]: { ...state.search[field], index: value } } }))\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, main: true }))\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value && reportType === 'client') {\n          const fields = {\n            client_id: 'corporate_account_no',\n            client_name: 'registered_name'\n          }\n          CustomerCareServices.getClientInfo({ value, field: fields[searchBy.field] }).then(res => {\n            const { data = [] } = res.data\n            const item = []\n\n            for (const d of data) {\n              item.push({ id: d[fields.client_id], name: d[fields.client_name] })\n            }\n            setSuggestion(state => ({ ...state, client: item }))\n          }).finally(() => {\n            setFetching(state => ({ ...state, main: false }))\n          })\n        } else if (value && reportType === 'member') {\n          let query = {}\n\n          if (searchBy.field === 'member_id') {\n            query = { member_id: { like: value } }\n          } else {\n            const _value = value.split(' ')\n            const p = _value.filter(i => i !== '').map(v => {\n              if (v) {\n                return { or: [\n                  { first_name: { like: v, options: 'i' } },\n                  { middle_name: { like: v, options: 'i' } },\n                  { last_name: { like: v, options: 'i' } }\n                ]\n                }\n              }\n            })\n            query = { and: p }\n          }\n          // http://18.138.94.224:4101/api/members?filter={\"where\":{\"or\":[{\"first_name\":{\"like\":\"Ariana|Grande\"}},{\"last_name\":{\"like\":\"Ariana|Grande\"}}]}}\n          CustomerCareServices.getMembers2({\n            where: { ...query },\n            limit: 10,\n            order: 'member_id desc'\n          }).then(res => {\n            const { data = [] } = res.data\n            const item = []\n            for (const d of data) {\n              item.push({ id: d['member_id'], name: d['member_name'] })\n            }\n            setSuggestion(state => ({ ...state, member: item }))\n          }).finally(() => {\n            setFetching(state => ({ ...state, main: false }))\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleReportType = args => {\n    const type = args.target.value\n\n    setReportType(type)\n    setSearchBy(state => ({ ...state, field: getField({ value: state.value, type }) }))\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n      .finally(() => LoadingService.loading(false))\n\n    ClaimsReconServices.getMemberUtilizations({ member_account_no: account_number, range: reports.range.member_id }).then(res => {\n      const { data = [] } = res.data\n      setMemberUtilizations(data)\n    }).catch(err => {\n      if (err) { setMemberUtilizations([]) }\n    })\n  }\n\n  const formatChart = data => {\n    const { results = [], covered_months = [] } = data\n    // const _data = getDefault({ month: covered_months, type: graphFilter })\n    const _data = getDefault({ month: covered_months })\n    let mergeResultsbyMonth = []\n\n    for (const r of results) {\n      mergeResultsbyMonth = [...mergeResultsbyMonth, ...r.claims]\n    }\n\n    const parsedData = mergeResultsbyMonth.map(_merge => {\n      for (const i of _data) {\n        if (_merge.claim_type === i.label) {\n          const month = months[_merge.month - 1]\n          i.data[covered_months.indexOf(month)] = _merge.total_amount\n          return { ...i, data: i.data }\n        }\n      }\n    })\n\n    const dynamic = lodash.uniqBy(parsedData, j => j.label)\n    const filteredData = lodash\n      .orderBy(_data\n        .map(i => dynamic\n          .find(u => u.label === i.label) || i), ['label'], ['asc'])\n\n    return {\n      labels: covered_months,\n      datasets: filteredData.filter(i => {\n        if (i.label.replace(/ /g, '') === graphFilter) {\n          return i\n        } else if (graphFilter === 'all') {\n          return filteredData\n        }\n      })\n    }\n  }\n\n  const getField = ({ value, type }) => {\n    const { field = '' } = (dropdown.filter(i => i.type === type && i.value === value)).pop()\n    return field\n  }\n\n  const handleOnChangeDropdown = ({ value }) => {\n    setSearchBy({ value, field: getField({ value, type: reportType }) })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.dropdown}>\n              <DropDown\n                id='search-by'\n                items={dropdown.filter(i => i.type === reportType)}\n                value={searchBy.value}\n                onChange={event =>\n                  handleOnChangeDropdown({\n                    value: event.target.value\n                  })\n                }\n                // error={_errors.diagnosis_code}\n                // readOnly={!permissions.update}\n              />\n            </div>\n            <div className={classes.auto}>\n              <AutoComplete\n                id='account_number'\n                placeholder={reportType === 'client' ? `Search for Client ID` : `Search for Member ID`}\n                value={reportType === 'client' ? reports.search.client.index : reports.search.member.index}\n                suggestions={reportType === 'client' ? suggestion.client : suggestion.member}\n                field={searchBy.value.includes('ID') ? 'id' : 'name'}\n                loading={fetching['main']}\n                onChange={(value, search) =>\n                  handleSearchChange({\n                    field: reportType === 'client' ? 'client' : 'member',\n                    value,\n                    search\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].from}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], from: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].to}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], to: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>{client.limit.type ? limitType[client.limit.type] : ''}</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['line-graph']}>\n              <div className={classes.container}>\n                <div className={classes['line-container']}>\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{\n                      width: `${\n                        ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                          ? 0\n                          : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                      }%`,\n                      background: '#f8b439'\n                    }}\n                  />\n                </div>\n                <div className={classes['line-details']}>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#4fb083' }} />\n                      <Typography variant='button'>UTILIZED</Typography>\n                    </div>\n                    <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                      {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                      <Typography variant='button'>IBNR</Typography>\n                    </div>\n                    <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                      {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#f8b439' }} />\n                      <Typography variant='button'>AVAILABLE</Typography>\n                    </div>\n                    <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                      {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                    </Typography>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map((data, index) => (\n                    <MenuItem value={data.type} key={index}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map((data, index) => (\n                <div className={classes['legend-group']} key={index}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['chart']}>\n            <Chart\n              data={formatChart(chartData)}\n              options={{\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                },\n                legend: {\n                  display: false\n                },\n                // tooltips: {\n                //   enabled: true,\n                //   mode: 'single',\n                //   callbacks: {\n                //     label: (tooltipItems, data) => {\n                //       tooltipItems.value = CurrencyFormatter(tooltipItems.value)\n                //       return `${tooltipItems.yLabel}: ${CurrencyFormatter(tooltipItems.value)}`\n                //     }\n                //   }\n                // },\n                // animation: {\n                //   show: {\n                //     x: {\n                //       from: 0\n                //     },\n                //     y: {\n                //       from: 0\n                //     }\n                //   },\n                //   hide: {\n                //     x: {\n                //       to: 0\n                //     },\n                //     y: {\n                //       to: 0\n                //     }\n                //   }\n                // },\n                maintainAspectRatio: false\n              }} />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '570px', overflow: 'auto', position: 'relative', minHeight: '190px' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`} align={headCell.align}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.field}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.field}`}\n                              onChange={date =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(claim.total_amount)}</TableCell>\n                    <TableCell align='center'>{claim.cases}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_principals}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography style={{ 'fontWeight': 'bold' }}>{`Total Amount: ${CurrencyFormatter(totalAmount)}`}</Typography>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      CurrencyFormatter(SafeAccess(member, ['benefit_limits', 1, 'limit'], ''))}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      CurrencyFormatter(SafeAccess(member, ['benefit_limits', 0, 'limit'], ''))}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n            claimUtilizations={memberUtilizations}\n            fromUtilReport\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './LoadingHimsData.module.scss'\n\nconst columns = [\n  { label: `Member's Account No.`, field: 'member_account_number', match: 'start' },\n  { label: `Member's Plan Contract`, field: 'contract', match: 'exact' },\n  { label: 'Claim No.', field: 'claim_number', search: true, match: 'start' },\n  { label: 'Date of Availment', type: 'date', field: 'availment_date', match: 'date' },\n  { label: 'Approved Date', type: 'date', field: 'approved_date', match: 'date' },\n  { label: 'Approved by', field: 'approved_by', match: 'any' },\n  { label: 'Posted Date', type: 'date', field: 'posted_date', match: 'date' },\n  { label: 'Posted by', field: 'posted_by', match: 'any' },\n  { label: 'TPA', field: 'TPA', match: 'any' },\n  { label: 'SOA Number', field: 'soa_number', match: 'start' },\n  { label: 'Office Branch', field: 'office_branch', match: 'any' },\n  { label: 'Reimbursement', field: 'reimbursement', match: 'exact' },\n  { label: 'Type of Availment', field: 'availment_type', match: 'any' },\n  { label: 'Amount of Availment', type: 'currency', field: 'availment_amount', match: 'number' },\n  { label: 'Date Admitted', type: 'date', field: 'date_admitted', match: 'date' },\n  { label: 'Date Discharge', type: 'date', field: 'date_discharged', match: 'date' },\n  { label: 'Hospital/Clinic Code', field: 'facility_code', match: 'any' },\n  { label: 'Procedure/s', field: 'procedures', match: 'any' },\n  { label: 'Diagnosis', field: 'diagnosis', match: 'any' },\n  { label: 'In House', field: 'in_house', match: 'any' },\n  { label: 'Payment Due Date', type: 'date', field: 'payment_due_date', match: 'date' },\n  { label: 'Breakdown Amount', type: 'currency', field: 'breakdown_amount', match: 'number' },\n  { label: 'Breakdown AR Amount', type: 'currency', field: 'breakdown_ar_amount', match: 'number' },\n  { label: 'AR Addresee', field: 'ar_addresee', match: 'any' },\n  { label: `Member's Name`, field: 'member_name', match: 'any' },\n  { label: 'Payee Code', field: 'payee_code', match: 'any' },\n  { label: 'Payee Name', field: 'payee_name', match: 'any' },\n  { label: 'Disease Code', field: 'disease_code', match: 'any' },\n  { label: 'Disease Name', field: 'disease_name', match: 'any' },\n  { label: 'Layer', field: 'layer', match: 'any' },\n  { label: 'Remarks', field: 'remarks', match: 'any' },\n  { label: 'AR Reason', field: 'ar_reason', match: 'any' },\n  { label: 'Code of AR Reason', field: 'ar_reason_code', match: 'any' },\n  { label: 'Type of Service', field: 'type_of_service', match: 'any' },\n  { label: 'Hospital Services Details', field: 'hospital_service_details', match: 'any' },\n  { label: 'Hospital Services Amount', type: 'currency', field: 'hospital_service_amount', match: 'number' },\n  { label: 'Hospital Services AR Amount', type: 'currency', field: 'hospital_service_ar_amount', match: 'number' }\n]\n\nexport default function LoadingHimsData (props) {\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    filter: {},\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'member_account_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Template for Loading HIMS Data')\n    BreadcrumbsService.setSelectedItems(['loadingHimsData'])\n  }, [])\n\n  const fetchHIMSData = params => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      console.log(res)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchHIMSData(_params)\n  }\n\n  const handleOnColumnFilter = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    fetchHIMSData(_params)\n  }\n\n  const handleGenerateReport = () => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { results } = res.data.data\n\n      const claims = results.map(i => ({\n        ...i,\n        availment_date: DateFormatter(i.availment_date),\n        approved_date: DateFormatter(i.approved_date),\n        posted_date: DateFormatter(i.posted_date),\n        date_admitted: DateFormatter(i.date_admitted),\n        date_discharged: DateFormatter(i.date_discharged),\n        payment_due_date: DateFormatter(i.payment_due_date)\n      }))\n\n      const header = columns.map(c => c.label)\n      const rows = claims.map(claim =>\n        columns.map(col => formatData({ type: col.type, source: claim, field: col.field }))\n      )\n\n      ArrayToCSV({ fileName: 'Loading HIMS Data Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchHIMSData(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    <TableSortLabel\n                      active={claims.orderBy === headCell.field}\n                      direction={claims.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnColumnFilter({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.field]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                              setClaims(state => ({\n                                ...state,\n                                filter: { ...state.filter, [headCell.field]: { value: search, match: headCell.match } }\n                              }))\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.field })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ConfinementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'ICD10 Diagnosis', type: 'array', data: 'diagnosis.diagnosis_description', search: true, match: 'any' },\n  { label: 'Date of Service', type: 'date', data: 'date_from', search: true, match: 'date' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ConfinementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('List of Emergencies Leading to Confinement')\n    BreadcrumbsService.setSelectedItems(['confinementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'List of Emergencies Leading to Confinement',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          []\n        ],\n        fileName: 'List of Emergencies Leading to Confinement Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  // rows\n  header: [\n    { id_row: { label_left: 'Medical Partner ID:', label_right: 'Total PR Amount:' } },\n    { name_row: { label_left: 'Medical Partner Name:', label_right: 'Discount Amount:' } },\n    { bundle_row: { label_left: 'Bundle/SOA Number:', label_right: 'Due Date:' } },\n    { date_row: {label_left: 'Bundle/SOA Date:'} }\n  ],\n  footer: ['Total']\n}\n","import React from 'react'\n\n// Material Component\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { total = {}, bundles = [], page } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      {bundles.length > 0 && (\n        <div className={classes.bundle}>\n          <p><span><b>Bundle Number: </b></span>{`${bundles[page - 1]}`}</p>\n        </div>\n      ) }\n\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL APPROVED: ${CurrencyFormatter(total.total_approved_amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL TAX: ${CurrencyFormatter(total.total_tax_amount)}`}</p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Validator\nimport DateRangeValidator from './../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './PaymentRequestReport.module.scss'\n\nconst columns = [\n  { label: 'No.', sortField: 'number', sort: false, search: false, align: 'left' },\n  { label: 'RCS/LOA No.', sortField: 'loa_number', sort: true, search: true, align: 'left', match: 'start' },\n  {\n    label: 'Member Account No.',\n    sortField: 'member_account_number',\n    sort: true,\n    search: true,\n    align: 'left',\n    match: 'any'\n  },\n  { label: 'Member Name', sortField: 'member_name', sort: true, search: true, align: 'left', match: 'any' },\n  { label: 'Approved Amount', sortField: 'approved_amount', sort: false, search: false, align: 'right' },\n  { label: 'Tax Amount', sortField: 'tax_amount', sort: false, search: false, align: 'right' }\n]\n\nconst initialDetails = {\n  total_pr_amount: 0,\n  discount_amount: 0,\n  due_date: '',\n  total_approved_amount: 0,\n  total_tax_amount: 0\n}\n\nexport default function PaymentRequestReport (props) {\n  // added\n  const [searchValue, setSearchValue] = React.useState({\n    medical_partner_id: '',\n    medical_partner_name: '',\n    bundle: ''\n  })\n\n  const [claims, setClaims] = React.useState({\n    bundles: [],\n    raw: [],\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 1,\n    count: 0,\n    filter: {},\n    rowsPerPageOptions: [0],\n    // on filter_value\n    search: {\n      medical_partner_id: '',\n      medical_partner_name: '',\n      bundle: ''\n    }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const [details, setDetails] = React.useState(initialDetails)\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    bundle: {\n      id: [],\n      data: []\n    }\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Payment Request Report')\n    BreadcrumbsService.setSelectedItems(['paymentRequestReport'])\n  }, [])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    bundle: null,\n    column: null\n  })\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            search: { ...state.search, medical_partner_id: i.id, medical_partner_name: i.name }\n          }))\n\n          setSuggestions(state => ({\n            ...state,\n            medicalPartner: {\n              id: [],\n              name: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        medicalPartner: {\n          id: [],\n          name: [],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Bundle/SOA*\n  const handleOnChangeBundleSoa = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.bundle.data) {\n        if (value === i.bundle_number || value === i.soa) {\n          setClaims(state => ({\n            ...state,\n            search: {\n              ...state.search,\n              bundle: value\n            }\n          }))\n          setSuggestions(state => ({\n            ...state,\n            bundle: {\n              id: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        bundle: {\n          id: [],\n          data: []\n        }\n      }))\n      getBundleSoaSuggestions({ value })\n    }\n  }\n\n  const getBundleSoaSuggestions = ({ value = '' }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.bundle)\n    setDebounce(state => ({\n      ...state,\n      bundle: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'bundle-soa',\n            params: { query: value }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n\n            // TODO Clarify if its OR (Bundle/SOA)\n            // store soa_number first\n            data.forEach(d => {\n              if (d.soa) _items.push(d.soa)\n              _items.push(d.bundle_number)\n            })\n\n            setSuggestions(state => ({\n              ...state,\n              bundle: { ...state.bundle, id: _items.filter(i => i.startsWith(value)), data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnFilter = params => {\n    // added\n    setSearchValue(state => ({ ...state, ...params.search }))\n    const _claims = { ...claims, ...params.search }\n\n    if (claims.search.medical_partner_id.trim().length < 3 || claims.search.medical_partner_name.trim().length < 3) {\n      LoadingService.loading(false)\n      setFetching(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n    LoadingService.loading(true)\n\n    // prev 'claims'\n    ClaimsServices.paymentRequestReport({\n      range: _claims.range,\n      sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`,\n      page: _claims.page,\n      limit: _claims.limit,\n      filter: _claims.filter,\n      searchValue: _claims.search\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      setClaims(state => ({ ...state, bundles: results, raw, count, page, limit }))\n\n      setFetching(true)\n\n      const bundle_number = results[_claims.page - 1]\n      if (bundle_number) {\n        ClaimsServices.paymentRequestClaims(\n          { sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`, searchValue: _claims.search },\n          bundle_number\n        ).then(res => {\n          const { results = [], details = {} } = res.data.data\n\n          // details.due_date = DateFormatter(details.due_date)\n\n          setClaims(state => ({ ...state, data: results }))\n          setDetails(state => ({ ...state, ...details }))\n          setFetching(false)\n          LoadingService.loading(false)\n        })\n      } else {\n        setClaims(state => ({ ...state, data: [] }))\n        setDetails(state => ({ ...state, ...initialDetails }))\n        setFetching(false)\n        LoadingService.loading(false)\n      }\n    })\n  }\n\n  const handlePagination = params => {\n    const bundle_number = params.bundles[params.page - 1]\n\n    ClaimsServices.paymentRequestClaims(\n      {\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        filter: params.filter,\n        // added\n        searchValue: searchValue\n      },\n      bundle_number\n    ).then(res => {\n      const { results = [], details = {} } = res.data.data\n\n      // details.due_date = DateFormatter(details.due_date)\n\n      setClaims(state => ({ ...state, data: results }))\n      setDetails(state => ({ ...state, ...details }))\n      setFetching(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const handleColumnFiltering = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    // setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n\n    const data = staticHeaderFooter({ ...claims.range, raw: claims.raw, ...claims.search, columns: header })\n\n    ArrayToCSV({ fileName: `${claims.search.medical_partner_name} Payment Request Report`, data })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          {/* row-1 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner ID:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner id'\n                  id='medical-partner-id'\n                  value={claims.search.medical_partner_id}\n                  suggestions={suggestions.medicalPartner.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Total PR Amount: ${CurrencyFormatter(details.total_pr_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-2 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner Name:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner name'\n                  id='medical-partner-name'\n                  value={claims.search.medical_partner_name}\n                  suggestions={suggestions.medicalPartner.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Discount Amount: ${CurrencyFormatter(details.discount_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-3 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Bundle/SOA Number:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by bundle/soa number'\n                  id='account-number'\n                  value={claims.search.bundle}\n                  suggestions={suggestions.bundle.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeBundleSoa({\n                      field: 'bundle',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Due Date: ${\n                details.due_date ? DateFormatter(details.due_date) : ''\n              }`}</Typography>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                // handleOnFilter({ ...claims, page: 1 })\n                handleOnFilter({ range: claims.range, search: claims.search })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          // onClick={event => {}}\n                          onClick={event =>\n                            handleColumnFiltering({ orderBy: headCell.sortField, order: !claims.order })\n                          }\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <TextField\n                      id={`text-field-${headCell.sortField}`}\n                      readOnly={!headCell.search}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce.column)\n                        setDebounce(state => ({\n                          ...state,\n                          column: setTimeout(() => {\n                            handleColumnFiltering({\n                              filter: {\n                                ...claims.filter,\n                                [headCell.sortField]: { value: search, match: headCell.match }\n                              }\n                            })\n                            // setClaims(state => ({\n                            //   ...state,\n                            //   filter: { ...state.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          }, 500)\n                        }))\n                      }}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              fetching ? (\n                <TableRow className={classes['table-row']}>\n                  <TableCell align='center' colSpan={6}>\n                    <CircularProgress size={30} />\n                  </TableCell>\n                </TableRow>\n              ) : claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'>{item.loa_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{item.member_account_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{`${item.member_name || 'N/A'}`}</TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.approved_amount <= 0 ? item.approved_amount : 0)}\n                    </TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.tax_amount <= 0 ? item.tax_amount : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer\n            total={{ total_approved_amount: details.total_approved_amount, total_tax_amount: details.total_tax_amount }}\n            bundles={claims.bundles}\n            page={claims.page}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// TODO Need refactor\n// UGLY CSV Generation\nexport const staticHeaderFooter = args => {\n  const { columns = [], to, from, raw = [], medical_partner_id, medical_partner_name } = args\n  columns.push('\\r\\n')\n  const data = []\n\n  for (const item of raw) {\n    const total_approved_amount = item.details.reduce((a, c) => a + c.approved_amount, 0)\n    const total_tax_amount = item.details.reduce((a, c) => a + c.tax_amount, 0)\n\n    // HEADER\n    const static_header = constants.header.map(i => {\n      switch (true) {\n        case i.hasOwnProperty('id_row'):\n\n          return [i.id_row.label_left, medical_partner_id, '', '', i.id_row.label_right, total_approved_amount, '\\r\\n']\n        case i.hasOwnProperty('name_row'):\n          // hardcoded discount value\n          return [i.name_row.label_left, medical_partner_name, '', '', i.name_row.label_right, 0, '\\r\\n']\n        case i.hasOwnProperty('bundle_row'):\n          return [i.bundle_row.label_left, item._id, '', '', i.bundle_row.label_right, DateFormatter(item.due_date), '\\r\\n']\n        case i.hasOwnProperty('date_row'):\n          return [i.date_row.label_left, `${DateFormatter(from)} - ${DateFormatter(to)}`, '\\r\\n']\n      }\n    })\n\n    // COLUMN HEADER\n    const _columns = columns.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1)\n\n    // BODY\n    const claims = item.details.map((i, index) => ({ no: index + 1, ...i }))\n    const rows = []\n    claims.forEach(item => {\n      delete item.bundle_number\n      rows.push(Object.values(item))\n    })\n    const body = rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1),\n        '\\r\\n'\n      ].join('')\n    )\n\n    // FOOTER\n    const static_footer = constants.footer.map(i => {\n      switch (i) {\n        case 'Total':\n          return ['', '', '', i, total_approved_amount, total_tax_amount, '\\r\\n']\n      }\n    })\n    const _data = [].concat(static_header, '\\r\\n', _columns, '\\r\\n', body, '\\r\\n', static_footer, '\\r\\n', '\\r\\n', '\\r\\n')\n\n    data.push(..._data)\n  }\n\n  return data\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\n// import moment from 'moment'\n\n// Styles\nimport classes from './ReimbursementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Claim Number', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Reimbursement Claim Amount', type: 'number', data: 'grand_total', search: false },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', type: 'sentence', search: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ReimbursementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'latest.date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20],\n    grandTotal: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Claims Report')\n    BreadcrumbsService.setSelectedItems(['reimbursementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0, grand_total = 0 } = data\n      setClaims(state => ({ ...state, data: results, count, grandTotal: grand_total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Claims Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Total Amount: ${grand_total}`]\n        ],\n        fileName: 'Reimbursement Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'sentence') {\n      output = source[field]\n        .toLowerCase()\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n        .join(' ')\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' disabled={claims.data.length <= 0} onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      ) : (\n                        <TextField\n                          noMargin\n                          onChange={event =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: event.target.value,\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.grandTotal)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required(),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .max(Joi.ref('date_max'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`,\n      'date.max': `\"Date Range To\" should be on the same year....s\"`\n    }),\n  date_max: Joi.date()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// MUI Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// Custom Components\nimport Table from 'SharedComponents/Table/Table'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport classes from './ClaimsSummaryReport.module.scss'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Utilities\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nconst columns = [\n  { label: 'Month', align: 'center', type: 'string', data: 'month' },\n  { label: 'Number of Claims Received', align: 'center', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', align: 'center', type: 'number', data: 'processed' },\n  { label: 'Amount of Claims Processed', align: 'center', type: 'currency', data: 'total_amount' }\n]\nconst initialClaims = {\n  data: {\n    claims: [\n      { month: 'January', received: 0, processed: 0, total_amount: 0 },\n      { month: 'Febuary', received: 0, processed: 0, total_amount: 0 },\n      { month: 'March', received: 0, processed: 0, total_amount: 0 },\n      { month: 'April', received: 0, processed: 0, total_amount: 0 },\n      { month: 'May', received: 0, processed: 0, total_amount: 0 },\n      { month: 'June', received: 0, processed: 0, total_amount: 0 },\n      { month: 'July', received: 0, processed: 0, total_amount: 0 },\n      { month: 'August', received: 0, processed: 0, total_amount: 0 },\n      { month: 'September', received: 0, processed: 0, total_amount: 0 },\n      { month: 'October', received: 0, processed: 0, total_amount: 0 },\n      { month: 'November', received: 0, processed: 0, total_amount: 0 },\n      { month: 'December', received: 0, processed: 0, total_amount: 0 }\n    ],\n    total_received: 0,\n    total_processed: 0,\n    total_amount: 0\n  },\n  range: {\n    from: moment().format(),\n    to: moment().format()\n  },\n  filter: {\n    claim_type: 'ALL',\n    claim_source: 'ALL',\n    claim_sub_type: 'ALL',\n    contract_plan: 'ALL',\n    section: 'ALL',\n    claim_status: 'ALL',\n    user: 'ALL',\n    geography: 'ALL'\n  }\n}\nconst initialValue = {\n  claim_type: [],\n  claim_source: [],\n  claim_sub_type: [],\n  contract_plan: [],\n  section: [],\n  claim_status: [],\n  user: [],\n  geography: []\n}\n\n/**\n * Claims Summary Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsSummaryReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [suggestion, setSuggestion] = React.useState(initialValue)\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    geopgraphy: null\n  })\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [claims, setClaims] = React.useState(initialClaims)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Summary Report')\n    BreadcrumbsService.setSelectedItems(['claimsSummaryReport'])\n    handleOnFilter()\n  }, [])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsSummaryReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(({ data: res }) => {\n      const { data } = res\n      const { total_received = 0, total_processed = 0, total_amount } = data\n      const results = data.claims\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Summary Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Total: `, `${total_received}`, `${total_processed}`, `${total_amount}`].join(',')\n        ],\n        fileName: 'Claims Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.map(d => d[field])] }))\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  const handleOnFilter = () => {\n    LoadingService.loading(true)\n    const params = {\n      filter: claims.filter,\n      range: claims.range\n    }\n    ClaimsServices.claimsSummaryReport(params).then(({ data: res }) => {\n      const { data } = res\n      setClaims({ ...claims, data: data })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to,\n      date_max: `12-31-${moment(claims.range.from).year()}`\n    })\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, section: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, user: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.geography}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, geography: event }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && handleOnFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.claims.length ? (\n                claims.data.claims.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align='center'\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total:</Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography className='bold'>{claims.data.total_received}</Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography className='bold'>{claims.data.total_processed}</Typography>\n          </div>\n          <div className={classes.total}>\n            <Typography className='bold'>{claims.data.total_amount}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProductivityPerformaceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Time', data: 'time' },\n  { label: 'Number of Claims Received', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', type: 'number', data: 'processed' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', claim_sub_type: '', section: '', user: '', region: '' },\n    receivedTotal: 0,\n    processedTotal: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    claim_sub_type: [],\n    section: [],\n    user: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Productivity and Performance Report')\n    BreadcrumbsService.setSelectedItems(['productivityPerformaceReport'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        receivedTotal: received_total,\n        processedTotal: processed_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Productivity and Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Claim Sub-Type/Category: ${claims.filter.claim_sub_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${received_total}`, `${processed_total}`].join(',')\n        ],\n        fileName: 'Productivity and Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.receivedTotal}</span>\n            </Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.processedTotal}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ReturnedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'number' },\n  { label: 'Reason for Return', sortField: 'return_reason', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner ID', sortField: 'facility_id', search: true, sort: true, match: 'start' },\n  { label: 'Medical Partner Name', sortField: 'facility_name', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' }\n]\n\nexport default function ReturnedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['returnedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], total = [], count, limit, page } = res.data.data\n      const [_total] = total\n\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit,\n        total_amount: total.length ? _total.total_amount : 0\n      }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', 'Total Amount:', `${claims.total_amount}`].join(',')\n        ],\n        fileName: 'Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        readOnly={!headCell.search}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'> {item.claim_number}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(item.claim_amount)}</TableCell>\n                    <TableCell align='left'>{item.return_reason}</TableCell>\n                    <TableCell align='left'> {item.facility_id}</TableCell>\n                    <TableCell align='left'>{item.facility_name}</TableCell>\n                    <TableCell align='left'>{item.claim_type}</TableCell>\n                    <TableCell align='left'>{item.claim_source}</TableCell>\n                    <TableCell align='left'>{item.geography}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.total_amount)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './PerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'type' },\n  { label: 'Total Number of Handled Claims', type: 'number', data: 'count' },\n  { label: 'Average Handling Time', type: 'number', data: 'average' },\n  { label: 'Number of Hours Worked', type: 'number', data: 'work' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: 'ALL', claim_source: 'ALL', contract_plan_type: 'ALL', section: 'ALL', user: 'ALL' },\n    total: {}\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: ['ALL'],\n    claim_source: ['ALL'],\n    contract_plan_type: ['ALL'],\n    section: ['ALL'],\n    user: ['ALL']\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    contract_plan_type: null,\n    section: null,\n    user: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n      setClaims(state => ({ ...state, data: results, total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Performance Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Amount: `, `${total.count}`, `${total.average}`, `${total.work}`].join(',')\n        ],\n        fileName: 'Performance Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Performance Summary Report')\n    BreadcrumbsService.setSelectedItems(['performanceReport'])\n    fetchRecords()\n  }, [])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Contract Plan Type</Typography>\n              <AutoComplete\n                placeholder='Search by contract plan type'\n                id='contract-plan-type'\n                value={claims.filter.contract_plan_type}\n                suggestions={suggestion.contract_plan_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'contract-plan-type',\n                    field: 'code'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'section',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.count}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.count}</span>\n            </Typography>\n          </div>\n          <div className={classes.average}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.average}</span>\n            </Typography>\n          </div>\n          <div className={classes.work}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.work}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingPartialApprovedReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of partially approved',\n    label2: 'claims beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Partially Approved Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState({})\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Partially Approved Claim Report')\n    BreadcrumbsService.setSelectedItems(['agingPartialApprovedReport'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Partially Approved Claim Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Partially Approved Claim Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, index = '', field, isSuggestionClick }) => {\n    let _category = ''\n\n    if (index) _category = `${category}_${index}`\n    else _category = category.split('-').join('_')\n\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[_category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingReturnClaimReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of returned claims',\n    label2: 'within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: 'beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of returned claims',\n    label2: 'beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Returned Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState([])\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['agingReturnedClaims'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Returned Claims Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Returned Claims Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsBeyond3MonthsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No', data: 'no' },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Date Received', data: 'received_date', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, sort: true, match: 'any' },\n  { label: 'Date of Service', data: 'date_of_service', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Claim Amount', data: 'claim_amount', sort: false, type: 'currency' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  // const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'latest.date.received'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    // range: {\n    //   from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n    //   to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n    //   field: 'status_date'\n    // },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Beyond 3 Months Report')\n    BreadcrumbsService.setSelectedItems(['claimsBeyond3Months'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Beyond 3 Months',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Claims Beyond 3 Months',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    // <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n    //   <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Styles\nimport classes from './ReimbursementAgingReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'item', align: 'left' },\n  { label: 'Number of Reimbursement Claims', type: 'number', data: 'reimbursement_count', align: 'center' },\n  {\n    label: 'Number of Percentage of Reimbursement Claims',\n    type: 'number',\n    data: 'reimbursement_percent',\n    align: 'center',\n    suffix: '%'\n  }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [\n      { item: 'Reimbursement within TAT', reimbursement_count: 0, reimbursement_percent: 0 },\n      { item: 'Reimbusement above TAT', reimbursement_count: 0, reimbursement_percent: 0 }\n    ],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { reimbursement_category: 'ALL' }\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    reimbursement_category: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    reimbursement_category: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Aging Report')\n    BreadcrumbsService.setSelectedItems(['agingReimbursement'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      setClaims(state => ({\n        ...state,\n        data: results\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Aging Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Reimbursement Category: ${claims.filter.reimbursement_category}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ]\n        ],\n        fileName: 'Reimbursement Aging Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [category]: setTimeout(() => {\n          // use constant (this also used in Reimbursement Claim page)\n          const const_types = ClaimTypes.Reimbursement.subType\n\n          if (value) {\n            const _value = value.toLowerCase()\n            const filtered = const_types\n              .map(i => i.text)\n              .filter(j => {\n                const lower_case = j.toLowerCase()\n\n                return lower_case.includes(_value)\n              })\n\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...filtered] }))\n          } else {\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...const_types.map(i => i.text)] }))\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Reimbursment Category</Typography>\n              <AutoComplete\n                placeholder='Search by reimbursement Category'\n                id='reimbursment-category'\n                value={claims.filter.reimbursement_category}\n                suggestions={suggestion.reimbursement_category}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'reimbursement_category',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`} align={headCell.align}>\n                    {headCell.label}\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                      align={col.align}\n                    >\n                      {col.suffix\n                        ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                        : formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './DetailedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Process Date', sortField: 'process_date', search: true, sort: true, match: 'date', type: 'date' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'currency', align: 'right' },\n  { label: 'Claim Status', sortField: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Section', sortField: 'section', search: true, sort: true, match: 'any' },\n  { label: 'User', sortField: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', sortField: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', sortField: 'claim_sub_type', search: true, sort: true, match: 'any' }\n]\n\nexport default function DetailedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    total_received: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Claims Report')\n    BreadcrumbsService.setSelectedItems(['detailedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], grand_total, count, limit, page, total_received } = res.data.data\n\n      setClaims(state => ({ ...state, data: results, count, page, limit, total_amount: grand_total, total_received }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results, grand_total, total_received, count } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [\n            '\\r\\n',\n            ['Number of Claims Received:', `${total_received}`],\n            '\\r\\n',\n            ['Number of Claims Processed:', `${count}`],\n            '\\r\\n',\n            ['Amount of Claims Processed:', `${grand_total}`]\n          ]\n        ],\n        fileName: 'Detailed Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`${item.claim_number}-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        align={col.align}\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.sortField })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            // footerComponent={\n            //   <Typography variant='caption' className='bold'>\n            //     <span>Total Amount: </span>\n            //     <span>{CurrencyFormatter(claims.total_amount)}</span>\n            //   </Typography>\n            // }\n          />\n        </div>\n        {/* trial ugly */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Received: ${claims.total_received}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Processed: ${claims.count}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>\n              {`Amount of Claims Processed: ${CurrencyFormatter(claims.total_amount)}`}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedPerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  // { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'TAT per Claim', data: 'tat_claim', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Performance Report')\n    BreadcrumbsService.setSelectedItems(['detailedPerformanceReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedMonitoringReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'start' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'Claim User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Handling Time per Claim', data: 'handling_per_claim', search: true, sort: true, match: 'any' },\n  { label: 'Section Handling Time Beyond KPI', data: 'handling_beyond_kpi', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Monitoring Report')\n    BreadcrumbsService.setSelectedItems(['detailedMonitoringReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Monitoring Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Monitoring Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n// Pages\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport TransmittalReport from './../Components/Reports/TransmittalReport/TransmittalReport'\nimport TreasuryTransmittalReport from '../Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport'\nimport PRCheckReport from '../Components/Reports/PRCheckReport/PRCheckReport'\nimport UtilizationReport from '../Components/Reports/UtilizationReport/UtilizationReport'\nimport LoadingHimsData from '../Components/Reports/LoadingHimsData/LoadingHimsData'\nimport ConfinementReport from '../Components/Reports/ConfinementReport/ConfinementReport'\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\nimport ReimbursementReport from '../Components/Reports/ReimbursementReport/ReimbursementReport'\nimport ClaimsSummaryReport from '../Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport'\nimport ProductivityPerformaceReport from '../Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport'\nimport ReturnedClaimsReport from '../Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport'\nimport PerformanceReport from '../Components/Reports/PerformanceReport/PerformanceReport'\nimport AgingPartialApprovedReport from '../Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport'\nimport AgingReturnClaimReport from '../Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport'\nimport ClaimsBeyond3MonthsReport from '../Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport'\nimport ReimbursementAgingReport from '../Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport'\nimport DetailedClaimsReport from '../Components/Reports/DetailedClaimsReport/DetailedClaimsReport'\nimport DetailedPerformanceReport from '../Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport'\nimport DetailedMonitoringReport from '../Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport'\n\nconst reportPages = {\n  transmittal: {\n    name: 'transmittal',\n    label: 'Transmittal Report',\n    to: '/reports/transmittal-report',\n    component: TransmittalReport\n  },\n  utilizationLedger: {\n    name: 'utilizationLedger',\n    label: 'Generate Utilization Ledger',\n    to: '/reports/utilization-ledger',\n    component: ClaimsUtilLedgerReport\n  },\n  treasuryTransmittalReport: {\n    name: 'treasuryTransmittalReport',\n    label: 'View Treasury Transmittal',\n    to: '/reports/treasury-reports',\n    component: TreasuryTransmittalReport\n  },\n  utilizationReport: {\n    name: 'utilizationReport',\n    label: 'View Account & Member Utilization',\n    to: '/reports/utilization',\n    component: UtilizationReport\n  },\n  prReports: {\n    name: 'prReports',\n    label: 'View PR and Check Details',\n    to: '/reports/pr-reports',\n    component: PRCheckReport\n  },\n  loadingHimsData: {\n    name: 'loadingHimsData',\n    label: 'Template for Loading HIMS Data',\n    to: '/reports/loading-hims-data',\n    component: LoadingHimsData\n  },\n  confinementReport: {\n    name: 'confinementReport',\n    label: 'List of Emergencies Leading to Confinement Report',\n    to: '/reports/confinement-report',\n    component: ConfinementReport\n  },\n  paymentRequestReport: {\n    name: 'paymentRequestReport',\n    label: 'Payment Request Report',\n    to: '/reports/payment-request-report',\n    component: PaymentRequestReport\n  },\n  reimbursementReport: {\n    name: 'reimbursementReport',\n    label: 'Reimbursement Claims Report',\n    to: '/reports/reimburesment-report',\n    component: ReimbursementReport\n  },\n  claimsSummaryReport: {\n    name: 'claimsSummaryReport',\n    label: 'Claims Summary Report',\n    to: '/reports/claims-summary-report',\n    component: ClaimsSummaryReport\n  },\n  productivityPerformaceReport: {\n    name: 'productivityPerformaceReport',\n    label: 'Productivity and Performance Report',\n    to: '/reports/productivity-performance',\n    component: ProductivityPerformaceReport\n  },\n  returnedClaimsReport: {\n    name: 'returnedClaimsReport',\n    label: 'Returned Claims Report',\n    to: '/reports/returned-claims',\n    component: ReturnedClaimsReport\n  },\n  performanceReport: {\n    name: 'performanceReport',\n    label: 'Performance Summary Report',\n    to: '/reports/performance',\n    component: PerformanceReport\n  },\n  agingPartialApprovedReport: {\n    name: 'agingPartialApprovedReport',\n    label: 'Aging of Partially Approved Claims Report',\n    to: '/reports/aging-partial-approve-claims',\n    component: AgingPartialApprovedReport\n  },\n  agingReturnedClaims: {\n    name: 'agingReturnedClaims',\n    label: 'Aging of Returned Claims Report',\n    to: '/reports/aging-returned-claims',\n    component: AgingReturnClaimReport\n  },\n  claimsBeyond3Months: {\n    name: 'claimsBeyond3Months',\n    label: 'Claims Beyond 3 Months Report',\n    to: '/reports/claims-beyond-3-months',\n    component: ClaimsBeyond3MonthsReport\n  },\n  agingReimbursement: {\n    name: 'agingReimbursement',\n    label: 'Reimbursement Aging Report',\n    to: '/reports/aging-reimbursement',\n    component: ReimbursementAgingReport\n  },\n  detailedClaimsReport: {\n    name: 'detailedClaimsReport',\n    label: 'Detailed Claims Report',\n    to: '/reports/detailed-claims',\n    component: DetailedClaimsReport\n  },\n  detailedPerformanceReport: {\n    name: 'detailedPerformanceReport',\n    label: 'Detailed Performance Report',\n    to: '/reports/detailed-performance',\n    component: DetailedPerformanceReport\n  },\n  detailedMonitoringReport: {\n    name: 'detailedMonitoringReport',\n    label: 'Detailed Monitoring Report',\n    to: '/reports/detailed-monitoring',\n    component: DetailedMonitoringReport\n  }\n}\n\nconst reportsItems = {\n  BATCH_ENCODER: ['utilizationLedger', 'transmittal', 'confinementReport'],\n  BATCH_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'transmittal',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_DETAILS_ENCODER: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_ANALYST: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER_SUPERVISOR: [\n    'utilizationLedger',\n    'loadingHimsData',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  MEDICAL_CONSULTANT: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_RECON: [\n    'utilizationLedger',\n    'transmittal',\n    'prReports',\n    'treasuryTransmittalReport',\n    'utilizationReport',\n    'reimbursementReport',\n    'confinementReport'\n  ],\n  CLAIMS_VERIFIER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ],\n  CLAIMS_MANAGER: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ]\n}\nconst generateBreadCrumbs = userRole => {\n  let breads = {}\n  for (const r of reportsItems[userRole]) {\n    breads[r] = { text: reportPages[r].label, to: reportPages[r].to }\n  }\n  return breads\n}\n\nconst generateSideBar = userRole => {\n  return {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: (reportsItems[userRole] && reportsItems[userRole].map(r => reportPages[r])) || []\n  }\n}\n\nconst generateRoutes = userRole => {\n  return reportsItems[userRole].map(r => (\n    <Route key={reportPages[r].name} exact path={reportPages[r].to} component={reportPages[r].component} />\n  ))\n}\n\nexport { generateSideBar, generateBreadCrumbs, generateRoutes }\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name', match: 'any' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle', match: 'any' },\n  { id: 'total-batch', name: 'Total Batches', sortField: 'total_batch', match: 'any' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ])\n      .then(values => {\n        const [batchEncoders, count] = values\n        setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    setFetching(true)\n    services\n      .getBatchEncoderWork({ limit: 10, sort: 'name|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatchEncoderWork(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={item.id}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.user_id}>\n                  <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                  <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                  <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                  <TableCell id={`view-work-${index}`}>\n                    <Link to={`/batch-encoder-work/${item.user_id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='bundle-and-batch-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    setFetching(true)\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: viewList.limit, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claim-for-Reconciliation'\n        count={{ color: 3, value: claims.for_recon.count, id: 'claim-for-Reconciliation-count' }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map((item, index) => (\n                  <TableCell\n                    key={index}\n                    // id={item.id}\n                  >\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.for_recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number}</TableCell>\n                  <TableCell>{item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell id={`view-review-${index}`}>\n                    <Link to={`/claims/recon/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claim-for-Reconciliation'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from '../instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id='reassign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false, showIcon = true } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {showIcon ? icon({ iconStyle }) : ''}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nconst removeDuplicates = (array) => {\n  var a = array.concat();\n  for(var i=0; i<a.length; ++i) {\n      for(var j=i+1; j<a.length; ++j) {\n          if(a[i] === a[j])\n              a.splice(j--, 1);\n      }\n  }\n\n  return a\n}\n\nexport { compare, includesAny, removeDuplicates }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState()\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  console.log(common, loa)\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\n// import ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  // const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (claim_type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              LoadingService.loading(false)\n            }\n          }\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && !isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-customer-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_number\n                  }}\n                >\n                  <TextField\n                    id='company-account-number'\n                    label='Customer Account Number'\n                    value={claim.client_account_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                    error={errors.client_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='client-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickClientLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-company-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_name\n                  }}\n                >\n                  <TextField\n                    id='company-name'\n                    label='Company Name'\n                    value={claim.client_account_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                    error={errors.client_account_name}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {permissions.read && isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n                {permissions.update && (\n                  <div className={classes.search}>\n                    <Button\n                      id='client-account-number-search'\n                      variant='outlined'\n                      className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                      onClick={handleOnClickClientLookup}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  </div>\n                )}\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={claim.client_account_name}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoments\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children } = props\n  return <div className={classes.root}>{children}</div>\n}\n\nconst ICDTextField = props => {\n  const {\n    required,\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n      </div>\n      <div className={classes['sub-wrapper']}>\n        <div className={classes.delete}>\n          {permissions.delete && (\n            <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          )}\n        </div>\n\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              field={'description'}\n              loading={fetching['description']}\n              onChange={onChangeDescription}\n              error={error.description}\n              readOnly={!permissions.update}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            field={'code'}\n            loading={fetching['code']}\n            onChange={onChangeCode}\n            error={error.code}\n            readOnly={!permissions.update}\n          />\n        </div>\n        <div className={classes.primary}>\n          <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GivenDiagnosisField = props => {\n  const {\n    required,\n    id = '',\n    givenDiag = '',\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <Typography variant='subtitle2' className={classes.delete}>\n            {''}\n          </Typography>\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis {required && ' *'}\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={error.given_diagnosis}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField, GivenDiagnosisField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField, GivenDiagnosisField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsAdjudicationServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                console.log('fetched', data)\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields>\n              {items.map((item, index) => (\n                <React.Fragment key={`diagnosis-${index}`}>\n                  {/* // Given Diagnosis */}\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-given-${index}`}\n                    discrepancy={{\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    showIcon={false}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <GivenDiagnosisField\n                      required\n                      id={`given-diagnosis-${index}`}\n                      givenDiag={item.given_diagnosis}\n                      onChangeGivenDiag={(value, search) =>\n                        handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                      }\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                      suggestions={suggestions}\n                      error={error && error.items && error.items[index]}\n                    />\n                  </DiscrepancyBase>\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-${index}`}\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <ICDTextField\n                      required\n                      key={`icd-${index} ${error[index]}`}\n                      id={`icd-description-${index}`}\n                      codeId={`icd-code-${index}`}\n                      error={error && error.items && error.items[index]}\n                      description={item.description}\n                      suggestions={suggestions}\n                      code={item.code}\n                      primary={item.primary}\n                      onChangeDescription={(value, search) =>\n                        handleOnChangeIcd10({ field: 'description', index, value, search })\n                      }\n                      onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                      onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                      onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                    />\n                  </DiscrepancyBase>\n                </React.Fragment>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\n// import IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value = {}, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setProcedure({\n          details: { description: value.description, code: value.code, gross_amount: value.rate }\n        })\n      )\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          const field = by === 'code' ? 'cpt_code' : 'procedure_name'\n          ClaimsServices.lookups({\n            on: 'cpt',\n            params: {\n              search_field: field,\n              search_value: value,\n              claim_type: claim_type.split(' ').join(''),\n              facility_id: claim.facility_id || '',\n              room_type: claim.room_type || '',\n              availment_date: claim_type === 'InPatient' ? claim.date_from : claim.date_to,\n              limit: 10,\n              sort_field: 'cpt_code',\n              sort_direction: 'asc'\n            }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data.map(d => ({ code: d.cpt_code, description: d.procedure_name, rate: d.rate }))\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt}\n                    field={'description'}\n                    onChange={(value, search) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        search\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt}\n                    field={'code'}\n                    onChange={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={procedure.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={procedure.details.amount_not_covered > 0}\n                      disableComponents={procedure.details.amount_not_covered === 0}\n                      value={procedure.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={procedure.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={procedure.details.amount_due_from_member > 0}\n                      disableComponents={procedure.details.amount_due_from_member === 0}\n                      value={procedure.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={procedure.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={procedure.details.amount_due_from_client > 0}\n                      disableComponents={procedure.details.amount_due_from_client === 0}\n                      value={procedure.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0 } = item\n  // , amount_due_from_member = 0, amount_due_from_client = 0\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) + parseFloat(philhealth_amount_paid) + parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem}\n                    field={'name'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem}\n                    field={'item_code'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={hospitalItem.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={hospitalItem.details.amount_not_covered > 0}\n                      disableComponents={hospitalItem.details.amount_not_covered === 0}\n                      value={hospitalItem.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={hospitalItem.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={hospitalItem.details.amount_due_from_member > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                      value={hospitalItem.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={hospitalItem.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={hospitalItem.details.amount_due_from_client > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_client === 0}\n                      value={hospitalItem.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  suggestions={pfSuggestions.specialization}\n                  field={'description'}\n                  loading={fetching['description']}\n                  onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={professionalFee.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={professionalFee.details.amount_not_covered > 0}\n                      disableComponents={professionalFee.details.amount_not_covered === 0}\n                      value={professionalFee.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={professionalFee.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={professionalFee.details.amount_due_from_member > 0}\n                      disableComponents={professionalFee.details.amount_due_from_member === 0}\n                      value={professionalFee.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={professionalFee.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={professionalFee.details.amount_due_from_client > 0}\n                      disableComponents={professionalFee.details.amount_due_from_client === 0}\n                      value={professionalFee.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy, uniqBy } from 'lodash'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport { removeDuplicates } from 'Utilities/ArrayCompare'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    onReject,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReassign,\n    onSave,\n    onEscalate,\n    onApprove,\n    onCancel,\n    isReimbursement,\n    onRemove,\n    onViewClaimNotice,\n    onReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [], reimbursement_info_analyst = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [discrepancyModal, setDiscrepancyModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [hasNotCovered, setHasNotCovered] = React.useState(false)\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersWithRole(roles[0]).then(({ data }) => {\n      const users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  const hasAmountNotCovered = ({\n    dental_procedures = [],\n    procedures = [],\n    hospital_items = [],\n    professional_fees = []\n  }) => {\n    dental_procedures = dental_procedures || []\n    procedures = procedures || []\n    hospital_items = hospital_items || []\n    professional_fees = professional_fees || []\n\n    for (const item of [...dental_procedures, ...procedures, ...hospital_items, ...professional_fees]) {\n      if (item.reason || item.amount_not_covered) return true\n    }\n    return false\n  }\n\n  // Reactive\n  React.useEffect(() => {\n    const notCovered = hasAmountNotCovered(claim)\n    console.log(notCovered)\n    setHasNotCovered(notCovered)\n  }, [claim])\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowApprovalMatrix = ({ skip = false }) => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        setApproveModal({\n          show: true,\n          message:\n            'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n        })\n      } else {\n        if (!skip) {\n          setApproveModal({ show: true, message: 'Are you sure you want to approve the claim?' })\n        } else {\n          onApprove({ goBack: false })\n        }\n      }\n    } else {\n      onApprove({ goBack: false })\n    }\n\n    return true\n  }\n\n  const handleOnApproval = () => {\n    const { diagnosis, procedure, hospital_item, professional_fee, ...others } = discrepancy\n\n    if (\n      Object.keys(diagnosis).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      Object.entries(others).find(([key, value]) => value.length > 0)\n    ) {\n      setDiscrepancyModal(true)\n      return false\n    }\n\n    handleOnShowApprovalMatrix({ skip: false })\n    return true\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const rmLogicReturn = infos => {\n    // no reimbursement_info\n    if (infos.length < 0) return false\n    // multiple reimbursement_info\n    if (infos.length > 1) return true\n\n    // check if reimbursement_info [0] is filler\n    if (infos.length === 1) {\n      const info = infos[0]\n      return !!(info.date_released && info.date_return)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && rmLogicReturn(reimbursement_info) && (\n          <Button\n            id='btn-return-advice'\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => onViewClaimNotice({})}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                id='btn-view-analysis'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewAnalysisSheet({ goBack: false })}\n                onClick={() => onViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                id='btn-view-loa'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewLetterOfAdvice({ goBack: false })}\n                onClick={() => onViewLetterOfAdvice({ goBack: false })}\n                disabled={(disabled && permissions.letter_of_advice.enabled) || !hasNotCovered}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                id='btn-escalate'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                id='btn-reject'\n                variant='contained'\n                color='secondary'\n                onClick={() =>\n                  !doValidateMiddleware() && (isReimbursement ? onReject({ goBack: false }) : setRejectModal(true))\n                }\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnApproval()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n            {SafeAccess(permissions, ['close']) ? (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => onCancel({ goBack: true })}>\n                Close\n              </Button>\n            ) : (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n                Cancel\n              </Button>\n            )}\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                id='btn-reassign'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id='escalation-text'\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      id='escalate-cancel'\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      id='escalate-submit'\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                onEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                onReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && onReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              onReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={discrepancyModal}\n            message={'There is a highlighted claim item for checking. Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setDiscrepancyModal(false)}\n            onOk={() => {\n              setDiscrepancyModal(false)\n              handleOnShowApprovalMatrix({ skip: true })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              onApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            onSave({ goBack: 'dashboard' })\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            onCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            onRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`, {})\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`, {}))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`, {}))\n\n      if (rnb.nodes) {\n        const _keys = Object.keys(rnb.nodes).sort()\n        const _name = _keys[_keys.length - 1]\n        setLastRoomAndBoard(_name)\n        setBenefitCategory(_name)\n      }\n      setPlanPackage('RB')\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`, {}))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'code', search: true, match: 'start' },\n  { name: 'Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Location', sortField: 'location', search: true, match: 'any' },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true, match: 'start' },\n  { name: 'Doctor Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Specialization', sortField: 'specialization', search: true, match: 'any' },\n  { name: 'Schedule', sortField: 'schedule', search: true, match: 'any' },\n  { name: 'Remarks', sortField: 'remarks', search: false, match: 'any' }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  // const [partnerId, setPartnerId] = React.useState('')\n  // const [partnerName, setPartnerName] = React.useState('')\n  // const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    filter: {},\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    search: '',\n    data: [],\n    filtered: [],\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchPartner = args => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: {\n        search: args.search,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        page: args.page,\n        filter: args.filter,\n        limit: args.limit\n      }\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      setPartners(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit\n      }))\n    })\n  }\n\n  const fetchDoctors = args => {\n    console.log(args)\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: {\n        limit: args.limit,\n        page: args.page,\n        filter: args.filter,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        search: args.search\n      },\n      facility_id: args.facility_id\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      console.log(results)\n      setDoctors(state => ({\n        ...state,\n        show: true,\n        data: results,\n        count,\n        limit,\n        page\n        // filtered: data.results,\n        // filters\n      }))\n    })\n  }\n\n  const onQueryColumn = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      fetchDoctors(_params)\n    }\n  }\n\n  const onQueryAll = params => {\n    const _params = {\n      ...partners,\n      ...params\n    }\n\n    fetchPartner(_params)\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      setPartners(state => ({ ...state, ...params }))\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      setDoctors(state => ({ ...state, ...params }))\n      fetchDoctors(_params)\n    }\n  }\n\n  const handleOnClickAffiliated = params => {\n    const _params = {\n      ...doctors,\n      ...params\n    }\n\n    setDoctors(state => ({ ...state, facility_id: params.facility_id }))\n    fetchDoctors(_params)\n  }\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchPartner(partners)\n  }, [memberAccountNumber])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            //  onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            onChange={event => {\n              const search = event.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  onQueryAll({ search, page: 1 })\n                  setPartners(state => ({ ...state, search }))\n                }, 500)\n              )\n            }}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    // onClick={hanleOnPaginate('partners', headCell.sortField)}\n                    onClick={() => handleOnPaginate('partners', { orderBy: headCell.sortField, order: !partners.order })\n                    }\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            setPartners(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                            onQueryColumn('partners', { filter: { ...partners.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                          }, 500)\n                        )\n                      }\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.code}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.location}</span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => handleOnClickAffiliated({ facility_id: row.code })}\n                      // onChange={() => {}}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        // onClick={handleOnSort('doctors', cell.sortField)}\n                        onClick={() => handleOnPaginate('doctors', { orderBy: cell.sortField, order: !doctors.order })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                setDoctors(p => ({ ...p, filter: { ...p.filter, [cell.sortField]: { value: search, match: cell.match } } }))\n                                onQueryColumn('doctors', { filter: { ...doctors.filter, [cell.sortField]: { value: search, match: cell.match } }, page: 1 })\n                              }, 500)\n                            )\n                          }\n                          }\n                          // onChange={event => {}}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.data.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.data.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {row.specialization}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareServices'\n\n// Component\nimport { MozillaPdfURL } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  // const { getMemberContract, getClientContract } = props\n  // const { getMemberContractUrl, getClientContractUrl } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  const [fileName, setFileName] = React.useState('')\n  // const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  // React.useEffect(() => {\n  //   if (isMember) {\n  //     if (!member) return\n  //     const mct_id = member.benefit_tree.MCT.details._id\n  //     setService(getMemberContract({ mct_id }))\n  //     setFileName(`${NameFormatter(member.info).format2} Contract`)\n  //     setTitle('Member Contract')\n  //   } else {\n  //     if (!client) return\n  //     const mct_id = client.benefit_tree.MCT.details._id\n  //     setService(getClientContract({ mct_id }))\n  //     setFileName(`${client.info.brand_name} Contract`)\n  //     setTitle('Client Contract')\n  //   }\n  // }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(CustomerCareService.getMemberContractUrl({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(CustomerCareService.getClientContractUrl({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n    }\n  }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes.pdf}>\n          <MozillaPdfURL name={fileName} service={service} enabled />\n        </div>\n        {/* <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1}\n            service={service}\n            enabled\n          />\n        </div> */}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const {\n    claim,\n    permissions,\n    isMember,\n    member,\n    memberFetchStatus,\n    client,\n    clientFetchStatus,\n    utilizationLoa,\n    memberFetchMessage\n  } = props\n  // Services\n  const {\n    getUtilizations,\n    getPartners,\n    getDoctors,\n    getMemberContract,\n    getClientContract,\n    getMemberContractUrl,\n    getClientContractUrl\n  } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n              getMemberContractUrl={getMemberContractUrl}\n              getClientContractUrl={getClientContractUrl}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox title='Reassignee Notes' messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .greater(0)\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      contract_plan_type: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n  console.log('inpatient', error)\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Date Admitted'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Date Discharged'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_id',\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_name',\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showClaimSource\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, onReturn } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packages: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_id',\n                          value\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_name',\n                          value\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          contract_plan_type: data.contract_plan_type,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.from).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                isCM\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  // showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  _id: Joi.string().allow('', null),\n  complied: Joi.boolean().allow(true, false),\n  date_complied: Joi.date().allow('', null),\n  date_created: Joi.date(),\n  date_encoded: Joi.date(),\n  date_return: Joi.date().allow('', null),\n  date_released: Joi.date()\n    .label('Date Released')\n    .required()\n    .messages({ 'string.empty': `\"Date Released\" is required.` }),\n  prepared_by: Joi.string()\n    .trim()\n    .allow('', null),\n  reasons: Joi.array()\n    .items(\n      Joi.object({\n        _id: Joi.string().allow('', null),\n        error: Joi.string().allow('', null),\n        value: Joi.string()\n          .label('Reason')\n          .trim()\n          .required()\n          .messages({ 'string.empty': `\"Reason\" is required.` }),\n        other_details: Joi.string()\n          .trim()\n          .allow('', null)\n      })\n    )\n    .allow(null),\n  released_to: Joi.string()\n    .trim()\n    .label('Released To')\n    .required()\n    .messages({\n      'string.empty': `\"Released To\" is required.`\n    }),\n  remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport NoticeValidator from './NoticeValidator'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  // Variables\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n\n  const { batch_number, claimNumber, member_last_name, member_first_name, member_middle_name } = props.claim\n\n  const { data = [] } = props\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n  const [noticeModal, setNoticeModal] = React.useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (show && reasonDropdown.length <= 0) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [show])\n\n  // API Calls\n  const insertNotice = async ({ item }) => {\n    setLoading(true)\n    const ff = await service.addReimburesmentInfo({ claim_number: claimNumber, data: item })\n    setLoading(false)\n    return ff\n  }\n\n  const updateNotice = async ({ item, index }) => {\n    setLoading(true)\n    const ff = await service.updateReimburesmentInfo({ claim_number: claimNumber, info_id: item._id, data: item })\n    setLoading(false)\n    return ff\n  }\n\n  // Callbacks\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        _id: i._id,\n        complied: i.complied,\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  const handleOnClickPrintNotice = index => {\n    const item = items[index] || {}\n    doViewClaimNotice({ document_id: item._id })\n  }\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const validateItems = ({ items = [] }) => {\n    if (!items.length) {\n      setValidateModal(true)\n    } else setRejectModal(true)\n  }\n\n  // UI Events\n  // Animations\n  const handleOnClickAdd = () => {\n    const openNotice = items.find(i => !i.complied)\n    if (openNotice) return setNoticeModal(true)\n\n    setShowAdd(true)\n    setItems(items => items.map(i => ({ ...i, show: false, showCell: false })))\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  // Data Events\n  const handleOnClickSave = ({ item }) => {\n    insertNotice({ item }).then(res => {\n      const { data } = res.data\n      setItems(items => {\n        const _items = [...items, { ...item, _id: data._id }]\n        handleOnItemSave(_items)\n        return _items\n      })\n      setShowAdd()\n    })\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    updateNotice({ item, index }).then(res => {\n      const { data } = res.data\n      items[index] = { ...data[index], show: false, showCell: false }\n      setItems(items)\n      handleOnItemSave(items)\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setShowAdd()\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <TableRow key={`collapsible-${index}`}>\n                      <TableCell\n                        colSpan={headCells.length}\n                        id={`collabsible-cell-${index}`}\n                        className={classes['collapsible-cell']}\n                      >\n                        <LoadingIndicator type={'overlay'} loading={loading}>\n                          <ItemForm\n                            reasonDropdown={reasonDropdown}\n                            index={index}\n                            item={item}\n                            handleOnClickCancel={handleOnClickCancel}\n                            handleOnClickUpdate={handleOnClickUpdate}\n                            canPrintNotice={canPrintNotice}\n                            service={service}\n                            lookup={lookup}\n                            setReasonDropdown={setReasonDropdown}\n                            handleOnClickPrintNotice={handleOnClickPrintNotice}\n                          />\n                        </LoadingIndicator>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <TableRow key={`collapsible-add`}>\n                  <TableCell\n                    colSpan={headCells.length}\n                    id={`collabsible-cell-add`}\n                    className={classes['collapsible-cell']}\n                  >\n                    <LoadingIndicator type={'overlay'} loading={loading}>\n                      <ItemForm\n                        index='add'\n                        reasonDropdown={reasonDropdown}\n                        item={{}}\n                        handleOnClickCancel={handleOnClickCancel}\n                        handleOnClickSave={handleOnClickSave}\n                        canPrintNotice={canPrintNotice}\n                        service={service}\n                        lookup={lookup}\n                        setReasonDropdown={setReasonDropdown}\n                      />\n                    </LoadingIndicator>\n                  </TableCell>\n                </TableRow>\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => validateItems({ items: items })}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={noticeModal}\n        message='Max of one notice that has not been marked as complied only.'\n        okLabel='Close'\n        onOk={() => {\n          setNoticeModal(false)\n        }}\n      />\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={validateModal}\n        message='Please add at least one entry/info first before rejecting this claim.'\n        okLabel='Okay'\n        onOk={() => {\n          setValidateModal(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n\n  const { index, canPrintNotice = true, item: _item, readOnly, reasonDropdown, handleOnClickPrintNotice } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [notice, setNotice] = React.useState({})\n\n  const [error, setError] = React.useState({ released_to: '', date_released: '' })\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setNotice({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: null,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    setNotice(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    setNotice(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    setNotice(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    setNotice(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const validate = item => {\n    const { showCell, show, ...others } = item\n    const { error } = NoticeValidator(others)\n    console.log(error)\n    if (error) {\n      setError(error)\n      return false\n    } else {\n      return true\n    }\n  }\n\n  return (\n    <div className={`${classes.container} ${!notice.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n      <div className={classes.cell}>\n        <Typography variant='h6' className={classes.label}>\n          {index === 'add' ? 'Add Item' : 'Update Item'}\n        </Typography>\n\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-created-${index}`}\n              label='Date Created'\n              value={notice.date_created}\n              onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n              readOnly={notice.complied}\n              error={error.date_created}\n              maxDate={new Date()}  \n            />\n          </div>\n\n          <div className={classes['input']}>\n            <TextField\n              id={`prepared-by-${index}`}\n              label='Prepared By'\n              value={notice.prepared_by || ''}\n              onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.prepared_by}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-encoded-${index}`}\n              label='Date Encoded'\n              value={notice.date_encoded}\n              onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n              readOnly\n              error={error.date_encoded}\n              maxDate={new Date()}  \n            />\n          </div>\n\n          <div className={classes['input']}>\n            <TextField\n              id={`released-to-${index}`}\n              label='Released To'\n              required\n              value={notice.released_to || ''}\n              onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.released_to}\n            />\n          </div>\n        </div>\n\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-released-${index}`}\n              label='Date Released'\n              required\n              value={notice.date_released}\n              onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n              readOnly={notice.complied}\n              error={error.date_released}\n              maxDate={new Date()}  \n            />\n          </div>\n\n          <div className={classes['input']}>\n            <DatePicker\n              id={`return-date-${index}`}\n              label='Return Date'\n              value={notice.date_return}\n              onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n              readOnly={notice.complied}\n              disabled={index === 'add'}\n              error={error.date_return}\n              maxDate={new Date()}  \n            />\n          </div>\n\n          <div className={classes['input']} style={{ width: '50%' }}>\n            <TextField\n              constainerStyle={{ width: 'unset', flex: 1 }}\n              multiline\n              rows={3}\n              id='remarks'\n              label='Remarks'\n              value={notice.remarks || ''}\n              onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.remarks}\n            />\n          </div>\n        </div>\n\n        <div className={classes['reasons-container']}>\n          <div className={classes.header}>\n            <Typography variant='subtitle2' className={classes.label}>\n              Reasons\n            </Typography>\n            <Typography variant='subtitle2' className={classes.label}>\n              Other Details\n            </Typography>\n\n            <div className={classes.delete} />\n          </div>\n\n          {/* Reasons */}\n          {(notice.reasons || []).map((reason, _index) => (\n            <div className={classes.reasons} key={`reason-${_index}`}>\n              <div className={classes['input']}>\n                <DropDown\n                  // noMargin\n                  items={reasonDropdown}\n                  id={`reason-text-${_index}`}\n                  value={reason.value || ''}\n                  onChange={event => handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })}\n                  readOnly={notice.complied}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  noMargin\n                  id={`reason-other-details-${_index}`}\n                  value={reason.other_details || ''}\n                  onChange={event =>\n                    handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                  }\n                  readOnly={notice.complied}\n                />\n              </div>\n\n              <div className={classes.delete}>\n                {!notice.complied && (\n                  <IconButton id='delete-reason' onClick={() => handleOnClickRemoveReason(_index)}>\n                    <DeleteIcon fontSize='small' />\n                  </IconButton>\n                )}\n              </div>\n            </div>\n          ))}\n\n          {error.reasons && <span className={classes.error}>{error.reasons}</span>}\n\n          {!notice.complied && (\n            <Typography\n              variant='body2'\n              className={`${classes['add-link']} ${(notice.reasons || []).length ? '' : classes['empty-reasons']}`}\n              onClick={() => handleOnClickAddReason()}\n            >\n              + Add a reason\n            </Typography>\n          )}\n\n          {/* Reasons */}\n        </div>\n\n        <div className={classes.footer}>\n          {!readOnly && (\n            <React.Fragment>\n              <Button\n                variant='contained'\n                color='primary'\n                id='cancel'\n                className='button-negative'\n                onClick={() => handleOnClickCancel(index)}\n              >\n                Cancel\n              </Button>\n              {index === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='save-for-now'\n                    className='button-positive'\n                    onClick={() => validate(notice) && handleOnClickSave({ index, item: notice })}\n                    disabled={notice.complied}\n                  >\n                    Save\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='save-for-now'\n                    className='button-positive'\n                    onClick={() =>\n                      validate(notice) && handleOnClickUpdate({ index, item: { ...notice, complied: false } })\n                    }\n                    disabled={notice.complied}\n                  >\n                    Update\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      validate(notice) && handleOnClickUpdate({ index, item: { ...notice, complied: true } })\n                    }\n                    disabled={notice.complied}\n                  >\n                    Complied\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && canPrintNotice && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnClickPrintNotice(index)}\n                  >\n                    {notice.complied ? 'View Notice' : 'Print Notice'}\n                  </Button>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../../../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onViewClaimNotice, onChangeDoctor = () => {}, onReject, onChangeFacility } = props\n  // Variables\n  const { claim_number } = props.match.params\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, onChangePro, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const [type, setType] = React.useState('')\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        contract_plan_type: data.contract_plan_type,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        date_to: data.date.to,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type)\n      })\n\n      setBatchNumber(data.batch_number)\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else if (type === 'InPatient') dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.date_to\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString()\n          // doctor_id: '',\n          // doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility}\n                    field={'id'}\n                    loading={fetching['facility_id']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility}\n                    field={'name'}\n                    loading={fetching['facility_name']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.startOf('day').toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-official-receipt-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.official_receipt_number\n                  }}\n                >\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n              {/* <UploadedList /> */}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doViewClaimNotice={onViewClaimNotice}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            onReject={() => setShowReimbursementModal(true)}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{ ...claim, claimNumber: claim_number }}\n            data={claim.reimbursement_info_analysts}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            permission={permissions.reimbursement_info}\n            service={ClaimsAdjudicationServices}\n            // canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: false })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setDropDown,\n  initDropDowns,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  // addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [isMember, setIsMember] = React.useState(true)\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [memberFetchMessage, setMemberFetchMessage] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n  const [grandTotal, setGrandTotal] = React.useState(0)\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n  const REPORT_RETURN_ADVICE = 5\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  // #region Fetching\n\n  // #region Claims\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      // const diagnosis = data.diagnosis || []\n      // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  // #endregion\n\n  // #region Facility Doctors PRO Anaesthesiologist\n\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    console.log({ value, field, search })\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // #endregion\n\n  // #region Integrations\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchMessage(typeof data.message === 'string' ? data.message : data.message.error.message || '')\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getMemberContractUrl = args => CustomerCareServices.getMemberContractUrl(args)\n\n  const getClientContractUrl = args => CustomerCareServices.getClientContractUrl(args)\n\n  // #endregion\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  // #region Messages\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  // #endregion\n\n  // #region Reports\n\n  const getReport = (mode, params) => {\n    LoadingService.loading(true)\n    // ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n    // const hasAmount = value.data.data.has_amount_concerns\n    let pdf = {}\n    switch (mode) {\n      case REPORT_ANALYSIS_SHEET:\n        pdf = {\n          name: 'Analysis Sheet',\n          fileName: 'analysis_sheet',\n          service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n        }\n        break\n\n      case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n        pdf = {\n          name: 'Reports',\n          fileName: 'reports',\n          service: ApiService.getReports({ claimNo: claimNumber }),\n          onClose: () => props.history.push('/')\n        }\n        break\n\n      case REPORT_LETTER_OF_ADVICE:\n        pdf = {\n          name: 'Letter of Advice',\n          fileName: 'letter_of_advice',\n          service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n        }\n        break\n\n      case NOTICE:\n        pdf = {\n          name: 'Claims Notice',\n          fileName: 'claim_notice',\n          service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n          onClose: () => props.history.push('/')\n        }\n        break\n\n      case REPORT_RETURN_ADVICE:\n        pdf = {\n          name: 'Return Advice',\n          fileName: 'return_advice',\n          service: ApiService.getReturnAdvice({ claim_number: claimNumber, sub_document_id: params.document_id })\n        }\n    }\n\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n    // })\n  }\n\n  // #endregion\n\n  // #region Lookups\n\n  const getReason = () => {\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason_charging']))\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ApiService.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getSubTypes = () => {\n    dispatch(initDropDowns(['sub_types']))\n    dispatch(initDropDowns(['sub_sub_types']))\n    Promise.all([\n      ApiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      }),\n      ApiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      })\n    ]).then(values => {\n      const [subValues, subSubValues] = values\n      const subTypes = subValues.data.data.results\n      const subSubTypes = subSubValues.data.data.results\n      const sub_types =\n        subTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      const sub_sub_types =\n        subSubTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      dispatch(setDropDown({ sub_types }))\n      dispatch(setDropDown({ sub_sub_types }))\n    })\n  }\n\n  // #endregion\n\n  // #endregion\n\n  // #region Events\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          if (claim_type === 'Reimbursement') getReport(NOTICE)\n          else getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewReturnAdvice = ({ document_id }) => {\n    getReport(REPORT_RETURN_ADVICE, { document_id })\n  }\n\n  const handleOnSave = async ({ goBack = 'dashboard' }) => {\n    // goBack\n    // dashboard\n    // list\n    // stay\n\n    LoadingService.loading(true)\n    const res = await ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      switch (goBack) {\n        case 'dashboard':\n          props.history.push(`/`)\n          return true\n        case 'stay':\n        default:\n          return true\n      }\n    })\n    return res\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number = '', batch_number = '', pr_officer = '' } = props.match.params\n      props.history.push(`/payment-request/${pr_officer}/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  // #endregion\n\n  // #region  Validation\n  const doValidateAll = ({ validator, field = undefined, type = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, type })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, type }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let validate\n    if (type) validate = validator(Object.keys(field || claim))({ ...data }, true)\n    else validate = validator(Object.keys(field || claim))({ ...data })\n\n    const { error = {} } = validate\n\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n  // #endregion\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          fetching={fetching}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          memberFetchMessage={memberFetchMessage}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          // #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          getMemberContractUrl={getMemberContractUrl}\n          getClientContractUrl={getClientContractUrl}\n          getReason={getReason}\n          getRooms={getRooms}\n          getSubTypes={getSubTypes}\n          //  #endregion\n          // #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewReturnAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          // #region SERVICES\n          userManagementService={UserManagementServices}\n          // #endregion\n          // #region VALIDATION\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          // #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    description: Joi.string()\n      .trim()\n      .label('Description')\n      .required(),\n    code: Joi.string()\n      .trim()\n      .label('Code')\n      .required(),\n    tooth_number: Joi.string()\n      .label('Tooth Number')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    flag: Joi.boolean().default(false)\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    name: Joi.string()\n      .trim()\n      .label('Item Name')\n      .required(),\n    item_code: Joi.string()\n      .trim()\n      .label('Item Code')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Doctor Name')\n      .required(),\n    specialization: Joi.string()\n      .trim()\n      .label('Specialization')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setBatches({ data: openBatches, count: openBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Typography\n                      id={`encode-batch-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnEncode(item.batch_number)}\n                    >\n                      Encode\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='open-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const myBatches = batchResponse.data.data.results\n        const myBatchCount = batchCountResponse.data.data\n        setBatches({ data: myBatches, count: myBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='my-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const completedBatches = batchResponse.data.data.results\n        const completedBatchCount = batchCountResponse.data.data\n        setBatches({ data: completedBatches, count: completedBatchCount })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='completed-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true,\n  processor_id = ''\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n                id={`${row.claim_number}-${index}`}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${SafeAccess(row, 'member.first_name', '')} ${SafeAccess(row, 'member.last_name', '')}`}\n                </TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${processor_id}/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      }).finally(() => LoadingService.loading(false))\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    }).catch(() => LoadingService.loading(false))\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button disabled={claims.length <= 0} variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    disabled={claims.length <= 0}\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0].toString() || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestion, setSuggestion } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              console.log(error)\n              LoadingService.loading(false)\n            }\n          }\n\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestion({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestion({\n          field: 'contract',\n          suggestion: [{ from, to }]\n          // suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {!isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <TextField\n                  id='approval-code'\n                  label='Approval Code'\n                  required={reqApprovalCode}\n                  value={claim.approval_code}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                  onBlur={handleLoaDetails}\n                  error={errors.approval_code}\n                />\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='loa-number'\n                  label='LOA No.'\n                  required={reqLoaNumber}\n                  value={claim.loa_number}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                  error={errors.loa_number}\n                />\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                />\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextField\n                  id='company-account-number'\n                  label='Customer Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.input}>\n                <TextField\n                  id='company-name'\n                  label='Company Name'\n                  required\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='member-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickMemberLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <TextField\n                id='member-last-name'\n                required\n                label='Member Last Name'\n                value={claim.member_last_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                error={errors.member_last_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-first-name'\n                required\n                label='Member First Name'\n                value={claim.member_first_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_first_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_first_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-middle-name'\n                label='Member Middle Name'\n                required={!!isDental}\n                value={claim.member_middle_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_middle_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_middle_name}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-number'\n                label='Client Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_number'\n                    })\n                  )\n                }\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-name'\n                label='Client Account Name'\n                value={claim.client_account_name}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_name'\n                    })\n                  )\n                }\n                error={errors.client_account_name}\n              />\n            </div>\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        {/* <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography> */}\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    givenDiag = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis *\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={errors.given_diagnosis}\n          />\n        </div>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            ICD10 Description *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.code}>\n            ICD10 Code *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.primary}>\n            Primary\n          </Typography>\n        </div>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={onChangeDescription}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              field={'code'}\n              loading={fetching['code']}\n              onChange={onChangeCode}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestion,\n  setSuggestion,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsEncodingServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                givenDiag={item.given_diagnosis}\n                description={item.description}\n                suggestions={suggestions}\n                code={item.code}\n                primary={item.primary}\n                onChangeGivenDiag={(value, search) =>\n                  handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                }\n                onChangeDescription={(value, search) =>\n                  handleOnChangeIcd10({ field: 'description', index, value, search })\n                }\n                onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n                fetching={fetching[index]}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions}\n              field={'description'}\n              onChange={(value, search) => onChangeDescription(value, search)}\n              loading={fetching['description']}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions}\n            field={'code'}\n            onChange={(value, search) => onChangeCode(value, search)}\n            loading={fetching['code']}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\n// import IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value = {}, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setProcedure({\n          details: { description: value.description, code: value.code, gross_amount: value.rate }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          const field = by === 'code' ? 'cpt_code' : 'procedure_name'\n          ClaimsServices.lookups({\n            on: 'cpt',\n            params: {\n              search_field: field,\n              search_value: value,\n              claim_type: claim_type.split(' ').join(''),\n              facility_id: claim.facility_id || '',\n              room_type: claim.room_type || '',\n              availment_date: claim_type === 'InPatient' ? claim.date_from : claim.date_to,\n              limit: 10,\n              sort_field: 'cpt_code',\n              sort_direction: 'asc'\n            }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data.map(d => ({ code: d.cpt_code, description: d.procedure_name, rate: d.rate }))\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions}\n              field={'name'}\n              onChange={onChangeName}\n              loading={fetching.name}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            field={'item_code'}\n            onChange={onChangeCode}\n            loading={fetching.item_code}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis, errors, doValidate } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n              onChangeCode={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n              fetching={fetching}\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    doctor_id: false,\n    doctor_name: false,\n    description: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Specialization\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization || ''}\n                suggestions={pfSuggestions.specialization}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestion, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestion({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestion } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestion } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  // Variables\n  const { isAdd = false, setShowReimbursementModal } = props\n  // Events\n  const { handleOnSave, doValidate, setOpenDialog, openDialog, onOk, hasClaimChanges } = props\n\n  const [saveAlert, setSaveAlert] = React.useState({ mode: 'list', show: false, next: () => {} })\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const doSaveMiddleware = ({ mode, next = () => {} }) => {\n    if (!hasClaimChanges()) {\n      setSaveAlert(state => ({ ...state, mode, next, show: true }))\n    } else {\n      next()\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='return'\n          className='button-positive'\n          onClick={() =>\n            !doValidateMiddleware() && doSaveMiddleware({ mode: 'stay', next: () => setShowReimbursementModal(true) })\n          }\n          disabled={isAdd}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave('list')}\n      >\n        Save for now\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-and-close'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave('dashboard')}\n      >\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={saveAlert.show}\n        message='Encoded claim details are not yet saved. Do you want to save the claim details first?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setSaveAlert(state => ({ ...state, show: false }))}\n        onOk={async () => {\n          setSaveAlert(state => ({ ...state, show: false }))\n          const res = await handleOnSave(saveAlert.mode)\n          if (res) saveAlert.next()\n        }}\n      />\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .greater(0)\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangePro,\n    apiService,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    initDefault\n  } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Date Admitted'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Date Discharged'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n\n  const { doValidateAll, onSave, doValidateProcedure, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ToothNumber from '../ToothNumber/ToothNumber'\n// import DentalProcedureFormValidator from './DentalProcedureFormValidator'\n// import DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\n// import IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = dentalProcedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value = {}, field, search }) => {\n    if (search) {\n      dispatch(setDentalProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setDentalProcedure({\n          details: { description: value.description, code: value.code, gross_amount: value.rate }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          const field = by === 'code' ? 'cpt_code' : 'procedure_name'\n          ClaimsServices.lookups({\n            on: 'cpt',\n            params: {\n              search_field: field,\n              search_value: value,\n              claim_type: claim_type.split(' ').join(''),\n              facility_id: claim.facility_id || '',\n              room_type: claim.room_type || '',\n              availment_date: claim_type === 'InPatient' ? claim.date_from : claim.date_to,\n              limit: 10,\n              sort_field: 'cpt_code',\n              sort_direction: 'asc'\n            }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data.map(d => ({ code: d.cpt_code, description: d.procedure_name, rate: d.rate }))\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    dentalProcedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={dentalProcedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={dentalProcedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={dentalProcedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={dentalProcedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={dentalProcedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={dentalProcedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={dentalProcedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {dentalProcedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {dentalProcedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const { doValidateAll, onSave, doValidateDentalProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm\n                    errors={errors.procedure}\n                    doValidate={doValidateDentalProcedure}\n                    showPhilhealthField={false}\n                  />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, flag: true })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>APE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>ECU Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packages: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packages: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  // Used initial for Dental, added here to bypass validation\n  flag: Joi.boolean().default(false),\n\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const {\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    initDefault\n  } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault({ doctor: false })\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              // reqApprovalCode\n              // reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    onChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    onChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n\n  const { claim, getClaimDetails } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              isCM\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React, { Suspense } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Services\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport BaseUrlFetcher from 'Services/BaseUrlFetcher'\n\n// Components\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport DescriptionIcon from '@material-ui/icons/Description'\n\n// Styles\nimport classes from './UploadedList.module.scss'\n\nconst getUrl = () => BaseUrlFetcher.getClaimsBaseUrl()\n// const UPLOADS = 'uploads/test'\n// const mock_data = [\n//   { fileName: 'Sample Contract', fileType: 'PDF', data: `${URL}/${UPLOADS}/Sample Contract.pdf` },\n//   { fileName: 'PDF', fileType: 'PDF', data: `${URL}/${UPLOADS}/pdf.pdf` },\n//   { fileName: 'PNG', fileType: 'PNG', data: `${URL}/${UPLOADS}/png.png` },\n//   { fileName: 'JPG', fileType: 'JPG', data: `${URL}/${UPLOADS}/jpg.jpg` },\n//   { fileName: 'DOC', fileType: 'DOC', data: `${URL}/${UPLOADS}/doc.doc` },\n//   { fileName: 'DOCX', fileType: 'DOCX', data: `${URL}/${UPLOADS}/docx.docx` },\n//   { fileName: 'XLSX', fileType: 'XLSX', data: `${URL}/${UPLOADS}/xlsx.xlsx` },\n//   { fileName: 'MP4', fileType: 'MP4', data: `${URL}/${UPLOADS}/mp4.mp4` }\n// ]\n\nexport default function UploadedList (props) {\n  const { onItemClick = () => {}, field = {}, isAdd = false } = props\n  const [uploads, setUploads] = React.useState([])\n\n  React.useEffect(() => {\n    const { index, value } = field\n    if (!isAdd) {\n      ClaimsServices.getUploads({ where: { [index]: value } }).then(res => {\n        const { data } = res.data\n        const _data = data.map(i => ({\n          fileName: i.file_name,\n          fileType: i.file_type,\n          data: getUrl() + `/uploads/${i.path}`\n          // data: `${URL}/uploads/${i.path}?token=${localStorage.getItem('token') || ''}`\n        }))\n        setUploads(_data)\n      })\n    }\n  }, [])\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Supporting Documents\n        </Typography>\n      </div>\n      <div className={classes['table']}>\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>File Name</TableCell>\n              <TableCell id='sc-due-date'>File Type</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {uploads.length ? uploads.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.fileName}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.fileType}</TableCell>\n                <TableCell align='center' id={`view-work-${index}`}>\n                  <IconButton\n                    id={`print${index}`}\n                    size='small'\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={() =>\n                      onItemClick({\n                        title: item.fileName,\n                        fileName: item.fileName,\n                        fileType: item.fileType.toLowerCase(),\n                        data: item.data\n                      })\n                    }\n                  >\n                    <DescriptionIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            )) : (\n              <TableRow>\n                <TableCell className={classes.handling} colSpan={3}>\n                No files found\n                </TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// https://github.com/plangrid/react-file-viewer\nimport ReactFileViewer from 'react-file-viewer'\n\nimport { fromUrl } from 'Services/Download'\n\n// Styles\nimport classes from './FileViewer.module.scss'\n\nexport default function FileViewer (props) {\n  // Variables\n  const { show = false, title = '', fileName = '', fileType = '', url = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose = () => {} } = props\n  // Local Variables\n\n  const handleDownload = () => {\n    fromUrl({ fileName: fileName, content: url, extension: fileType })\n  }\n\n  return (\n    <Dialog\n      className={classes.root}\n      fullWidth\n      maxWidth='lg'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle className={classes['header-container']} disableTypography>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleDownload}>\n            <CloudDownloadIcon />\n          </IconButton>\n\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <ReactFileViewer\n          fileName={fileName}\n          fileType={fileType}\n          filePath={url}\n          errorComponent={props => <Typography> Unsupported File Type</Typography>}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from '../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\nimport FileViewer from 'SharedComponents/FileViewer/FileViewer'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport lodash from 'lodash'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nlet prevClaim = null\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  //  Variables\n  const { _claimNumber } = props.match.params\n  const { claim, initDefault, fetching, isAdd } = props\n  // Events\n  const {\n    onChangeFacility,\n    getClaimDetails,\n    onChangeDoctor,\n    onChangePro,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    doViewClaimNotice = () => {}\n  } = props\n  // Services\n  const { apiService } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  const [viewFile, setViewFile] = React.useState({\n    show: false,\n    title: 'File Preview',\n    fileName: '',\n    fileType: '',\n    data: ''\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(props.isAdd ? 'InPatient' : undefined),\n        ..._lineItemFields\n      }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields({ ...initial_values }))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0] ? data[0].rooms : []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          claim_remarks: data.claim_remarks\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        prevClaim = _claim\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(data.reimbursement_details.type)\n        })\n      })\n    } else initDefault({ doctor: false })\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  React.useEffect(() => {\n    if (!type) return\n    switch (type) {\n      case 'InPatient':\n        initDefault({ doctor: false })\n        break\n      default:\n        initDefault()\n    }\n\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  const hasClaimChanges = () => {\n    return lodash.isEqual(prevClaim, claim)\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else if (type === 'InPatient') dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.date_to\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString()\n          // doctor_id: '',\n          // doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'id'}\n                    loading={fetching['doctor_id']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'full_name'}\n                    loading={fetching['doctor_name']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(date)\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={date => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.department}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro}\n                    field={'employee_id'}\n                    disabled={disableControls}\n                    loading={fetching['pro_id']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro}\n                    field={'name'}\n                    loading={fetching['pro_name']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n              <UploadedList\n                field={{\n                  index: 'tags.properties.claim_number',\n                  value: props.match.params ? props.match.params._claimNumber : ''\n                }}\n                isAdd={props.isAdd}\n                onItemClick={data => setViewFile(state => ({ ...state, ...data, show: true }))}\n              />\n              <FileViewer\n                url={viewFile.data}\n                show={viewFile.show}\n                title={viewFile.title}\n                fileName={viewFile.fileName}\n                fileType={viewFile.fileType}\n                onClose={() => setViewFile(state => ({ ...state, show: false }))}\n              />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            isAdd={isAdd}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n            hasClaimChanges={hasClaimChanges}\n          />\n          <ReimbursementInfo\n            claim={{ ...claim, claimNumber: _claimNumber, batch_number: batchNumber }}\n            data={claim.reimbursement_info}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            doViewClaimNotice={doViewClaimNotice}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description, given_diagnosis: d.given_diagnosis }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description || i.given_diagnosis) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Libraries\nimport moment from 'moment'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemFormValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeFormValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureFormValidator'\nimport DentalProcedureValidator from './Components/DentalProcedureForm/DentalProcedureFormValidator'\nimport DentalProcedureDiagnosisValidator from './Components/DentalProcedureForm/DiagnosisValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from './Components/BaseDetails/SoftValidator'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  setProcedure,\n  setDentalProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  // addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro,\n  setDropDown\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService, isAdd = false } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const error = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  // Line Item Form Store\n  const _dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const _procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const _hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const _professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(resetError())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        // const { diagnosis = [] } = data\n        // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n        callback(data)\n      })\n  }\n\n  //* need to refector if to add addt'l default\n  //* this only support facility\n  const initDefault = args => {\n    const { facility = true, doctor = true } = args || {}\n    apiService.getBatch({ batch_number: props.match.params._batchNumber }).then(res => {\n      const { data } = res.data\n      if (facility) {\n        dispatch(setClaimFacility({ facility_id: data.facility.id, facility_name: data.facility.name }))\n      }\n      if (doctor) {\n        dispatch(setClaimDoctor({ doctor_id: data.doctor.id, doctor_name: data.doctor.name }))\n      }\n\n      apiService\n        .lookups({\n          on: 'medical-partner',\n          params: { query: data.facility.id, by: 'id' }\n        })\n        .then(response => {\n          const [f] = response.data.data\n          const rooms = (f.rooms || []).map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate || 0\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n    })\n    Promise.all([\n      apiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      }),\n      apiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      })\n    ]).then(values => {\n      const [subValues, subSubValues] = values\n      const subTypes = subValues.data.data.results\n      const subSubTypes = subSubValues.data.data.results\n      const sub_types =\n        subTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      const sub_sub_types =\n        subSubTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      dispatch(setDropDown({ sub_types }))\n      dispatch(setDropDown({ sub_sub_types }))\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Return Advice\n  const handleOnViewReturnAdvice = ({ document_id }) => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Return Advice',\n      fileName: 'return_advice',\n      service: apiService.getReturnAdvice({ claim_number: _claimNumber, sub_document_id: document_id })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, flag = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, flag })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (_procedure.show || _dentalProcedure.show) {\n      const error = flag\n        ? doValidateDentalProcedure({ data: _dentalProcedure.details, index: _dentalProcedure.index, flag })\n        : doValidateProcedure({ data: _procedure.details, index: _procedure.index })\n      if (Object.keys(error).length > 0) {\n        procedure = { ...error }\n        if (flag) {\n          dispatch(\n            setDentalProcedure({\n              show: true,\n              mode: 'add',\n              index: _dentalProcedure.index,\n              details: _dentalProcedure.details\n            })\n          )\n        } else {\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'add',\n              index: _procedure.index,\n              details: _procedure.details\n            })\n          )\n        }\n      }\n    } else if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = flag\n          ? doValidateDentalProcedure({ data: value, index, flag })\n          : doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          const params = { show: true, mode: 'edit', index, details: value }\n          flag ? dispatch(setDentalProcedure(params)) : dispatch(setProcedure(params))\n          break\n        }\n      }\n    }\n\n    if (_hospitalItem.show) {\n      const error = doValidateHospitalItem({ data: _hospitalItem.details, index: _hospitalItem.index, flag })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { ...error }\n        const params = { show: true, mode: 'add', index: _hospitalItem.index, details: _hospitalItem.details }\n        dispatch(setHospitalItem(params))\n      }\n    } else if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    if (_professionalFee.show) {\n      const error = doValidateProfessionalFee({ data: _professionalFee.details, index: _professionalFee.index, flag })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { ...error }\n        const params = { show: true, mode: 'add', index: _professionalFee.index, details: _professionalFee.details }\n        dispatch(setProfessionalFee(params))\n      }\n    } else if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, flag }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let _fields = {}\n    if (field) _fields = { ...field, flag }\n    else _fields = { ...claim, flag }\n    const { error = {} } = validator(Object.keys(_fields))({ ...data, flag })\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateDentalProcedure = ({ data, index }) => {\n    const { error } = DentalProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid,\n      tooth_number: data.tooth_number\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = DentalProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      description: data.description,\n      code: data.code ? `${data.code}` : '',\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, show: true, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      name: data.name,\n      item_code: data.item_code,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name,\n      specialization: data.specialization,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const handleOnSave = async ({ lineItemFields, allowedFields, override = {}, goBack = 'list' }) => {\n    // goBack\n    // dashboard\n    // list\n    // stay\n\n    const { _batchNumber, _claimNumber } = props.match.params\n    const claimFields = Object.keys(allowedFields)\n\n    if (claimFields.includes('approval_code') && claimFields.includes('loa_number')) {\n      const proceed = await SoftValidatorService({\n        fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n      })\n      if (!proceed) return false\n    }\n\n    let data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n    data = { ...data, ...override }\n\n    if (!data.date_to) data.date_to = moment().toISOString()\n\n    let callback = null\n\n    if (isAdd) {\n      callback = apiService.addClaim({ batch_number: _batchNumber, data })\n    } else {\n      callback = apiService.updateClaim({ batch_number: _batchNumber, claim_number: _claimNumber, data })\n    }\n\n    LoadingService.loading(true)\n\n    const res = await callback.then(res => {\n      LoadingService.loading(false)\n      switch (goBack) {\n        case 'dashboard':\n          props.history.push(`/`)\n          return true\n        case 'list':\n          props.history.push(`/batches/${_batchNumber}`)\n          return true\n        case 'stay':\n        default:\n          return true\n      }\n    })\n\n    return res\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          isAdd={isAdd}\n          claim={claim}\n          fetching={fetching}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onSave={handleOnSave}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewReturnAdvice}\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateDentalProcedure={doValidateDentalProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          initDefault={initDefault}\n        />\n      )}\n      <SoftValidatorAlertComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    setFetching(true)\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/assigned/${item.id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      setBatches(p => ({\n                        ...p,\n                        filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } }\n                      }))\n                      handleOnSearch({\n                        filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } },\n                        page: 1\n                      })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n            <TableRow key={index}>\n              {selectStatus ? (\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    checked={row.checked}\n                    color='default'\n                    onClick={event => handleItemSelect({ index, batch })}\n                  />\n                </TableCell>\n              ) : null}\n              <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n              <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell align='center' id={`total-rcs-${index}`}>\n                {row.total_rcs}\n              </TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='fa-claim-no'>Claim No.</TableCell>\n                <TableCell id='fa-due-date'>Due Date</TableCell>\n                <TableCell id='fa-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.open.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Typography\n                      id={`analyze-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnAnalyze(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='for-adjudication'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='mc-claim-no'>Claim No.</TableCell>\n                <TableCell id='mc-due-date'>Due Date</TableCell>\n                <TableCell id='mc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.my.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='my-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   handleClickSubmitted(event, claim)\n  // }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='sc-claim-no'>Claim No.</TableCell>\n                <TableCell id='sc-due-date'>Due Date</TableCell>\n                <TableCell id='sc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.submitted.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      id={`print${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={e => handleClickSubmitted(e, item)}\n                    >\n                      <Print />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <IconButton\n                  id={`print${index}`}\n                  aria-label='more'\n                  aria-controls='long-menu'\n                  aria-haspopup='true'\n                  onClick={e => handleClickSubmitted(e, item)}\n                >\n                  <Print />\n                </IconButton>\n              </TableCell>\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   props.history.push(`/claims/${claim_number}/analyze`)\n  // }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='re-claim-no'>Claim No.</TableCell>\n                <TableCell id='re-due-date'>Due Date</TableCell>\n                <TableCell id='re-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.escalated.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`re-update-claim-${index}`}>\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                  </Typography>\n                </Link>\n                {/* } */}\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='for-payment-request'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetching}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='override-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from '../instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  {\n    id: 'pending-batch-no',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Batch No.',\n    align: 'left',\n    data: data => data.batch_number\n  },\n  {\n    id: 'pending-claim-type',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Claim Type',\n    align: 'center',\n    data: data => data.type\n  },\n  {\n    id: 'pending-total-rcs',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Total No. of RCS',\n    align: 'center',\n    data: data => `${data.claims.length} / ${data.total_rcs}`\n  },\n  {\n    id: 'pending-billed-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Billed Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.total_amount)\n  },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.discount_amount)\n  },\n  {\n    id: 'pending-discount-rate',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Discount Rate',\n    align: 'right',\n    data: data => `${data.discount_rate}%`\n  },\n  {\n    id: 'pending-pr-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'PR Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.pr_amount)\n  }\n]\nconst submittedHeadCells = pendingHeadCells.map(c => ({ ...c, id: c.id.replace('pending-') }))\n// TODO remove if new is same as this\n// const submittedHeadCells = [\n//   { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n//   { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n//   { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n//   { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n//   {\n//     id: 'submitted-discount-amount',\n//     numeric: true,\n//     center: false,\n//     disablePadding: false,\n//     label: 'Hospital Discount Amount'\n//   }\n// ]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [prRemarks, setPrRemarks] = React.useState('')\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0),\n      discount_amount: i.claims.reduce((acc, claim) => acc + claim.discount_amount, 0),\n      discount_rate: SafeAccess(i.claims[0], 'discount_rate', 0),\n      pr_amount: i.claims.reduce((acc, claim) => acc + claim.pr_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n    const discount_amount = data.reduce((acc, batch) => acc + batch.discount_amount, 0)\n    const pr_amount = data.reduce((acc, batch) => acc + batch.pr_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          discount_amount,\n          pr_amount\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    console.log(_batch)\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    let discount_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        discount_amount += b.discount_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount, discount_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n\n      async function submitBatches () {\n        for (let select of selected) {\n          const claims = select.claims.map(claim => {\n            return claim.claim_number\n          })\n\n          let submitPromise = new Promise(function (resolve, reject) {\n            PaymentRequestServices.submit({ bundle_number, data: { claims, remarks: prRemarks } })\n              .then(({ data: res }) => {\n                const data = batches.pending.data.filter((i, index) => {\n                  let should_include = true\n                  for (let s of selected) {\n                    if (s.index === index) {\n                      should_include = false\n                      break\n                    }\n                  }\n                  if (should_include) return i\n                })\n                resetBatches({ type: 'pending', data, bundle })\n                resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n                setPrRemarks('')\n                PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n                  const { data } = res\n                  setBundle(data)\n                  getBatches({ bundle_number, bundle: data })\n                })\n                LoadingService.loading(false)\n                resolve()\n              })\n              .catch(err => {\n                reject(err)\n              })\n          })\n          await submitPromise\n        }\n      }\n      submitBatches()\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount:\n                <span id='total-approved-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.approved_amount\n                )}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.discount_amount\n                )}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => (\n                  <TableRow\n                    onClick={event => handleClick({ index, batches: 'pending' })}\n                    role='checkbox'\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    <TableCell padding='checkbox'>\n                      <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                    </TableCell>\n                    {pendingHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                  // return (\n                  //   <TableRow\n                  //     onClick={event => handleClick({ index, batches: 'pending' })}\n                  //     role='checkbox'\n                  //     tabIndex={-1}\n                  //     key={`${batch.batch_number}-${index}`}\n                  //   >\n                  //     <TableCell padding='checkbox'>\n                  //       <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                  //     </TableCell>\n                  //     <TableCell align='left' id={`pending-batch-number-${index}`}>\n                  //       {batch.batch_number}\n                  //     </TableCell>\n                  //     <TableCell align='center' id={`pending-claim-type-${index}`}>\n                  //       {batch.type}\n                  //     </TableCell>\n                  //     <TableCell\n                  //       align='center'\n                  //       id={`pending-total-rcs-${index}`}\n                  //     >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                  //     <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.total_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.discount_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-rate-${index}`}>\n                  //       {`${batch.discount_rate}%`}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-pr-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.pr_amount)}\n                  //     </TableCell>\n                  //   </TableRow>\n                  // ) */}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField\n                  multiline\n                  rows={8}\n                  id='pr-remarks'\n                  value={prRemarks}\n                  readOnly={false}\n                  onChange={event => setPrRemarks(event.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className={classes.buttonWrapper}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={handleOnCancel}\n                id='cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={handleOnSubmit}\n                id='submit'\n              >\n                Submit\n              </Button>\n            </div>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => (\n                  <TableRow\n                    // hover\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    {submittedHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })} */}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField multiline rows={8} id='saved-pr-remarks' value={bundle.remarks} disabled />\n              </div>\n            </div>\n            <div />\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submitted PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    let params = { category: 'submitted' }\n\n    if (supervisor || isManager) params = { ...params, pr_officer: SafeAccess(props.match, 'params.pr_officer', '') }\n    // * Submitted Payment request\n\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n\n  const processor_id = supervisor || isManager\n    ? SafeAccess(props.match, 'params.pr_officer', '') : SafeAccess(bundle, 'approved_by_uid', '')\n\n  return (\n    <div className={classes.root}>\n      {bundle && processor_id ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.submitted.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${processor_id}/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${processor_id}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'any' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()])\n      .then(values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'PR Processor'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest({ limit: 10, sort: '' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='pr-processor'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='PR Processor'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>PR Processor</TableCell>\n                <TableCell>Total Bundle/SOA</TableCell>\n                <TableCell>Total Batches</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                  <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                  <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-requests/${item.id}/list`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from '../instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${processor_id}/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage supervisor {...props} />}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { Link } from 'react-router-dom'\n\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n// import ViewList from '../ViewList/ViewList'\nimport ViewList2 from '../../ViewList2/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography\n                  id='mc-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('for-review')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`review-claim-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList2\n        id='for-review'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        // fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow id={`for-review-claim-${index}`} key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography id={`review-claim-${index}`} variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n\n      {/* <ViewList\n        id='for-review'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      /> */}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  id='reassign-cancel'\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  id='reassign-submit'\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    console.log(params)\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({ claim_number, data }) {\n    console.log(data)\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        const { field, value, match } = args\n        setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } }, page: 1 }))\n      }, 500)\n    )\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              {headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: date.toISOString(),\n                      match: headCell.match\n                    })\n                  }\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  // className={`${classes.search}`}\n                  id={`column-filter-${headCell.id}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: event.target.value,\n                      match: headCell.match\n                    })\n                  }\n                />\n              )}\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    rejected: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED', addtl_cond: { 'latest.__type': { $ne: 'Reimbursement' } } })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, rejected: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.rejected['count'], id: 'rejected-claim-count' }}\n        sizes={sizes}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.rejected.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='rejected-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const getSubordinates = params => {\n    setFetching(true)\n    setFetchingViewList(true)\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n      .finally(value => {\n        setFetching(false)\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={sizes}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {verifiers.data &&\n                verifiers.data.map((item, index) => (\n                  <TableRow key={`verifier-list-item-${index}`}>\n                    <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                    <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                    <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                    <TableCell id={`cv-view-user-${index}`}>\n                      <Typography\n                        id={`view-user-${index}`}\n                        variant='caption'\n                        className={`text-link underline`}\n                        onClick={handleOnReviewUser(item.id)}\n                      >\n                        View\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-verifier'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter,\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={sizes}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reconciled-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const claims = claimResponse.data.data.results\n        const claimsCount = claimCountResponse.data.data\n        setClaims({ data: claims, count: claimsCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetching(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={sizes}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`fa-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`fa-view-claim-${index}`}>\n                    <Link to={`/claims/for-approval/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-for-approval'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={sizes}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`mc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  {/* added cond on client to support old data */}\n                  <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                  <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                  <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`mc-view-claim-${index}`}>\n                    <Link to={`/claims/review/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='medical-collectibles'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date_due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'member.account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const { results } = claimResponse.data.data\n        setClaims(prevState => ({\n          ...prevState,\n          data: results,\n          count: claimCountResponse.data.data\n        }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    // const _params = {\n    //   category: viewList.category,\n    //   limit: viewList.limit,\n    //   page: viewList.page,\n    //   search: viewList.search,\n    //   sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    // }\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({ category: viewList.category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={sizes}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`rmc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={`rmc-claim-list-${index}`}>\n                  <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                  <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`rmc-view-claim-${index}`}>\n                    <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reimbursement-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 100000000,\n          other_types: 100000000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'], validate: false },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/payment-request-report' exact render={() => <PaymentRequestReport />} />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from '../../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (args) {\n    const { bundle_number, batch_number, params } = args\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n\n    ApiService.getBatch({ bundle_number, batch_number }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n    })\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getClaimsAndCount({ batch_number, bundle_number })\n    })\n  }\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, bundle_number }) => {\n    ApiService.getApprovedClaims({\n      bundle_number,\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaim(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n        LoadingService.loading(false)\n      })\n  }\n\n  React.useEffect(() => {\n    const { batch_number, bundle_number } = props.match.params\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const processor_id = SafeAccess(props.match, 'params.pr_officer', '')\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} inputChange={handleSearchChange} />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n            processor_id={processor_id}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${processor_id}/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// timefield lib\nimport TimeField from 'react-advanced-timefield'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/Claims/ClaimsMaintainerServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Constants\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' },\n  handling_timi_kpi: { on: 'handling-time-kpi', field: 'handling-time-kpi' }\n}\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {\n    description: { value: '' },\n    status: { value: '' },\n    section: { value: '' },\n    claim_type: { value: '' },\n    handling_time_formatted: { value: '' }\n  }\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false,\n  claim_type: '',\n  section: '',\n  handling_time: ''\n}\n\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nlet kpi_columns = [\n  { name: 'Section', sortField: 'section', id: 'section', match: 'any' },\n  { name: 'Claim Type', sortField: 'claim_type', id: 'description', match: 'any' },\n  { name: 'Handling Time', sortField: 'handling_time_formatted', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [section, setSection] = React.useState([])\n\n  const [index, setindex] = React.useState()\n\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n    ClaimsServices.lookupsAll({ category: 'section' }).then(res => {\n      const { data = [] } = res.data\n      const _data = data.map(c => ({ text: c.name, value: c.name }))\n      setSection(_data)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: { ...data, field: lookup.field } }).then(\n      ({ data: res }) => {\n        const { results, count } = res.data\n        setData(state => ({ ...state, data: results, count }))\n        setFetching(false)\n      }\n    )\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return lookup && lookup.field && args === lookup.field ? 'active' : ''\n  }\n\n  const onClickHospitalItem = () => {\n    setFetching(true)\n    setLookup(lookups.hospital_items)\n    setData({\n      ...data,\n      header: 'Hospital Item List',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n  const onClickNotCoveredReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_covered)\n    setData({\n      ...data,\n      header: 'Not Covered Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickChargingReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_charging)\n    setData({\n      ...data,\n      header: 'Reasons For Charging Member',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSource = () => {\n    setFetching(true)\n    setLookup(lookups.claims_source)\n    setData({\n      ...data,\n      header: 'Claim Source',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickReturnReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_return)\n    setData({\n      ...data,\n      header: 'Reimbursement Return Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickRejectReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_reject)\n    setData({\n      ...data,\n      header: 'Reimbursement Reject Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickHandlingTimeKpi = () => {\n    setFetching(true)\n    setLookup(lookups.handling_timi_kpi)\n    setData({\n      ...data,\n      count: 0,\n      header: 'Handling Time KPI',\n      filter: {\n        ...data.filter,\n        section: { value: '' },\n        claim_type: { value: '' },\n        handling_time: { value: '' },\n        status: { value: '' }\n      }\n    })\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const validate = () => {\n    if (lookup.field !== 'handling-time-kpi') return !item.description.trim()\n    else return !item.handling_time || item.handling_time === '00:00:00' || !item.section || !item.claim_type\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    let _search = {}\n\n    if (!(lookup.field === 'handling-time-kpi')) {\n      _search = {\n        description: item.description,\n        code: item.code\n      }\n    } else {\n      if (showAddItem.mode === 'add') {\n        _search = {\n          section: item.section,\n          claim_type: item.claim_type\n        }\n      } else {\n        const { section, claim_type, status, handling_time } = data.data[index]\n\n        switch (true) {\n          case section === item.section && claim_type === item.claim_type && status !== item.status:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.status\n            }\n            break\n          case section === item.section && claim_type === item.claim_type && handling_time !== item.handling_time:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.handling_time\n            }\n            break\n          default:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type\n            }\n        }\n      }\n    }\n\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: _search,\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (validate()) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Description details is empty. Please input the description details.',\n        onOk: handleOnOk,\n        okLabel: 'Okay',\n        cancelLabel: ''\n      }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state => ({\n            ...state,\n            open: true,\n            message: 'Description details already exists. Please change the description details encoded.',\n            onOk: handleOnOk,\n            okLabel: 'Okay',\n            cancelLabel: ''\n          }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(\n              res => {\n                setItem(initialItem)\n                setLookup(false)\n                setLookup(initialLookup)\n                setShowAddItem({ ...showAddItem, show: false })\n                LoadingService.loading(false)\n              }\n            )\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({\n              on: lookup.on,\n              data: item,\n              code: item.code,\n              params: { field: lookup.field }\n            }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({ ...showAddItem, show: false })\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = (field = '', item) => {\n    if (field === 'kpi') {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        section: item.section,\n        claim_type: item.claim_type,\n        handling_time: item.handling_time,\n        code: item._id,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    } else {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        description: item.description,\n        code: item.code,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    }\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description || item.section || item.claim_type || item.handling_time) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Are you sure you want to discard your changes?',\n        onOk: () => {\n          setShowAlert(alert => ({ ...alert, open: false }))\n          setShowAddItem(show => ({ ...show, show: false }))\n          setItem(item => ({ ...item, description: '', section: '', claim_type: '', handling_time: '' }))\n        },\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }))\n    } else {\n      setShowAddItem({ ...showAddItem, show: false })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='hospital-item-list'\n          className={`button-positive ${classes[isActive('hospital-item-list')]}`}\n          onClick={onClickHospitalItem}\n        >\n          Hospital Item List\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='not-covered-reason'\n          className={`button-positive ${classes[isActive('covered-reason')]}`}\n          onClick={onClickNotCoveredReason}\n        >\n          Not Covered Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reason-for-charging'\n          className={`button-positive ${classes[isActive('charging-reason')]}`}\n          onClick={onClickChargingReason}\n        >\n          Reason for Charging Member\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('claims-source')]}`}\n          onClick={onClickClaimSource}\n        >\n          Claim Source\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('handling-time-kpi')]}`}\n          onClick={onClickHandlingTimeKpi}\n        >\n          Handling Time KPI\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-return-reason'\n          className={`button-positive ${classes[isActive('return-reason')]}`}\n          onClick={onClickReturnReason}\n        >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-reject-reason'\n          className={`button-positive ${classes[isActive('reject-reason')]}`}\n          onClick={onClickRejectReason}\n        >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-type')]}`}\n          onClick={onClickClaimSubType}\n        >\n          Claim Sub-Type\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`}\n          onClick={onClickClaimSubSubType}\n        >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button\n            disabled={showAddItem.show}\n            variant='contained'\n            color='primary'\n            id='add-item'\n            className='button-positive'\n            onClick={() => setShowAddItem({ ...showAddItem, show: true, mode: 'add' })}\n          >\n            + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && (\n        <div className={classes['add-item-root']}>\n          {!(lookup.field === 'handling-time-kpi') ? (\n            <div className={classes.wrapper}>\n              <span className={classes['header-text']}>Description:</span>\n              <div className={classes['text-wrapper']}>\n                <TextField\n                  id={'description-field'}\n                  value={item.description}\n                  onChange={event => {\n                    setItem({ ...item, description: event.target.value })\n                  }}\n                />\n              </div>\n              <div className={classes['radio-buttons']}>\n                <div className={classes.activate}>\n                  Active:\n                  <Radio\n                    color='primary'\n                    id={'activate'}\n                    checked={item.active}\n                    onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                  />\n                </div>\n                <div className={classes.deactivate}>\n                  Deactivate:\n                  <Radio\n                    color='primary'\n                    id={'deactivate'}\n                    checked={item.deactivate}\n                    onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                  />\n                </div>\n              </div>\n              <div className={classes['button-wrapper']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className={classes.wrapper}>\n                <span className={classes['header-text']}>Section:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='section'\n                    items={section}\n                    value={item.section || ''}\n                    onChange={event => setItem(state => ({ ...state, section: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Claim Type:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='claim-type'\n                    items={claim_types}\n                    value={item.claim_type || ''}\n                    onChange={event => setItem(state => ({ ...state, claim_type: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Handling Time:</span>\n                {/* Trial - feel free to change this time input */}\n                <div className={classes['text-wrapper']}>\n                  <TimeField\n                    id={'description-field'}\n                    value={item.handling_time}\n                    input={<TextField TextFieldStyle={{ padding: '3.5px' }} />}\n                    showSeconds\n                    onChange={(event, time) => setItem(state => ({ ...state, handling_time: time }))}\n                  />\n                </div>\n                <div className={classes['radio-buttons']}>\n                  <div className={classes.activate}>\n                    Active:\n                    <Radio\n                      color='primary'\n                      id={'activate'}\n                      checked={item.active}\n                      onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                    />\n                  </div>\n                  <div className={classes.deactivate}>\n                    Deactivate:\n                    <Radio\n                      color='primary'\n                      id={'deactivate'}\n                      checked={item.deactivate}\n                      onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className={classes['button-wrapper-kpi']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {!showAddItem.show && (\n        <div className={classes.table}>\n          <LoadingIndicator loading={fetching}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <React.Fragment>\n                  <TableRow>\n                    {!(lookup.field === 'handling-time-kpi')\n                      ? columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))\n                      : kpi_columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))}\n\n                    <TableCell key={'action'} id={`sort-action`} />\n                  </TableRow>\n                </React.Fragment>\n              }\n              body={\n                data &&\n                data.data.map((item, index) =>\n                  !(lookup.field === 'handling-time-kpi') ? (\n                    <TableRow key={index}>\n                      <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => handleOnEditItem('desc', item)}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <TableRow key={index}>\n                      <TableCell id={`item-section-${index}`}>{item.section}</TableCell>\n                      <TableCell id={`item-claim_type-${index}`}>{item.claim_type}</TableCell>\n                      <TableCell id={`item-handling_time-${index}`}>{item.handling_time_formatted}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => {\n                            handleOnEditItem('kpi', item)\n                            setindex(index)\n                          }}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )\n                )\n              }\n              count={data && data.count}\n              page={data && data.page}\n              limit={data && data.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnChange}\n            />\n          </LoadingIndicator>\n        </div>\n      )}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({ ...alert, open: false }))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport classes from './AutoCompletes.module.scss'\n\nimport AutoCompleteCurrent from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete2 from '../../Components/AutoComplete2/AutoComplete2'\n\nexport default function AutoCompletes (props) {\n  const { storage, errors, debounce, suggestion } = props\n  const { setErrors, onChange, setDebounce, setSuggestion } = props\n  const { service } = props\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    // if (value.trim().length < 3) return\n\n    setSuggestion(state => ({ ...state, facilities: [] }))\n    clearTimeout(debounce.facility)\n    setFetching(true)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, facilities: data }))\n            })\n            .finally(() => {\n              setFetching(false)\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // const handleOnChangeAutosuggest = ({ value, field, search }) => {\n  //   setSuggestion(state => ({ ...state, facilities: [] }))\n  //   onChange({ value: value, field })\n\n  //   if (isSuggestionClick) {\n  //     for (let i of suggestion.facilities) {\n  //       if (value === i.id || value === i.name) {\n  //         onChange({ value: i.id, field: 'facility_id' })\n  //         onChange({ value: i.name, field: 'facility_name' })\n  //         return i.rooms\n  //       }\n  //     }\n  //   } else {\n  //     const { 1: by } = field.split('_')\n  //     getFacilitySuggestions({ value, by })\n  //   }\n  // }\n\n  const handleOnChangeAutosuggest2 = ({ value, field, search }) => {\n    if (search) {\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n      onChange({ value, field })\n    } else {\n      const _value = value || {}\n      console.log('AutoSuggest selected value', _value)\n      onChange({ value: _value.id, field: 'facility_id' })\n      onChange({ value: _value.name, field: 'facility_name' })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        {/* <div className={classes.input}>\n          <AutoCompleteCurrent\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            label={'Medical Partner ID using Current'}\n            suggestions={suggestion.facilities}\n            value={storage.facility_id}\n          />\n        </div> */}\n        <div className={classes.input}>\n          <AutoComplete2\n            onChange={(value, search) => handleOnChangeAutosuggest2({ field: 'facility_id', value, search })}\n            label={'Medical Partner ID using AutoComplete2'}\n            suggestions={suggestion.facilities}\n            field={'id'}\n            loading={fetching}\n            value={storage.facility_id}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={value}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date From')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport DatePicker from '../../Components/DatePicker2/DatePicker2'\nimport DatePickerCurrent from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport DateValidator from '../../Validations/DateValidator'\n\nimport classes from './DatePickers.module.scss'\n\nexport default function DatePickers (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const dateValidate = () => {\n    const { error } = DateValidator({ date_from: storage.date_from })\n    setErrors(error || {})\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <DatePickerCurrent\n            label='Current'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <DatePicker\n            label='Beta'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <Typography>{DateFormatter(storage.date_from)}</Typography>\n        </div>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={dateValidate}\n            id='save'\n          >\n            Validate\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport BaseUrlFetcher from 'Services/BaseUrlFetcher'\nimport { fromBlob } from 'Services/Download'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst getMozillaPdfViewerUrl = () =>\n  BaseUrlFetcher.getClaimsBaseUrl() + '/thirdparty/mozilla-pdfjs-2.4.456-es5/web/viewer.html'\n// const mozillaPdfViewer = 'https://mozilla.github.io/pdf.js/web/viewer.html'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfView2Component = props => {\n  // Variables\n  const { name, fileName, initialPageNumber = 1, initialScale, enabled } = props\n  // Service\n  const { service } = props\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [searchText, setSearchText] = React.useState('')\n\n  React.useEffect(() => {\n    setFile()\n    setPageNumber(initialPageNumber)\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const download = () => {\n    fromBlob({ fileName: fileName, content: [file], extension: 'pdf' })\n  }\n\n  const print = async () => {\n    // TODO Further test and dev\n    try {\n      console.log('PrintDialog start')\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n      console.log('PrintDialog request sent')\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n        console.log('PrintDialog response received')\n      })\n      console.log('PrintDialog finished')\n    } catch (error) {\n      console.log('PrintDialog error', error)\n      console.log('Going to PrintJs fallback')\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n        console.log('PrintJs finished')\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  // const handleOnSearch = event => {\n  //   const search = event.target.value\n  //   clearTimeout(debounce)\n  //   setDebounce(\n  //     setTimeout(() => {\n  //       console.log('heelo')\n  //       setSearchText(search)\n  //     }, 500)\n  //   )\n  // }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography id={'pdf-preview-title'} className={classes['file-name']} align='left'>\n          {name}\n        </Typography>\n        <Tooltip title='Search text'>\n          <span>\n            <div className={classes.search}>\n              <SearchTextComponent\n                onChange={event => {\n                  console.log('changed')\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      console.log('debounce')\n                      setSearchText(search)\n                    }, 500)\n                  )\n                }}\n              />\n            </div>\n          </span>\n        </Tooltip>\n\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-previous'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber > 1 ? pageNumber - 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                console.log(elem)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-next'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber < numPages ? pageNumber + 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton id={'pdf-preview-zoom-in'} onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.viewport}>\n        <div className={classes.pdf}>\n          <Document\n            file={file}\n            onLoadSuccess={({ numPages }) => {\n              setNumPages(numPages)\n            }}\n          >\n            {[...Array(numPages)]\n              .map((value, index) => index + 1)\n              .map((value, index) => (\n                <div className={classes.page} id={`pdf-page-${value}`} key={`pdf-page-${value}`}>\n                  <Page\n                    pageNumber={value}\n                    scale={scale}\n                    renderMode={'canvas'}\n                    customTextRenderer={textItem =>\n                      textItem.str\n                        .split(searchText)\n                        .reduce(\n                          (strArray, currentValue, currentIndex) =>\n                            currentIndex === 0\n                              ? [...strArray, currentValue]\n                              : [...strArray, <mark key={currentIndex}>{searchText}</mark>, currentValue],\n                          []\n                        )\n                    }\n                  />\n                </div>\n              ))}\n          </Document>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst MozillaPdf = props => {\n  // Variables\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data], { type: 'application/pdf' })\n        const blobUrl = URL.createObjectURL(_blob)\n        const _url = encodeURIComponent(blobUrl)\n\n        // const pdfArray = convertDataURIToBinary('data:application/pdf;base64, ' + _blob)\n\n        // const PdfViewer = document.getElementById('pdfViewer')\n        // if (PdfViewer) {\n        //   PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n        //   setUrl(_url)\n        // }\n\n        blobToBase64(_blob).then(data => {\n          const pdfAsDataUri = 'data:application/pdf;base64,' + data\n          const pdfArray = convertDataURIToBinary(pdfAsDataUri)\n          setUrl(pdfAsDataUri)\n          const PdfViewer = document.getElementById('pdf-viewer')\n          if (PdfViewer) {\n            PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n            setUrl(_url)\n          }\n        })\n      })\n    }\n  }, [service])\n\n  const convertDataURIToBinary = blob => {\n    const BASE64_MARKER = ';base64,'\n    var base64Index = blob.indexOf(BASE64_MARKER) + BASE64_MARKER.length\n    var base64 = blob.substring(base64Index)\n    var raw = window.atob(base64)\n    var rawLength = raw.length\n    var array = new Uint8Array(new ArrayBuffer(rawLength))\n\n    for (var i = 0; i < rawLength; i++) {\n      array[i] = raw.charCodeAt(i)\n    }\n    return array\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {url && (\n        <iframe\n          id={'pdf-viewer'}\n          className={classes.iframe}\n          src={getMozillaPdfViewerUrl()}\n          width='100%'\n          height='100%'\n        />\n      )}\n    </div>\n  )\n}\n\nconst MozillaPdfURL = props => {\n  // Variables\n  const { name } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState(null)\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _url = encodeURIComponent(response)\n        setUrl(_url)\n      })\n    }\n  }, [service])\n\n  return (\n    <div className={classes.root}>\n      {url && (\n        <iframe className={classes.iframe} src={getMozillaPdfViewerUrl() + `?file=${url}`} width='100%' height='100%' />\n      )}\n    </div>\n  )\n}\n\nconst PdfViewer2Modal = () => {\n  dispatch = useDispatch()\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n  }\n\n  return (\n    <Dialog id={'pdf-preview'} fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton id={'pdf-preview-close'} edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            {name || 'Preview Sheet'}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        {PdfView2Component({\n          name,\n          fileName,\n          initialPageNumber,\n          initialScale,\n          service,\n          enabled\n        })}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Service, PdfViewer2Modal, PdfView2Component, MozillaPdf, MozillaPdfURL }\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nimport Service from 'Services/Api/Claims/CustomerCareServices'\nimport { MozillaPdf, MozillaPdfURL } from '../../Components/PdfViewer2/PdfViewer2'\n\nimport classes from './PdfViewers.module.scss'\n\nexport default function PdfViewer (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const [mct, setMct] = React.useState('5e494813213ab37f5f550b44')\n\n  return (\n    <div className={classes.root}>\n      BASE64 * File limited\n      <MozillaPdf name={'test'} service={Service.getMemberContract({ mct_id: mct })} enabled />\n      URL\n      <MozillaPdfURL name={'test'} service={Service.getMemberContractUrl({ mct_id: mct })} enabled />\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Utility\n\nimport classes from './ErrorProducers.module.scss'\n\nconst FaultyButton = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nconst FaultyOperation = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nexport default function ErrorProducers (props) {\n  const { storage, errors, notDefined } = props\n  const { setErrors, onChange } = props\n\n  const [boom, setBoom] = React.useState(false)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() => setBoom(true)}\n            id='save'\n          >\n            Throw Error\n          </Button>\n        </div>\n\n        {boom && (\n          <div className={classes.input}>\n            <FaultyButton />\n          </div>\n        )}\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={`${classes.save} button-positive`}\n          onClick={() => console.log(notDefined.test)}\n          id='save'\n        >\n          Call Undefined\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport AutoCompletes from './Sections/AutoCompletes/AutoCompletes'\nimport DatePickers from './Sections/DatePickers/DatePickers'\nimport PdfViewers from './Sections/PdfViewers/PdfViewers'\nimport ErrorProducers from './Sections/ErrorProducers/ErrorProducers'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n// import { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nimport classes from './Test.module.scss'\n\n// https://github.com/mui-org/material-ui-pickers/issues/1388\n// const WrappedTextField = props => <ClaimsInputBase {...props} />\n\nexport default function Test (props) {\n  const [storage, setStorage] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    date_from: new Date()\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facilities: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [errors, setErrors] = React.useState({ date_from: '' })\n\n  const [toggle, setToggle] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService('Test')\n    // BreadcrumbsService.setSelectedItems(['test'])\n  }, [])\n\n  const onChange = ({ value, field }) => {\n    setStorage(state => ({ ...state, [field]: value }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sidebar}>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('auto-complete')}\n        >\n          Auto-Complete\n        </Button>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('date-picker')}\n        >\n          Date-Pickers\n        </Button>\n        <Button variant='contained' color='primary' className='button-positive' onClick={() => setToggle('pdf-viewer')}>\n          Pdf-Viewer\n        </Button>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('error-producer')}\n        >\n          Error-Producer\n        </Button>\n      </div>\n      <div className={classes.content}>\n        <div className={classes.title}>\n          <Typography variant='h4'>{toggle.toUpperCase()}</Typography>\n        </div>\n        <div className={classes.wrapper}>\n          {toggle === 'auto-complete' && (\n            <AutoCompletes\n              service={ClaimsAdjudicationServices}\n              errors={errors}\n              storage={storage}\n              debounce={debounce}\n              suggestion={suggestion}\n              setErrors={setErrors}\n              onChange={onChange}\n              setStorage={setStorage}\n              setDebounce={setDebounce}\n              setSuggestion={setSuggestion}\n            />\n          )}\n\n          {toggle === 'date-picker' && (\n            <DatePickers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'pdf-viewer' && (\n            <PdfViewers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'error-producer' && <ErrorProducers errors={errors} storage={storage} setErrors={setErrors} />}\n        </div>\n      </div>\n    </div>\n  )\n}\n","const roles = {\n  BATCH_ENCODER: ['BATCH_ENCODER'],\n  BATCH_ENCODER_SUPERVISOR: ['BATCH_ENCODER_SUPERVISOR'],\n  CLAIMS_DETAILS_ENCODER: ['CLAIMS_ENCODER', 'CLAIMS_DETAILS_ENCODER'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: ['CLAIMS_DETAILS_ENCODER_SUPERVISOR'],\n  CLAIMS_ANALYST: ['CLAIMS_ANALYST', 'CLAIMS_VERIFIER'],\n  PR_OFFICER: ['PR_OFFICER'],\n  PR_OFFICER_SUPERVISOR: ['PR_OFFICER_SUPERVISOR'],\n  MEDICAL_CONSULTANT: ['MEDICAL_CONSULTANT'],\n  CLAIMS_RECON: ['CLAIMS_RECON'],\n  CLAIMS_VERIFIER_SUPERVISOR: ['CLAIMS_VERIFIER_SUPERVISOR', 'CLAIMS_SUPERVISOR'],\n  CLAIMS_MANAGER: ['CLAIMS_MANAGER']\n}\n\nconst mapRoles = role => {\n  for (const r in roles) {\n    if (roles[r].includes(role)) return r\n  }\n}\n\nexport { mapRoles, roles }\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\nimport { dataValue } from 'Pages/Protected/Partner/AffiliationFormEncoder/Pages/HospitalAffiliation/components/Utilities/dataHeader'\n\nconst initialState = {\n  doctor: [],\n  client: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'REMOVE_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { index, field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].filter((i, _index) => index !== _index)\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  error: errorReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\n// const initialState = {\n//   pro: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   facility: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   doctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   anesthesiologist: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   pfDoctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   specialization: {\n//     description: [],\n//     data: []\n//   },\n//   hospitalItem: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   icd10: [],\n//   cpt: {\n//     description: [],\n//     code: [],\n//     data: []\n//   },\n//   contract: {\n//     years: []\n//   }\n// }\n\n// const icd10 = {\n//   given_diagnosis: [],\n//   description: [],\n//   code: [],\n//   data: []\n// }\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    // case 'SET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     let { field, suggestion } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: { ...initialState[field], ...suggestion }\n    //     }\n    //   })()\n\n    // case 'SET_SUGGESTION_ON_ARRAY':\n    //   return (() => {\n    //     let { field, index, by, suggestion, data } = action.payload\n\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           i = { ...i, [by]: suggestion, data }\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// import StackTrace from 'stacktrace-js'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\n// TEST Page\nimport Test from './Components/Test/Test'\n\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Constants\nimport { mapRoles } from './Constant/ClaimUsers'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\n// window.onerror = function (msg, file, line, col, error) {\n//   StackTrace.fromError(error).then(err => {\n//     StackTrace.report(err, `${process.env.REACT_APP_SERVER_API}/c/c/error`, {\n//       type: 'window.onerror',\n//       url: window.location.href,\n//       userId: window.userId,\n//       agent: window.navigator.userAgent,\n//       date: new Date(),\n//       msg: msg\n//     })\n//   })\n// }\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(mapRoles(role))\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = props => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' render={() => BatchEncoderRoutes(props)} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          <Route path='/test' exact component={Test} />\n\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic({ userRole })}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => BatchEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' render={() => ClaimsAnalystRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' render={() => PaymentRequestRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER_SUPERVISOR' && (\n            <Route path='/' render={() => PaymentRequestSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' render={() => MedicalConsultantRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' render={() => ClaimsReconRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsVerifierSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' render={() => ClaimsManagerRoutes({ userRole })} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n"],"sourceRoot":""}