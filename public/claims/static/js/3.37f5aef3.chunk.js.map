{"version":3,"sources":["Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete2/AutoComplete2.module.scss","SharedComponents/DatePicker2/DatePicker2.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.module.scss","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.module.scss","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.module.scss","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.module.scss","SharedComponents/FileViewer/FileViewer.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.module.scss","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.module.scss","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.module.scss","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.module.scss","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.module.scss","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.module.scss","Pages/Protected/Claims/Components/Test/Test.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/Table/Table.js","SharedComponents/LoadingIndicator/LoadingIndicator.js","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Utilities/TextFormatter.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/Claims/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete2/AutoComplete2.js","SharedComponents/DatePicker2/DatePicker2.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Alert/Alert.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Services/ExtractValidationResult.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Services/Api/FacilitiesServices.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Services/Api/Claims/ClaimsEncodingServices.js","Utilities/PromiseUtil.js","Services/ArrayToCSV.js","Services/Download.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Services/Api/Claims/ClaimsServices.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","SharedComponents/AutoComplete/AutoComplete.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.js","Services/Api/Claims/CustomerCareServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Services/Api/Claims/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsReconServices.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/types.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/Chart/Chart.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.js","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.js","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.js","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.js","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.js","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.js","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.js","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.js","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.js","Pages/Protected/Claims/Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport.js","Pages/Protected/Claims/Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport.js","Pages/Protected/Claims/Routes/Reports.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/Claims/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/Claims/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/NoticeValidator.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Services/BaseUrlFetcher.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/UploadedList/UploadedList.js","SharedComponents/FileViewer/FileViewer.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/Claims/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/Claims/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Services/Api/Claims/MedicalConsultantServices.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/Claims/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Services/Api/Claims/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Components/Test/Components/AutoComplete2/AutoComplete2.js","Pages/Protected/Claims/Components/Test/Sections/AutoCompletes/AutoCompletes.js","Pages/Protected/Claims/Components/Test/Components/DatePicker2/DatePicker2.js","Pages/Protected/Claims/Components/Test/Validations/DateValidator.js","Pages/Protected/Claims/Components/Test/Sections/DatePickers/DatePickers.js","Pages/Protected/Claims/Components/Test/Components/PdfViewer2/PdfViewer2.js","Pages/Protected/Claims/Components/Test/Sections/PdfViewers/PdfViewers.js","Pages/Protected/Claims/Components/Test/Sections/ErrorProducers/ErrorProducers.js","Pages/Protected/Claims/Components/Test/Test.js","Pages/Protected/Claims/Constant/ClaimUsers.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js"],"names":["module","exports","DashboardTileComponent","children","count","header","title","viewList","actionHeader","onFilterChange","isFilterShown","id","React","useState","filter","setFilter","Paper","className","classes","root","wrapper","Typography","variant","color","value","FormControl","Select","onChange","event","target","MenuItem","input","selected","action","list","Children","map","child","displayName","useStyles1","makeStyles","theme","flexShrink","marginLeft","spacing","TablePaginationActions","props","useTheme","page","rowsPerPage","onChangePage","IconButton","onClick","disabled","aria-label","direction","Math","ceil","max","CustomTable","TableContainerProps","TableProps","head","body","footer","pagination","limit","rowsPerPageOptions","footerComponent","Fragment","TableContainer","component","table","TableHead","TableFooter","TableCell","float","TablePagination","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","LoadingIndicator","type","loading","style","CircularProgress","animation","size","overlay","CustomizedDialogs","columns","searchTextPlaceHolder","setViewList","onViewListChange","fetching","handleOnClose","p","show","search","debounce","setDebounce","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","open","PaperProps","height","display","DialogTitle","disableTypography","button","DialogContent","dividers","content","SearchTextComponent","e","clearTimeout","setTimeout","placeholder","overflow","position","stickyHeader","headCell","key","sortField","TableSortLabel","active","orderBy","order","sort","name","args","field","match","handleColumnFiltering","align","colSpan","length","data","CurrencyFormatter","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","_value","moment","isValid","CreatedBundlesTile","services","sizes","sm","items","setItems","initialValue","setFetching","fetchingViewList","setFetchingViewList","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","values","batchResponse","batchCountResponse","results","finally","state","Button","LoadingService","createBundle","res","history","push","prevState","item","index","bundle_number","date_due","facility_name","to","params","_params","_data","row","SubmittedBundlesTile","TaskTrayComponent","showTitle","toArray","cloneElement","_sizes","xs","lg","Grid","container","itemSize","s","TicketListComponent","viewAllLink","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","AutoComplete2","label","required","readOnly","other","error","suggestions","focus","setFocus","_error","setError","trim","handleOnChange","onBlur","currentTarget","contains","relatedTarget","Autocomplete","options","noOptionsText","renderInput","TextField","ref","InputProps","disableUnderline","endAdornment","getOptionLabel","option","onInputChange","onFocus","inputValue","freeSolo","autoSelect","openOnFocus","autoHighlight","DatePicker","noMargin","tabindex","disableComponents","InputRef","useRef","selectedDate","setSelectedDate","handleOnFocus","current","handleDateChange","date","utils","MomentUtils","allowKeyboardControl","helperText","clearable","TextFieldCurrency","currency","customInput","InputBase","isNumericString","displayType","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","autoComplete","TextFieldNumber","formattedValue","BundleDetails","details","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","facility_id","doctor_id","doctor_name","getMedicalPartnerSuggestions","by","lookups","query","getDoctorPartnerSuggestions","i","full_name","handleOnChangeAutosuggest","handleOnChangeMedicalPartner","handleOnChangeDoctorPartner","term","earliest_term","isNaN","newDate","date_received","add","md","total_rcs","toISOString","due_date","soa_number","total_soa_amt","reassign_notes","multiline","rows","useStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","width","marginTop","paper","marginBottom","minWidth","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","margin","padding","top","EnhancedTable","headCells","handleRequestSort","handleSelectAllClick","checkAll","sorter","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","selectStatus","Checkbox","center","numeric","disablePadding","sortDirection","Alert","defaultFunction","message","cancelLabel","okLabel","onOk","onCancel","aria-describedby","DialogActions","autoFocus","BatchList","batches","onDelete","openDialog","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","batch","setBatch","includes","claim","toLowerCase","parseFloat","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","Boolean","_index","handleClick","buttonWrapper","deleteMessage","getMessage","DropDown","addNew","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","startsWith","extract","_errors","path","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestion","resetSuggestion","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","setSelectedBatch","claim_types","ClaimTypes","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","claimSource","setClaimSource","setErrors","status","_results","description","catch","err","console","log","CustomTextField","doctor","BatchFormValidator","FacilitiesServices","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","defClaimSource","setDefClaimSource","getBundleDetails","getBundle","_status","received","due","soa","amount","facility","getBatches","getDefaultClaimSource","cancelBundle","handleOnSubmit","submitBundle","getDoctorSuggestions","suggestion","handleOnDeleteBatch","getFacilityById","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","join","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","onOpen","source","ClaimsEncodingServices","claim_number","responseType","Accept","sub_document_id","claimNo","info_id","PromiseUtil","executeInSequence","promises","callback","a","alert","chain","ArrayToCSV","fileName","extension","statics","mimeType","newLine","c_header","c_footer","_rows","joined","currentValue","blob","Blob","ipcRenderer","window","require","reader","FileReader","readAsDataURL","onloadend","base64data","result","pop","send","FileSaver","saveAs","fromBlob","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","RCSNum","Diagnosis","Procedure","downloadTemplate","columnTemplates","Object","keys","transform","dataRows","dataMapping","defaults","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","batchIndex","batchParam","claims","batchPromise","resolveBatch","rejectBatch","addClaim","addClaims","addBatches","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","memberName","nameParts","parseFullName","member_account_number","member_first_name","first","member_middle_name","middle","member_last_name","last","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","IP","OPP","OPC","__index__","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","doctor_full_name","NewBundleValidator","form","inputs","save","file","onComplete","onError","onload","workbook","XLSX","read","sheet","Sheets","SheetNames","sheet_to_json","raw","shift","_item","onerror","ex","readAsBinaryString","Progress","withStyles","borderRadius","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","click","icon","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","trimmedItems","setTrimmedItems","_items","find","handleOnChangeItems","startAt","endAt","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","pair","DataPairContainer","onClickAddNew","claim_sources","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","d","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsAdjudicationServices","client","others","SafeAccess","def","delimeter","obj","completeColumns","remarks","ClaimsUtilLedgerReport","dataColumns","hideReport","hideHeader","dateRange","refresh","from","Date","setClaims","dateRangeError","setDateRangeError","setColumns","btnDisabled","setBtnDisabled","handleOnPaginate","handleOnFilter","fetchLedger","ClaimsServices","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","disableFuture","submit","DateRangeValidator","col","c","fontSize","typo","maxHeight","claimIndex","colIndex","AutoComplete","square","hint","handleItemClick","username","total","ar_amount","signatories","CustomerCareServices","account_number","mct_id","token","localStorage","getItem","baseURL","CLAIMS_URL","process","replace","where","skip","offset","client_account_no","UserManagementServices","role_name","this","getUsers","class","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_name","doctors","setDoctors","partner_doctor_name","total_amount","grand_total","session","date_issued","concat","headCellsComplete","randomRange","random","Utilization","ClaimsAnalysis","fetchService","isMember","member","utilizationLoa","hideSearchBar","hideActionColumn","fromUtilReport","claimUtilizations","setHeadCells","setRows","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","member_account_no","info","member_id","icd_code","icd","category_code","IcdCptStorageServices","diagnosis_code","_utilizationLoa","_search","some","procedure_name","cpt_code","toString","itemFilter","handleSearchChange","exc","lodash","take","chunk","setPaginate","background","hover","role","tabIndex","cell","renderRows","getClaimResponse","analyzeRespone","analysis_results","filters","ClaimsReconServices","InPatient","OutPatientProcedure","OutPatientConsultation","MedicineAllowance","MedicalSupplies","ClinicManagement","mockData","months","getDefault","month","legend","hoverBorderWidth","hoverBorderColor","Array","inititalDate","clientColumns","memberDataColumns","id_row","label_left","label_right","name_row","bundle_row","date_row","bundles","total_approved_amount","total_tax_amount","initialDetails","total_pr_amount","discount_amount","PaymentRequestReport","medical_partner_id","medical_partner_name","searchValue","setSearchValue","setDetails","column","isSuggestionClick","getBundleSoaSuggestions","handlePagination","paymentRequestClaims","handleGenerateReport","approved_amount","tax_amount","static_header","hasOwnProperty","_columns","no","static_footer","staticHeaderFooter","handleOnChangeBundleSoa","paymentRequestReport","TextFieldStyle","member_name","handling","date_max","initialClaims","processed","total_received","total_processed","contract_plan","claim_status","user","geography","label2","suffix","other_name","subType","reportPages","transmittal","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","transmittalReport","_totam_amout","_ar_amount","total_due_from_member","contracts","PdfViewer2Service","service","getTransmittalReportPdf","utilizationLedger","treasuryTransmittalReport","reports","setReports","fetchReport","_reports","report","date_requested","check_date","minHeight","utilizationReport","client_id","reportType","setReportType","chartData","setChartData","totalAmount","setTotalAmount","ABL","MBL","limitType","graphFilter","setGraphFilter","account_no","setMember","setUtilizationLoa","setMemberFetchStatus","memberUtilizations","setMemberUtilizations","fetchTable","getMember","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","covered_months","_field","getMonth","covered","uniq","getCoveredMonths","utilizationClientTable","getMemberUtilizationLoa","response","getMemberUtilizations","RadioGroup","Radio","auto","getMembers","members","textAlign","mergeResultsbyMonth","r","parsedData","_merge","dynamic","uniqBy","j","filteredData","u","labels","datasets","formatChart","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","getUtilizations","prReports","loadingHimsData","fetchHIMSData","loadingHIMSData","availment_date","approved_date","posted_date","date_admitted","date_discharged","payment_due_date","handleOnColumnFilter","confinementReport","fetchRecords","reimbursementReport","grandTotal","reimbursementClaimReport","word","substring","hidden","claimsSummaryReport","geopgraphy","_category","lookupsQuery","year","productivityPerformaceReport","region","receivedTotal","processedTotal","productivityReport","received_total","processed_total","grand","returnedClaimsReport","setDateRange","handleOnClickFilter","_total","claim_amount","return_reason","performanceReport","contract_plan_type","average","work","agingPartialApprovedReport","rawData","setRawData","facility_region","total15Days","total1Week","total1Month","totalAll","agingPartialApprovedClaimsReport","fetchCSV","agingReturnedClaims","agingReturnClaimsReport","claimsBeyond3Months","date_of_service","agingReimbursement","reimbursement_count","reimbursement_percent","reimbursement_category","reimbursmentAgingReport","const_types","detailedClaimsReport","detailedPerformanceReport","detailedMonitoringReport","reportsItems","BATCH_ENCODER","BATCH_ENCODER_SUPERVISOR","CLAIMS_DETAILS_ENCODER","CLAIMS_DETAILS_ENCODER_SUPERVISOR","CLAIMS_ANALYST","PR_OFFICER","PR_OFFICER_SUPERVISOR","MEDICAL_CONSULTANT","CLAIMS_RECON","CLAIMS_VERIFIER_SUPERVISOR","CLAIMS_MANAGER","generateBreadCrumbs","userRole","breads","generateSideBar","generateRoutes","exact","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","first_name","last_name","comment","assign","ReassignValidator","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","retainSpace","autoWidth","showIcon","anchorEl","setAnchorEl","setMessage","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","setLoading","fetchData","translateRows","filterData","fetches","responses","colIdx","val","handleOnSort","handleColumnFilter","_row","entries","revertRow","ClientMemberModal","CustomerCareService","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","first_middle","given_name","middle_name","common","loa_no","proc","diagnosis_given_diagnosis","diagnosis_description","prof","diag","room","date_admitted_date","now","date_discharged_date","corp_guarantee","partner_id","rooms","localeCompare","sensitivity","desc","rate","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","recommendation","reimbursement_type","customer_account_number","company_name","client_name","medicine_category","tooth_number","tooth_numbers","date_issued_date","claim_remarks","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","showReimbursement","showApprovalCode","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","isCM","memberAccountNumber","setMemberAccountNumber","contractPlanTypeLoading","setContractPlanTypeLoading","memberModal","setMemberModal","clientModal","setClientModal","handleOnClickClientLookup","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMemberContractPlanType","handleSetMember","getClients","getClientrContractPlanType","handleSetClient","ICDTextFields","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","delete","Tooltip","GivenDiagnosisField","givenDiag","onChangeGivenDiag","given_diagnosis","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","getIcd10Suggestions","synonym","getICDSynonyms","handleOnConfirmDelete","create","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","prop","handleOnChangeCpt","getCptSuggestions","handleOnChangeDiagnosis","fieldArr","cpt","reason_charging","amount_due_from_client","reason_for_charging_client","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","ProcedureList","handleClickLineDiscrepancy","Set","expand","right","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","major","getSpecializationSuggestions","getDoctorSpecilizations","handleOnChangeSpecialization","professional_fee","ProfessionalFeeList","ClaimFooter","onReject","onViewAnalysisSheet","onViewLetterOfAdvice","onReassign","onEscalate","onApprove","isReimbursement","onRemove","onViewClaimNotice","onReturn","reimbursement_info","reimbursement_info_analyst","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","discrepancyModal","setDiscrepancyModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","hasNotCovered","setHasNotCovered","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersByRole","sortBy","notCovered","hasAmountNotCovered","handleOnShowApprovalMatrix","AuthorityMatrix","approve","other_types","selected_amount","goBack","doValidateMiddleware","left","return_advice","infos","date_released","date_return","rmLogicReturn","analysis_sheet","enabled","visible","letter_of_advice","escalate","handleOnApproval","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","Unit","rollover","eligible_availees","days_deployed","eligibility","empty","RB","EM","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","onQuery","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partners","setPartners","fetchPartner","fetchDoctors","onQueryColumn","collection","onQueryAll","location","handleOnClickAffiliated","schedule","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","initial","abr","lastName","firstName","middleName","format1","format2","NameFormatter","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","memberFetchMessage","getPartners","getDoctors","getMemberContractUrl","getClientContractUrl","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","contract_year_from","contract_year_to","official_receipt_number","getValidators","getValidators2","ClaimInPatient","onChangeFacility","onChangePro","_type","getClaimDetails","getReason","getSubTypes","doValidateAll","doValidateProcedure","doValidateHospitalItem","doValidateProfessionalFee","_allowedFields","_lineItemFields","getRooms","pro","claim_sub","sub_type","base","startOf","sub_types","sub_sub_types","constainerStyle","validator","MainValidator","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","_details","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","complied","date_complied","date_created","date_encoded","prepared_by","array","other_details","released_to","ReimbursementInfo","canPrintNotice","setShowModal","doReject","doViewClaimNotice","lookup","claimNumber","showAdd","setShowAdd","noticeModal","setNoticeModal","reasonDropdown","setReasonDropdown","insertNotice","addReimburesmentInfo","ff","updateNotice","updateReimburesmentInfo","handleOnItemSave","handleOnClickPrintNotice","document_id","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnClickSave","validateItems","scrollTo","scrollHeight","behavior","ItemForm","notice","setNotice","today","handleOnChangeReason","NoticeValidator","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","setType","setBatchNumber","allowedFields","setAllowedFields","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","reimbursement_info_analysts","endOf","wrap","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","hasPrimary","itemError","ClaimAnalysis","breadCrumbsList","isManager","icd10","setMemberFetchMessage","setClientFetchStatus","setGrandTotal","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","group","groupEnd","getProSuggestions","proUsersLookup","getAnaesthesiologistSuggestions","anaesthesiologist","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","getReturnAdvice","doValidateBase","rest","doValidateDiagnosis","DiagnosisListValidator","not","ProcedureValidator","diagnosisError","exists","ProcedureDiagnosisValidator","HospitalItemValidator","HospitalItemDiagnosisValidator","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","subValues","subSubValues","subTypes","subSubTypes","inquire","receiver_id","onInquire","pr_officer","employee_id","removeClaim","returnClaim","base_errors","createdBundles","specificClaim","utilization","contact","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","processor_id","setOrder","setOrderBy","claim_numbers","claimNumbers","rowsLength","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","batchNumber","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","reqApprovalCode","reqLoaNumber","ClaimsEncoding","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","handleOnChangeProcedureForm","diagnosi","handleOnUpdateProcedure","HospitalItemTextFields","HospitalItemTextField","onChangeName","handleOnChangeHospitalForm","handleOnUpdateHospitalItem","handleOnChangeProfessionalFeeForm","handleOnUpdateProfessionalFee","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","isAdd","hasClaimChanges","next","saveAlert","setSaveAlert","doSaveMiddleware","initDefault","lineItemFields","setlineItemFields","ToothNumber","DentalProcedureForm","dentalProcedure","doValidateDentalProcedure","BaseUrlFetcher","getClientBaseUrl","CLIENT_URL","getClaimsBaseUrl","PARTNER_URL","UploadedList","uploads","setUploads","getUploads","file_name","fileType","file_type","aria-controls","aria-haspopup","FileViewer","fromUrl","filePath","errorComponent","prevClaim","_claimNumber","viewFile","setViewFile","initial_values","isEqual","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","resetGrandTotal","ClaimPage","_dentalProcedure","_procedure","_hospitalItem","_professionalFee","pageTitle","breadCrumbs","getBatchDetails","DentalProcedureValidator","DentalProcedureDiagnosisValidator","override","claimFields","updateClaim","specificBatch","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","cesFooter","prev_user","getEncoderBatch","assigned","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","analyze","exclusions","ForPaymentRequestTile","mTitle","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","discount_rate","pr_amount","submittedHeadCells","PaymentRequestPage","setBundleNumber","prRemarks","setPrRemarks","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","utilization_amount","selectedBatches","_batch","getSelectedPending","cIndex","submitPromise","should_include","submitBatches","supervisor","paymentRequest","specificPaymentRequest","submittedPaymentRequest","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","PaymentRequestSupervisorServices","getPaymentRequestBundles","handleOnSearchColumn","MedicalConsultantServices","for_review","handleOnReview","review","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","rejected","getItemCount","addtl_cond","$ne","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getClaimsVerifierSupervisors","analystRes","supervisorRes","getApprovedClaims","overrideClaims","handling_time_formatted","initialItem","deactivate","handling_time","kpi_columns","MaintenancePage","setLookup","setItem","showAddItem","setShowAddItem","setSection","setindex","lookupsAll","ClaimsMaintainerServices","isActive","handleOnSaveItem","initialLookup","storeLookups","updateLookups","handleOnEditItem","handleOnCancelItem","activate","showSeconds","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","AutoCompletes","storage","handleOnChangeAutosuggest2","facilities","DatePickers","DateValidator","pdfjs","GlobalWorkerOptions","workerSrc","version","getMozillaPdfViewerUrl","MozillaPdf","forwardRef","Slide","setUrl","_blob","blobUrl","URL","createObjectURL","_url","encodeURIComponent","blobToBase64","pdfAsDataUri","pdfArray","convertDataURIToBinary","PdfViewer","document","getElementById","contentWindow","PDFViewerApplication","base64Index","base64","atob","rawLength","Uint8Array","ArrayBuffer","charCodeAt","iframe","src","MozillaPdfURL","mct","Service","FaultyButton","Error","ErrorProducers","notDefined","boom","setBoom","Test","setStorage","toggle","setToggle","sidebar","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","errorReducer","discrepancyReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","setUserRole","isLoading","setIsLoading","mapRoles","store","Store","render","SideBarService","BatchEncoderRoutes","removeItem","batchEncoderLogic","BatchEncoderSupervisorRoutes","ClaimsDetailsEncoderRoutes","BatchePage","ClaimsDetailsEncoderSupervisorRoutes","ClaimsAnalystRoutes","SubmittedPaymentRequestPage","PaymentRequestRoutes","SubmittedPaymentRequestList","PaymentRequestSupervisorRoutes","MedicalConsultantRoutes","ClaimsReconRoutes","ClaimsList","ClaimsVerifierSupervisorRoutes","ClaimsManagerRoutes"],"mappings":"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","file":"static/js/3.37f5aef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"LoadingIndicator_loading__3Nv8i\",\"overlay\":\"LoadingIndicator_overlay__Ci9Ox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__11iKj\",\"label\":\"AutoComplete2_label__3pWjU\",\"wrapper\":\"AutoComplete2_wrapper__126-b\",\"read-only-value\":\"AutoComplete2_read-only-value__CcS5n\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__3jz9Q\",\"form-control\":\"AutoComplete2_form-control__1SPaQ\",\"input\":\"AutoComplete2_input__1qyu3\",\"suggestions\":\"AutoComplete2_suggestions__33g20\",\"hint\":\"AutoComplete2_hint__1Dtzi\",\"focus\":\"AutoComplete2_focus__2pS9H\",\"has-error\":\"AutoComplete2_has-error__lIYZv\",\"error\":\"AutoComplete2_error__xx6tZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__1xO2P\",\"label\":\"DatePicker2_label__2TSn5\",\"wrapper\":\"DatePicker2_wrapper__1Zm8_\",\"read-only-value\":\"DatePicker2_read-only-value__2H1Jw\",\"text-field\":\"DatePicker2_text-field__a4Jqy\",\"no-margin\":\"DatePicker2_no-margin__2hfWg\",\"input\":\"DatePicker2_input__1BmqV\",\"date-button\":\"DatePicker2_date-button__3AEOq\",\"focus\":\"DatePicker2_focus__3d53X\",\"has-error\":\"DatePicker2_has-error__2wab-\",\"disabled\":\"DatePicker2_disabled__hHKql\",\"error\":\"DatePicker2_error__3f2g3\",\"date\":\"DatePicker2_date__3D12q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"table\":\"DataPairs_table__1nH2P\",\"header\":\"DataPairs_header__Bkti-\",\"pair\":\"DataPairs_pair__2QYar\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSoaPage_root__1JzXF\",\"table\":\"UploadSoaPage_table__3q8r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__2f7j7\",\"header\":\"ClaimsUtilLedgerReport_header__3SkBF\",\"typo\":\"ClaimsUtilLedgerReport_typo__2Javr\",\"disabled\":\"ClaimsUtilLedgerReport_disabled__z8zbA\",\"content\":\"ClaimsUtilLedgerReport_content__1W3eV\",\"filter\":\"ClaimsUtilLedgerReport_filter__3QHK8\",\"input\":\"ClaimsUtilLedgerReport_input__W6YU-\",\"submit\":\"ClaimsUtilLedgerReport_submit__f-hsB\",\"body\":\"ClaimsUtilLedgerReport_body__3G83I\",\"table\":\"ClaimsUtilLedgerReport_table__3TNU0\",\"remarks\":\"ClaimsUtilLedgerReport_remarks__3Z9th\",\"table-cell\":\"ClaimsUtilLedgerReport_table-cell__1plst\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__3Y-tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"hint\":\"AutoComplete_hint__1J8Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3oHfX\",\"total\":\"Footer_total__3_8Xj\",\"total-row\":\"Footer_total-row__1NiIX\",\"total-cell\":\"Footer_total-cell__2ExBc\",\"all-signatories\":\"Footer_all-signatories__AM-GJ\",\"signatories\":\"Footer_signatories__2V122\",\"username\":\"Footer_username__1whot\",\"line-note\":\"Footer_line-note__1BI5X\",\"line-received\":\"Footer_line-received__KlyKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__13RYz\",\"header\":\"TransmittalReport_header__1LohO\",\"typo\":\"TransmittalReport_typo__2QKnI\",\"disabled\":\"TransmittalReport_disabled__3_q8n\",\"content\":\"TransmittalReport_content__3_9vc\",\"filter\":\"TransmittalReport_filter__27k1z\",\"input\":\"TransmittalReport_input__OnyIq\",\"submit\":\"TransmittalReport_submit__VuyPg\",\"search-header\":\"TransmittalReport_search-header__xdK5O\",\"search-header-child\":\"TransmittalReport_search-header-child__10jDH\",\"column\":\"TransmittalReport_column__1dPqY\",\"body\":\"TransmittalReport_body__26j71\",\"table\":\"TransmittalReport_table__1u_Pl\",\"right\":\"TransmittalReport_right__3OOJU\",\"h_amount\":\"TransmittalReport_h_amount__1-OuF\",\"h_ar\":\"TransmittalReport_h_ar__M03I0\",\"h_member\":\"TransmittalReport_h_member__2fOhO\",\"h_date\":\"TransmittalReport_h_date__14PcF\",\"handling\":\"TransmittalReport_handling__1t_0M\",\"table-row\":\"TransmittalReport_table-row__1nh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__RmXBp\",\"header\":\"TreasuryTransmittalReport_header__3p3Rf\",\"content\":\"TreasuryTransmittalReport_content__1wzny\",\"filter\":\"TreasuryTransmittalReport_filter__2GQoK\",\"input\":\"TreasuryTransmittalReport_input__3hS-d\",\"submit\":\"TreasuryTransmittalReport_submit__FP1Mo\",\"body\":\"TreasuryTransmittalReport_body__HvS7_\",\"table\":\"TreasuryTransmittalReport_table__WES8q\",\"table-row\":\"TreasuryTransmittalReport_table-row__2lid3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__2WSai\",\"header\":\"PRCheckReport_header__3S6zh\",\"content\":\"PRCheckReport_content__3989Q\",\"filter\":\"PRCheckReport_filter__1-XzS\",\"input\":\"PRCheckReport_input__29L_D\",\"submit\":\"PRCheckReport_submit__3VE-t\",\"body\":\"PRCheckReport_body__1ZDmc\",\"table\":\"PRCheckReport_table__2MkNN\",\"table-row\":\"PRCheckReport_table-row__e88aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__29RLR\",\"header\":\"UtilizationReport_header__F8Q9y\",\"content\":\"UtilizationReport_content__KyGyi\",\"filter\":\"UtilizationReport_filter__3HaBQ\",\"auto\":\"UtilizationReport_auto__BN3cW\",\"input\":\"UtilizationReport_input__1NNnv\",\"submit\":\"UtilizationReport_submit__gyDiv\",\"radio-group\":\"UtilizationReport_radio-group__2NtcH\",\"radio-container\":\"UtilizationReport_radio-container___KTHn\",\"body\":\"UtilizationReport_body__pKJ3l\",\"chart\":\"UtilizationReport_chart__11CVV\",\"table\":\"UtilizationReport_table__3QcuP\",\"graph-reports\":\"UtilizationReport_graph-reports__35PtI\",\"graph-legend\":\"UtilizationReport_graph-legend__1VYWe\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__OXtbJ\",\"legend-group\":\"UtilizationReport_legend-group__3M_DG\",\"legend\":\"UtilizationReport_legend__2OmGP\",\"header-report\":\"UtilizationReport_header-report__39ovc\",\"report-primary\":\"UtilizationReport_report-primary__2Vx_L\",\"title\":\"UtilizationReport_title__1jyQx\",\"line-graph\":\"UtilizationReport_line-graph__3TWay\",\"container\":\"UtilizationReport_container__1tdjp\",\"line-container\":\"UtilizationReport_line-container__3vPZy\",\"item\":\"UtilizationReport_item__MLRbC\",\"line-details\":\"UtilizationReport_line-details__24PJo\",\"label\":\"UtilizationReport_label__1Bnmb\",\"color\":\"UtilizationReport_color__fO6V5\",\"graph-plot\":\"UtilizationReport_graph-plot__2918H\",\"plot-items\":\"UtilizationReport_plot-items__21fJr\",\"graph-group\":\"UtilizationReport_graph-group__TSW3K\",\"graph-container\":\"UtilizationReport_graph-container__2GdhR\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3nonl\",\"bar-chart\":\"UtilizationReport_bar-chart__2qoxe\",\"graph\":\"UtilizationReport_graph__3KuFD\",\"tooltip\":\"UtilizationReport_tooltip__17mGM\",\"graph-category\":\"UtilizationReport_graph-category__3HxMk\",\"footer\":\"UtilizationReport_footer__Rz3yK\",\"table-row\":\"UtilizationReport_table-row__1LDFs\",\"memberinfo\":\"UtilizationReport_memberinfo__2VG76\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__UAA-3\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__3qy2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingHimsData_root__3WU8t\",\"header\":\"LoadingHimsData_header__3AgKz\",\"typo\":\"LoadingHimsData_typo__2IkSb\",\"disabled\":\"LoadingHimsData_disabled__31oIJ\",\"content\":\"LoadingHimsData_content__ck1LN\",\"filter\":\"LoadingHimsData_filter__1TZ1x\",\"input\":\"LoadingHimsData_input__YHPrG\",\"submit\":\"LoadingHimsData_submit__qqksA\",\"body\":\"LoadingHimsData_body__3yN6l\",\"table\":\"LoadingHimsData_table__11EHs\",\"table-row\":\"LoadingHimsData_table-row__1ltt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ConfinementReport_root__1uSjB\",\"header\":\"ConfinementReport_header__16HCk\",\"content\":\"ConfinementReport_content__HdGg-\",\"filter\":\"ConfinementReport_filter__24wrc\",\"input\":\"ConfinementReport_input__auX4A\",\"submit\":\"ConfinementReport_submit__1ztRA\",\"body\":\"ConfinementReport_body__16cNS\",\"table\":\"ConfinementReport_table__3HeUY\",\"remarks\":\"ConfinementReport_remarks__15eon\",\"table-cell\":\"ConfinementReport_table-cell__3g-6U\",\"table-row\":\"ConfinementReport_table-row__1Ag6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NykO\",\"total\":\"Footer_total__106js\",\"total-row\":\"Footer_total-row__2oNxf\",\"total-cell\":\"Footer_total-cell__2mlRs\",\"bundle\":\"Footer_bundle__cygl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestReport_root__1yyHg\",\"header\":\"PaymentRequestReport_header__1hEoh\",\"typo\":\"PaymentRequestReport_typo__lzZPi\",\"disabled\":\"PaymentRequestReport_disabled__7bH-b\",\"content\":\"PaymentRequestReport_content__3Xk-l\",\"filter\":\"PaymentRequestReport_filter__2HiUS\",\"input\":\"PaymentRequestReport_input__1BVX2\",\"submit\":\"PaymentRequestReport_submit__nlqNw\",\"search-header\":\"PaymentRequestReport_search-header__13iAT\",\"search-header-child\":\"PaymentRequestReport_search-header-child__3hgZo\",\"column-label\":\"PaymentRequestReport_column-label__28Gps\",\"column-input\":\"PaymentRequestReport_column-input__zavve\",\"column-label2\":\"PaymentRequestReport_column-label2__38wK2\",\"body\":\"PaymentRequestReport_body__Qp11G\",\"table\":\"PaymentRequestReport_table__25wJP\",\"right\":\"PaymentRequestReport_right__ZClv0\",\"handling\":\"PaymentRequestReport_handling__cz42W\",\"table-row\":\"PaymentRequestReport_table-row__3HEQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementReport_root__32Om0\",\"header\":\"ReimbursementReport_header__12zwF\",\"typo\":\"ReimbursementReport_typo__36kbp\",\"disabled\":\"ReimbursementReport_disabled__1QoJ6\",\"content\":\"ReimbursementReport_content__mbnn4\",\"filter\":\"ReimbursementReport_filter__1WwW5\",\"input\":\"ReimbursementReport_input__kohO7\",\"submit\":\"ReimbursementReport_submit__1MEua\",\"body\":\"ReimbursementReport_body__2-ZBv\",\"table\":\"ReimbursementReport_table__3HtyM\",\"hidden\":\"ReimbursementReport_hidden__kOzBm\",\"remarks\":\"ReimbursementReport_remarks__3VTZf\",\"table-cell\":\"ReimbursementReport_table-cell__1DP3G\",\"table-row\":\"ReimbursementReport_table-row__3QOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsSummaryReport_root__1ka3i\",\"header\":\"ClaimsSummaryReport_header__39eJB\",\"field-filter\":\"ClaimsSummaryReport_field-filter__2SIg-\",\"input\":\"ClaimsSummaryReport_input__2fYOe\",\"content\":\"ClaimsSummaryReport_content__2_BF2\",\"filter\":\"ClaimsSummaryReport_filter__id9k7\",\"submit\":\"ClaimsSummaryReport_submit__FEVvZ\",\"body\":\"ClaimsSummaryReport_body__13Jph\",\"table\":\"ClaimsSummaryReport_table__7Ph-I\",\"remarks\":\"ClaimsSummaryReport_remarks__2FkBN\",\"table-cell\":\"ClaimsSummaryReport_table-cell__2Ld-d\",\"handling\":\"ClaimsSummaryReport_handling__25OHB\",\"footer\":\"ClaimsSummaryReport_footer__1028J\",\"label\":\"ClaimsSummaryReport_label__4CdeZ\",\"received\":\"ClaimsSummaryReport_received__2ZOV5\",\"processed\":\"ClaimsSummaryReport_processed__KMDYx\",\"total\":\"ClaimsSummaryReport_total__Adq-O\",\"table-row\":\"ClaimsSummaryReport_table-row__4aT6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductivityPerformaceReport_root__2dUB0\",\"header\":\"ProductivityPerformaceReport_header__2jbkM\",\"field-filter\":\"ProductivityPerformaceReport_field-filter__35OXP\",\"input\":\"ProductivityPerformaceReport_input__2o3yw\",\"content\":\"ProductivityPerformaceReport_content__1p5h0\",\"filter\":\"ProductivityPerformaceReport_filter__3M0No\",\"submit\":\"ProductivityPerformaceReport_submit__2SI5D\",\"body\":\"ProductivityPerformaceReport_body__3eVBy\",\"table\":\"ProductivityPerformaceReport_table__J_Mgn\",\"remarks\":\"ProductivityPerformaceReport_remarks__1pXa6\",\"table-cell\":\"ProductivityPerformaceReport_table-cell__1Q-O3\",\"footer\":\"ProductivityPerformaceReport_footer__2ioMa\",\"received\":\"ProductivityPerformaceReport_received__3SdAJ\",\"processed\":\"ProductivityPerformaceReport_processed__2ECP_\",\"table-row\":\"ProductivityPerformaceReport_table-row__2Wduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReturnedClaimsReport_root__3miJ9\",\"header\":\"ReturnedClaimsReport_header__2QSE3\",\"typo\":\"ReturnedClaimsReport_typo__3UFCW\",\"disabled\":\"ReturnedClaimsReport_disabled__182Sx\",\"content\":\"ReturnedClaimsReport_content__14MOK\",\"filter\":\"ReturnedClaimsReport_filter__2meIS\",\"input\":\"ReturnedClaimsReport_input__19ygB\",\"submit\":\"ReturnedClaimsReport_submit__1Mgt8\",\"body\":\"ReturnedClaimsReport_body__220AW\",\"table\":\"ReturnedClaimsReport_table__1WY5j\",\"remarks\":\"ReturnedClaimsReport_remarks__10htg\",\"table-cell\":\"ReturnedClaimsReport_table-cell__aqjTo\",\"handling\":\"ReturnedClaimsReport_handling__10Zah\",\"table-row\":\"ReturnedClaimsReport_table-row__3MQ-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PerformanceReport_root__3v0l5\",\"header\":\"PerformanceReport_header__2cAig\",\"field-filter\":\"PerformanceReport_field-filter__1J_xd\",\"input\":\"PerformanceReport_input__qTNUq\",\"content\":\"PerformanceReport_content__1RJ-f\",\"filter\":\"PerformanceReport_filter__3HVDH\",\"submit\":\"PerformanceReport_submit__1sQmg\",\"body\":\"PerformanceReport_body__3mx5Y\",\"table\":\"PerformanceReport_table__1eG1Z\",\"remarks\":\"PerformanceReport_remarks__3BqBk\",\"table-cell\":\"PerformanceReport_table-cell__XM63r\",\"footer\":\"PerformanceReport_footer__1gA8-\",\"count\":\"PerformanceReport_count__2u4Ue\",\"average\":\"PerformanceReport_average__sBrEV\",\"work\":\"PerformanceReport_work__1YnhR\",\"table-row\":\"PerformanceReport_table-row__2u1xW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingPartialApprovedReport_root__njXRF\",\"header\":\"AgingPartialApprovedReport_header__33b_k\",\"disabled\":\"AgingPartialApprovedReport_disabled__24a81\",\"typo\":\"AgingPartialApprovedReport_typo__3ewzs\",\"field-filter\":\"AgingPartialApprovedReport_field-filter__3Z1mh\",\"input\":\"AgingPartialApprovedReport_input__3a_o0\",\"content\":\"AgingPartialApprovedReport_content__1pWFX\",\"filter\":\"AgingPartialApprovedReport_filter__3sVP8\",\"submit\":\"AgingPartialApprovedReport_submit__3D5zL\",\"body\":\"AgingPartialApprovedReport_body__39FC8\",\"table\":\"AgingPartialApprovedReport_table__2EheT\",\"remarks\":\"AgingPartialApprovedReport_remarks__2lfE6\",\"table-cell\":\"AgingPartialApprovedReport_table-cell__dRnX7\",\"handling\":\"AgingPartialApprovedReport_handling__3jl7y\",\"footer\":\"AgingPartialApprovedReport_footer__33O-v\",\"label\":\"AgingPartialApprovedReport_label__20iKa\",\"total15Days\":\"AgingPartialApprovedReport_total15Days__8bxW0\",\"total1Week\":\"AgingPartialApprovedReport_total1Week__SaR2_\",\"total1Month\":\"AgingPartialApprovedReport_total1Month__2zxDm\",\"totalAll\":\"AgingPartialApprovedReport_totalAll__1KEoW\",\"table-row\":\"AgingPartialApprovedReport_table-row__TdYPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingReturnClaimReport_root__2ZjYN\",\"header\":\"AgingReturnClaimReport_header__2pYrS\",\"disabled\":\"AgingReturnClaimReport_disabled__1aF_t\",\"typo\":\"AgingReturnClaimReport_typo__HVrxs\",\"field-filter\":\"AgingReturnClaimReport_field-filter__3bBD5\",\"input\":\"AgingReturnClaimReport_input__yJYHL\",\"content\":\"AgingReturnClaimReport_content__2dDb7\",\"filter\":\"AgingReturnClaimReport_filter__J2zBy\",\"submit\":\"AgingReturnClaimReport_submit__2ONSY\",\"body\":\"AgingReturnClaimReport_body__2v_Du\",\"table\":\"AgingReturnClaimReport_table__3OBJ-\",\"remarks\":\"AgingReturnClaimReport_remarks__1NXHH\",\"table-cell\":\"AgingReturnClaimReport_table-cell__gHjGb\",\"handling\":\"AgingReturnClaimReport_handling__KERnH\",\"footer\":\"AgingReturnClaimReport_footer__3M3iw\",\"label\":\"AgingReturnClaimReport_label__1bL4K\",\"total15Days\":\"AgingReturnClaimReport_total15Days__3Dg8C\",\"total1Week\":\"AgingReturnClaimReport_total1Week__WroA2\",\"total1Month\":\"AgingReturnClaimReport_total1Month__2Z9vs\",\"totalAll\":\"AgingReturnClaimReport_totalAll__2LXXw\",\"table-row\":\"AgingReturnClaimReport_table-row__2LK4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsBeyond3MonthsReport_root__3VXaM\",\"header\":\"ClaimsBeyond3MonthsReport_header__3lsVk\",\"typo\":\"ClaimsBeyond3MonthsReport_typo__264r4\",\"field-filter\":\"ClaimsBeyond3MonthsReport_field-filter__3_-_O\",\"input\":\"ClaimsBeyond3MonthsReport_input__3rZEj\",\"content\":\"ClaimsBeyond3MonthsReport_content__2QCP_\",\"filter\":\"ClaimsBeyond3MonthsReport_filter__1_UPE\",\"submit\":\"ClaimsBeyond3MonthsReport_submit__3Ixe3\",\"body\":\"ClaimsBeyond3MonthsReport_body__1a198\",\"table\":\"ClaimsBeyond3MonthsReport_table__3XK2P\",\"remarks\":\"ClaimsBeyond3MonthsReport_remarks__2x-XG\",\"table-cell\":\"ClaimsBeyond3MonthsReport_table-cell__2Bcc3\",\"handling\":\"ClaimsBeyond3MonthsReport_handling__1s9wT\",\"table-row\":\"ClaimsBeyond3MonthsReport_table-row__1FRZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementAgingReport_root__3Qevg\",\"header\":\"ReimbursementAgingReport_header__2fR1j\",\"field-filter\":\"ReimbursementAgingReport_field-filter__3omDl\",\"input\":\"ReimbursementAgingReport_input__uImhm\",\"content\":\"ReimbursementAgingReport_content__kcYV4\",\"filter\":\"ReimbursementAgingReport_filter__2vQYS\",\"submit\":\"ReimbursementAgingReport_submit__34jwM\",\"body\":\"ReimbursementAgingReport_body__1Aq7Z\",\"table\":\"ReimbursementAgingReport_table__2m2l3\",\"remarks\":\"ReimbursementAgingReport_remarks__3qa3B\",\"table-cell\":\"ReimbursementAgingReport_table-cell__3QyBG\",\"footer\":\"ReimbursementAgingReport_footer__3RAWu\",\"table-row\":\"ReimbursementAgingReport_table-row__3R0lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedClaimsReport_root__pZDjc\",\"header\":\"DetailedClaimsReport_header__b7pO0\",\"typo\":\"DetailedClaimsReport_typo__-qeZp\",\"disabled\":\"DetailedClaimsReport_disabled__32hnn\",\"content\":\"DetailedClaimsReport_content__30k_Y\",\"filter\":\"DetailedClaimsReport_filter__3uIPD\",\"input\":\"DetailedClaimsReport_input__3mk2W\",\"submit\":\"DetailedClaimsReport_submit__28yJR\",\"body\":\"DetailedClaimsReport_body__2wNh-\",\"table\":\"DetailedClaimsReport_table__1QGoK\",\"label\":\"DetailedClaimsReport_label__y28Kk\",\"hidden\":\"DetailedClaimsReport_hidden__1H_Ss\",\"remarks\":\"DetailedClaimsReport_remarks__E0xIw\",\"table-cell\":\"DetailedClaimsReport_table-cell__3rPot\",\"handling\":\"DetailedClaimsReport_handling__WipVd\",\"footer\":\"DetailedClaimsReport_footer__10ig-\",\"table-row\":\"DetailedClaimsReport_table-row__TiSmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedPerformanceReport_root__3lPH7\",\"header\":\"DetailedPerformanceReport_header__1FlLI\",\"typo\":\"DetailedPerformanceReport_typo__1SeuS\",\"field-filter\":\"DetailedPerformanceReport_field-filter__3G5pv\",\"input\":\"DetailedPerformanceReport_input__1uLNQ\",\"content\":\"DetailedPerformanceReport_content__2MZx8\",\"filter\":\"DetailedPerformanceReport_filter__2HFAt\",\"submit\":\"DetailedPerformanceReport_submit___T5Hi\",\"body\":\"DetailedPerformanceReport_body__37Z1n\",\"table\":\"DetailedPerformanceReport_table__1DoqJ\",\"remarks\":\"DetailedPerformanceReport_remarks__3bm40\",\"table-cell\":\"DetailedPerformanceReport_table-cell__1X1h4\",\"handling\":\"DetailedPerformanceReport_handling__2bFLc\",\"table-row\":\"DetailedPerformanceReport_table-row__XZFGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedMonitoringReport_root__LgC3Q\",\"header\":\"DetailedMonitoringReport_header__3LHkv\",\"typo\":\"DetailedMonitoringReport_typo__3spA7\",\"field-filter\":\"DetailedMonitoringReport_field-filter__2ZzJm\",\"input\":\"DetailedMonitoringReport_input__1_QJS\",\"content\":\"DetailedMonitoringReport_content__3_FYj\",\"filter\":\"DetailedMonitoringReport_filter__3eYWk\",\"submit\":\"DetailedMonitoringReport_submit__o8fc7\",\"body\":\"DetailedMonitoringReport_body__2Dq-U\",\"table\":\"DetailedMonitoringReport_table__13f4R\",\"remarks\":\"DetailedMonitoringReport_remarks__3vGUl\",\"table-cell\":\"DetailedMonitoringReport_table-cell__1xIUc\",\"handling\":\"DetailedMonitoringReport_handling__FZhM-\",\"table-row\":\"DetailedMonitoringReport_table-row__1dc8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__tUggz\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__NjIhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"input\":\"ProcedureForm_input__38bS_\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"input\":\"HospitalItemForm_input__1y2VP\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"input\":\"ProfessionalFeeForm_input__333On\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"error\":\"ReimbursementInfo_error__1CY-r\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1LMgs\",\"header\":\"UploadedList_header__2KeVk\",\"header-text\":\"UploadedList_header-text__2VqnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"wrap\":\"ClaimReimbursement_wrap__1ey6r\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__1PFMi\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"packages\":\"ClaimAPE_packages__38JZk\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"packages\":\"ClaimECU_packages__1pncE\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadedList_root__1kTdz\",\"header\":\"UploadedList_header__-de1J\",\"header-text\":\"UploadedList_header-text__39rqd\",\"handling\":\"UploadedList_handling__1_Ulf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FileViewer_root__3eOTH\",\"header-container\":\"FileViewer_header-container__3MWL_\",\"header\":\"FileViewer_header__26RQA\",\"title\":\"FileViewer_title__2Ar9A\",\"content\":\"FileViewer_content__1Ozo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"wrap\":\"ClaimReimbursement_wrap__3HMhP\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"group\":\"PaymentRequestPage_group__JBVfR\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"row\":\"Dashboard_row__3jP5M\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\",\"completed_task\":\"Dashboard_completed_task__3VhqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\",\"button-wrapper-kpi\":\"MaintenancePage_button-wrapper-kpi__1hwlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoCompletes_root__GqW9d\",\"row\":\"AutoCompletes_row__hY4Cp\",\"input\":\"AutoCompletes_input__1JWqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete2_root__3Z4u_\",\"label\":\"AutoComplete2_label__1UMnf\",\"wrapper\":\"AutoComplete2_wrapper__mUNcc\",\"read-only-value\":\"AutoComplete2_read-only-value__1a9p_\",\"autocomplete-field\":\"AutoComplete2_autocomplete-field__37KBN\",\"form-control\":\"AutoComplete2_form-control__2AFVD\",\"input\":\"AutoComplete2_input__15dWt\",\"suggestions\":\"AutoComplete2_suggestions__1OFwm\",\"hint\":\"AutoComplete2_hint__3TRnC\",\"focus\":\"AutoComplete2_focus__3Xz7d\",\"has-error\":\"AutoComplete2_has-error__j-hAu\",\"error\":\"AutoComplete2_error__wPImV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker2_root__3pohK\",\"label\":\"DatePicker2_label__kClQ4\",\"wrapper\":\"DatePicker2_wrapper__3ICMR\",\"read-only-value\":\"DatePicker2_read-only-value__2DDSM\",\"text-field\":\"DatePicker2_text-field__Zdavd\",\"no-margin\":\"DatePicker2_no-margin__2ksyg\",\"input\":\"DatePicker2_input__vwvQ-\",\"date-button\":\"DatePicker2_date-button__2avzL\",\"focus\":\"DatePicker2_focus__7xrY-\",\"has-error\":\"DatePicker2_has-error__1Ccy6\",\"disabled\":\"DatePicker2_disabled__3cyux\",\"error\":\"DatePicker2_error__3iYWh\",\"date\":\"DatePicker2_date__3C5ua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePickers_root__3JJHS\",\"row\":\"DatePickers_row__2lQ4O\",\"input\":\"DatePickers_input__3mJCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__3Nbxo\",\"root\":\"PdfViewer2_root__OnpQ7\",\"controls\":\"PdfViewer2_controls__39uMf\",\"file-name\":\"PdfViewer2_file-name__1gGwZ\",\"search\":\"PdfViewer2_search__3kgG8\",\"control\":\"PdfViewer2_control__34TU3\",\"disabled\":\"PdfViewer2_disabled__Es9Vn\",\"text-field\":\"PdfViewer2_text-field__3xc6o\",\"viewport\":\"PdfViewer2_viewport__1dkcA\",\"pdf\":\"PdfViewer2_pdf__3uFCA\",\"page\":\"PdfViewer2_page__5EQuW\",\"page-number\":\"PdfViewer2_page-number__wuwZN\",\"iframe\":\"PdfViewer2_iframe__2wl51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PdfViewers_root__2i2A-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ErrorProducers_root__3mazu\",\"row\":\"ErrorProducers_row__2lI2A\",\"input\":\"ErrorProducers_input__-8Wlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Test_root__3x8F1\",\"sidebar\":\"Test_sidebar__p1pYj\",\"content\":\"Test_content__2tpHK\",\"title\":\"Test_title__8pTcD\",\"wrapper\":\"Test_wrapper__1mg0_\"};","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { type = 'replace', loading = false, children, style } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {type === 'replace' ? (\n        loading ? (\n          <div className={classes.loading} id='loading-overlay'>\n            <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n          </div>\n        ) : (\n          children\n        )\n      ) : (\n        type === 'overlay' && (\n          <React.Fragment>\n            {loading && (\n              <div className={classes.overlay} id='loading-overlay'>\n                <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n              </div>\n            )}\n            {children}\n          </React.Fragment>\n        )\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  id,\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body,\n  fetching = false\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({\n      ...p,\n      show: false,\n      count: 0,\n      search: '',\n      limit: 10,\n      page: 1,\n      filter: {}\n    }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                  {/* {(headCell.type && headCell.type === 'date') || headCell.match === 'date' ? (\n                    <DatePicker\n                      noMargin\n                      id={`${headCell.field}`}\n                      onChange={date => {\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                      value={null}\n                    />\n                  ) : (\n                    <TextField\n                      noMargin\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  )} */}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={\n            fetching ? (\n              <TableRow>\n                <TableCell colSpan={columns.length}>\n                  <LoadingIndicator loading={fetching} />\n                </TableCell>\n              </TableRow>\n            ) : (\n              body(viewList.data)\n            )\n          }\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'created', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`created-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='created-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    setFetching(true)\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    setFetchingViewList(true)\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBundles(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.bundle_number}>\n                  <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`submitted-facility-name-${index}`}>{item.facility_name}</TableCell>\n                  <TableCell>\n                    <Link to={`/bundles/${item.bundle_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(value)\n    // setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      setSelectedDate(date)\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={selectedDate}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  helperText={''}\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({\n                ...state,\n                doctorPartner: data.map(i => ({ ...i, name: i.full_name }))\n              }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      onChange({ field, value })\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name', field })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id', field })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name', field })\n          break\n        default:\n          break\n      }\n    } else {\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(details.date_received)\n      .add(term, 'days')\n      .format('MM/DD/YYYY')\n    onChange({ field: 'facility_id', value: value.id })\n    onChange({ field: 'facility_name', value: value.name })\n    onChange({ field: 'due_date', value: newDate })\n  }\n\n  const handleOnChangeDoctorPartner = ({ value, field }) => {\n    onChange({ field: 'doctor_name', value: value.full_name })\n    onChange({ field: 'doctor_id', value: value.id })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ field: 'total_rcs', value: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={date => onChange({ field: 'date_received', value: date.toISOString() })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={date => onChange({ field: 'due_date', value: date.toISOString() })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ field: 'soa_number', value: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ field: 'total_soa_amt', value: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'id'}\n            loading={fetching['facility_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner}\n            field={'name'}\n            loading={fetching['facility_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'id'}\n            loading={fetching['doctor_id']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner}\n            field={'name'}\n            loading={fetching['doctor_name']}\n            onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push({ text: type, value: type })\n      }\n    } else {\n      list.push({ text: type, value: type })\n    }\n  }\n  return list\n}\n\nconst suggestion = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push(type)\n      }\n    } else {\n      list.push(type)\n    }\n  }\n  return list\n}\nexport default { types, dropdown, suggestion }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(0)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\nimport { resetError, setError } from './error'\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee,\n  resetError,\n  setError\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport { resetReturn, setReturnNote } from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestion,\n  resetSuggestion,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION',\n    payload\n  }\n}\n\nexport const resetSuggestion = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents,\n  fetching\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n  const [claimSource, setClaimSource] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    BatchEncodingServices.lookups({ on: 'maintenance', params: { field: 'claims-source', filter: { status: { value: 'Active', match: 'start' } } } }).then(({data: res}) => {\n      const { results } = res.data\n      const _results = results.map(i => (\n        {\n          value: i.description,\n          text: i.description\n        }))\n      if (results) setClaimSource(_results)\n    }).catch(err => {\n      console.log('Claim Source Error', err)\n      setClaimSource([])\n    })\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    search\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claimSource}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/p/f')\n\nexport default class FacilitiesServices {\n  static getFacilities () {\n    return axios({\n      url: '/partners/facilities',\n      method: 'GET'\n    })\n  }\n\n  static getFacilityByName ({ name }) {\n    return axios({\n      url: `/partners/facilities/${name}`,\n      method: 'GET'\n    })\n  }\n\n  static getFacilityById ({ id }) {\n    return axios({\n      url: `/partners/facilities/id/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `\"Due Date\" should have a maximum length of Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .less(100000000)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` })\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport FacilitiesServices from 'Services/Api/FacilitiesServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n  const [defClaimSource, setDefClaimSource] = React.useState('')\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n      getDefaultClaimSource({ id: data.facility.id })\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setSelectedBatch({ [field]: value }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(setSelectedBatch({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    dispatch(resetSuggestionObject({ field: 'doctor' }))\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          setFetching(state => ({ ...state, [by]: true }))\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ field, value }) => {\n    setBundle(state => ({ ...state, [field]: value }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      getDefaultClaimSource({ id: data.facility_id })\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: defClaimSource,\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const getDefaultClaimSource = ({ id }) => {\n    FacilitiesServices.getFacilityById({ id }).then(res => {\n      const { type = '' } = res.data.data\n      let claim_source = ''\n\n      switch (type.toLowerCase()) {\n        case 'hospital':\n          claim_source = 'Hospital'\n          break\n        case 'clinic':\n          claim_source = 'Clinic'\n          break\n\n        case 'dental_clinic':\n          claim_source = 'Clinic'\n          break\n      }\n\n      setDefClaimSource(claim_source)\n    })\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n            fetching={fetching}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      disabled={batches.length >= 1}\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claim_number, sub_document_id }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/return`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params: { sub_document_id }\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static addReimburesmentInfo ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/add`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static updateReimburesmentInfo ({ claim_number, info_id, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/${info_id}/update`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","function PromiseUtil () { }\n\n/**\n * Execute in sequence the list of promises\n *\n * @param {array} tasks list of tasks or promises\n */\nPromiseUtil.executeInSequence = async function (promises, callback) {\n  // return promises.reduce((p, task) => p.then(task), Promise.resolve())\n  // for (const fn of promises) {\n  //     await fn()\n  // }\n  \n  var chain\n  for (let i in promises){\n      alert(i)\n    if (chain) chain = chain.then(promises[i]);\n    if (!chain) chain = promises[i]();\n\n    // TODO: remove\n    break\n  }\n\n  callback()\n}\n\nexport default PromiseUtil\n","import { fromBlob } from 'Services/Download'\n\nexport default function ArrayToCSV (props) {\n  const {\n    fileName = 'CSV',\n    header = [],\n    rows = [],\n    extension = 'csv',\n    statics = [],\n    data = [],\n    mimeType = 'data:text/csv;charset=utf-8'\n  } = props\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  let _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n\n  if (data && data.length) _rows = data\n\n  fromBlob({ fileName, extension, content: _rows, mimeType })\n}\n","import FileSaver from 'file-saver'\n\nconst fromBlob = props => {\n  const { fileName = '', content, extension, mimeType = 'application/octet-stream' } = props\n\n  const blob = new Blob(content, { type: mimeType })\n\n  // Trial\n  try {\n    const { ipcRenderer } = window.require('electron')\n\n    const reader = new FileReader()\n    reader.readAsDataURL(blob)\n    reader.onloadend = function () {\n      const data = reader.result\n      const base64data = data.split(';base64,').pop()\n      ipcRenderer.send('open-save-dialog', { data: base64data, fileName })\n    }\n  } catch (error) {\n    FileSaver.saveAs(blob, `${fileName}.${extension}`)\n  }\n}\nconst fromUrl = props => {\n  const { fileName = '', content, extension, mimeType = 'application/octet-stream' } = props\n  FileSaver.saveAs(content, `${fileName}.${extension}`)\n}\n\nexport { fromBlob, fromUrl }\n","// TODO: Uncomment\nimport moment from 'moment'\nimport { parseFullName } from 'parse-full-name'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\nimport PromiseUtil from 'Utilities/PromiseUtil'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n/**\n * SOA ETL Controller.\n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController () {}\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT: {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    RCSNum: SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    Diagnosis: SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    Procedure: SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs download of template for SOA File Import\n *\n * @param columnTemplates template mapping\n */\nSoaEtlController.downloadTemplate = function (columnTemplates = SoaEtlController.COLUMN_TEMPLATES.DEFAULT) {\n  console.log('soa_etl', 'downloadTemplate')\n\n  ArrayToCSV({\n    fileName: 'SOA_import',\n    extension: 'xls',\n    header: Object.keys(columnTemplates),\n    rows: [],\n    mimeType: 'application/vnd.ms-excel'\n  })\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (\n    !dataRows ||\n    !dataMapping ||\n    !dataMapping.columns ||\n    !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n  )\n    throw { error: 'invalid parameters' }\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/**\n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n *\n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam })\n        .then(res => {\n          // Create promise for each add batch operation (which contains add-claims operation)\n          const addBatchPromises = []\n\n          async function addBatches () {\n            for (let batchIndex in bundle.batches) {\n              const batch = bundle.batches[batchIndex]\n              const batchParam = { ...batch }\n              delete batchParam.claims\n\n              let batchPromise = new Promise(function (resolveBatch, rejectBatch) {\n                // Call create batch API\n                BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n                  .then(res => {\n                    const { data } = res.data\n                    batch.batch_number = data.batch_number\n\n                    async function addClaims () {\n                      for (let i = 0; i < batch.claims.length; i++) {\n                        const claim = batch.claims[i]\n                        // Invoke create claim\n                        await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                      }\n                      resolveBatch()\n                    }\n\n                    // Create claims for batch\n                    addClaims()\n                  })\n                  .catch(() => {\n                    rejectBatch('Batch creation failed')\n                  })\n              })\n\n              await batchPromise\n            }\n            resolve(bundle.bundle_number)\n          }\n\n          addBatches()\n\n          // Note: VNI requirement, is to not perform automatic bundle submission\n          //       and consequentially, no automatic claims creation for claims under the\n          //       automatically created batches. That is the function requirement.\n          //       The technical operation however, needs claims to be created but just\n          //       NOT visible as of yet to claims encoders (and up).\n          // // Todo: refactor to wait for all batches to be created before submitting bundle\n          // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n          //   if (successCallback) { successCallback();}\n          //   resolve()\n          //   // batch.claims.forEach(element => {\n          //   //   let claim = element\n          //   // })\n          // }).catch(() => {\n          //   reject('Bundle submission failed')\n          // })\n\n          // console.log(addBatchPromises)\n          // resolve(bundle.bundle_number)\n          //PromiseUtil.executeInSequence(addBatchPromises, () => { resolve(bundle.bundle_number) })\n          // Promise.all(addBatchPromises)\n          //   .then(() => {\n          //     console.log('success SOA loading unto API')\n          //     //alert('success SOA loading unto API')\n          //     resolve(bundle.bundle_number)\n          //   })\n        })\n        .catch(() => {\n          console.log('failed SOA loading unto API')\n          //alert('failed SOA loading unto API')\n          reject('Bundle creation failed')\n        })\n    })\n  })\n\n  return promise\n}\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) {\n          outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n          if (!outputEntry[fieldKey]) throw 'Missing claim type or wrong data format in the uploaded SOA file.'\n        }\n      })\n\n      outputEntries.push(outputEntry)\n    }\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n  return outputEntries\n}\n\n/**\n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n *\n * @param prepDataRows output from _transformPreviewDataToPrepData()\n *\n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived)\n          .add(30, 'days')\n          .format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: 'SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n',\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (\n      !currentClaim ||\n      (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])\n    ) {\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = parseFullName(memberName)\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts.first,\n        member_middle_name: nameParts.middle,\n        member_last_name: nameParts.last,\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: ''\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries\n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee\n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n\n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n\n      currentClaim.professional_fees.push({\n        doctor_name: lineItem,\n        doctor_id: 'unknown',\n        gross_amount: lineAmount,\n        specialization: 'unknown',\n        vat_amount: 0,\n        amount_paid_by_member: 0,\n        philhealth_amount_paid: 0,\n        philhealth_remarks: '',\n        amount_not_covered: 0,\n        reason: '',\n        amount_due_from_member: 0,\n        reason_for_charging_member: ''\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem,\n          item_code: 'unknown',\n          gross_amount: lineAmount,\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: '',\n          amount_not_covered: 0,\n          reason: '',\n          amount_due_from_member: 0,\n          reason_for_charging_member: ''\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n      // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem,\n          gross_amount: lineAmount,\n          code: 'unknown',\n          vat_amount: 0,\n          amount_paid_by_member: 0,\n          philhealth_amount_paid: 0,\n          philhealth_remarks: ''\n        })\n      }\n    }\n  })\n\n  return bundle\n}\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 0\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 1\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 2\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 3\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        __index__: 4\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 5\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 6\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 7\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 8\n      },\n      {\n        'SOA No.': '',\n        RCSNum: '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        Diagnosis: '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        RCSNum: '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        Diagnosis: 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        Procedure: '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        __index__: 10\n      }\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {\n          IP: 'In Patient',\n          OPP: 'Out Patient Procedure',\n          OPC: 'Out Patient Consultation'\n        }\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital'\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `The \"Due Date\" should be later than the Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` }),\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: [],\n    doctorPartner: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_full_name: false\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, medicalPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n    setSuggestions(state => ({\n      ...state,\n      doctorPartner: []\n    }))\n\n    setFetching(state => ({ ...state, [`doctor_${by}`]: true }))\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } })\n            .then(res => {\n              const { data } = res.data\n              // let _items = []\n              // for (let d of data) {\n              //   _items.push(d[by])\n              // }\n              setSuggestions(state => ({ ...state, doctorPartner: data }))\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [`doctor_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = ({ value, field, search }) => {\n    if (search) {\n      setNewBundle(state => ({ ...state, [field]: value }))\n      switch (field) {\n        case 'facility_id':\n          getMedicalPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'facility_name':\n          getMedicalPartnerSuggestions({ value, by: 'name' })\n          break\n        case 'doctor_id':\n          getDoctorPartnerSuggestions({ value, by: 'id' })\n          break\n        case 'doctor_name':\n          getDoctorPartnerSuggestions({ value, by: 'full_name' })\n          break\n        default:\n          break\n      }\n    } else {\n      const _value = value || {}\n      if (field === 'facility_id' || field === 'facility_name') {\n        handleOnChangeMedicalPartner({ value: _value, field })\n      } else if (field === 'doctor_id' || field === 'doctor_name') {\n        handleOnChangeDoctorPartner({ value: _value, field })\n      }\n    }\n  }\n\n  const handleOnChangeMedicalPartner = ({ value = {}, field }) => {\n    // Compute due date based on date received and earliest term found\n    // Fallback term is 30 days\n    let term = 30\n    if (value.earliest_term) {\n      term = parseInt(value.earliest_term)\n      if (isNaN(term) || term < 0) {\n        term = 30\n      }\n    }\n    let newDate = moment(newBundle.date_received).add(term, 'days')\n\n    setNewBundle(state => ({\n      ...state,\n      facility_id: value.id,\n      facility_name: value.name,\n      due_date: newDate,\n      due_date_adjustment: term\n    }))\n    // }\n  }\n\n  const handleOnChangeDoctorPartner = ({ value = {}, field }) => {\n    setNewBundle(state => ({ ...state, doctor_id: value.id, doctor_name: value.full_name }))\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = () => {\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    const { error } = NewBundleValidator({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    if (validate()) {\n      setDisableControls(false)\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const handleOnDownloadTemplate = () => {\n    LoadingService.loading(true)\n    SoaEtlController.downloadTemplate()\n    LoadingService.loading(false)\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography\n            id='upload-soa-button'\n            variant='subtitle2'\n            className={`bold text-link ${classes.label}`}\n            display='inline'\n          >\n            + Upload SOA\n          </Typography>\n        </Link>\n        <Typography\n          onClick={handleOnDownloadTemplate}\n          id='download-soa-template-button'\n          variant='subtitle2'\n          className={`bold text-link ${classes.label}`}\n          display='inline'\n          style={{ marginLeft: 10 }}\n        >\n          + Download SOA Template\n        </Typography>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = date.add(newBundle.due_date_adjustment, 'days').toISOString()\n\n                setNewBundle(state => ({ ...state, date_received: date.toISOString(), due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date.toISOString() }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              //* e.target is in an asynchronous context (setNewBundle)\n              //* moved e.target.value outside asynchronous context\n              onChange={e => {\n                const { value } = e.target\n                // setNewBundle(state => ({ ...state, soa_number: e.target.value }))\n                setNewBundle(state => ({ ...state, soa_number: value }))\n              }}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'id'}\n              loading={fetching['facility_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_id', value, search })}\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner}\n              field={'name'}\n              loading={fetching['facility_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'facility_name', value, search })}\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'id'}\n              loading={fetching['doctor_id']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_id', value, search })}\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner}\n              field={'full_name'}\n              loading={fetching['doctor_full_name']}\n              onChange={(value, search) => handleOnChangeAutosuggest({ field: 'doctor_name', value, search })}\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              !validate() &&\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete, onError }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n    onComplete({ headers, results })\n  }\n\n  reader.onerror = ex => onError(ex)\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    console.log(file)\n    const validTypes = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel']\n    if (!validTypes.includes(file.type)) return\n\n    setFileLoaded(true)\n\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      },\n      onError: ex => {\n        console.log(ex)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop file to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    rows: [],\n    count: 0,\n    limit: 10,\n    page: 1\n  })\n\n  const [trimmedItems, setTrimmedItems] = React.useState([])\n\n  React.useEffect(() => {\n    // Trim the actual passed items\n    const _items = []\n\n    for (let index = 0; index < items.length; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => {\n        return item[key] && item[key].trim().length > 0\n      })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    // Store trimmed items\n    setTrimmedItems(_items)\n\n    // Trigger the callback sending all trimmed items\n    onDetectDataRows(_items)\n  }, [])\n\n  React.useEffect(() => {\n    // Trigger set rows\n    handleOnChangeItems({})\n  }, [trimmedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n    setTableState(state => ({ ...state, rows: trimmedItems.slice(startAt, endAt), count: items.length }))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={tableState.rows.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={tableState.count}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.pair}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes.header}>\n          {headers.map((head, index) => (\n            <Typography key={`heade-${index}`} variant='h6'>\n              {head}\n            </Typography>\n          ))}\n        </div>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: []\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    setSuggestions(state => ({ ...state, facility: [] }))\n    setFetching(state => ({ ...state, [`facility_${by}`]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              setSuggestions(state => ({ ...state, facility: data }))\n            })\n            .finally(() => {\n              setFetching((state = { ...state, [`facility_${by}`]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      setFacilityTemplate(state => ({ ...state, [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    } else {\n      const _value = value || {}\n      setFacilityTemplate(state => ({ ...state, facility_id: _value.id, facility_name: _value.name }))\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  search\n                })\n              }\n              field={'id'}\n              loading={fetching['facility_id']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility}\n              onChange={(value, search) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  search\n                })\n              }\n              field={'name'}\n              loading={fetching['facility_name']}\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      console.log('Transform Error', ex)\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex.message || ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(bundle_number => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <div className={classes.table}>\n          <DynamicTable\n            data={data}\n            onRemoveFile={handleOnRemoveFile}\n            onDetectDataRows={dataRows => {\n              setDataRows(dataRows)\n            }}\n          />\n        </div>\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport { method } from 'lodash'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n\n  static loadingHIMSData (params) {\n    return axios({\n      url: `/loading-hims-data`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static confinementReport (params) {\n    return axios({\n      url: `/confinement-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestReport (params) {\n    return axios({\n      url: '/payment-request-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestClaims (params, bundle_number) {\n    return axios({\n      url: `/payment-request-report/${bundle_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursementClaimReport (params) {\n    return axios({\n      url: '/reimbursement-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static productivityReport (params) {\n    return axios({\n      url: '/productivity-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static claimsSummaryReport (params) {\n    return axios({\n      url: '/claims-summary-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookupsQuery ({ category, field, value }) {\n    return axios({\n      url: `/lookups/auto-suggest`,\n      method: 'GET',\n      params: { category, field, value },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static lookupsAll ({ category }) {\n    return axios({\n      url: `/lookups/auto-suggest/${category}`,\n      method: 'GET',\n      params: { category },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static returnedClaimsReport (params) {\n    return axios({\n      url: `/returned-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingPartialApprovedClaimsReport (params) {\n    return axios({\n      url: `/aging-partial-approved-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingReturnClaimsReport (params) {\n    return axios({\n      url: `/aging-return-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static claimsBeyond3Months (params) {\n    return axios({\n      url: `/claims-beyond-3-months`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursmentAgingReport (params) {\n    return axios({\n      url: `/reimbursement-aging`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static performanceReport (params) {\n    return axios({\n      url: `/performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedPerformanceReport (params) {\n    return axios({\n      url: `/detailed-performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedMonitoringReport (params) {\n    return axios({\n      url: `/detailed-monitoring-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedClaimsReport (params) {\n    return axios({\n      url: `/detailed-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static genericURL (params) {\n    const { url, method = 'GET', ...others } = params\n    return axios({\n      url: url,\n      method: method,\n      params: others\n    })\n  }\n\n  static getUploads (params) {\n    return axios({\n      url: '/file',\n      method: 'GET',\n      params\n    })\n  }\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Date Range From\" should be on or before \"Date Range To\"`\n    }),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'Given Diagnosis', type: 'array', data: 'diagnosis.given_diagnosis', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount due From Client',\n    type: 'array',\n    data: 'procedures.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Client',\n    type: 'array',\n    data: 'procedures.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount due From Client',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Client',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount due From Client',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Client',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any', remarks: true }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['utilizationLedger'])\n  }, [])\n\n  const [btnDisabled, setBtnDisabled] = React.useState(true)\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setBtnDisabled(!_claims.length)\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    setBtnDisabled(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n      LoadingService.loading(false)\n      setBtnDisabled(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchLedger()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={btnDisabled}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${btnDisabled ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.length < 1 ? (\n                    <MenuItem className={classes.hint} disabled>\n                      Enter atleast 3 characters to search.\n                    </MenuItem>\n                  ) : (\n                    suggestions.map((suggestion, index) => (\n                      <MenuItem\n                        id={`${props.id}-suggestion-${index}`}\n                        key={`${props.id}-suggestion-${index}`}\n                        onClick={() => {\n                          setFocus(true)\n                          handleItemClick(index)\n                        }}\n                      >\n                        {suggestion}\n                      </MenuItem>\n                    ))\n                  )}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getMemberContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/member/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientContractUrl ({ mct_id }) {\n    return new Promise((resolve, reject) => {\n      const token = window.localStorage.getItem('token') || window.localStorage.getItem('access_token')\n      const url = `/x/cc/client/contract?mct_id=${mct_id}&token=${token}`\n      const baseURL = window.localStorage.CLAIMS_URL\n        ? window.localStorage.CLAIMS_URL.replace(/\\/$/, '')\n        : `${process.env.REACT_APP_SERVER_API}`\n      resolve(`${baseURL}${url}`)\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET'\n    })\n  }\n  static getMemberContractPlanType ({ account_number }) {\n    return axios({\n      url: `/member/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClientrContractPlanType ({ account_number }) {\n    return axios({\n      url: `/client/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getDoctorSpecilizations ({ data }) {\n    return axios({\n      url: '/doctor-specializations',\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { data }\n    })\n  }\n}\n","import instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', data: 'no', sort: false, align: 'left', class: 'h_no', type: 'number' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', data: 'loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', data: 'date', sort: true, align: 'left', class: 'h_date', type: 'date' },\n  { label: 'MEMBER', sortField: 'member_name', data: 'member_name', sort: true, align: 'left', class: 'h_member' },\n  {\n    label: 'AMOUNT',\n    sortField: 'total_amount',\n    data: 'total_amount',\n    sort: false,\n    align: 'right',\n    class: 'h_amount',\n    type: 'currency'\n  },\n  {\n    label: 'AR',\n    sortField: 'total_due_from_member',\n    data: 'total_due_from_member',\n    sort: false,\n    align: 'right',\n    class: 'h_ar',\n    type: 'currency'\n  }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      LoadingService.loading(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    LoadingService.loading(true)\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    // const rows = []\n\n    // claims.raw.forEach(item => {\n    //   item.date = DateFormatter(item.date)\n    //   rows.push(Object.values(item))\n    // })\n\n    const rows = claims.raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n    LoadingService.loading(true)\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n    LoadingService.loading(false)\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                        align={col.align}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasuryTransmittalReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['prReports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns,\n    //* For Utilization Report (Member Centric)\n    fromUtilReport = false,\n    claimUtilizations = []\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        if (member.benefit_limits.length > 0) {\n          const types = ['ABL', 'MBL']\n          for (let i = 0; i < member.benefit_limits.length; i++) {\n            if (types.includes(member.benefit_limits[i].type)) {\n              type = member.benefit_limits[i].type\n              limit = member.benefit_limits[i].limit\n              break\n            }\n          }\n        }\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          let data = []\n\n          if (!fromUtilReport) {\n            const { data: _data } = res.data\n            data = _data\n          } else data = claimUtilizations\n\n          const list = mapData({\n            data: [\n              ...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n              ...data.map(i => ({ ...i, status: 'Approved' }))\n            ]\n          })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n\n          // If claim have no diagnosis field then return all\n          primary.code ? (primary.category_code = diagnosis_code) : (primary.category_code = '')\n\n          // TODO\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            let data = []\n\n            if (!fromUtilReport) {\n              const { data: _data } = res.data\n              data = _data\n            } else data = claimUtilizations\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({\n              data: [\n                ..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n                ...data.map(i => ({ ...i, status: 'Approved' }))\n              ]\n            })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReturnAdvice ({ claim_number, sub_document_id }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/return`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params: { sub_document_id }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static addReimburesmentInfo ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/add`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static updateReimburesmentInfo ({ claim_number, info_id, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reimbursement-info/${info_id}/update`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n\n  static getMemberUtilizations ({ member_account_no, range }) {\n    return axios({\n      url: `/claims/${member_account_no}/member-utilizations`,\n      method: 'GET',\n      params: { range }\n    })\n  }\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: 'rgba(237, 237, 237, 0.9)',\n  OutPatientProcedure: 'rgba(222, 222, 222, 0.9)',\n  OutPatientConsultation: 'rgba(158, 163, 172, 0.9)',\n  Reimbursement: 'rgba(13, 94, 64, 0.9)',\n  Emergency: 'rgba(250, 180, 53, 0.9)',\n  Dental: 'rgba(128, 52, 173, 0.9)',\n  MedicineAllowance: 'rgba(26, 177, 196, 0.9)',\n  APE: 'rgba(58, 183, 125, 0.9)',\n  ECU: 'rgba(253, 84, 81, 0.9)',\n  Pharmacy: 'rgba(98, 255, 183, 0.9)',\n  PPE: 'rgba(30, 32, 113, 0.9)',\n  MedicalSupplies: 'rgba(230, 168, 228, 0.9)',\n  ClinicManagement: 'rgba(102, 175, 190, 0.9)'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import legend from '../data/legend'\nimport theme from '../style/theme'\n\nconst getDefault = ({ month = [] }) => {\n  const count = month.length\n  const _legend = legend.map(i => ({\n    label: i.description,\n    hoverBorderWidth: 1,\n    hoverBorderColor: '#000',\n    // hidden: type === 'all' ? false : type !== i.description.replace(/ /g, ''),\n    backgroundColor: theme[i.description.replace(/ /g, '')] }))\n\n  return _legend.map(i => ({ ...i, data: Array.from(Array(count), () => 0) }))\n}\n\nexport default getDefault\n","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nexport default function BundlePage (props) {\n  const { data, options } = props\n  return (\n    <React.Fragment>\n      <Bar data={data} options={options} />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nimport moment from 'moment'\nimport lodash from 'lodash'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from './../../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\nimport getDefault from './config/types'\nimport Chart from './Chart/Chart'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\nconst inititalDate = { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' }\n\nconst clientColumns = [\n  { label: 'Type', field: 'type', search: true, match: 'any', align: 'left' },\n  { label: 'Total Amount', field: 'total_amount', search: true, match: 'number', align: 'center' },\n  { label: 'Number of Cases', field: 'cases', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Principals', field: 'availed_by_principals', search: true, match: 'number', align: 'center' },\n  { label: 'Availed By Dependents', field: 'availed_by_dependents', search: true, match: 'number', align: 'center' }\n]\n\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: { client_id: '', member_id: '' },\n    range: { client_id: inititalDate, member_id: inititalDate },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n  const [chartData, setChartData] = React.useState({})\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n  const [totalAmount, setTotalAmount] = React.useState(0)\n  const [limitType, setLimitType] = React.useState({ ABL: 'Annual Benefit Limit', MBL: 'Maximum Benefit Limit' })\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  const [client, setClient] = React.useState({ name: '--', account_no: '', limit: { type: '', limit: 0 } })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [suggestion, setSuggestion] = React.useState({\n    client_id: [],\n    member_id: []\n  })\n  const [memberUtilizations, setMemberUtilizations] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilizationReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const validate = () => {\n    const field = reportType === 'client' ? 'client_id' : 'member_id'\n    const { error } = DateRangeValidator({\n      date_from: reports.range[field].from,\n      date_to: reports.range[field].to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const getCoveredMonths = ({ data = [] }) => {\n    const _field = reportType === 'client' ? 'client_id' : 'member_id'\n    const from = new Date(reports.range[_field].from).getMonth()\n    const to = new Date(reports.range[_field].to).getMonth()\n    const covered = []\n    const result = data.map(i => i.month - 1)\n\n    for (let i = from; i <= to; i++) {\n      covered.push(i)\n    }\n\n    return lodash.uniq([...covered, ...result]).map(i => months[i])\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'client' && reports.search.client_id === '') return\n    if (reportType === 'member' && reports.search.member_id === '') return\n\n    LoadingService.loading(true)\n    if (reportType === 'member') {\n      getMember(reports.search.member_id)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n    } else {\n      Promise.all([\n        ClaimsServices.utilizationClient({\n          search: reports.search.client_id,\n          range: reports.range.client_id,\n          filter: reports.filter,\n          sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n          page: reports.page,\n          limit: reports.limit,\n          type: graphFilter\n        }),\n        ClaimsReconServices.getClientUtilization({ client_account_no: reports.search.client_id }),\n        CustomerCareServices.getClientUtilizationLoa({ client_account_no: reports.search.client_id })\n      ])\n        .then(res => {\n          const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n          const { data: graph } = graphClientRes.data\n          const { data: utilAmount } = clientUtilRes.data\n          const { data: loaAmount } = clientUtilLoaRes.data\n          // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n          setGraph(state => ({\n            ...state,\n            total: graph.client.limit.limit,\n            utilized: utilAmount.total_utilization_amount || 0,\n            ibnr: loaAmount.total_ibnr_amount || 0\n          }))\n          // setGraphData(p => ({ ...p, initial: graph.results }))\n          setTotalAmount(graph.grand_total || 0)\n          setClient(state => ({\n            ...state,\n            name: graph.client.name,\n            account_no: graph.client.account_number,\n            limit: graph.client.limit\n          }))\n\n          const covered_months = getCoveredMonths({ data: graph.results })\n          setChartData({ ...graph, covered_months })\n          fetchTable()\n        })\n        .catch(err => console.error(`Error Fetching Data: ${err}`))\n    }\n  }\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search.client_id,\n      range: reports.range.client_id,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  // const formatData = ({ type = null, source, field }) => {\n  //   let output = ''\n  //   if (type === 'date') {\n  //     output = DateFormatter(source[field])\n  //   } else if (type === 'array') {\n  //     const [root, property] = field.split('.')\n  //     output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n  //   } else {\n  //     output = source[field] ? source[field] : ''\n  //   }\n\n  //   return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  // }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = ({ value, field, isSuggestionClick }) => {\n    setReports(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          if (value && reportType === 'client') {\n            CustomerCareServices.getClientInfo({ value, field: 'registered_name' }).then(res => {\n              const { data = [] } = res.data\n              const item = []\n              for (const d of data) {\n                item.push(d['registered_name'])\n              }\n              setSuggestion(state => ({ ...state, [field]: item }))\n            })\n          } else if (value && reportType === 'member') {\n            CustomerCareServices.getMembers({\n              where: { [field]: { value: value, match: 'like' } },\n              order: `${field} asc`,\n              limit: 10\n            }).then(res => {\n              const { members = [] } = res.data.data\n              const item = []\n              for (const d of members) {\n                item.push(d[field])\n              }\n              setSuggestion(state => ({ ...state, [field]: item }))\n            })\n          }\n        }, 500)\n      )\n    }\n    setSuggestion(state => ({ ...state, [field]: [] }))\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n      .finally(() => LoadingService.loading(false))\n\n    ClaimsReconServices.getMemberUtilizations({ member_account_no: account_number, range: reports.range.member_id }).then(res => {\n      const { data = [] } = res.data\n      setMemberUtilizations(data)\n    }).catch(err => {\n      if (err) { setMemberUtilizations([]) }\n    })\n  }\n\n  const formatChart = data => {\n    const { results = [], covered_months = [] } = data\n    // const _data = getDefault({ month: covered_months, type: graphFilter })\n    const _data = getDefault({ month: covered_months })\n    let mergeResultsbyMonth = []\n\n    for (const r of results) {\n      mergeResultsbyMonth = [...mergeResultsbyMonth, ...r.claims]\n    }\n\n    const parsedData = mergeResultsbyMonth.map(_merge => {\n      for (const i of _data) {\n        if (_merge.claim_type === i.label) {\n          const month = months[_merge.month - 1]\n          i.data[covered_months.indexOf(month)] = _merge.total_amount\n          return { ...i, data: i.data }\n        }\n      }\n    })\n\n    const dynamic = lodash.uniqBy(parsedData, j => j.label)\n    const filteredData = lodash\n      .orderBy(_data\n        .map(i => dynamic\n          .find(u => u.label === i.label) || i), ['label'], ['asc'])\n\n    return {\n      labels: covered_months,\n      datasets: filteredData.filter(i => {\n        if (i.label.replace(/ /g, '') === graphFilter) {\n          return i\n        } else if (graphFilter === 'all') {\n          return filteredData\n        }\n      })\n    }\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.auto}>\n              <AutoComplete\n                placeholder={reportType === 'client' ? `Search for Client ID` : `Search for Member ID`}\n                id='account_number'\n                value={reportType === 'client' ? reports.search.client_id : reports.search.member_id}\n                suggestions={reportType === 'client' ? suggestion.client_id : suggestion.member_id}\n                onChange={(value, isSuggestionClick) =>\n                  handleSearchChange({\n                    value,\n                    isSuggestionClick,\n                    field: reportType === 'client' ? 'client_id' : 'member_id'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].from}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], from: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range[`${reportType === 'client' ? 'client_id' : 'member_id'}`].to}\n                onChange={date => {\n                  const field = reportType === 'client' ? 'client_id' : 'member_id'\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      [field]: { ...state.range[field], to: date.toISOString() }\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>{client.limit.type ? limitType[client.limit.type] : ''}</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['line-graph']}>\n              <div className={classes.container}>\n                <div className={classes['line-container']}>\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                  />\n                  <span\n                    className={classes.item}\n                    style={{\n                      width: `${\n                        ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                          ? 0\n                          : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                      }%`,\n                      background: '#f8b439'\n                    }}\n                  />\n                </div>\n                <div className={classes['line-details']}>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#4fb083' }} />\n                      <Typography variant='button'>UTILIZED</Typography>\n                    </div>\n                    <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                      {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                      <Typography variant='button'>IBNR</Typography>\n                    </div>\n                    <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                      {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                    </Typography>\n                  </div>\n                  <div className={classes.item}>\n                    <div className={classes.label}>\n                      <span className={classes.color} style={{ background: '#f8b439' }} />\n                      <Typography variant='button'>AVAILABLE</Typography>\n                    </div>\n                    <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                      {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                    </Typography>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map((data, index) => (\n                    <MenuItem value={data.type} key={index}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map((data, index) => (\n                <div className={classes['legend-group']} key={index}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['chart']}>\n            <Chart\n              data={formatChart(chartData)}\n              options={{\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                },\n                legend: {\n                  display: false\n                },\n                // tooltips: {\n                //   enabled: true,\n                //   mode: 'single',\n                //   callbacks: {\n                //     label: (tooltipItems, data) => {\n                //       tooltipItems.value = CurrencyFormatter(tooltipItems.value)\n                //       return `${tooltipItems.yLabel}: ${CurrencyFormatter(tooltipItems.value)}`\n                //     }\n                //   }\n                // },\n                // animation: {\n                //   show: {\n                //     x: {\n                //       from: 0\n                //     },\n                //     y: {\n                //       from: 0\n                //     }\n                //   },\n                //   hide: {\n                //     x: {\n                //       to: 0\n                //     },\n                //     y: {\n                //       to: 0\n                //     }\n                //   }\n                // },\n                maintainAspectRatio: false\n              }} />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '570px', overflow: 'auto', position: 'relative', minHeight: '190px' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`} align={headCell.align}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.field}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.field}`}\n                              onChange={date =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(claim.total_amount)}</TableCell>\n                    <TableCell align='center'>{claim.cases}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_principals}</TableCell>\n                    <TableCell align='center'>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography style={{ 'font-weight': 'bold' }}>{`Total Amount: ${CurrencyFormatter(totalAmount)}`}</Typography>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      CurrencyFormatter(SafeAccess(member, ['benefit_limits', 1, 'limit'], ''))}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      CurrencyFormatter(SafeAccess(member, ['benefit_limits', 0, 'limit'], ''))}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n            claimUtilizations={memberUtilizations}\n            fromUtilReport\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './LoadingHimsData.module.scss'\n\nconst columns = [\n  { label: `Member's Account No.`, field: 'member_account_number', match: 'start' },\n  { label: `Member's Plan Contract`, field: 'contract', match: 'exact' },\n  { label: 'Claim No.', field: 'claim_number', search: true, match: 'start' },\n  { label: 'Date of Availment', type: 'date', field: 'availment_date', match: 'date' },\n  { label: 'Approved Date', type: 'date', field: 'approved_date', match: 'date' },\n  { label: 'Approved by', field: 'approved_by', match: 'any' },\n  { label: 'Posted Date', type: 'date', field: 'posted_date', match: 'date' },\n  { label: 'Posted by', field: 'posted_by', match: 'any' },\n  { label: 'TPA', field: 'TPA', match: 'any' },\n  { label: 'SOA Number', field: 'soa_number', match: 'start' },\n  { label: 'Office Branch', field: 'office_branch', match: 'any' },\n  { label: 'Reimbursement', field: 'reimbursement', match: 'exact' },\n  { label: 'Type of Availment', field: 'availment_type', match: 'any' },\n  { label: 'Amount of Availment', type: 'currency', field: 'availment_amount', match: 'number' },\n  { label: 'Date Admitted', type: 'date', field: 'date_admitted', match: 'date' },\n  { label: 'Date Discharge', type: 'date', field: 'date_discharged', match: 'date' },\n  { label: 'Hospital/Clinic Code', field: 'facility_code', match: 'any' },\n  { label: 'Procedure/s', field: 'procedures', match: 'any' },\n  { label: 'Diagnosis', field: 'diagnosis', match: 'any' },\n  { label: 'In House', field: 'in_house', match: 'any' },\n  { label: 'Payment Due Date', type: 'date', field: 'payment_due_date', match: 'date' },\n  { label: 'Breakdown Amount', type: 'currency', field: 'breakdown_amount', match: 'number' },\n  { label: 'Breakdown AR Amount', type: 'currency', field: 'breakdown_ar_amount', match: 'number' },\n  { label: 'AR Addresee', field: 'ar_addresee', match: 'any' },\n  { label: `Member's Name`, field: 'member_name', match: 'any' },\n  { label: 'Payee Code', field: 'payee_code', match: 'any' },\n  { label: 'Payee Name', field: 'payee_name', match: 'any' },\n  { label: 'Disease Code', field: 'disease_code', match: 'any' },\n  { label: 'Disease Name', field: 'disease_name', match: 'any' },\n  { label: 'Layer', field: 'layer', match: 'any' },\n  { label: 'Remarks', field: 'remarks', match: 'any' },\n  { label: 'AR Reason', field: 'ar_reason', match: 'any' },\n  { label: 'Code of AR Reason', field: 'ar_reason_code', match: 'any' },\n  { label: 'Type of Service', field: 'type_of_service', match: 'any' },\n  { label: 'Hospital Services Details', field: 'hospital_service_details', match: 'any' },\n  { label: 'Hospital Services Amount', type: 'currency', field: 'hospital_service_amount', match: 'number' },\n  { label: 'Hospital Services AR Amount', type: 'currency', field: 'hospital_service_ar_amount', match: 'number' }\n]\n\nexport default function LoadingHimsData (props) {\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    filter: {},\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'member_account_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Template for Loading HIMS Data')\n    BreadcrumbsService.setSelectedItems(['loadingHimsData'])\n  }, [])\n\n  const fetchHIMSData = params => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      console.log(res)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchHIMSData(_params)\n  }\n\n  const handleOnColumnFilter = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    fetchHIMSData(_params)\n  }\n\n  const handleGenerateReport = () => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { results } = res.data.data\n\n      const claims = results.map(i => ({\n        ...i,\n        availment_date: DateFormatter(i.availment_date),\n        approved_date: DateFormatter(i.approved_date),\n        posted_date: DateFormatter(i.posted_date),\n        date_admitted: DateFormatter(i.date_admitted),\n        date_discharged: DateFormatter(i.date_discharged),\n        payment_due_date: DateFormatter(i.payment_due_date)\n      }))\n\n      const header = columns.map(c => c.label)\n      const rows = claims.map(claim =>\n        columns.map(col => formatData({ type: col.type, source: claim, field: col.field }))\n      )\n\n      ArrayToCSV({ fileName: 'Loading HIMS Data Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchHIMSData(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    <TableSortLabel\n                      active={claims.orderBy === headCell.field}\n                      direction={claims.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnColumnFilter({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.field]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                              setClaims(state => ({\n                                ...state,\n                                filter: { ...state.filter, [headCell.field]: { value: search, match: headCell.match } }\n                              }))\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.field })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ConfinementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'ICD10 Diagnosis', type: 'array', data: 'diagnosis.diagnosis_description', search: true, match: 'any' },\n  { label: 'Date of Service', type: 'date', data: 'date_from', search: true, match: 'date' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ConfinementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('List of Emergencies Leading to Confinement')\n    BreadcrumbsService.setSelectedItems(['confinementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'List of Emergencies Leading to Confinement',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          []\n        ],\n        fileName: 'List of Emergencies Leading to Confinement Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  // rows\n  header: [\n    { id_row: { label_left: 'Medical Partner ID:', label_right: 'Total PR Amount:' } },\n    { name_row: { label_left: 'Medical Partner Name:', label_right: 'Discount Amount:' } },\n    { bundle_row: { label_left: 'Bundle/SOA Number:', label_right: 'Due Date:' } },\n    { date_row: {label_left: 'Bundle/SOA Date:'} }\n  ],\n  footer: ['Total']\n}\n","import React from 'react'\n\n// Material Component\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { total = {}, bundles = [], page } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      {bundles.length > 0 && (\n        <div className={classes.bundle}>\n          <p><span><b>Bundle Number: </b></span>{`${bundles[page - 1]}`}</p>\n        </div>\n      ) }\n\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL APPROVED: ${CurrencyFormatter(total.total_approved_amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL TAX: ${CurrencyFormatter(total.total_tax_amount)}`}</p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Validator\nimport DateRangeValidator from './../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './PaymentRequestReport.module.scss'\n\nconst columns = [\n  { label: 'No.', sortField: 'number', sort: false, search: false, align: 'left' },\n  { label: 'RCS/LOA No.', sortField: 'loa_number', sort: true, search: true, align: 'left', match: 'start' },\n  {\n    label: 'Member Account No.',\n    sortField: 'member_account_number',\n    sort: true,\n    search: true,\n    align: 'left',\n    match: 'any'\n  },\n  { label: 'Member Name', sortField: 'member_name', sort: true, search: true, align: 'left', match: 'any' },\n  { label: 'Approved Amount', sortField: 'approved_amount', sort: false, search: false, align: 'right' },\n  { label: 'Tax Amount', sortField: 'tax_amount', sort: false, search: false, align: 'right' }\n]\n\nconst initialDetails = {\n  total_pr_amount: 0,\n  discount_amount: 0,\n  due_date: '',\n  total_approved_amount: 0,\n  total_tax_amount: 0\n}\n\nexport default function PaymentRequestReport (props) {\n  // added\n  const [searchValue, setSearchValue] = React.useState({\n    medical_partner_id: '',\n    medical_partner_name: '',\n    bundle: ''\n  })\n\n  const [claims, setClaims] = React.useState({\n    bundles: [],\n    raw: [],\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 1,\n    count: 0,\n    filter: {},\n    rowsPerPageOptions: [0],\n    // on filter_value\n    search: {\n      medical_partner_id: '',\n      medical_partner_name: '',\n      bundle: ''\n    }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const [details, setDetails] = React.useState(initialDetails)\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    bundle: {\n      id: [],\n      data: []\n    }\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Payment Request Report')\n    BreadcrumbsService.setSelectedItems(['paymentRequestReport'])\n  }, [])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    bundle: null,\n    column: null\n  })\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            search: { ...state.search, medical_partner_id: i.id, medical_partner_name: i.name }\n          }))\n\n          setSuggestions(state => ({\n            ...state,\n            medicalPartner: {\n              id: [],\n              name: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        medicalPartner: {\n          id: [],\n          name: [],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Bundle/SOA*\n  const handleOnChangeBundleSoa = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.bundle.data) {\n        if (value === i.bundle_number || value === i.soa) {\n          setClaims(state => ({\n            ...state,\n            search: {\n              ...state.search,\n              bundle: value\n            }\n          }))\n          setSuggestions(state => ({\n            ...state,\n            bundle: {\n              id: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        bundle: {\n          id: [],\n          data: []\n        }\n      }))\n      getBundleSoaSuggestions({ value })\n    }\n  }\n\n  const getBundleSoaSuggestions = ({ value = '' }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.bundle)\n    setDebounce(state => ({\n      ...state,\n      bundle: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'bundle-soa',\n            params: { query: value }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n\n            // TODO Clarify if its OR (Bundle/SOA)\n            // store soa_number first\n            data.forEach(d => {\n              if (d.soa) _items.push(d.soa)\n              _items.push(d.bundle_number)\n            })\n\n            setSuggestions(state => ({\n              ...state,\n              bundle: { ...state.bundle, id: _items.filter(i => i.startsWith(value)), data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnFilter = params => {\n    // added\n    setSearchValue(state => ({ ...state, ...params.search }))\n    const _claims = { ...claims, ...params.search }\n\n    if (claims.search.medical_partner_id.trim().length < 3 || claims.search.medical_partner_name.trim().length < 3) {\n      LoadingService.loading(false)\n      setFetching(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n    LoadingService.loading(true)\n\n    // prev 'claims'\n    ClaimsServices.paymentRequestReport({\n      range: _claims.range,\n      sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`,\n      page: _claims.page,\n      limit: _claims.limit,\n      filter: _claims.filter,\n      searchValue: _claims.search\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      setClaims(state => ({ ...state, bundles: results, raw, count, page, limit }))\n\n      setFetching(true)\n\n      const bundle_number = results[_claims.page - 1]\n      if (bundle_number) {\n        ClaimsServices.paymentRequestClaims(\n          { sort: `${_claims.orderBy}|${_claims.order ? 'asc' : 'desc'}`, searchValue: _claims.search },\n          bundle_number\n        ).then(res => {\n          const { results = [], details = {} } = res.data.data\n\n          // details.due_date = DateFormatter(details.due_date)\n\n          setClaims(state => ({ ...state, data: results }))\n          setDetails(state => ({ ...state, ...details }))\n          setFetching(false)\n          LoadingService.loading(false)\n        })\n      } else {\n        setClaims(state => ({ ...state, data: [] }))\n        setDetails(state => ({ ...state, ...initialDetails }))\n        setFetching(false)\n        LoadingService.loading(false)\n      }\n    })\n  }\n\n  const handlePagination = params => {\n    const bundle_number = params.bundles[params.page - 1]\n\n    ClaimsServices.paymentRequestClaims(\n      {\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        filter: params.filter,\n        // added\n        searchValue: searchValue\n      },\n      bundle_number\n    ).then(res => {\n      const { results = [], details = {} } = res.data.data\n\n      // details.due_date = DateFormatter(details.due_date)\n\n      setClaims(state => ({ ...state, data: results }))\n      setDetails(state => ({ ...state, ...details }))\n      setFetching(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const handleColumnFiltering = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    // setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n\n    const data = staticHeaderFooter({ ...claims.range, raw: claims.raw, ...claims.search, columns: header })\n\n    ArrayToCSV({ fileName: `${claims.search.medical_partner_name} Payment Request Report`, data })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          {/* row-1 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner ID:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner id'\n                  id='medical-partner-id'\n                  value={claims.search.medical_partner_id}\n                  suggestions={suggestions.medicalPartner.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Total PR Amount: ${CurrencyFormatter(details.total_pr_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-2 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner Name:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner name'\n                  id='medical-partner-name'\n                  value={claims.search.medical_partner_name}\n                  suggestions={suggestions.medicalPartner.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Discount Amount: ${CurrencyFormatter(details.discount_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-3 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Bundle/SOA Number:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by bundle/soa number'\n                  id='account-number'\n                  value={claims.search.bundle}\n                  suggestions={suggestions.bundle.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeBundleSoa({\n                      field: 'bundle',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Due Date: ${\n                details.due_date ? DateFormatter(details.due_date) : ''\n              }`}</Typography>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                // handleOnFilter({ ...claims, page: 1 })\n                handleOnFilter({ range: claims.range, search: claims.search })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          // onClick={event => {}}\n                          onClick={event =>\n                            handleColumnFiltering({ orderBy: headCell.sortField, order: !claims.order })\n                          }\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <TextField\n                      id={`text-field-${headCell.sortField}`}\n                      readOnly={!headCell.search}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce.column)\n                        setDebounce(state => ({\n                          ...state,\n                          column: setTimeout(() => {\n                            handleColumnFiltering({\n                              filter: {\n                                ...claims.filter,\n                                [headCell.sortField]: { value: search, match: headCell.match }\n                              }\n                            })\n                            // setClaims(state => ({\n                            //   ...state,\n                            //   filter: { ...state.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          }, 500)\n                        }))\n                      }}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              fetching ? (\n                <TableRow className={classes['table-row']}>\n                  <TableCell align='center' colSpan={6}>\n                    <CircularProgress size={30} />\n                  </TableCell>\n                </TableRow>\n              ) : claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'>{item.loa_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{item.member_account_number || 'N/A'}</TableCell>\n                    <TableCell align='left'>{`${item.member_name || 'N/A'}`}</TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.approved_amount <= 0 ? item.approved_amount : 0)}\n                    </TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.tax_amount <= 0 ? item.tax_amount : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer\n            total={{ total_approved_amount: details.total_approved_amount, total_tax_amount: details.total_tax_amount }}\n            bundles={claims.bundles}\n            page={claims.page}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// TODO Need refactor\n// UGLY CSV Generation\nexport const staticHeaderFooter = args => {\n  const { columns = [], to, from, raw = [], medical_partner_id, medical_partner_name } = args\n  columns.push('\\r\\n')\n  const data = []\n\n  for (const item of raw) {\n    const total_approved_amount = item.details.reduce((a, c) => a + c.approved_amount, 0)\n    const total_tax_amount = item.details.reduce((a, c) => a + c.tax_amount, 0)\n\n    // HEADER\n    const static_header = constants.header.map(i => {\n      switch (true) {\n        case i.hasOwnProperty('id_row'):\n\n          return [i.id_row.label_left, medical_partner_id, '', '', i.id_row.label_right, total_approved_amount, '\\r\\n']\n        case i.hasOwnProperty('name_row'):\n          // hardcoded discount value\n          return [i.name_row.label_left, medical_partner_name, '', '', i.name_row.label_right, 0, '\\r\\n']\n        case i.hasOwnProperty('bundle_row'):\n          return [i.bundle_row.label_left, item._id, '', '', i.bundle_row.label_right, DateFormatter(item.due_date), '\\r\\n']\n        case i.hasOwnProperty('date_row'):\n          return [i.date_row.label_left, `${DateFormatter(from)} - ${DateFormatter(to)}`, '\\r\\n']\n      }\n    })\n\n    // COLUMN HEADER\n    const _columns = columns.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1)\n\n    // BODY\n    const claims = item.details.map((i, index) => ({ no: index + 1, ...i }))\n    const rows = []\n    claims.forEach(item => {\n      delete item.bundle_number\n      rows.push(Object.values(item))\n    })\n    const body = rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1),\n        '\\r\\n'\n      ].join('')\n    )\n\n    // FOOTER\n    const static_footer = constants.footer.map(i => {\n      switch (i) {\n        case 'Total':\n          return ['', '', '', i, total_approved_amount, total_tax_amount, '\\r\\n']\n      }\n    })\n    const _data = [].concat(static_header, '\\r\\n', _columns, '\\r\\n', body, '\\r\\n', static_footer, '\\r\\n', '\\r\\n', '\\r\\n')\n\n    data.push(..._data)\n  }\n\n  return data\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\n// import moment from 'moment'\n\n// Styles\nimport classes from './ReimbursementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Claim Number', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Reimbursement Claim Amount', type: 'number', data: 'grand_total', search: false },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', type: 'sentence', search: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ReimbursementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'latest.date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20],\n    grandTotal: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Claims Report')\n    BreadcrumbsService.setSelectedItems(['reimbursementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0, grand_total = 0 } = data\n      setClaims(state => ({ ...state, data: results, count, grandTotal: grand_total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Claims Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Total Amount: ${grand_total}`]\n        ],\n        fileName: 'Reimbursement Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'sentence') {\n      output = source[field]\n        .toLowerCase()\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n        .join(' ')\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' disabled={claims.data.length <= 0} onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      ) : (\n                        <TextField\n                          noMargin\n                          onChange={event =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: event.target.value,\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.grandTotal)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required(),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .max(Joi.ref('date_max'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`,\n      'date.max': `\"Date Range To\" should be on the same year....s\"`\n    }),\n  date_max: Joi.date()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// MUI Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// Custom Components\nimport Table from 'SharedComponents/Table/Table'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport classes from './ClaimsSummaryReport.module.scss'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Utilities\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nconst columns = [\n  { label: 'Month', align: 'center', type: 'string', data: 'month' },\n  { label: 'Number of Claims Received', align: 'center', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', align: 'center', type: 'number', data: 'processed' },\n  { label: 'Amount of Claims Processed', align: 'center', type: 'currency', data: 'total_amount' }\n]\nconst initialClaims = {\n  data: {\n    claims: [\n      { month: 'January', received: 0, processed: 0, total_amount: 0 },\n      { month: 'Febuary', received: 0, processed: 0, total_amount: 0 },\n      { month: 'March', received: 0, processed: 0, total_amount: 0 },\n      { month: 'April', received: 0, processed: 0, total_amount: 0 },\n      { month: 'May', received: 0, processed: 0, total_amount: 0 },\n      { month: 'June', received: 0, processed: 0, total_amount: 0 },\n      { month: 'July', received: 0, processed: 0, total_amount: 0 },\n      { month: 'August', received: 0, processed: 0, total_amount: 0 },\n      { month: 'September', received: 0, processed: 0, total_amount: 0 },\n      { month: 'October', received: 0, processed: 0, total_amount: 0 },\n      { month: 'November', received: 0, processed: 0, total_amount: 0 },\n      { month: 'December', received: 0, processed: 0, total_amount: 0 }\n    ],\n    total_received: 0,\n    total_processed: 0,\n    total_amount: 0\n  },\n  range: {\n    from: moment().format(),\n    to: moment().format()\n  },\n  filter: {\n    claim_type: 'ALL',\n    claim_source: 'ALL',\n    claim_sub_type: 'ALL',\n    contract_plan: 'ALL',\n    section: 'ALL',\n    claim_status: 'ALL',\n    user: 'ALL',\n    geography: 'ALL'\n  }\n}\nconst initialValue = {\n  claim_type: [],\n  claim_source: [],\n  claim_sub_type: [],\n  contract_plan: [],\n  section: [],\n  claim_status: [],\n  user: [],\n  geography: []\n}\n\n/**\n * Claims Summary Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsSummaryReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [suggestion, setSuggestion] = React.useState(initialValue)\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    geopgraphy: null\n  })\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [claims, setClaims] = React.useState(initialClaims)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Summary Report')\n    BreadcrumbsService.setSelectedItems(['claimsSummaryReport'])\n    handleOnFilter()\n  }, [])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsSummaryReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(({ data: res }) => {\n      const { data } = res\n      const { total_received = 0, total_processed = 0, total_amount } = data\n      const results = data.claims\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Summary Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Total: `, `${total_received}`, `${total_processed}`, `${total_amount}`].join(',')\n        ],\n        fileName: 'Claims Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.map(d => d[field])] }))\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  const handleOnFilter = () => {\n    LoadingService.loading(true)\n    const params = {\n      filter: claims.filter,\n      range: claims.range\n    }\n    ClaimsServices.claimsSummaryReport(params).then(({ data: res }) => {\n      const { data } = res\n      setClaims({ ...claims, data: data })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to,\n      date_max: `12-31-${moment(claims.range.from).year()}`\n    })\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, section: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, user: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.geography}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, geography: event }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && handleOnFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.claims.length ? (\n                claims.data.claims.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align='center'\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total:</Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography className='bold'>{claims.data.total_received}</Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography className='bold'>{claims.data.total_processed}</Typography>\n          </div>\n          <div className={classes.total}>\n            <Typography className='bold'>{claims.data.total_amount}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProductivityPerformaceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Time', data: 'time' },\n  { label: 'Number of Claims Received', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', type: 'number', data: 'processed' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', claim_sub_type: '', section: '', user: '', region: '' },\n    receivedTotal: 0,\n    processedTotal: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    claim_sub_type: [],\n    section: [],\n    user: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Productivity and Performance Report')\n    BreadcrumbsService.setSelectedItems(['productivityPerformaceReport'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        receivedTotal: received_total,\n        processedTotal: processed_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Productivity and Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Claim Sub-Type/Category: ${claims.filter.claim_sub_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${received_total}`, `${processed_total}`].join(',')\n        ],\n        fileName: 'Productivity and Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.receivedTotal}</span>\n            </Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.processedTotal}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ReturnedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'number' },\n  { label: 'Reason for Return', sortField: 'return_reason', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner ID', sortField: 'facility_id', search: true, sort: true, match: 'start' },\n  { label: 'Medical Partner Name', sortField: 'facility_name', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' }\n]\n\nexport default function ReturnedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['returnedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], total = [], count, limit, page } = res.data.data\n      const [_total] = total\n\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit,\n        total_amount: total.length ? _total.total_amount : 0\n      }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', 'Total Amount:', `${claims.total_amount}`].join(',')\n        ],\n        fileName: 'Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        readOnly={!headCell.search}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'> {item.claim_number}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(item.claim_amount)}</TableCell>\n                    <TableCell align='left'>{item.return_reason}</TableCell>\n                    <TableCell align='left'> {item.facility_id}</TableCell>\n                    <TableCell align='left'>{item.facility_name}</TableCell>\n                    <TableCell align='left'>{item.claim_type}</TableCell>\n                    <TableCell align='left'>{item.claim_source}</TableCell>\n                    <TableCell align='left'>{item.geography}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.total_amount)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './PerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'type' },\n  { label: 'Total Number of Handled Claims', type: 'number', data: 'count' },\n  { label: 'Average Handling Time', type: 'number', data: 'average' },\n  { label: 'Number of Hours Worked', type: 'number', data: 'work' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: 'ALL', claim_source: 'ALL', contract_plan_type: 'ALL', section: 'ALL', user: 'ALL' },\n    total: {}\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: ['ALL'],\n    claim_source: ['ALL'],\n    contract_plan_type: ['ALL'],\n    section: ['ALL'],\n    user: ['ALL']\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    contract_plan_type: null,\n    section: null,\n    user: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n      setClaims(state => ({ ...state, data: results, total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Performance Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Amount: `, `${total.count}`, `${total.average}`, `${total.work}`].join(',')\n        ],\n        fileName: 'Performance Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Performance Summary Report')\n    BreadcrumbsService.setSelectedItems(['performanceReport'])\n    fetchRecords()\n  }, [])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Contract Plan Type</Typography>\n              <AutoComplete\n                placeholder='Search by contract plan type'\n                id='contract-plan-type'\n                value={claims.filter.contract_plan_type}\n                suggestions={suggestion.contract_plan_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'contract-plan-type',\n                    field: 'code'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'section',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.grand}>\n            <Typography variant='caption' className='bold'>\n              <span>Grand Total: </span>\n            </Typography>\n          </div>\n          <div className={classes.count}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.count}</span>\n            </Typography>\n          </div>\n          <div className={classes.average}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.average}</span>\n            </Typography>\n          </div>\n          <div className={classes.work}>\n            <Typography variant='caption' className='bold'>\n              <span>{claims.total.work}</span>\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingPartialApprovedReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved',\n    label2: 'claims beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of partially approved claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of partially approved',\n    label2: 'claims beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Partially Approved Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState({})\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Partially Approved Claim Report')\n    BreadcrumbsService.setSelectedItems(['agingPartialApprovedReport'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Partially Approved Claim Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Partially Approved Claim Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, index = '', field, isSuggestionClick }) => {\n    let _category = ''\n\n    if (index) _category = `${category}_${index}`\n    else _category = category.split('-').join('_')\n\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[_category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingReturnClaimReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month', align: 'left' },\n  {\n    label: 'Number of returned claims',\n    label2: 'within grace period',\n    type: 'number',\n    data: 'total15Days',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: 'beyond grace period',\n    type: 'number',\n    data: 'total1Week',\n    align: 'center'\n  },\n  {\n    label: 'Number of returned claims',\n    label2: '1 month (30 Days) beyond grace period',\n    type: 'number',\n    data: 'total1Month',\n    align: 'center'\n  },\n  {\n    label: 'Percentage of returned claims',\n    label2: 'beyond grace period (total)',\n    type: 'number',\n    data: 'totalAll',\n    suffix: '%',\n    align: 'center'\n  }\n]\n\n/**\n * Aging of Returned Claims\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  //* mirror of data for CSV fetching to minimize the time of generation\n  //* also to avoid two way filter func\n  const [rawData, setRawData] = React.useState([])\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {\n      medical_partner_id: 'ALL',\n      medical_partner_name: 'ALL',\n      claim_type: 'ALL',\n      claim_source: 'ALL',\n      facility_region: 'ALL'\n    },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n    claim_type: [],\n    claim_source: [],\n    facility_region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    claim_type: null,\n    claim_source: null,\n    facility_region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['agingReturnedClaims'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n\n      setRawData({\n        raw: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    const { raw = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = rawData\n    const rows = raw.map(claim => {\n      return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n    })\n\n    const header = columns.map(c => c.label)\n    ArrayToCSV({\n      statics: [\n        [\n          'Aging of Partially Approved Claim Report',\n          '\\r\\n',\n          '\\r\\n',\n          `Medical Partner ID: ${claims.filter.medical_partner_id}`,\n          '\\r\\n',\n          `Medical Partner Name: ${claims.filter.medical_partner_name}`,\n          '\\r\\n',\n          `Claim Type: ${claims.filter.claim_type}`,\n          '\\r\\n',\n          `Claim Source: ${claims.filter.claim_source}`,\n          '\\r\\n',\n          `Geogpraphy: ${claims.filter.facility_region}`,\n          '\\r\\n',\n          `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n          '\\r\\n',\n          '\\r\\n'\n        ],\n        [[`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`]]\n      ],\n      fileName: 'Aging of Partially Approved Claim Report',\n      header,\n      rows\n    })\n    LoadingService.loading(false)\n  }\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  //* Generic\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestion.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            filter: {\n              ...state.filter,\n              medical_partner_id: i.id,\n              medical_partner_name: i.name,\n              facility_region: i.geography\n            }\n          }))\n\n          setSuggestion(state => ({\n            ...state,\n            medicalPartner: {\n              id: ['ALL'],\n              name: ['ALL'],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestion(state => ({\n        ...state,\n        medicalPartner: {\n          id: ['ALL'],\n          name: ['ALL'],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestion(state => ({\n              ...state,\n              medicalPartner: { ...state.medicalPartner, [by]: ['ALL', ..._items], data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.medical_partner_id}\n                suggestions={suggestion.medicalPartner.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.medical_partner_name}\n                suggestions={suggestion.medicalPartner.name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeFacility({\n                    field: 'medical_partner_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.facility_region}\n                suggestions={suggestion.facility_region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility_region',\n                    field: 'region'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold text-link ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell align={headCell.align} key={`table-header-${index}`}>\n                    <div>{headCell.label}</div>\n                    <div>{headCell.label2}</div>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data && claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                        align={col.data === 'month' ? 'left' : 'center'}\n                      >\n                        {col.suffix\n                          ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                          : formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={completeColumns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        {claims.data.length ? (\n          <div className={classes.footer}>\n            <div className={classes.label}>\n              <Typography className='bold'>Grand Total: </Typography>\n            </div>\n            <div className={classes.total15Days}>\n              <Typography className='bold'>{claims.total15Days}</Typography>\n            </div>\n            <div className={classes.total1Week}>\n              <Typography className='bold'>{claims.total1Week}</Typography>\n            </div>\n            <div className={classes.total1Month}>\n              <Typography className='bold'>{claims.total1Month}</Typography>\n            </div>\n            <div className={classes.totalAll}>\n              <Typography className='bold'>{`${claims.totalAll}%`}</Typography>\n            </div>\n          </div>\n        ) : '' }\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsBeyond3MonthsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No', data: 'no' },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Date Received', data: 'received_date', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, sort: true, match: 'any' },\n  { label: 'Date of Service', data: 'date_of_service', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Claim Amount', data: 'claim_amount', sort: false, type: 'currency' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  // const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'latest.date.received'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    // range: {\n    //   from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n    //   to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n    //   field: 'status_date'\n    // },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Beyond 3 Months Report')\n    BreadcrumbsService.setSelectedItems(['claimsBeyond3Months'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Beyond 3 Months',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Claims Beyond 3 Months',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    // <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n    //   <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Styles\nimport classes from './ReimbursementAgingReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'item', align: 'left' },\n  { label: 'Number of Reimbursement Claims', type: 'number', data: 'reimbursement_count', align: 'center' },\n  {\n    label: 'Number of Percentage of Reimbursement Claims',\n    type: 'number',\n    data: 'reimbursement_percent',\n    align: 'center',\n    suffix: '%'\n  }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [\n      { item: 'Reimbursement within TAT', reimbursement_count: 0, reimbursement_percent: 0 },\n      { item: 'Reimbusement above TAT', reimbursement_count: 0, reimbursement_percent: 0 }\n    ],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { reimbursement_category: 'ALL' }\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    reimbursement_category: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    reimbursement_category: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Aging Report')\n    BreadcrumbsService.setSelectedItems(['agingReimbursement'])\n    fetchRecords()\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      setClaims(state => ({\n        ...state,\n        data: results\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Aging Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Reimbursement Category: ${claims.filter.reimbursement_category}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ]\n        ],\n        fileName: 'Reimbursement Aging Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, filter: { ...state.filter, [category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [category]: setTimeout(() => {\n          // use constant (this also used in Reimbursement Claim page)\n          const const_types = ClaimTypes.Reimbursement.subType\n\n          if (value) {\n            const _value = value.toLowerCase()\n            const filtered = const_types\n              .map(i => i.text)\n              .filter(j => {\n                const lower_case = j.toLowerCase()\n\n                return lower_case.includes(_value)\n              })\n\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...filtered] }))\n          } else {\n            setSuggestion(state => ({ ...state, [category]: ['ALL', ...const_types.map(i => i.text)] }))\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Reimbursment Category</Typography>\n              <AutoComplete\n                placeholder='Search by reimbursement Category'\n                id='reimbursment-category'\n                value={claims.filter.reimbursement_category}\n                suggestions={suggestion.reimbursement_category}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'reimbursement_category',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`} align={headCell.align}>\n                    {headCell.label}\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                      align={col.align}\n                    >\n                      {col.suffix\n                        ? `${formatData({ type: col.type, source: claim, field: col.data })}${col.suffix}`\n                        : formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './DetailedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Process Date', sortField: 'process_date', search: true, sort: true, match: 'date', type: 'date' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'currency', align: 'right' },\n  { label: 'Claim Status', sortField: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Section', sortField: 'section', search: true, sort: true, match: 'any' },\n  { label: 'User', sortField: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', sortField: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', sortField: 'claim_sub_type', search: true, sort: true, match: 'any' }\n]\n\nexport default function DetailedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    total_received: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Claims Report')\n    BreadcrumbsService.setSelectedItems(['detailedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], grand_total, count, limit, page, total_received } = res.data.data\n\n      setClaims(state => ({ ...state, data: results, count, page, limit, total_amount: grand_total, total_received }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results, grand_total, total_received, count } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [\n            '\\r\\n',\n            ['Number of Claims Received:', `${total_received}`],\n            '\\r\\n',\n            ['Number of Claims Processed:', `${count}`],\n            '\\r\\n',\n            ['Amount of Claims Processed:', `${grand_total}`]\n          ]\n        ],\n        fileName: 'Detailed Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`${item.claim_number}-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        align={col.align}\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.sortField })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            // footerComponent={\n            //   <Typography variant='caption' className='bold'>\n            //     <span>Total Amount: </span>\n            //     <span>{CurrencyFormatter(claims.total_amount)}</span>\n            //   </Typography>\n            // }\n          />\n        </div>\n        {/* trial ugly */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Received: ${claims.total_received}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Processed: ${claims.count}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>\n              {`Amount of Claims Processed: ${CurrencyFormatter(claims.total_amount)}`}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedPerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  // { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'TAT per Claim', data: 'tat_claim', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Performance Report')\n    BreadcrumbsService.setSelectedItems(['detailedPerformanceReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedPerformanceReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './DetailedMonitoringReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No', data: 'no' },\n  { label: 'Date Received', data: 'date_received', type: 'date', search: true, sort: true, match: 'start' },\n  { label: 'Date Due', data: 'date_due', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Process Date', data: 'date_processed', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', data: 'claim_sub_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Section', data: 'claim_section', search: true, sort: true, match: 'any' },\n  { label: 'Claim User', data: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Handling Time per Claim', data: 'handling_per_claim', search: true, sort: true, match: 'any' },\n  { label: 'Section Handling Time Beyond KPI', data: 'handling_beyond_kpi', search: true, sort: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'date' },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'date_received',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Monitoring Report')\n    BreadcrumbsService.setSelectedItems(['detailedMonitoringReport'])\n\n    // autofilter today\n    handleOnClickFilter(claims)\n  }, [])\n\n  const handleOnClickFilter = args => {\n    if (validate()) return\n\n    fetchRecords({ ...claims, ...args })\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n    fetchRecords({ ...claims, filter: { ...claims.filter, [field]: { value, match } } })\n  }\n\n  const handleOnPaginate = params => {\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ...claims, ...params })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedMonitoringReport({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Monitoring Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Detailed Monitoring Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnFilter({\n                                  field: headCell.data,\n                                  value: search,\n                                  match: headCell.match\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n// Pages\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport TransmittalReport from './../Components/Reports/TransmittalReport/TransmittalReport'\nimport TreasuryTransmittalReport from '../Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport'\nimport PRCheckReport from '../Components/Reports/PRCheckReport/PRCheckReport'\nimport UtilizationReport from '../Components/Reports/UtilizationReport/UtilizationReport'\nimport LoadingHimsData from '../Components/Reports/LoadingHimsData/LoadingHimsData'\nimport ConfinementReport from '../Components/Reports/ConfinementReport/ConfinementReport'\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\nimport ReimbursementReport from '../Components/Reports/ReimbursementReport/ReimbursementReport'\nimport ClaimsSummaryReport from '../Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport'\nimport ProductivityPerformaceReport from '../Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport'\nimport ReturnedClaimsReport from '../Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport'\nimport PerformanceReport from '../Components/Reports/PerformanceReport/PerformanceReport'\nimport AgingPartialApprovedReport from '../Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport'\nimport AgingReturnClaimReport from '../Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport'\nimport ClaimsBeyond3MonthsReport from '../Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport'\nimport ReimbursementAgingReport from '../Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport'\nimport DetailedClaimsReport from '../Components/Reports/DetailedClaimsReport/DetailedClaimsReport'\nimport DetailedPerformanceReport from '../Components/Reports/DetailedPerformanceReport/DetailedPerformanceReport'\nimport DetailedMonitoringReport from '../Components/Reports/DetailedMonitoringReport/DetailedMonitoringReport'\n\nconst reportPages = {\n  transmittal: {\n    name: 'transmittal',\n    label: 'Transmittal Report',\n    to: '/reports/transmittal-report',\n    component: TransmittalReport\n  },\n  utilizationLedger: {\n    name: 'utilizationLedger',\n    label: 'Generate Utilization Ledger',\n    to: '/reports/utilization-ledger',\n    component: ClaimsUtilLedgerReport\n  },\n  treasuryTransmittalReport: {\n    name: 'treasuryTransmittalReport',\n    label: 'View Treasury Transmittal',\n    to: '/reports/treasury-reports',\n    component: TreasuryTransmittalReport\n  },\n  utilizationReport: {\n    name: 'utilizationReport',\n    label: 'View Account & Member Utilization',\n    to: '/reports/utilization',\n    component: UtilizationReport\n  },\n  prReports: {\n    name: 'prReports',\n    label: 'View PR and Check Details',\n    to: '/reports/pr-reports',\n    component: PRCheckReport\n  },\n  loadingHimsData: {\n    name: 'loadingHimsData',\n    label: 'Template for Loading HIMS Data',\n    to: '/reports/loading-hims-data',\n    component: LoadingHimsData\n  },\n  confinementReport: {\n    name: 'confinementReport',\n    label: 'List of Emergencies Leading to Confinement Report',\n    to: '/reports/confinement-report',\n    component: ConfinementReport\n  },\n  paymentRequestReport: {\n    name: 'paymentRequestReport',\n    label: 'Payment Request Report',\n    to: '/reports/payment-request-report',\n    component: PaymentRequestReport\n  },\n  reimbursementReport: {\n    name: 'reimbursementReport',\n    label: 'Reimbursement Claims Report',\n    to: '/reports/reimburesment-report',\n    component: ReimbursementReport\n  },\n  claimsSummaryReport: {\n    name: 'claimsSummaryReport',\n    label: 'Claims Summary Report',\n    to: '/reports/claims-summary-report',\n    component: ClaimsSummaryReport\n  },\n  productivityPerformaceReport: {\n    name: 'productivityPerformaceReport',\n    label: 'Productivity and Performance Report',\n    to: '/reports/productivity-performance',\n    component: ProductivityPerformaceReport\n  },\n  returnedClaimsReport: {\n    name: 'returnedClaimsReport',\n    label: 'Returned Claims Report',\n    to: '/reports/returned-claims',\n    component: ReturnedClaimsReport\n  },\n  performanceReport: {\n    name: 'performanceReport',\n    label: 'Performance Summary Report',\n    to: '/reports/performance',\n    component: PerformanceReport\n  },\n  agingPartialApprovedReport: {\n    name: 'agingPartialApprovedReport',\n    label: 'Aging of Partially Approved Claims Report',\n    to: '/reports/aging-partial-approve-claims',\n    component: AgingPartialApprovedReport\n  },\n  agingReturnedClaims: {\n    name: 'agingReturnedClaims',\n    label: 'Aging of Returned Claims Report',\n    to: '/reports/aging-returned-claims',\n    component: AgingReturnClaimReport\n  },\n  claimsBeyond3Months: {\n    name: 'claimsBeyond3Months',\n    label: 'Claims Beyond 3 Months Report',\n    to: '/reports/claims-beyond-3-months',\n    component: ClaimsBeyond3MonthsReport\n  },\n  agingReimbursement: {\n    name: 'agingReimbursement',\n    label: 'Reimbursement Aging Report',\n    to: '/reports/aging-reimbursement',\n    component: ReimbursementAgingReport\n  },\n  detailedClaimsReport: {\n    name: 'detailedClaimsReport',\n    label: 'Detailed Claims Report',\n    to: '/reports/detailed-claims',\n    component: DetailedClaimsReport\n  },\n  detailedPerformanceReport: {\n    name: 'detailedPerformanceReport',\n    label: 'Detailed Performance Report',\n    to: '/reports/detailed-performance',\n    component: DetailedPerformanceReport\n  },\n  detailedMonitoringReport: {\n    name: 'detailedMonitoringReport',\n    label: 'Detailed Monitoring Report',\n    to: '/reports/detailed-monitoring',\n    component: DetailedMonitoringReport\n  }\n}\n\nconst reportsItems = {\n  BATCH_ENCODER: ['utilizationLedger', 'transmittal', 'confinementReport'],\n  BATCH_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'transmittal',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_DETAILS_ENCODER: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_ANALYST: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER_SUPERVISOR: [\n    'utilizationLedger',\n    'loadingHimsData',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  MEDICAL_CONSULTANT: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_RECON: [\n    'utilizationLedger',\n    'transmittal',\n    'prReports',\n    'treasuryTransmittalReport',\n    'utilizationReport',\n    'reimbursementReport',\n    'confinementReport'\n  ],\n  CLAIMS_VERIFIER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ],\n  CLAIMS_MANAGER: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport',\n    'detailedPerformanceReport',\n    'detailedMonitoringReport'\n  ]\n}\nconst generateBreadCrumbs = userRole => {\n  let breads = {}\n  for (const r of reportsItems[userRole]) {\n    breads[r] = { text: reportPages[r].label, to: reportPages[r].to }\n  }\n  return breads\n}\n\nconst generateSideBar = userRole => {\n  return {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: (reportsItems[userRole] && reportsItems[userRole].map(r => reportPages[r])) || []\n  }\n}\n\nconst generateRoutes = userRole => {\n  return reportsItems[userRole].map(r => (\n    <Route key={reportPages[r].name} exact path={reportPages[r].to} component={reportPages[r].component} />\n  ))\n}\n\nexport { generateSideBar, generateBreadCrumbs, generateRoutes }\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name', match: 'any' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle', match: 'any' },\n  { id: 'total-batch', name: 'Total Batches', sortField: 'total_batch', match: 'any' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ])\n      .then(values => {\n        const [batchEncoders, count] = values\n        setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    setFetching(true)\n    services\n      .getBatchEncoderWork({ limit: 10, sort: 'name|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatchEncoderWork(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={item.id}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.data.map((item, index) => (\n                <TableRow key={item.user_id}>\n                  <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                  <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                  <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                  <TableCell id={`view-work-${index}`}>\n                    <Link to={`/batch-encoder-work/${item.user_id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='bundle-and-batch-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    setFetching(true)\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: viewList.limit, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claim-for-Reconciliation'\n        count={{ color: 3, value: claims.for_recon.count, id: 'claim-for-Reconciliation-count' }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map((item, index) => (\n                  <TableCell\n                    key={index}\n                    // id={item.id}\n                  >\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.for_recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number}</TableCell>\n                  <TableCell>{item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell id={`view-review-${index}`}>\n                    <Link to={`/claims/recon/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claim-for-Reconciliation'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from '../instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id='reassign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false, showIcon = true } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {showIcon ? icon({ iconStyle }) : ''}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState()\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  console.log(common, loa)\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\n// import ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  // const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (claim_type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              LoadingService.loading(false)\n            }\n          }\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && !isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-customer-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_number\n                  }}\n                >\n                  <TextField\n                    id='company-account-number'\n                    label='Customer Account Number'\n                    value={claim.client_account_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                    error={errors.client_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='client-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickClientLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-company-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_name\n                  }}\n                >\n                  <TextField\n                    id='company-name'\n                    label='Company Name'\n                    value={claim.client_account_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                    error={errors.client_account_name}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {permissions.read && isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n                {permissions.update && (\n                  <div className={classes.search}>\n                    <Button\n                      id='client-account-number-search'\n                      variant='outlined'\n                      className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                      onClick={handleOnClickClientLookup}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  </div>\n                )}\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={claim.client_account_name}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoments\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children } = props\n  return <div className={classes.root}>{children}</div>\n}\n\nconst ICDTextField = props => {\n  const {\n    required,\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n      </div>\n      <div className={classes['sub-wrapper']}>\n        <div className={classes.delete}>\n          {permissions.delete && (\n            <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          )}\n        </div>\n\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              field={'description'}\n              loading={fetching['description']}\n              onChange={onChangeDescription}\n              error={error.description}\n              readOnly={!permissions.update}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            field={'code'}\n            loading={fetching['code']}\n            onChange={onChangeCode}\n            error={error.code}\n            readOnly={!permissions.update}\n          />\n        </div>\n        <div className={classes.primary}>\n          <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GivenDiagnosisField = props => {\n  const {\n    required,\n    id = '',\n    givenDiag = '',\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    error = { description: '', code: '' },\n    permissions,\n    fetching = {}\n  } = props\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <Typography variant='subtitle2' className={classes.delete}>\n            {''}\n          </Typography>\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis {required && ' *'}\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={error.given_diagnosis}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField, GivenDiagnosisField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField, GivenDiagnosisField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsAdjudicationServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                console.log('fetched', data)\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields>\n              {items.map((item, index) => (\n                <React.Fragment key={`diagnosis-${index}`}>\n                  {/* // Given Diagnosis */}\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-given-${index}`}\n                    discrepancy={{\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    showIcon={false}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <GivenDiagnosisField\n                      required\n                      id={`given-diagnosis-${index}`}\n                      givenDiag={item.given_diagnosis}\n                      onChangeGivenDiag={(value, search) =>\n                        handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                      }\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                      suggestions={suggestions}\n                      error={error && error.items && error.items[index]}\n                    />\n                  </DiscrepancyBase>\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-${index}`}\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <ICDTextField\n                      required\n                      key={`icd-${index} ${error[index]}`}\n                      id={`icd-description-${index}`}\n                      codeId={`icd-code-${index}`}\n                      error={error && error.items && error.items[index]}\n                      description={item.description}\n                      suggestions={suggestions}\n                      code={item.code}\n                      primary={item.primary}\n                      onChangeDescription={(value, search) =>\n                        handleOnChangeIcd10({ field: 'description', index, value, search })\n                      }\n                      onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                      onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                      onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                      fetching={fetching[index]}\n                      permissions={permissions}\n                    />\n                  </DiscrepancyBase>\n                </React.Fragment>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      const _value = value || {}\n      return dispatch(\n        setProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt}\n                    field={'description'}\n                    onChange={(value, search) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        search\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt}\n                    field={'code'}\n                    onChange={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={procedure.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={procedure.details.amount_not_covered > 0}\n                      disableComponents={procedure.details.amount_not_covered === 0}\n                      value={procedure.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={procedure.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={procedure.details.amount_due_from_member > 0}\n                      disableComponents={procedure.details.amount_due_from_member === 0}\n                      value={procedure.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={procedure.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={procedure.details.amount_due_from_client > 0}\n                      disableComponents={procedure.details.amount_due_from_client === 0}\n                      value={procedure.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0 } = item\n  // , amount_due_from_member = 0, amount_due_from_client = 0\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) + parseFloat(philhealth_amount_paid) + parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    readOnly={!permissions.update}\n                    error={_errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem}\n                    field={'name'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem}\n                    field={'item_code'}\n                    onChange={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={hospitalItem.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={hospitalItem.details.amount_not_covered > 0}\n                      disableComponents={hospitalItem.details.amount_not_covered === 0}\n                      value={hospitalItem.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={hospitalItem.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={hospitalItem.details.amount_due_from_member > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                      value={hospitalItem.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={hospitalItem.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={hospitalItem.details.amount_due_from_client > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_client === 0}\n                      value={hospitalItem.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_given_diagnosis}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.diagnosis_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  suggestions={pfSuggestions.specialization}\n                  field={'description'}\n                  loading={fetching['description']}\n                  onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={professionalFee.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={professionalFee.details.amount_not_covered > 0}\n                      disableComponents={professionalFee.details.amount_not_covered === 0}\n                      value={professionalFee.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={professionalFee.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={professionalFee.details.amount_due_from_member > 0}\n                      disableComponents={professionalFee.details.amount_due_from_member === 0}\n                      value={professionalFee.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={professionalFee.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={professionalFee.details.amount_due_from_client > 0}\n                      disableComponents={professionalFee.details.amount_due_from_client === 0}\n                      value={professionalFee.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    onReject,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReassign,\n    onSave,\n    onEscalate,\n    onApprove,\n    onCancel,\n    isReimbursement,\n    onRemove,\n    onViewClaimNotice,\n    onReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [], reimbursement_info_analyst = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [discrepancyModal, setDiscrepancyModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [hasNotCovered, setHasNotCovered] = React.useState(false)\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  const hasAmountNotCovered = ({\n    dental_procedures = [],\n    procedures = [],\n    hospital_items = [],\n    professional_fees = []\n  }) => {\n    dental_procedures = dental_procedures || []\n    procedures = procedures || []\n    hospital_items = hospital_items || []\n    professional_fees = professional_fees || []\n\n    for (const item of [...dental_procedures, ...procedures, ...hospital_items, ...professional_fees]) {\n      if (item.reason || item.amount_not_covered) return true\n    }\n    return false\n  }\n\n  // Reactive\n  React.useEffect(() => {\n    const notCovered = hasAmountNotCovered(claim)\n    console.log(notCovered)\n    setHasNotCovered(notCovered)\n  }, [claim])\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowApprovalMatrix = ({ skip = false }) => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        setApproveModal({\n          show: true,\n          message:\n            'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n        })\n      } else {\n        if (!skip) {\n          setApproveModal({ show: true, message: 'Are you sure you want to approve the claim?' })\n        } else {\n          onApprove({ goBack: false })\n        }\n      }\n    } else {\n      onApprove({ goBack: false })\n    }\n\n    return true\n  }\n\n  const handleOnApproval = () => {\n    const { diagnosis, procedure, hospital_item, professional_fee, ...others } = discrepancy\n\n    if (\n      Object.keys(diagnosis).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      Object.entries(others).find(([key, value]) => value.length > 0)\n    ) {\n      setDiscrepancyModal(true)\n      return false\n    }\n\n    handleOnShowApprovalMatrix({ skip: false })\n    return true\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const rmLogicReturn = infos => {\n    // no reimbursement_info\n    if (infos.length < 0) return false\n    // multiple reimbursement_info\n    if (infos.length > 1) return true\n\n    // check if reimbursement_info [0] is filler\n    if (infos.length === 1) {\n      const info = infos[0]\n      return !!(info.date_released && info.date_return)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && rmLogicReturn(reimbursement_info) && (\n          <Button\n            id='btn-return-advice'\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => onViewClaimNotice({})}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                id='btn-view-analysis'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewAnalysisSheet({ goBack: false })}\n                onClick={() => onViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                id='btn-view-loa'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewLetterOfAdvice({ goBack: false })}\n                onClick={() => onViewLetterOfAdvice({ goBack: false })}\n                disabled={(disabled && permissions.letter_of_advice.enabled) || !hasNotCovered}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                id='btn-escalate'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                id='btn-reject'\n                variant='contained'\n                color='secondary'\n                onClick={() =>\n                  !doValidateMiddleware() && (isReimbursement ? onReject({ goBack: false }) : setRejectModal(true))\n                }\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnApproval()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n            {SafeAccess(permissions, ['close']) ? (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => onCancel({ goBack: true })}>\n                Close\n              </Button>\n            ) : (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n                Cancel\n              </Button>\n            )}\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                id='btn-reassign'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id='escalation-text'\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      id='escalate-cancel'\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      id='escalate-submit'\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                onEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                onReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && onReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              onReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={discrepancyModal}\n            message={'There is a highlighted claim item for checking. Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setDiscrepancyModal(false)}\n            onOk={() => {\n              setDiscrepancyModal(false)\n              handleOnShowApprovalMatrix({ skip: true })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              onApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            onSave({ goBack: 'dashboard' })\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            onCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            onRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`, {})\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`, {}))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`, {}))\n\n      if (rnb.nodes) {\n        const _keys = Object.keys(rnb.nodes).sort()\n        const _name = _keys[_keys.length - 1]\n        setLastRoomAndBoard(_name)\n        setBenefitCategory(_name)\n      }\n      setPlanPackage('RB')\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`, {}))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'code', search: true, match: 'start' },\n  { name: 'Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Location', sortField: 'location', search: true, match: 'any' },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true, match: 'start' },\n  { name: 'Doctor Name', sortField: 'name', search: true, match: 'any' },\n  { name: 'Specialization', sortField: 'specialization', search: true, match: 'any' },\n  { name: 'Schedule', sortField: 'schedule', search: true, match: 'any' },\n  { name: 'Remarks', sortField: 'remarks', search: false, match: 'any' }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  // const [partnerId, setPartnerId] = React.useState('')\n  // const [partnerName, setPartnerName] = React.useState('')\n  // const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    filter: {},\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    search: '',\n    data: [],\n    filtered: [],\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchPartner = args => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: {\n        search: args.search,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        page: args.page,\n        filter: args.filter,\n        limit: args.limit\n      }\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      setPartners(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit\n      }))\n    })\n  }\n\n  const fetchDoctors = args => {\n    console.log(args)\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: {\n        limit: args.limit,\n        page: args.page,\n        filter: args.filter,\n        sort: `${args.orderBy}|${args.order ? 'asc' : 'desc'}`,\n        search: args.search\n      },\n      facility_id: args.facility_id\n    }).then(res => {\n      const { results, count, limit, page } = res.data.data\n      console.log(results)\n      setDoctors(state => ({\n        ...state,\n        show: true,\n        data: results,\n        count,\n        limit,\n        page\n        // filtered: data.results,\n        // filters\n      }))\n    })\n  }\n\n  const onQueryColumn = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      fetchDoctors(_params)\n    }\n  }\n\n  const onQueryAll = params => {\n    const _params = {\n      ...partners,\n      ...params\n    }\n\n    fetchPartner(_params)\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        ...params\n      }\n\n      setPartners(state => ({ ...state, ...params }))\n      fetchPartner(_params)\n    } else {\n      const _params = {\n        ...doctors,\n        ...params\n      }\n\n      setDoctors(state => ({ ...state, ...params }))\n      fetchDoctors(_params)\n    }\n  }\n\n  const handleOnClickAffiliated = params => {\n    const _params = {\n      ...doctors,\n      ...params\n    }\n\n    setDoctors(state => ({ ...state, facility_id: params.facility_id }))\n    fetchDoctors(_params)\n  }\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchPartner(partners)\n  }, [memberAccountNumber])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            //  onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            onChange={event => {\n              const search = event.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  onQueryAll({ search, page: 1 })\n                  setPartners(state => ({ ...state, search }))\n                }, 500)\n              )\n            }}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    // onClick={hanleOnPaginate('partners', headCell.sortField)}\n                    onClick={() => handleOnPaginate('partners', { orderBy: headCell.sortField, order: !partners.order })\n                    }\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            setPartners(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                            onQueryColumn('partners', { filter: { ...partners.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                          }, 500)\n                        )\n                      }\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.code}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.location}</span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => handleOnClickAffiliated({ facility_id: row.code })}\n                      // onChange={() => {}}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        // onClick={handleOnSort('doctors', cell.sortField)}\n                        onClick={() => handleOnPaginate('doctors', { orderBy: cell.sortField, order: !doctors.order })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                setDoctors(p => ({ ...p, filter: { ...p.filter, [cell.sortField]: { value: search, match: cell.match } } }))\n                                onQueryColumn('doctors', { filter: { ...doctors.filter, [cell.sortField]: { value: search, match: cell.match } }, page: 1 })\n                              }, 500)\n                            )\n                          }\n                          }\n                          // onChange={event => {}}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.data.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.data.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {row.specialization}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component, MozillaPdf } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // const { getMemberContractUrl, getClientContractUrl } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  // const [fileUrl, setFileUrl] = React.useState(null)\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  // React.useEffect(() => {\n  //   let mct = ''\n\n  //   if (isMember) {\n  //     if (!member) return\n  //     mct = member.benefit_tree.MCT.details._id\n  //     setFileUrl(getMemberContractUrl({ mct }))\n  //   } else {\n  //     if (!client) return\n  //     mct = client.benefit_tree.MCT.details._id\n  //     setFileUrl(getClientContractUrl({ mct }))\n  //   }\n  // }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {/* <div className={classes.pdf}>\n          <MozillaPdf fileUrl={fileUrl} />\n        </div> */}\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const {\n    claim,\n    permissions,\n    isMember,\n    member,\n    memberFetchStatus,\n    client,\n    clientFetchStatus,\n    utilizationLoa,\n    memberFetchMessage\n  } = props\n  // Services\n  const {\n    getUtilizations,\n    getPartners,\n    getDoctors,\n    getMemberContract,\n    getClientContract,\n    getMemberContractUrl,\n    getClientContractUrl\n  } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '412' && (\n            <div className={classes.center}>\n              <Typography>{`${memberFetchMessage}`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n              getMemberContractUrl={getMemberContractUrl}\n              getClientContractUrl={getClientContractUrl}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox title='Reassignee Notes' messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      contract_plan_type: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n  console.log('inpatient', error)\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Date Admitted'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Date Discharged'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      required\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'id'}\n                      loading={fetching['anesthesiologist_id']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist}\n                      field={'full_name'}\n                      loading={fetching['anesthesiologist_name']}\n                      onChange={(value, search) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          search\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={dropDown.sub_sub_types}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n// import ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_id',\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          value,\n                          field: 'facility_name',\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason, getSubTypes } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n    getSubTypes()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_name']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      label='Claim Sub Type'\n                      items={dropDown.sub_types}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showClaimSource\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, type: true })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, onReturn } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packages: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={(value, search) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility}\n                      field={'id'}\n                      loading={fetching['facility_id']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_id',\n                          value\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility}\n                      field={'name'}\n                      loading={fetching['facility_name']}\n                      onChange={({ value }) =>\n                        onChangeFacility({\n                          field: 'facility_name',\n                          value\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          contract_plan_type: data.contract_plan_type,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.from).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                isCM\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  // showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  _id: Joi.string().allow('', null),\n  complied: Joi.boolean().allow(true, false),\n  date_complied: Joi.date().allow('', null),\n  date_created: Joi.date(),\n  date_encoded: Joi.date(),\n  date_return: Joi.date().allow('', null),\n  date_released: Joi.date()\n    .label('Date Released')\n    .required()\n    .messages({ 'string.empty': `\"Date Released\" is required.` }),\n  prepared_by: Joi.string()\n    .trim()\n    .allow('', null),\n  reasons: Joi.array()\n    .items(\n      Joi.object({\n        _id: Joi.string().allow('', null),\n        error: Joi.string().allow('', null),\n        value: Joi.string()\n          .label('Reason')\n          .trim()\n          .required()\n          .messages({ 'string.empty': `\"Reason\" is required.` }),\n        other_details: Joi.string()\n          .trim()\n          .allow('', null)\n      })\n    )\n    .allow(null),\n  released_to: Joi.string()\n    .trim()\n    .label('Released To')\n    .required()\n    .messages({\n      'string.empty': `\"Released To\" is required.`\n    }),\n  remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport NoticeValidator from './NoticeValidator'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  // Variables\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n\n  const { batch_number, claimNumber, member_last_name, member_first_name, member_middle_name } = props.claim\n\n  const { data = [] } = props\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n  const [noticeModal, setNoticeModal] = React.useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (show && reasonDropdown.length <= 0) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [show])\n\n  // API Calls\n  const insertNotice = async ({ item }) => {\n    setLoading(true)\n    const ff = await service.addReimburesmentInfo({ claim_number: claimNumber, data: item })\n    setLoading(false)\n    return ff\n  }\n\n  const updateNotice = async ({ item, index }) => {\n    setLoading(true)\n    const ff = await service.updateReimburesmentInfo({ claim_number: claimNumber, info_id: item._id, data: item })\n    setLoading(false)\n    return ff\n  }\n\n  // Callbacks\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        _id: i._id,\n        complied: i.complied,\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  const handleOnClickPrintNotice = index => {\n    const item = items[index] || {}\n    doViewClaimNotice({ document_id: item._id })\n  }\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const validateItems = ({ items = [] }) => {\n    if (!items.length) {\n      setValidateModal(true)\n    } else setRejectModal(true)\n  }\n\n  // UI Events\n  // Animations\n  const handleOnClickAdd = () => {\n    const openNotice = items.find(i => !i.complied)\n    if (openNotice) return setNoticeModal(true)\n\n    setShowAdd(true)\n    setItems(items => items.map(i => ({ ...i, show: false, showCell: false })))\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  // Data Events\n  const handleOnClickSave = ({ item }) => {\n    insertNotice({ item }).then(res => {\n      const { data } = res.data\n      setItems(items => {\n        const _items = [...items, { ...item, _id: data._id }]\n        handleOnItemSave(_items)\n        return _items\n      })\n      setShowAdd()\n    })\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    updateNotice({ item, index }).then(res => {\n      const { data } = res.data\n      items[index] = { ...data[index], show: false, showCell: false }\n      setItems(items)\n      handleOnItemSave(items)\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setShowAdd()\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <TableRow key={`collapsible-${index}`}>\n                      <TableCell\n                        colSpan={headCells.length}\n                        id={`collabsible-cell-${index}`}\n                        className={classes['collapsible-cell']}\n                      >\n                        <LoadingIndicator type={'overlay'} loading={loading}>\n                          <ItemForm\n                            reasonDropdown={reasonDropdown}\n                            index={index}\n                            item={item}\n                            handleOnClickCancel={handleOnClickCancel}\n                            handleOnClickUpdate={handleOnClickUpdate}\n                            canPrintNotice={canPrintNotice}\n                            service={service}\n                            lookup={lookup}\n                            setReasonDropdown={setReasonDropdown}\n                            handleOnClickPrintNotice={handleOnClickPrintNotice}\n                          />\n                        </LoadingIndicator>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <TableRow key={`collapsible-add`}>\n                  <TableCell\n                    colSpan={headCells.length}\n                    id={`collabsible-cell-add`}\n                    className={classes['collapsible-cell']}\n                  >\n                    <LoadingIndicator type={'overlay'} loading={loading}>\n                      <ItemForm\n                        index='add'\n                        reasonDropdown={reasonDropdown}\n                        item={{}}\n                        handleOnClickCancel={handleOnClickCancel}\n                        handleOnClickSave={handleOnClickSave}\n                        canPrintNotice={canPrintNotice}\n                        service={service}\n                        lookup={lookup}\n                        setReasonDropdown={setReasonDropdown}\n                      />\n                    </LoadingIndicator>\n                  </TableCell>\n                </TableRow>\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => validateItems({ items: items })}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={noticeModal}\n        message='Max of one notice that has not been marked as complied only.'\n        okLabel='Close'\n        onOk={() => {\n          setNoticeModal(false)\n        }}\n      />\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={validateModal}\n        message='Please add at least one entry/info first before rejecting this claim.'\n        okLabel='Okay'\n        onOk={() => {\n          setValidateModal(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n\n  const { index, canPrintNotice = true, item: _item, readOnly, reasonDropdown, handleOnClickPrintNotice } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [notice, setNotice] = React.useState({})\n\n  const [error, setError] = React.useState({ released_to: '', date_released: '' })\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setNotice({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: null,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    setNotice(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    setNotice(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    setNotice(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    setNotice(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const validate = item => {\n    const { showCell, show, ...others } = item\n    const { error } = NoticeValidator(others)\n    console.log(error)\n    if (error) {\n      setError(error)\n      return false\n    } else {\n      return true\n    }\n  }\n\n  return (\n    <div className={`${classes.container} ${!notice.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n      <div className={classes.cell}>\n        <Typography variant='h6' className={classes.label}>\n          {index === 'add' ? 'Add Item' : 'Update Item'}\n        </Typography>\n\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-created-${index}`}\n              label='Date Created'\n              value={notice.date_created}\n              onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n              readOnly={notice.complied}\n              error={error.date_created}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <TextField\n              id={`prepared-by-${index}`}\n              label='Prepared By'\n              value={notice.prepared_by || ''}\n              onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.prepared_by}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-encoded-${index}`}\n              label='Date Encoded'\n              value={notice.date_encoded}\n              onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n              readOnly\n              error={error.date_encoded}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <TextField\n              id={`released-to-${index}`}\n              label='Released To'\n              required\n              value={notice.released_to || ''}\n              onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.released_to}\n            />\n          </div>\n        </div>\n\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DatePicker\n              id={`date-released-${index}`}\n              label='Date Released'\n              required\n              value={notice.date_released}\n              onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n              readOnly={notice.complied}\n              error={error.date_released}\n            />\n          </div>\n\n          <div className={classes['input']}>\n            <DatePicker\n              id={`return-date-${index}`}\n              label='Return Date'\n              value={notice.date_return}\n              onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n              readOnly={notice.complied}\n              disabled={index === 'add'}\n              error={error.date_return}\n            />\n          </div>\n\n          <div className={classes['input']} style={{ width: '50%' }}>\n            <TextField\n              constainerStyle={{ width: 'unset', flex: 1 }}\n              multiline\n              rows={3}\n              id='remarks'\n              label='Remarks'\n              value={notice.remarks || ''}\n              onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n              readOnly={notice.complied}\n              error={error.remarks}\n            />\n          </div>\n        </div>\n\n        <div className={classes['reasons-container']}>\n          <div className={classes.header}>\n            <Typography variant='subtitle2' className={classes.label}>\n              Reasons\n            </Typography>\n            <Typography variant='subtitle2' className={classes.label}>\n              Other Details\n            </Typography>\n\n            <div className={classes.delete} />\n          </div>\n\n          {/* Reasons */}\n          {(notice.reasons || []).map((reason, _index) => (\n            <div className={classes.reasons} key={`reason-${_index}`}>\n              <div className={classes['input']}>\n                <DropDown\n                  // noMargin\n                  items={reasonDropdown}\n                  id={`reason-text-${_index}`}\n                  value={reason.value || ''}\n                  onChange={event => handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })}\n                  readOnly={notice.complied}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  noMargin\n                  id={`reason-other-details-${_index}`}\n                  value={reason.other_details || ''}\n                  onChange={event =>\n                    handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                  }\n                  readOnly={notice.complied}\n                />\n              </div>\n\n              <div className={classes.delete}>\n                {!notice.complied && (\n                  <IconButton id='delete-reason' onClick={() => handleOnClickRemoveReason(_index)}>\n                    <DeleteIcon fontSize='small' />\n                  </IconButton>\n                )}\n              </div>\n            </div>\n          ))}\n\n          {error.reasons && <span className={classes.error}>{error.reasons}</span>}\n\n          {!notice.complied && (\n            <Typography\n              variant='body2'\n              className={`${classes['add-link']} ${(notice.reasons || []).length ? '' : classes['empty-reasons']}`}\n              onClick={() => handleOnClickAddReason()}\n            >\n              + Add a reason\n            </Typography>\n          )}\n\n          {/* Reasons */}\n        </div>\n\n        <div className={classes.footer}>\n          {!readOnly && (\n            <React.Fragment>\n              <Button\n                variant='contained'\n                color='primary'\n                id='cancel'\n                className='button-negative'\n                onClick={() => handleOnClickCancel(index)}\n              >\n                Cancel\n              </Button>\n              {index === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='save-for-now'\n                    className='button-positive'\n                    onClick={() => validate(notice) && handleOnClickSave({ index, item: notice })}\n                    disabled={notice.complied}\n                  >\n                    Save\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='save-for-now'\n                    className='button-positive'\n                    onClick={() =>\n                      validate(notice) && handleOnClickUpdate({ index, item: { ...notice, complied: false } })\n                    }\n                    disabled={notice.complied}\n                  >\n                    Update\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      validate(notice) && handleOnClickUpdate({ index, item: { ...notice, complied: true } })\n                    }\n                    disabled={notice.complied}\n                  >\n                    Complied\n                  </Button>\n                </React.Fragment>\n              )}\n              {index !== 'add' && canPrintNotice && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnClickPrintNotice(index)}\n                  >\n                    {notice.complied ? 'View Notice' : 'Print Notice'}\n                  </Button>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../../../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onViewClaimNotice, onChangeDoctor = () => {}, onReject, onChangeFacility } = props\n  // Variables\n  const { claim_number } = props.match.params\n  const { claim, permissions, _type, grandTotal } = props\n  const { fetching } = props\n  // Services\n  const { getClaimDetails, onChangePro, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n  const [type, setType] = React.useState('')\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        contract_plan_type: data.contract_plan_type,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        date_to: data.date.to,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type)\n      })\n\n      setBatchNumber(data.batch_number)\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else if (type === 'InPatient') dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      const _claim = Object.assign({}, claim)\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility}\n                    field={'id'}\n                    loading={fetching['facility_id']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility}\n                    field={'name'}\n                    loading={fetching['facility_name']}\n                    onChange={(value, search) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor}\n                      field={'id'}\n                      loading={fetching['doctor_id']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor}\n                      field={'full_name'}\n                      loading={fetching['doctor_name']}\n                      onChange={(value, search) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.startOf('day').toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro}\n                      field={'employee_id'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro}\n                      field={'name'}\n                      loading={fetching['pro_id']}\n                      onChange={(value, search) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          search\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-official-receipt-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.official_receipt_number\n                  }}\n                >\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n              {/* <UploadedList /> */}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doViewClaimNotice={onViewClaimNotice}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            onReject={() => setShowReimbursementModal(true)}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{ ...claim, claimNumber: claim_number }}\n            data={claim.reimbursement_info_analysts}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            permission={permissions.reimbursement_info}\n            service={ClaimsAdjudicationServices}\n            // canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: false })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setDropDown,\n  initDropDowns,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  // addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [isMember, setIsMember] = React.useState(true)\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [memberFetchMessage, setMemberFetchMessage] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n  const [grandTotal, setGrandTotal] = React.useState(0)\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n  const REPORT_RETURN_ADVICE = 5\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  // #region Fetching\n\n  // #region Claims\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      // const diagnosis = data.diagnosis || []\n      // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  // #endregion\n\n  // #region Facility Doctors PRO Anaesthesiologist\n\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    console.log({ value, field, search })\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // #endregion\n\n  // #region Integrations\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchMessage(typeof data.message === 'string' ? data.message : data.message.error.message || '')\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getMemberContractUrl = args => CustomerCareServices.getMemberContractUrl(args)\n\n  const getClientContractUrl = args => CustomerCareServices.getClientContractUrl(args)\n\n  // #endregion\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  // #region Messages\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  // #endregion\n\n  // #region Reports\n\n  const getReport = (mode, params) => {\n    LoadingService.loading(true)\n    // ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n    // const hasAmount = value.data.data.has_amount_concerns\n    let pdf = {}\n    switch (mode) {\n      case REPORT_ANALYSIS_SHEET:\n        pdf = {\n          name: 'Analysis Sheet',\n          fileName: 'analysis_sheet',\n          service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n        }\n        break\n\n      case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n        pdf = {\n          name: 'Reports',\n          fileName: 'reports',\n          service: ApiService.getReports({ claimNo: claimNumber }),\n          onClose: () => props.history.push('/')\n        }\n        break\n\n      case REPORT_LETTER_OF_ADVICE:\n        pdf = {\n          name: 'Letter of Advice',\n          fileName: 'letter_of_advice',\n          service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n        }\n        break\n\n      case NOTICE:\n        pdf = {\n          name: 'Claims Notice',\n          fileName: 'claim_notice',\n          service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n          onClose: () => props.history.push('/')\n        }\n        break\n\n      case REPORT_RETURN_ADVICE:\n        pdf = {\n          name: 'Return Advice',\n          fileName: 'return_advice',\n          service: ApiService.getReturnAdvice({ claim_number: claimNumber, sub_document_id: params.document_id })\n        }\n    }\n\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n    // })\n  }\n\n  // #endregion\n\n  // #region Lookups\n\n  const getReason = () => {\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason_charging']))\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ApiService.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const getSubTypes = () => {\n    dispatch(initDropDowns(['sub_types']))\n    dispatch(initDropDowns(['sub_sub_types']))\n    Promise.all([\n      ApiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      }),\n      ApiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      })\n    ]).then(values => {\n      const [subValues, subSubValues] = values\n      const subTypes = subValues.data.data.results\n      const subSubTypes = subSubValues.data.data.results\n      const sub_types =\n        subTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      const sub_sub_types =\n        subSubTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      dispatch(setDropDown({ sub_types }))\n      dispatch(setDropDown({ sub_sub_types }))\n    })\n  }\n\n  // #endregion\n\n  // #endregion\n\n  // #region Events\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          if (claim_type === 'Reimbursement') getReport(NOTICE)\n          else getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewReturnAdvice = ({ document_id }) => {\n    getReport(REPORT_RETURN_ADVICE, { document_id })\n  }\n\n  const handleOnSave = async ({ goBack = 'dashboard' }) => {\n    // goBack\n    // dashboard\n    // list\n    // stay\n\n    LoadingService.loading(true)\n    const res = await ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      switch (goBack) {\n        case 'dashboard':\n          props.history.push(`/`)\n          return true\n        case 'stay':\n        default:\n          return true\n      }\n    })\n    return res\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number = '', batch_number = '', pr_officer = '' } = props.match.params\n      props.history.push(`/payment-request/${pr_officer}/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  // #endregion\n\n  // #region  Validation\n  const doValidateAll = ({ validator, field = undefined, type = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, type })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, type }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let validate\n    if (type) validate = validator(Object.keys(field || claim))({ ...data }, true)\n    else validate = validator(Object.keys(field || claim))({ ...data })\n\n    const { error = {} } = validate\n\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n  // #endregion\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          fetching={fetching}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          memberFetchMessage={memberFetchMessage}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          // #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          getMemberContractUrl={getMemberContractUrl}\n          getClientContractUrl={getClientContractUrl}\n          getReason={getReason}\n          getRooms={getRooms}\n          getSubTypes={getSubTypes}\n          //  #endregion\n          // #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewReturnAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          // #region SERVICES\n          userManagementService={UserManagementServices}\n          // #endregion\n          // #region VALIDATION\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          // #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    description: Joi.string()\n      .trim()\n      .label('Description')\n      .required(),\n    code: Joi.string()\n      .trim()\n      .label('Code')\n      .required(),\n    tooth_number: Joi.string()\n      .label('Tooth Number')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    flag: Joi.boolean().default(false)\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    name: Joi.string()\n      .trim()\n      .label('Item Name')\n      .required(),\n    item_code: Joi.string()\n      .trim()\n      .label('Item Code')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Doctor Name')\n      .required(),\n    specialization: Joi.string()\n      .trim()\n      .label('Specialization')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setBatches({ data: openBatches, count: openBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Typography\n                      id={`encode-batch-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnEncode(item.batch_number)}\n                    >\n                      Encode\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='open-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const myBatches = batchResponse.data.data.results\n        const myBatchCount = batchCountResponse.data.data\n        setBatches({ data: myBatches, count: myBatchCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                        Update\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='my-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const completedBatches = batchResponse.data.data.results\n        const completedBatchCount = batchCountResponse.data.data\n        setBatches({ data: completedBatches, count: completedBatchCount })\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    setFetching(true)\n    services\n      .getBatches({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setBatches(state => ({ ...state, data: data.results }))\n      })\n      .finally(value => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    setFetchingViewList(true)\n    services\n      .getBatches({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(value => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={item.batch_number}>\n                  <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                  <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/${item.batch_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n      <ViewList\n        id='completed-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true,\n  processor_id = ''\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n                id={`${row.claim_number}-${index}`}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${SafeAccess(row, 'member.first_name', '')} ${SafeAccess(row, 'member.last_name', '')}`}\n                </TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${processor_id}/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      }).finally(() => LoadingService.loading(false))\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    }).catch(() => LoadingService.loading(false))\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button disabled={claims.length <= 0} variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    disabled={claims.length <= 0}\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? (loa.room.length ? loa.room[0].room_type : '') : ''\n  const room_rate = loa.room ? (loa.room.length ? loa.room[0].total_amount : '') : ''\n\n  // const room_type = loa.room ? loa.room[0].room_type : ''\n  // const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => {\n          if (item.value.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n            dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n            dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n          }\n          return {\n            text: item.desc,\n            value: item.value.toUpperCase(),\n            rate: item.rate\n          }\n        })\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.desc,\n        value: item.value,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: loa.corp_guarantee ? 'Yes' : 'No',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? (data[0].rooms || []).map(item => ({\n          text: item.desc,\n          value: item.value,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0].toString() || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n\n  //* check if array\n  loa.procedures = loa.procedures ? Array.isArray(loa.procedures) ? loa.procedures : [] : []\n  loa.professional_fees = loa.professional_fees ? Array.isArray(loa.professional_fees) ? loa.professional_fees : [] : []\n  loa.hospital_items = loa.hospital_items ? Array.isArray(loa.hospital_items) ? loa.hospital_items : [] : []\n\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/Claims/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestion, setSuggestion } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value })\n        .then(res => {\n          const loa = res.data\n\n          if (loa) {\n            try {\n              AutoFill({\n                loa,\n                claim_type,\n                claim\n              })\n            } catch (error) {\n              console.log(error)\n              LoadingService.loading(false)\n            }\n          }\n\n          LoadingService.loading(false)\n        })\n        .finally(() => {\n          LoadingService.loading(false)\n        })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestion({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestion({\n          field: 'contract',\n          suggestion: [{ from, to }]\n          // suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {!isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <TextField\n                  id='approval-code'\n                  label='Approval Code'\n                  required={reqApprovalCode}\n                  value={claim.approval_code}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                  onBlur={handleLoaDetails}\n                  error={errors.approval_code}\n                />\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='loa-number'\n                  label='LOA No.'\n                  required={reqLoaNumber}\n                  value={claim.loa_number}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                  error={errors.loa_number}\n                />\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                />\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextField\n                  id='company-account-number'\n                  label='Customer Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.input}>\n                <TextField\n                  id='company-name'\n                  label='Company Name'\n                  required\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='member-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickMemberLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <TextField\n                id='member-last-name'\n                required\n                label='Member Last Name'\n                value={claim.member_last_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                error={errors.member_last_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-first-name'\n                required\n                label='Member First Name'\n                value={claim.member_first_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_first_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_first_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-middle-name'\n                label='Member Middle Name'\n                required={!!isDental}\n                value={claim.member_middle_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_middle_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_middle_name}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-number'\n                label='Client Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_number'\n                    })\n                  )\n                }\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-name'\n                label='Client Account Name'\n                value={claim.client_account_name}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_name'\n                    })\n                  )\n                }\n                error={errors.client_account_name}\n              />\n            </div>\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        {/* <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography> */}\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    givenDiag = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis,\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis *\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            field={'given_diagnosis'}\n            loading={fetching['given_diagnosis']}\n            onChange={onChangeGivenDiag}\n            error={errors.given_diagnosis}\n          />\n        </div>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            ICD10 Description *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.code}>\n            ICD10 Code *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.primary}>\n            Primary\n          </Typography>\n        </div>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={onChangeDescription}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              field={'code'}\n              loading={fetching['code']}\n              onChange={onChangeCode}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestion,\n  setSuggestion,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [fetching, setFetching] = React.useState([\n    {\n      given_diagnosis: false,\n      description: false,\n      code: false\n    }\n  ])\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, search, index } = args\n    if (search) {\n      dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'icd10', index }))\n      getIcd10Suggestions({ value, by: field, index, synonym: field === 'given_diagnosis' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setClaimDiagnosis({\n          index,\n          data: { description: _value.description, code: _value.code }\n        })\n      )\n      // if (field === 'given_diagnosis') {\n      //   getIcd10Suggestions({ value, by: field, index, synonym: true })\n      // }\n    }\n  }\n\n  const getIcd10Suggestions = ({ value = '', by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setFetching(state => ({ ...state, [index]: { ...state[index], [by]: true } }))\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsEncodingServices.getICDSynonyms({ query: value })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            })\n              .then(res => {\n                const { data } = res.data\n                dispatch(\n                  setSuggestion({\n                    field: by,\n                    suggestion: data\n                  })\n                )\n              })\n              .finally(() => {\n                setFetching(state => ({ ...state, [index]: { ...state[index], [by]: false } }))\n              })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                givenDiag={item.given_diagnosis}\n                description={item.description}\n                suggestions={suggestions}\n                code={item.code}\n                primary={item.primary}\n                onChangeGivenDiag={(value, search) =>\n                  handleOnChangeIcd10({ field: 'given_diagnosis', index, value, search })\n                }\n                onChangeDescription={(value, search) =>\n                  handleOnChangeIcd10({ field: 'description', index, value, search })\n                }\n                onChangeCode={(value, search) => handleOnChangeIcd10({ field: 'code', index, value, search })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n                fetching={fetching[index]}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions}\n              field={'description'}\n              onChange={(value, search) => onChangeDescription(value, search)}\n              loading={fetching['description']}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions}\n            field={'code'}\n            onChange={(value, search) => onChangeCode(value, search)}\n            loading={fetching['code']}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  // const [errorss, setErrors] = React.useState({})\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      // setErrors({})\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      const _value = value || {}\n      return dispatch(\n        setProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {},\n    fetching = {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions}\n              field={'name'}\n              onChange={onChangeName}\n              loading={fetching.name}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            field={'item_code'}\n            onChange={onChangeCode}\n            loading={fetching.item_code}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis, errors, doValidate } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false,\n    name: false,\n    item_code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setHospitalItem({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setHospitalItem({\n          details: {\n            id: _value.id,\n            name: _value.name,\n            item_code: _value.item_code\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'hospitalItem',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, search) => handleOnChangeHospitalItem({ field: 'name', value, search })}\n              onChangeCode={(value, search) => handleOnChangeHospitalItem({ field: 'item_code', value, search })}\n              fetching={fetching}\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestion,\n  setSuggestion,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    doctor_id: false,\n    doctor_name: false,\n    description: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            doctor_id: _value.id,\n            doctor_name: _value.full_name,\n            specialization: _value.specialization.main + ', ' + _value.specialization.major\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'pfDoctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Specialization\n  const handleOnChangeSpecialization = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setProfessionalFee({ details: { [field]: value } }))\n      dispatch(resetSuggestion({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    } else {\n      const _value = value || {}\n      dispatch(\n        setProfessionalFee({\n          details: {\n            specialization: _value.description\n          }\n        })\n      )\n      dispatch(resetSuggestion({ field: 'specialization' }))\n    }\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'specialization',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'id'}\n                loading={fetching['doctor_id']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_id', value, search })}\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor}\n                field={'full_name'}\n                loading={fetching['doctor_name']}\n                onChange={(value, search) => handleOnChangeDoctor({ field: 'doctor_name', value, search })}\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization || ''}\n                suggestions={pfSuggestions.specialization}\n                field={'description'}\n                loading={fetching['description']}\n                onChange={(value, search) => handleOnChangeSpecialization({ field: 'specialization', value, search })}\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestion, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestion({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestion } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestion({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestion } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestion({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  // Variables\n  const { isAdd = false, setShowReimbursementModal } = props\n  // Events\n  const { handleOnSave, doValidate, setOpenDialog, openDialog, onOk, hasClaimChanges } = props\n\n  const [saveAlert, setSaveAlert] = React.useState({ mode: 'list', show: false, next: () => {} })\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const doSaveMiddleware = ({ mode, next = () => {} }) => {\n    if (!hasClaimChanges()) {\n      setSaveAlert(state => ({ ...state, mode, next, show: true }))\n    } else {\n      next()\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='return'\n          className='button-positive'\n          onClick={() =>\n            !doValidateMiddleware() && doSaveMiddleware({ mode: 'stay', next: () => setShowReimbursementModal(true) })\n          }\n          disabled={isAdd}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave('list')}\n      >\n        Save for now\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-and-close'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave('dashboard')}\n      >\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={saveAlert.show}\n        message='Encoded claim details are not yet saved. Do you want to save the claim details first?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setSaveAlert(state => ({ ...state, show: false }))}\n        onOk={async () => {\n          setSaveAlert(state => ({ ...state, show: false }))\n          const res = await handleOnSave(saveAlert.mode)\n          if (res) saveAlert.next()\n        }}\n      />\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangePro,\n    apiService,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    initDefault\n  } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Date Admitted'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Date Discharged'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  required\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n\n  const { doValidateAll, onSave, doValidateProcedure, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'id'}\n                  loading={fetching['anesthesiologist_id']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist}\n                  field={'full_name'}\n                  loading={fetching['anesthesiologist_name']}\n                  onChange={(value, search) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      search\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={dropDown.sub_sub_types}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestion,\n  setSuggestion,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function DentalProcedureForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showPhilhealthRemarks = true,\n    diagnosis,\n    doValidate,\n    errors\n  } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState({\n    description: false,\n    code: false\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = dentalProcedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setDentalProcedure({ details: { [field]: value } }))\n      // const { 1: by } = field.split('_')\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      getCptSuggestions({ value, by: field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'cpt' }))\n      return dispatch(\n        setDentalProcedure({\n          details: { description: _value.description, code: _value.code }\n        })\n      )\n    }\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setFetching(state => ({ ...state, [by]: true }))\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'cpt',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [by]: false }))\n            })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    dentalProcedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={dentalProcedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={dentalProcedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={dentalProcedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, search) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    search\n                  })\n                }\n                onChangeCode={(value, search) => handleOnChangeCpt({ field: 'code', value, search })}\n                fetching={fetching}\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={dentalProcedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={dentalProcedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={dentalProcedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={dentalProcedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {dentalProcedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {dentalProcedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const { doValidateAll, onSave, doValidateDentalProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'id'}\n                  loading={fetching['doctor_id']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor}\n                  field={'full_name'}\n                  loading={fetching['doctor_name']}\n                  onChange={(value, search) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm\n                    errors={errors.procedure}\n                    doValidate={doValidateDentalProcedure}\n                    showPhilhealthField={false}\n                  />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, flag: true })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>APE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'employee_id'}\n                  loading={fetching['pro_id']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro}\n                  field={'name'}\n                  loading={fetching['pro_name']}\n                  onChange={(value, search) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  label='Claim Sub Type'\n                  items={dropDown.sub_types}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>ECU Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packages: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packages: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.desc,\n      rate: item.rate || 0\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  // Used initial for Dental, added here to bypass validation\n  flag: Joi.boolean().default(false),\n\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const { fetching } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              // reqApprovalCode\n              // reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={((value, search) =>\n                    onChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  )}\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={((value, search) =>\n                    onChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  )}\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee, initDefault } = props\n\n  const { claim, getClaimDetails } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    } else initDefault()\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              isCM\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthField={false}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    showAmountPaidByMember={false}\n                    showPhilhealthRemarks={false}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","function BaseUrlFetcher() { }\n\nBaseUrlFetcher.getClientBaseUrl = function () {\n    let baseURL = window.localStorage.CLIENT_URL || `${process.env.REACT_APP_CLIENT_API}/`\n    baseURL = baseURL.replace('/api/', '/')\n    return baseURL\n}\n\nBaseUrlFetcher.getClaimsBaseUrl = function () {\n    let baseURL = window.localStorage.CLAIMS_URL ? window.localStorage.CLAIMS_URL.replace(/\\/$/, '')\n        : window.localStorage.PARTNER_URL ? window.localStorage.PARTNER_URL.replace(/\\/$/, '') \n            : `${process.env.REACT_APP_SERVER_API}`\n    return baseURL\n}\n\nexport default BaseUrlFetcher\n","import React, { Suspense } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Services\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\nimport BaseUrlFetcher from 'Services/BaseUrlFetcher'\n\n// Components\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport DescriptionIcon from '@material-ui/icons/Description'\n\n// Styles\nimport classes from './UploadedList.module.scss'\n\nconst getUrl = () => BaseUrlFetcher.getClaimsBaseUrl()\n// const UPLOADS = 'uploads/test'\n// const mock_data = [\n//   { fileName: 'Sample Contract', fileType: 'PDF', data: `${URL}/${UPLOADS}/Sample Contract.pdf` },\n//   { fileName: 'PDF', fileType: 'PDF', data: `${URL}/${UPLOADS}/pdf.pdf` },\n//   { fileName: 'PNG', fileType: 'PNG', data: `${URL}/${UPLOADS}/png.png` },\n//   { fileName: 'JPG', fileType: 'JPG', data: `${URL}/${UPLOADS}/jpg.jpg` },\n//   { fileName: 'DOC', fileType: 'DOC', data: `${URL}/${UPLOADS}/doc.doc` },\n//   { fileName: 'DOCX', fileType: 'DOCX', data: `${URL}/${UPLOADS}/docx.docx` },\n//   { fileName: 'XLSX', fileType: 'XLSX', data: `${URL}/${UPLOADS}/xlsx.xlsx` },\n//   { fileName: 'MP4', fileType: 'MP4', data: `${URL}/${UPLOADS}/mp4.mp4` }\n// ]\n\nexport default function UploadedList (props) {\n  const { onItemClick = () => {}, field = {}, isAdd = false } = props\n  const [uploads, setUploads] = React.useState([])\n\n  React.useEffect(() => {\n    const { index, value } = field\n    if (!isAdd) {\n      ClaimsServices.getUploads({ where: { [index]: value } }).then(res => {\n        const { data } = res.data\n        const _data = data.map(i => ({\n          fileName: i.file_name,\n          fileType: i.file_type,\n          data: getUrl() + `/uploads/${i.path}`\n          // data: `${URL}/uploads/${i.path}?token=${localStorage.getItem('token') || ''}`\n        }))\n        setUploads(_data)\n      })\n    }\n  }, [])\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Supporting Documents\n        </Typography>\n      </div>\n      <div className={classes['table']}>\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>File Name</TableCell>\n              <TableCell id='sc-due-date'>File Type</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {uploads.length ? uploads.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.fileName}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.fileType}</TableCell>\n                <TableCell align='center' id={`view-work-${index}`}>\n                  <IconButton\n                    id={`print${index}`}\n                    size='small'\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={() =>\n                      onItemClick({\n                        title: item.fileName,\n                        fileName: item.fileName,\n                        fileType: item.fileType.toLowerCase(),\n                        data: item.data\n                      })\n                    }\n                  >\n                    <DescriptionIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            )) : (\n              <TableRow>\n                <TableCell className={classes.handling} colSpan={3}>\n                No files found\n                </TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// https://github.com/plangrid/react-file-viewer\nimport ReactFileViewer from 'react-file-viewer'\n\nimport { fromUrl } from 'Services/Download'\n\n// Styles\nimport classes from './FileViewer.module.scss'\n\nexport default function FileViewer (props) {\n  // Variables\n  const { show = false, title = '', fileName = '', fileType = '', url = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose = () => {} } = props\n  // Local Variables\n\n  const handleDownload = () => {\n    fromUrl({ fileName: fileName, content: url, extension: fileType })\n  }\n\n  return (\n    <Dialog\n      className={classes.root}\n      fullWidth\n      maxWidth='lg'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      PaperProps={{ style: { minHeight: '65vh' } }}\n    >\n      <DialogTitle className={classes['header-container']} disableTypography>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleDownload}>\n            <CloudDownloadIcon />\n          </IconButton>\n\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <ReactFileViewer\n          fileName={fileName}\n          fileType={fileType}\n          filePath={url}\n          errorComponent={props => <Typography> Unsupported File Type</Typography>}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete2/AutoComplete2'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from '../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport UploadedList from './UploadedList/UploadedList'\nimport FileViewer from 'SharedComponents/FileViewer/FileViewer'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport lodash from 'lodash'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nlet prevClaim = null\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  //  Variables\n  const { _claimNumber } = props.match.params\n  const { claim, initDefault, fetching, isAdd } = props\n  // Events\n  const {\n    onChangeFacility,\n    getClaimDetails,\n    onChangeDoctor,\n    onChangePro,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee,\n    doViewClaimNotice = () => {}\n  } = props\n  // Services\n  const { apiService } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  const [viewFile, setViewFile] = React.useState({\n    show: false,\n    title: 'File Preview',\n    fileName: '',\n    fileType: '',\n    data: ''\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(props.isAdd ? 'InPatient' : undefined),\n        ..._lineItemFields\n      }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields({ ...initial_values }))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0] ? data[0].rooms : []).map(room => ({\n              text: room.desc,\n              value: room.value,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          claim_remarks: data.claim_remarks\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        prevClaim = _claim\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(data.reimbursement_details.type)\n        })\n      })\n    } else initDefault()\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  const hasClaimChanges = () => {\n    return lodash.isEqual(prevClaim, claim)\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.desc,\n      value: item.value,\n      rate: item.rate || 0\n    }))\n\n    //* trial - added default claim room rate/type value if no rooms found\n    if (rooms.length) {\n      for (let i of rooms) {\n        if (i.value === claim.room_type) {\n          console.log(i)\n          dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n        }\n      }\n    } else if (type === 'InPatient') dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.room_type\n      delete _claim.date_to\n      delete _claim.loa_notes\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'id'}\n                  loading={fetching['facility_id']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility}\n                  field={'name'}\n                  loading={fetching['facility_name']}\n                  onChange={(value, search) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      search\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'id'}\n                    loading={fetching['doctor_id']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor}\n                    field={'full_name'}\n                    loading={fetching['doctor_name']}\n                    onChange={(value, search) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(date)\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={date => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.department}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro}\n                    field={'employee_id'}\n                    disabled={disableControls}\n                    loading={fetching['pro_id']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro}\n                    field={'name'}\n                    loading={fetching['pro_name']}\n                    onChange={(value, search) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        search\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n              <UploadedList\n                field={{\n                  index: 'tags.properties.claim_number',\n                  value: props.match.params ? props.match.params._claimNumber : ''\n                }}\n                isAdd={props.isAdd}\n                onItemClick={data => setViewFile(state => ({ ...state, ...data, show: true }))}\n              />\n              <FileViewer\n                url={viewFile.data}\n                show={viewFile.show}\n                title={viewFile.title}\n                fileName={viewFile.fileName}\n                fileType={viewFile.fileType}\n                onClose={() => setViewFile(state => ({ ...state, show: false }))}\n              />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            isAdd={isAdd}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n            hasClaimChanges={hasClaimChanges}\n          />\n          <ReimbursementInfo\n            claim={{ ...claim, claimNumber: _claimNumber, batch_number: batchNumber }}\n            data={claim.reimbursement_info}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            doViewClaimNotice={doViewClaimNotice}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description, given_diagnosis: d.given_diagnosis }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description || i.given_diagnosis) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/Claims/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Libraries\nimport moment from 'moment'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemFormValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeFormValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureFormValidator'\nimport DentalProcedureValidator from './Components/DentalProcedureForm/DentalProcedureFormValidator'\nimport DentalProcedureDiagnosisValidator from './Components/DentalProcedureForm/DiagnosisValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from './Components/BaseDetails/SoftValidator'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestion,\n  resetSuggestion,\n  setClaimFacility,\n  setClaimDoctor,\n  setProcedure,\n  setDentalProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  // addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro,\n  setDropDown\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService, isAdd = false } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  // const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const error = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  // Line Item Form Store\n  const _dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const _procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const _hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const _professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(resetError())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [fetching, setFetching] = React.useState({\n    facility_id: false,\n    facility_name: false,\n    doctor_id: false,\n    doctor_name: false,\n    pro_id: false,\n    pro_name: false,\n    anesthesiologist_id: false,\n    anesthesiologist_name: false\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        // const { diagnosis = [] } = data\n        // diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n        callback(data)\n      })\n  }\n\n  //* need to refector if to add addt'l default\n  //* this only support facility\n  const initDefault = () => {\n    apiService.getBatch({ batch_number: props.match.params._batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimFacility({ facility_id: data.facility.id, facility_name: data.facility.name }))\n      apiService\n        .lookups({\n          on: 'medical-partner',\n          params: { query: data.facility.id, by: 'id' }\n        })\n        .then(response => {\n          const [facility] = response.data.data\n          const rooms = (facility.rooms || []).map(item => ({\n            text: item.desc,\n            value: item.value,\n            rate: item.rate || 0\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n    })\n    Promise.all([\n      apiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      }),\n      apiService.lookups({\n        on: 'maintenance',\n        params: { field: 'claims-sub-sub-type', filter: { status: { value: 'Active', match: 'start' } } }\n      })\n    ]).then(values => {\n      const [subValues, subSubValues] = values\n      const subTypes = subValues.data.data.results\n      const subSubTypes = subSubValues.data.data.results\n      const sub_types =\n        subTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      const sub_sub_types =\n        subSubTypes.map(i => ({\n          value: i.description,\n          text: i.description\n        })) || []\n      dispatch(setDropDown({ sub_types }))\n      dispatch(setDropDown({ sub_sub_types }))\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, search }) => {\n    if (search) {\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ [field]: value }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by, field })\n    } else {\n      const _value = value || {}\n      dispatch(resetSuggestion({ field: 'facility' }))\n      dispatch(setClaimFacility({ facility_id: _value.id, facility_name: _value.name }))\n      return _value.rooms\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'facility',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ doctor_id: _value.id, doctor_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'doctor' }))\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'doctor',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimPro({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimPro({ pro_name: _value.name, pro_id: _value.employee_id }))\n      dispatch(resetSuggestion({ field: 'pro' }))\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field })\n            .then(res => {\n              // limit temporary - no limit in api seer\n              const limit = []\n              for (let i = 0; i < 10; i++) {\n                if (!res.data.data[i]) break\n                limit.push(res.data.data[i])\n              }\n\n              const data = limit.map(elem => {\n                let full_name = `${elem.first_name} ${elem.last_name}`\n                delete elem.first_name\n                delete elem.last_name\n                return { ...elem, name: full_name }\n              })\n\n              dispatch(\n                setSuggestion({\n                  field: 'pro',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, search }) => {\n    if (search) {\n      dispatch(setClaimDoctor({ [field]: value }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by, field })\n    } else {\n      const _value = value || {}\n      dispatch(setClaimDoctor({ anesthesiologist_id: _value.id, anesthesiologist_name: _value.full_name }))\n      dispatch(resetSuggestion({ field: 'anesthesiologist' }))\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by, field }) => {\n    if (value.trim().length < 3) return\n\n    setFetching(state => ({ ...state, [field]: true }))\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              dispatch(\n                setSuggestion({\n                  field: 'anesthesiologist',\n                  suggestion: data\n                })\n              )\n            })\n            .finally(() => {\n              setFetching(state => ({ ...state, [field]: false }))\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Return Advice\n  const handleOnViewReturnAdvice = ({ document_id }) => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Return Advice',\n      fileName: 'return_advice',\n      service: apiService.getReturnAdvice({ claim_number: _claimNumber, sub_document_id: document_id })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, flag = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, flag })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (_procedure.show || _dentalProcedure.show) {\n      const error = flag\n        ? doValidateDentalProcedure({ data: _dentalProcedure.details, index: _dentalProcedure.index, flag })\n        : doValidateProcedure({ data: _procedure.details, index: _procedure.index })\n      if (Object.keys(error).length > 0) {\n        procedure = { ...error }\n        if (flag) {\n          dispatch(\n            setDentalProcedure({\n              show: true,\n              mode: 'add',\n              index: _dentalProcedure.index,\n              details: _dentalProcedure.details\n            })\n          )\n        } else {\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'add',\n              index: _procedure.index,\n              details: _procedure.details\n            })\n          )\n        }\n      }\n    } else if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = flag\n          ? doValidateDentalProcedure({ data: value, index, flag })\n          : doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          const params = { show: true, mode: 'edit', index, details: value }\n          flag ? dispatch(setDentalProcedure(params)) : dispatch(setProcedure(params))\n          break\n        }\n      }\n    }\n\n    if (_hospitalItem.show) {\n      const error = doValidateHospitalItem({ data: _hospitalItem.details, index: _hospitalItem.index, flag })\n      if (Object.keys(error).length > 0) {\n        hospital_item = { ...error }\n        const params = { show: true, mode: 'add', index: _hospitalItem.index, details: _hospitalItem.details }\n        dispatch(setHospitalItem(params))\n      }\n    } else if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    if (_professionalFee.show) {\n      const error = doValidateProfessionalFee({ data: _professionalFee.details, index: _professionalFee.index, flag })\n      if (Object.keys(error).length > 0) {\n        professional_fee = { ...error }\n        const params = { show: true, mode: 'add', index: _professionalFee.index, details: _professionalFee.details }\n        dispatch(setProfessionalFee(params))\n      }\n    } else if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, flag }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let _fields = {}\n    if (field) _fields = { ...field, flag }\n    else _fields = { ...claim, flag }\n    const { error = {} } = validator(Object.keys(_fields))({ ...data, flag })\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateDentalProcedure = ({ data, index }) => {\n    const { error } = DentalProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid,\n      tooth_number: data.tooth_number\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = DentalProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      description: data.description,\n      code: data.code ? `${data.code}` : '',\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, show: true, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      name: data.name,\n      item_code: data.item_code,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name,\n      specialization: data.specialization,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const handleOnSave = async ({ lineItemFields, allowedFields, override = {}, goBack = 'list' }) => {\n    // goBack\n    // dashboard\n    // list\n    // stay\n\n    const { _batchNumber, _claimNumber } = props.match.params\n    const claimFields = Object.keys(allowedFields)\n\n    if (claimFields.includes('approval_code') && claimFields.includes('loa_number')) {\n      const proceed = await SoftValidatorService({\n        fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n      })\n      if (!proceed) return false\n    }\n\n    let data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n    data = { ...data, ...override }\n\n    if (!data.date_to) data.date_to = moment().toISOString()\n\n    let callback = null\n\n    if (isAdd) {\n      callback = apiService.addClaim({ batch_number: _batchNumber, data })\n    } else {\n      callback = apiService.updateClaim({ batch_number: _batchNumber, claim_number: _claimNumber, data })\n    }\n\n    LoadingService.loading(true)\n\n    const res = await callback.then(res => {\n      LoadingService.loading(false)\n      switch (goBack) {\n        case 'dashboard':\n          props.history.push(`/`)\n          return true\n        case 'list':\n          props.history.push(`/batches/${_batchNumber}`)\n          return true\n        case 'stay':\n        default:\n          return true\n      }\n    })\n\n    return res\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          isAdd={isAdd}\n          claim={claim}\n          fetching={fetching}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onSave={handleOnSave}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewReturnAdvice}\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateDentalProcedure={doValidateDentalProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          initDefault={initDefault}\n        />\n      )}\n      <SoftValidatorAlertComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    setFetching(true)\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getEncodersBatches(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {batches.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                  <TableCell>\n                    <Link to={`/batches/assigned/${item.id}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      setBatches(p => ({\n                        ...p,\n                        filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } }\n                      }))\n                      handleOnSearch({\n                        filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } },\n                        page: 1\n                      })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n            <TableRow key={index}>\n              {selectStatus ? (\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    checked={row.checked}\n                    color='default'\n                    onClick={event => handleItemSelect({ index, batch })}\n                  />\n                </TableCell>\n              ) : null}\n              <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n              <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n              <TableCell align='center' id={`total-rcs-${index}`}>\n                {row.total_rcs}\n              </TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='fa-claim-no'>Claim No.</TableCell>\n                <TableCell id='fa-due-date'>Due Date</TableCell>\n                <TableCell id='fa-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.open.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Typography\n                      id={`analyze-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnAnalyze(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='for-adjudication'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='mc-claim-no'>Claim No.</TableCell>\n                <TableCell id='mc-due-date'>Due Date</TableCell>\n                <TableCell id='mc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.my.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    {/* { item.claim_number.startsWith('IP') && */}\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList2\n        id='my-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   handleClickSubmitted(event, claim)\n  // }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='sc-claim-no'>Claim No.</TableCell>\n                <TableCell id='sc-due-date'>Due Date</TableCell>\n                <TableCell id='sc-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.submitted.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      id={`print${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={e => handleClickSubmitted(e, item)}\n                    >\n                      <Print />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <IconButton\n                  id={`print${index}`}\n                  aria-label='more'\n                  aria-controls='long-menu'\n                  aria-haspopup='true'\n                  onClick={e => handleClickSubmitted(e, item)}\n                >\n                  <Print />\n                </IconButton>\n              </TableCell>\n              <Menu\n                id='long-menu'\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                style={{\n                  zIndex: 1310\n                }}\n                PaperProps={{\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: claimType === 'Reimbursement' ? 280 : 200\n                  }\n                }}\n              >\n                <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                  {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n                </MenuItem>\n                {/* {disableLoaButton ? ( */}\n                <MenuItem\n                  disabled={disableLoaButton}\n                  onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n                >\n                  {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n                </MenuItem>\n              </Menu>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'date_due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const openBatches = batchResponse.data.data.results\n        const openBatchCount = batchCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  // const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n  //   props.history.push(`/claims/${claim_number}/analyze`)\n  // }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell id='re-claim-no'>Claim No.</TableCell>\n                <TableCell id='re-due-date'>Due Date</TableCell>\n                <TableCell id='re-facility-name'>Facility Name</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.escalated.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`re-update-claim-${index}`}>\n                    <Link to={`/claims/${item.claim_number}/analyze`}>\n                      <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                      </Typography>\n                    </Link>\n                    {/* } */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`print-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                        Update\n                  </Typography>\n                </Link>\n                {/* } */}\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/utilization-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='for-payment-request'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetching}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ])\n      .then(values => {\n        const [batchResponse, batchCountResponse] = values\n        const paymentRequestClaims = batchResponse.data.data.results\n        const paymentRequestClaimCount = batchCountResponse.data.data\n        setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    setFetchingViewList(true)\n    services\n      .getClaims({ category, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    setFetching(true)\n    services\n      .getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(state => ({ ...state, data: data.results }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getClaims(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>{item.claim_number}</TableCell>\n                  <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                  <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                  <TableCell>{item.facility.name}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-request/${item.bundle_number}`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                        Request Payment\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='override-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from '../instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  {\n    id: 'pending-batch-no',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Batch No.',\n    align: 'left',\n    data: data => data.batch_number\n  },\n  {\n    id: 'pending-claim-type',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Claim Type',\n    align: 'center',\n    data: data => data.type\n  },\n  {\n    id: 'pending-total-rcs',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Total No. of RCS',\n    align: 'center',\n    data: data => `${data.claims.length} / ${data.total_rcs}`\n  },\n  {\n    id: 'pending-billed-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Billed Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.total_amount)\n  },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.discount_amount)\n  },\n  {\n    id: 'pending-discount-rate',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Discount Rate',\n    align: 'right',\n    data: data => `${data.discount_rate}%`\n  },\n  {\n    id: 'pending-pr-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'PR Amount',\n    align: 'right',\n    data: data => CurrencyFormatter(data.pr_amount)\n  }\n]\nconst submittedHeadCells = pendingHeadCells.map(c => ({ ...c, id: c.id.replace('pending-') }))\n// TODO remove if new is same as this\n// const submittedHeadCells = [\n//   { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n//   { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n//   { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n//   { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n//   {\n//     id: 'submitted-discount-amount',\n//     numeric: true,\n//     center: false,\n//     disablePadding: false,\n//     label: 'Hospital Discount Amount'\n//   }\n// ]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [prRemarks, setPrRemarks] = React.useState('')\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0),\n      discount_amount: i.claims.reduce((acc, claim) => acc + claim.discount_amount, 0),\n      discount_rate: SafeAccess(i.claims[0], 'discount_rate', 0),\n      pr_amount: i.claims.reduce((acc, claim) => acc + claim.pr_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n    const discount_amount = data.reduce((acc, batch) => acc + batch.discount_amount, 0)\n    const pr_amount = data.reduce((acc, batch) => acc + batch.pr_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          discount_amount,\n          pr_amount\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    console.log(_batch)\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    let discount_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        discount_amount += b.discount_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount, discount_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n\n      async function submitBatches () {\n        for (let select of selected) {\n          const claims = select.claims.map(claim => {\n            return claim.claim_number\n          })\n\n          let submitPromise = new Promise(function (resolve, reject) {\n            PaymentRequestServices.submit({ bundle_number, data: { claims, remarks: prRemarks } })\n              .then(({ data: res }) => {\n                const data = batches.pending.data.filter((i, index) => {\n                  let should_include = true\n                  for (let s of selected) {\n                    if (s.index === index) {\n                      should_include = false\n                      break\n                    }\n                  }\n                  if (should_include) return i\n                })\n                resetBatches({ type: 'pending', data, bundle })\n                resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n                setPrRemarks('')\n                PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n                  const { data } = res\n                  setBundle(data)\n                  getBatches({ bundle_number, bundle: data })\n                })\n                LoadingService.loading(false)\n                resolve()\n              })\n              .catch(err => {\n                reject(err)\n              })\n          })\n          await submitPromise\n        }\n      }\n      submitBatches()\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount:\n                <span id='total-approved-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.approved_amount\n                )}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.discount_amount\n                )}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => (\n                  <TableRow\n                    onClick={event => handleClick({ index, batches: 'pending' })}\n                    role='checkbox'\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    <TableCell padding='checkbox'>\n                      <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                    </TableCell>\n                    {pendingHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                  // return (\n                  //   <TableRow\n                  //     onClick={event => handleClick({ index, batches: 'pending' })}\n                  //     role='checkbox'\n                  //     tabIndex={-1}\n                  //     key={`${batch.batch_number}-${index}`}\n                  //   >\n                  //     <TableCell padding='checkbox'>\n                  //       <Checkbox checked={batch.selected} color='default' id={`pending-check-box-${index}`} />\n                  //     </TableCell>\n                  //     <TableCell align='left' id={`pending-batch-number-${index}`}>\n                  //       {batch.batch_number}\n                  //     </TableCell>\n                  //     <TableCell align='center' id={`pending-claim-type-${index}`}>\n                  //       {batch.type}\n                  //     </TableCell>\n                  //     <TableCell\n                  //       align='center'\n                  //       id={`pending-total-rcs-${index}`}\n                  //     >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                  //     <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.total_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.discount_amount)}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-discount-rate-${index}`}>\n                  //       {`${batch.discount_rate}%`}\n                  //     </TableCell>\n                  //     <TableCell align='right' id={`pending-pr-amount-${index}`}>\n                  //       {CurrencyFormatter(batch.pr_amount)}\n                  //     </TableCell>\n                  //   </TableRow>\n                  // ) */}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField\n                  multiline\n                  rows={8}\n                  id='pr-remarks'\n                  value={prRemarks}\n                  readOnly={false}\n                  onChange={event => setPrRemarks(event.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className={classes.buttonWrapper}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={handleOnCancel}\n                id='cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={handleOnSubmit}\n                id='submit'\n              >\n                Submit\n              </Button>\n            </div>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => (\n                  <TableRow\n                    // hover\n                    tabIndex={-1}\n                    key={`${batch.batch_number}-${index}`}\n                  >\n                    {submittedHeadCells.map((c, cIndex) => (\n                      <TableCell key={`${cIndex}`} align={c.align} id={c.id}>\n                        {c.data(batch)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n                {/* //  TODO Remove once new implem same's as the old\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {CurrencyFormatter(batch.discount_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })} */}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.group}>\n            <div className={classes.remarks}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes['header-text']}>\n                  Payment Request Remarks\n                </Typography>\n              </div>\n              <div className={classes['input']}>\n                <CustomTextField multiline rows={8} id='saved-pr-remarks' value={bundle.remarks} disabled />\n              </div>\n            </div>\n            <div />\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submitted PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    let params = { category: 'submitted' }\n\n    if (supervisor || isManager) params = { ...params, pr_officer: SafeAccess(props.match, 'params.pr_officer', '') }\n    // * Submitted Payment request\n\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n\n  const processor_id = supervisor || isManager\n    ? SafeAccess(props.match, 'params.pr_officer', '') : SafeAccess(bundle, 'approved_by_uid', '')\n\n  return (\n    <div className={classes.root}>\n      {bundle && processor_id ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.submitted.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${processor_id}/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${processor_id}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'any' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()])\n      .then(values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest({ limit: 10, sort: '' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getSubmittedPaymentRequest(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>PR Processor</TableCell>\n                <TableCell>Total Bundle/SOA</TableCell>\n                <TableCell>Total Batches</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                  <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                  <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell>\n                    <Link to={`/payment-requests/${item.id}/list`}>\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from '../instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/Claims/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${processor_id}/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage supervisor {...props} />}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ id, viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow id={`for-review-claim-${index}`} key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography id={`review-claim-${index}`} variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography\n                  id='mc-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('for-review')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`review-claim-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        id='for-review'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport MedicalConsultantServices from 'Services/Api/Claims/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  id='reassign-cancel'\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  id='reassign-submit'\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from '../../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    console.log(params)\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({ claim_number, data }) {\n    console.log(data)\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport DatePicker from 'SharedComponents/DatePicker2/DatePicker2'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        const { field, value, match } = args\n        setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } }, page: 1 }))\n      }, 500)\n    )\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              {headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: date.toISOString(),\n                      match: headCell.match\n                    })\n                  }\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  // className={`${classes.search}`}\n                  id={`column-filter-${headCell.id}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: event.target.value,\n                      match: headCell.match\n                    })\n                  }\n                />\n              )}\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    rejected: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED', addtl_cond: { 'latest.__type': { $ne: 'Reimbursement' } } })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, rejected: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({ category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.rejected['count'], id: 'rejected-claim-count' }}\n        sizes={sizes}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.rejected.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='rejected-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n      .finally(value => {\n        setFetching(false)\n      })\n  }, [])\n\n  const getSubordinates = params => {\n    setFetching(true)\n    setFetchingViewList(true)\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n      .finally(value => {\n        setFetching(false)\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={sizes}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {verifiers.data &&\n                verifiers.data.map((item, index) => (\n                  <TableRow key={`verifier-list-item-${index}`}>\n                    <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                    <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                    <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                    <TableCell id={`cv-view-user-${index}`}>\n                      <Typography\n                        id={`view-user-${index}`}\n                        variant='caption'\n                        className={`text-link underline`}\n                        onClick={handleOnReviewUser(item.id)}\n                      >\n                        View\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-verifier'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    setFetching(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter,\n        range: value\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={sizes}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.recon.data.map((item, index) => (\n                <TableRow key={`${item.claim_number}-${index}`}>\n                  <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`rc-view-claim-${index}`}>\n                    <Typography\n                      id={`view-claim-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={() => handleOnReview(item.claim_number)}\n                    >\n                      Analyze\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reconciled-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility.name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const claims = claimResponse.data.data.results\n        const claimsCount = claimCountResponse.data.data\n        setClaims({ data: claims, count: claimsCount })\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc',\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    setFetchingViewList(true)\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: 'date_due|desc'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetching(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={sizes}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`fa-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                  <TableCell id={`fa-view-claim-${index}`}>\n                    <Link to={`/claims/for-approval/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-for-approval'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const allClaims = claimResponse.data.data.results\n        const allClaimsCount = claimCountResponse.data.data\n        setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={sizes}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`mc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={item.claim_number}>\n                  <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  {/* added cond on client to support old data */}\n                  <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                  <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                  <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`mc-view-claim-${index}`}>\n                    <Link to={`/claims/review/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='medical-collectibles'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date_due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'member.account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n  const [fetchingViewList, setFetchingViewList] = React.useState(false)\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    setFetching(true)\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: 'date_due|desc',\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ])\n      .then(values => {\n        const [claimResponse, claimCountResponse] = values\n        const { results } = claimResponse.data.data\n        setClaims(prevState => ({\n          ...prevState,\n          data: results,\n          count: claimCountResponse.data.data\n        }))\n      })\n      .finally(values => {\n        setFetching(false)\n      })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    setFetchingViewList(true)\n    services\n      .getItems(_params)\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    // const _params = {\n    //   category: viewList.category,\n    //   limit: viewList.limit,\n    //   page: viewList.page,\n    //   search: viewList.search,\n    //   sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    // }\n    setViewList({ ...initialValue, show: true, title })\n    setFetchingViewList(true)\n    services\n      .getItems({ category: viewList.category, limit: 10, sort: 'date_due|desc' })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .finally(values => {\n        setFetchingViewList(false)\n      })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={sizes}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <LoadingIndicator loading={fetching}>\n          <Table stickyHeader size='small'>\n            <TableHead>\n              <TableRow>\n                {columns.map(item => (\n                  <TableCell key={item.id} id={`rmc-${item.id}`}>\n                    {item.name}\n                  </TableCell>\n                ))}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {claims.data.map((item, index) => (\n                <TableRow key={`rmc-claim-list-${index}`}>\n                  <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                  <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n                  <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                  <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n                  <TableCell id={`rmc-view-claim-${index}`}>\n                    <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                      <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                        View\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </LoadingIndicator>\n      </DashboardTile>\n\n      <ViewList\n        id='reimbursement-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        fetching={fetchingViewList}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date_due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 100000000,\n          other_types: 100000000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'], validate: false },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/payment-request-report' exact render={() => <PaymentRequestReport />} />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from '../../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (args) {\n    const { bundle_number, batch_number, params } = args\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/Claims/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/Claims/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/Claims/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n\n    ApiService.getBatch({ bundle_number, batch_number }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n    })\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getClaimsAndCount({ batch_number, bundle_number })\n    })\n  }\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, bundle_number }) => {\n    ApiService.getApprovedClaims({\n      bundle_number,\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaim(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n        LoadingService.loading(false)\n      })\n  }\n\n  React.useEffect(() => {\n    const { batch_number, bundle_number } = props.match.params\n    getClaimsAndCount({ batch_number, bundle_number })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const processor_id = SafeAccess(props.match, 'params.pr_officer', '')\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} inputChange={handleSearchChange} />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n            processor_id={processor_id}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${processor_id}/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import instance from '../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// timefield lib\nimport TimeField from 'react-advanced-timefield'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/Claims/ClaimsMaintainerServices'\nimport ClaimsServices from 'Services/Api/Claims/ClaimsServices'\n\n// Constants\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' },\n  handling_timi_kpi: { on: 'handling-time-kpi', field: 'handling-time-kpi' }\n}\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {\n    description: { value: '' },\n    status: { value: '' },\n    section: { value: '' },\n    claim_type: { value: '' },\n    handling_time_formatted: { value: '' }\n  }\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false,\n  claim_type: '',\n  section: '',\n  handling_time: ''\n}\n\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nlet kpi_columns = [\n  { name: 'Section', sortField: 'section', id: 'section', match: 'any' },\n  { name: 'Claim Type', sortField: 'claim_type', id: 'description', match: 'any' },\n  { name: 'Handling Time', sortField: 'handling_time_formatted', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\n\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [section, setSection] = React.useState([])\n\n  const [index, setindex] = React.useState()\n\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n    ClaimsServices.lookupsAll({ category: 'section' }).then(res => {\n      const { data = [] } = res.data\n      const _data = data.map(c => ({ text: c.name, value: c.name }))\n      setSection(_data)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: { ...data, field: lookup.field } }).then(\n      ({ data: res }) => {\n        const { results, count } = res.data\n        setData(state => ({ ...state, data: results, count }))\n        setFetching(false)\n      }\n    )\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return lookup && lookup.field && args === lookup.field ? 'active' : ''\n  }\n\n  const onClickHospitalItem = () => {\n    setFetching(true)\n    setLookup(lookups.hospital_items)\n    setData({\n      ...data,\n      header: 'Hospital Item List',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n  const onClickNotCoveredReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_covered)\n    setData({\n      ...data,\n      header: 'Not Covered Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickChargingReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_charging)\n    setData({\n      ...data,\n      header: 'Reasons For Charging Member',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSource = () => {\n    setFetching(true)\n    setLookup(lookups.claims_source)\n    setData({\n      ...data,\n      header: 'Claim Source',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickReturnReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_return)\n    setData({\n      ...data,\n      header: 'Reimbursement Return Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickRejectReason = () => {\n    setFetching(true)\n    setLookup(lookups.reason_reject)\n    setData({\n      ...data,\n      header: 'Reimbursement Reject Reasons',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickClaimSubSubType = () => {\n    setFetching(true)\n    setLookup(lookups.claim_sub_sub_type)\n    setData({\n      ...data,\n      header: 'Claim Sub Sub-Type',\n      filter: { ...data.filter, description: { value: '' }, status: { value: '' } }\n    })\n  }\n\n  const onClickHandlingTimeKpi = () => {\n    setFetching(true)\n    setLookup(lookups.handling_timi_kpi)\n    setData({\n      ...data,\n      count: 0,\n      header: 'Handling Time KPI',\n      filter: {\n        ...data.filter,\n        section: { value: '' },\n        claim_type: { value: '' },\n        handling_time: { value: '' },\n        status: { value: '' }\n      }\n    })\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const validate = () => {\n    if (lookup.field !== 'handling-time-kpi') return !item.description.trim()\n    else return !item.handling_time || item.handling_time === '00:00:00' || !item.section || !item.claim_type\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    let _search = {}\n\n    if (!(lookup.field === 'handling-time-kpi')) {\n      _search = {\n        description: item.description,\n        code: item.code\n      }\n    } else {\n      if (showAddItem.mode === 'add') {\n        _search = {\n          section: item.section,\n          claim_type: item.claim_type\n        }\n      } else {\n        const { section, claim_type, status, handling_time } = data.data[index]\n\n        switch (true) {\n          case section === item.section && claim_type === item.claim_type && status !== item.status:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.status\n            }\n            break\n          case section === item.section && claim_type === item.claim_type && handling_time !== item.handling_time:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type,\n              status: item.handling_time\n            }\n            break\n          default:\n            _search = {\n              section: item.section,\n              claim_type: item.claim_type\n            }\n        }\n      }\n    }\n\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: _search,\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (validate()) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Description details is empty. Please input the description details.',\n        onOk: handleOnOk,\n        okLabel: 'Okay',\n        cancelLabel: ''\n      }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state => ({\n            ...state,\n            open: true,\n            message: 'Description details already exists. Please change the description details encoded.',\n            onOk: handleOnOk,\n            okLabel: 'Okay',\n            cancelLabel: ''\n          }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(\n              res => {\n                setItem(initialItem)\n                setLookup(false)\n                setLookup(initialLookup)\n                setShowAddItem({ ...showAddItem, show: false })\n                LoadingService.loading(false)\n              }\n            )\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({\n              on: lookup.on,\n              data: item,\n              code: item.code,\n              params: { field: lookup.field }\n            }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({ ...showAddItem, show: false })\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = (field = '', item) => {\n    if (field === 'kpi') {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        section: item.section,\n        claim_type: item.claim_type,\n        handling_time: item.handling_time,\n        code: item._id,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    } else {\n      setShowAddItem({ ...showAddItem, show: true, mode: 'edit' })\n      setItem({\n        description: item.description,\n        code: item.code,\n        status: item.status,\n        active: item.status === 'Active',\n        deactivate: item.status === 'Inactive'\n      })\n    }\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description || item.section || item.claim_type || item.handling_time) {\n      setShowAlert(state => ({\n        ...state,\n        open: true,\n        message: 'Are you sure you want to discard your changes?',\n        onOk: () => {\n          setShowAlert(alert => ({ ...alert, open: false }))\n          setShowAddItem(show => ({ ...show, show: false }))\n          setItem(item => ({ ...item, description: '', section: '', claim_type: '', handling_time: '' }))\n        },\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }))\n    } else {\n      setShowAddItem({ ...showAddItem, show: false })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='hospital-item-list'\n          className={`button-positive ${classes[isActive('hospital-item-list')]}`}\n          onClick={onClickHospitalItem}\n        >\n          Hospital Item List\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='not-covered-reason'\n          className={`button-positive ${classes[isActive('covered-reason')]}`}\n          onClick={onClickNotCoveredReason}\n        >\n          Not Covered Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reason-for-charging'\n          className={`button-positive ${classes[isActive('charging-reason')]}`}\n          onClick={onClickChargingReason}\n        >\n          Reason for Charging Member\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('claims-source')]}`}\n          onClick={onClickClaimSource}\n        >\n          Claim Source\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-source'\n          className={`button-positive ${classes[isActive('handling-time-kpi')]}`}\n          onClick={onClickHandlingTimeKpi}\n        >\n          Handling Time KPI\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-return-reason'\n          className={`button-positive ${classes[isActive('return-reason')]}`}\n          onClick={onClickReturnReason}\n        >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='reimbursement-reject-reason'\n          className={`button-positive ${classes[isActive('reject-reason')]}`}\n          onClick={onClickRejectReason}\n        >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-type')]}`}\n          onClick={onClickClaimSubType}\n        >\n          Claim Sub-Type\n        </Button>\n\n        <Button\n          disabled={showAddItem.show}\n          variant='contained'\n          color='primary'\n          id='claim-sub-sub-type'\n          className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`}\n          onClick={onClickClaimSubSubType}\n        >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button\n            disabled={showAddItem.show}\n            variant='contained'\n            color='primary'\n            id='add-item'\n            className='button-positive'\n            onClick={() => setShowAddItem({ ...showAddItem, show: true, mode: 'add' })}\n          >\n            + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && (\n        <div className={classes['add-item-root']}>\n          {!(lookup.field === 'handling-time-kpi') ? (\n            <div className={classes.wrapper}>\n              <span className={classes['header-text']}>Description:</span>\n              <div className={classes['text-wrapper']}>\n                <TextField\n                  id={'description-field'}\n                  value={item.description}\n                  onChange={event => {\n                    setItem({ ...item, description: event.target.value })\n                  }}\n                />\n              </div>\n              <div className={classes['radio-buttons']}>\n                <div className={classes.activate}>\n                  Active:\n                  <Radio\n                    color='primary'\n                    id={'activate'}\n                    checked={item.active}\n                    onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                  />\n                </div>\n                <div className={classes.deactivate}>\n                  Deactivate:\n                  <Radio\n                    color='primary'\n                    id={'deactivate'}\n                    checked={item.deactivate}\n                    onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                  />\n                </div>\n              </div>\n              <div className={classes['button-wrapper']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className={classes.wrapper}>\n                <span className={classes['header-text']}>Section:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='section'\n                    items={section}\n                    value={item.section || ''}\n                    onChange={event => setItem(state => ({ ...state, section: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Claim Type:</span>\n                <div className={classes['text-wrapper']}>\n                  <DropDown\n                    id='claim-type'\n                    items={claim_types}\n                    value={item.claim_type || ''}\n                    onChange={event => setItem(state => ({ ...state, claim_type: event.target.value }))}\n                  />\n                </div>\n                <span className={classes['header-text']}>Handling Time:</span>\n                {/* Trial - feel free to change this time input */}\n                <div className={classes['text-wrapper']}>\n                  <TimeField\n                    id={'description-field'}\n                    value={item.handling_time}\n                    input={<TextField TextFieldStyle={{ padding: '3.5px' }} />}\n                    showSeconds\n                    onChange={(event, time) => setItem(state => ({ ...state, handling_time: time }))}\n                  />\n                </div>\n                <div className={classes['radio-buttons']}>\n                  <div className={classes.activate}>\n                    Active:\n                    <Radio\n                      color='primary'\n                      id={'activate'}\n                      checked={item.active}\n                      onClick={() => setItem({ ...item, status: 'Active', active: true, deactivate: false })}\n                    />\n                  </div>\n                  <div className={classes.deactivate}>\n                    Deactivate:\n                    <Radio\n                      color='primary'\n                      id={'deactivate'}\n                      checked={item.deactivate}\n                      onClick={() => setItem({ ...item, status: 'Inactive', active: false, deactivate: true })}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className={classes['button-wrapper-kpi']}>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-positive'\n                  onClick={handleOnSaveItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  id='add-item'\n                  className='button-negative'\n                  onClick={handleOnCancelItem}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {!showAddItem.show && (\n        <div className={classes.table}>\n          <LoadingIndicator loading={fetching}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <React.Fragment>\n                  <TableRow>\n                    {!(lookup.field === 'handling-time-kpi')\n                      ? columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))\n                      : kpi_columns.map(headCell => (\n                          <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                            <TableSortLabel\n                              active={data.orderBy === headCell.sortField}\n                              direction={data.order ? 'asc' : 'desc'}\n                              onClick={handleOnSort(headCell.sortField)}\n                            >\n                              {headCell.name}\n                            </TableSortLabel>\n                            <TextField\n                              value={data.filter[headCell.sortField].value || ''}\n                              onChange={event => {\n                                const search = event.target.value\n                                setData(p => ({\n                                  ...p,\n                                  filter: {\n                                    ...p.filter,\n                                    [headCell.sortField]: { value: search, match: headCell.match }\n                                  }\n                                }))\n                                clearTimeout(debounce)\n                                setDebounce(\n                                  setTimeout(() => {\n                                    handleColumnFiltering({\n                                      field: headCell.sortField,\n                                      value: search,\n                                      match: headCell.match\n                                    })\n                                  }, 500)\n                                )\n                              }}\n                            />\n                          </TableCell>\n                        ))}\n\n                    <TableCell key={'action'} id={`sort-action`} />\n                  </TableRow>\n                </React.Fragment>\n              }\n              body={\n                data &&\n                data.data.map((item, index) =>\n                  !(lookup.field === 'handling-time-kpi') ? (\n                    <TableRow key={index}>\n                      <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => handleOnEditItem('desc', item)}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    <TableRow key={index}>\n                      <TableCell id={`item-section-${index}`}>{item.section}</TableCell>\n                      <TableCell id={`item-claim_type-${index}`}>{item.claim_type}</TableCell>\n                      <TableCell id={`item-handling_time-${index}`}>{item.handling_time_formatted}</TableCell>\n                      <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n                      <TableCell align={'center'}>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          id={`submmited-pr-${index}`}\n                          onClick={() => {\n                            handleOnEditItem('kpi', item)\n                            setindex(index)\n                          }}\n                        >\n                          Edit\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )\n                )\n              }\n              count={data && data.count}\n              page={data && data.page}\n              limit={data && data.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnChange}\n            />\n          </LoadingIndicator>\n        </div>\n      )}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({ ...alert, open: false }))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/Claims/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/Claims/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/Claims/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/Claims/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:pr_officer/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport classes from './AutoComplete2.module.scss'\n\nexport default function AutoComplete2 (props) {\n  const { label = '', required, readOnly, ...other } = props\n  const { value = '', field = 'id', loading, error, suggestions = [] } = props\n  const { onChange } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = (value, search) => {\n    setError()\n    if (typeof onChange === 'function') onChange(value, search)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <Autocomplete\n                className={classes.input}\n                options={suggestions}\n                noOptionsText={'Enter atleast 3 characters to search.'}\n                loading={loading || false}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    className={classes.input}\n                    ref={params.InputProps.ref}\n                    InputProps={{\n                      ...params.InputProps,\n                      disableUnderline: true,\n                      endAdornment: (\n                        <React.Fragment>\n                          {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                        </React.Fragment>\n                      )\n                    }}\n                  />\n                )}\n                getOptionLabel={option => (typeof option === 'string' ? option : `${option[field]}`)}\n                // renderOption={option => <React.Fragment>{option[field]}</React.Fragment>}\n                {...other}\n                onChange={(event, value) => {\n                  handleOnChange(value, false)\n                }}\n                onInputChange={(event, value) => {\n                  handleOnChange(value, true)\n                }}\n                onFocus={() => setFocus(true)}\n                inputValue={value}\n                value={typeof value === 'object' ? value[field] : value}\n                freeSolo\n                autoSelect\n                openOnFocus\n                autoHighlight\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport classes from './AutoCompletes.module.scss'\n\nimport AutoCompleteCurrent from 'SharedComponents/AutoComplete/AutoComplete'\nimport AutoComplete2 from '../../Components/AutoComplete2/AutoComplete2'\n\nexport default function AutoCompletes (props) {\n  const { storage, errors, debounce, suggestion } = props\n  const { setErrors, onChange, setDebounce, setSuggestion } = props\n  const { service } = props\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    // if (value.trim().length < 3) return\n\n    setSuggestion(state => ({ ...state, facilities: [] }))\n    clearTimeout(debounce.facility)\n    setFetching(true)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          service\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, facilities: data }))\n            })\n            .finally(() => {\n              setFetching(false)\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // const handleOnChangeAutosuggest = ({ value, field, search }) => {\n  //   setSuggestion(state => ({ ...state, facilities: [] }))\n  //   onChange({ value: value, field })\n\n  //   if (isSuggestionClick) {\n  //     for (let i of suggestion.facilities) {\n  //       if (value === i.id || value === i.name) {\n  //         onChange({ value: i.id, field: 'facility_id' })\n  //         onChange({ value: i.name, field: 'facility_name' })\n  //         return i.rooms\n  //       }\n  //     }\n  //   } else {\n  //     const { 1: by } = field.split('_')\n  //     getFacilitySuggestions({ value, by })\n  //   }\n  // }\n\n  const handleOnChangeAutosuggest2 = ({ value, field, search }) => {\n    if (search) {\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n      onChange({ value, field })\n    } else {\n      const _value = value || {}\n      console.log('AutoSuggest selected value', _value)\n      onChange({ value: _value.id, field: 'facility_id' })\n      onChange({ value: _value.name, field: 'facility_name' })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        {/* <div className={classes.input}>\n          <AutoCompleteCurrent\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            label={'Medical Partner ID using Current'}\n            suggestions={suggestion.facilities}\n            value={storage.facility_id}\n          />\n        </div> */}\n        <div className={classes.input}>\n          <AutoComplete2\n            onChange={(value, search) => handleOnChangeAutosuggest2({ field: 'facility_id', value, search })}\n            label={'Medical Partner ID using AutoComplete2'}\n            suggestions={suggestion.facilities}\n            field={'id'}\n            loading={fetching}\n            value={storage.facility_id}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker2.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin,\n    disableComponents,\n    ...other\n  } = props\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  const handleOnClose = () => {\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  const handleDateChange = date => {\n    if (typeof onChange === 'function') {\n      onChange(date)\n    }\n    handleOnFocus()\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Paper\n                className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                  error ? classes['has-error'] : focus && classes.focus\n                } box-shadow-field ${disableComponents && classes.disabled}`}\n                onBlur={handleOnBlur}\n                onFocus={handleOnFocus}\n              >\n                <KeyboardDatePicker\n                  InputProps={{\n                    ref: InputRef,\n                    disableUnderline: true\n                  }}\n                  className={classes.input}\n                  value={value}\n                  onClose={handleOnClose}\n                  onChange={date => handleDateChange(moment(date))}\n                  allowKeyboardControl\n                  format='MM/DD/YYYY'\n                  placeholder='MM/DD/YYYY'\n                  clearable\n                  {...other}\n                />\n              </Paper>\n            </MuiPickersUtilsProvider>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date From')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport DatePicker from '../../Components/DatePicker2/DatePicker2'\nimport DatePickerCurrent from 'SharedComponents/DatePicker2/DatePicker2'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport DateValidator from '../../Validations/DateValidator'\n\nimport classes from './DatePickers.module.scss'\n\nexport default function DatePickers (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const dateValidate = () => {\n    const { error } = DateValidator({ date_from: storage.date_from })\n    setErrors(error || {})\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <DatePickerCurrent\n            label='Current'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <DatePicker\n            label='Beta'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <Typography>{DateFormatter(storage.date_from)}</Typography>\n        </div>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={dateValidate}\n            id='save'\n          >\n            Validate\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport BaseUrlFetcher from 'Services/BaseUrlFetcher'\n\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst getMozillaPdfViewerUrl = () => BaseUrlFetcher.getClaimsBaseUrl() + '/thirdparty/mozilla-pdfjs-2.4.456-es5/web/viewer.html'\n// const mozillaPdfViewer = 'https://mozilla.github.io/pdf.js/web/viewer.html'\n// const mozillaPdfViewer = 'pdfs'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfView2Component = props => {\n  // Variables\n  const { name, fileName, initialPageNumber = 1, initialScale, enabled } = props\n  // Service\n  const { service } = props\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [searchText, setSearchText] = React.useState('')\n\n  React.useEffect(() => {\n    setFile()\n    setPageNumber(initialPageNumber)\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const download = () => {\n    const url = URL.createObjectURL(new Blob([file]))\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', `${fileName}.pdf`)\n    document.body.appendChild(link)\n    link.click()\n  }\n\n  const print = async () => {\n    try {\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n      })\n    } catch (error) {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  const handleOnSearch = event => {\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        console.log('heelo')\n        setSearchText(search)\n      }, 500)\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography id={'pdf-preview-title'} className={classes['file-name']} align='left'>\n          {name}\n        </Typography>\n        <Tooltip title='Search text'>\n          <span>\n            <div className={classes.search}>\n              <SearchTextComponent onChange={handleOnSearch} />\n            </div>\n          </span>\n        </Tooltip>\n\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-previous'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber > 1 ? pageNumber - 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                console.log(elem)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n          <span>\n            <IconButton\n              id={'pdf-preview-page-next'}\n              disabled={numPages <= 1}\n              onClick={() => {\n                const page = pageNumber < numPages ? pageNumber + 1 : pageNumber\n                setPageNumber(page)\n                const elem = document.getElementById(`pdf-page-${page}`)\n                elem.scrollIntoView()\n              }}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton id={'pdf-preview-zoom-in'} onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n          <span>\n            <IconButton disabled={!enabled} onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.viewport}>\n        <div className={classes.pdf}>\n          <Document\n            file={file}\n            onLoadSuccess={({ numPages }) => {\n              setNumPages(numPages)\n            }}\n          >\n            {[...Array(numPages)]\n              .map((value, index) => index + 1)\n              .map((value, index) => (\n                <div className={classes.page} id={`pdf-page-${value}`} key={`pdf-page-${value}`}>\n                  <Page\n                    pageNumber={value}\n                    scale={scale}\n                    renderMode={'canvas'}\n                    customTextRenderer={textItem =>\n                      textItem.str\n                        .split(searchText)\n                        .reduce(\n                          (strArray, currentValue, currentIndex) =>\n                            currentIndex === 0\n                              ? [...strArray, currentValue]\n                              : [...strArray, <mark key={currentIndex}>{searchText}</mark>, currentValue],\n                          []\n                        )\n                    }\n                  />\n                </div>\n              ))}\n          </Document>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst MozillaPdf = props => {\n  // Variables\n  const { name } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data], { type: 'application/pdf' })\n        const blobUrl = URL.createObjectURL(_blob)\n        const _url = encodeURIComponent(blobUrl)\n\n        // const pdfArray = convertDataURIToBinary('data:application/pdf;base64, ' + _blob)\n\n        // const PdfViewer = document.getElementById('pdfViewer')\n        // if (PdfViewer) {\n        //   PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n        //   setUrl(_url)\n        // }\n\n        blobToBase64(_blob).then(data => {\n          const pdfAsDataUri = 'data:application/pdf;base64,' + data\n          const pdfArray = convertDataURIToBinary(pdfAsDataUri)\n          setUrl(pdfAsDataUri)\n          console.log(pdfAsDataUri)\n          const PdfViewer = document.getElementById('pdfViewer')\n          if (PdfViewer) {\n            PdfViewer.contentWindow.PDFViewerApplication.open(pdfArray, 1.5)\n            setUrl(_url)\n          }\n        })\n      })\n    }\n  }, [service])\n\n  const convertDataURIToBinary = blob => {\n    const BASE64_MARKER = ';base64,'\n    var base64Index = blob.indexOf(BASE64_MARKER) + BASE64_MARKER.length\n    var base64 = blob.substring(base64Index)\n    var raw = window.atob(base64)\n    var rawLength = raw.length\n    var array = new Uint8Array(new ArrayBuffer(rawLength))\n\n    for (var i = 0; i < rawLength; i++) {\n      array[i] = raw.charCodeAt(i)\n    }\n    return array\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {url && (\n        <iframe\n          // id={'pdf-viewer'}\n          className={classes.iframe}\n          src={getMozillaPdfViewerUrl()}\n          width='100%'\n          height='100%'\n        />\n      )}\n    </div>\n  )\n}\n\nconst MozillaPdfURL = props => {\n  // Variables\n  const { name } = props\n  // Service\n  const { service } = props\n\n  const [url, setUrl] = React.useState('')\n\n  React.useEffect(() => {\n    setUrl()\n    if (service) {\n      service.then(response => {\n        const _url = encodeURIComponent(response)\n        setUrl(_url)\n        // }\n      })\n    }\n  }, [service])\n\n  return (\n    <div className={classes.root}>\n      <iframe\n        // id={'pdf-viewer'}\n        className={classes.iframe}\n        src={getMozillaPdfViewerUrl() + `?file=${url}`}\n        width='100%'\n        height='100%'\n      />\n    </div>\n  )\n}\n\nconst PdfViewer2Modal = () => {\n  dispatch = useDispatch()\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n  }\n\n  return (\n    <Dialog id={'pdf-preview'} fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton id={'pdf-preview-close'} edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            Preview Sheet\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        {PdfView2Component({\n          name,\n          fileName,\n          initialPageNumber,\n          initialScale,\n          service,\n          enabled\n        })}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Service, PdfViewer2Modal, PdfView2Component, MozillaPdf, MozillaPdfURL }\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nimport Service from 'Services/Api/Claims/CustomerCareServices'\nimport { MozillaPdf, MozillaPdfURL } from '../../Components/PdfViewer2/PdfViewer2'\n\nimport classes from './PdfViewers.module.scss'\n\nexport default function PdfViewer (props) {\n  const { storage, errors } = props\n  const { setErrors, onChange } = props\n\n  const [mct, setMct] = React.useState('5e494813213ab37f5f550b44')\n\n  return (\n    <div className={classes.root}>\n      BASE64 * File limited\n      <MozillaPdf name={'test'} service={Service.getMemberContract({ mct_id: mct })} enabled />\n      URL\n      <MozillaPdfURL name={'test'} service={Service.getMemberContractUrl({ mct_id: mct })} enabled />\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Utility\n\nimport classes from './ErrorProducers.module.scss'\n\nconst FaultyButton = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nconst FaultyOperation = props => {\n  throw new Error('💥 CABOOM 💥')\n  // return (\n  //   <Button\n  //     variant='contained'\n  //     color='primary'\n  //     className={`${classes.save} button-positive`}\n  //     onClick={() => {}}\n  //     id='save'\n  //   >\n  //     Faulty Button\n  //   </Button>\n  // )\n}\n\nexport default function ErrorProducers (props) {\n  const { storage, errors, notDefined } = props\n  const { setErrors, onChange } = props\n\n  const [boom, setBoom] = React.useState(false)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() => setBoom(true)}\n            id='save'\n          >\n            Throw Error\n          </Button>\n        </div>\n\n        {boom && (\n          <div className={classes.input}>\n            <FaultyButton />\n          </div>\n        )}\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={`${classes.save} button-positive`}\n          onClick={() => console.log(notDefined.test)}\n          id='save'\n        >\n          Call Undefined\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport AutoCompletes from './Sections/AutoCompletes/AutoCompletes'\nimport DatePickers from './Sections/DatePickers/DatePickers'\nimport PdfViewers from './Sections/PdfViewers/PdfViewers'\nimport ErrorProducers from './Sections/ErrorProducers/ErrorProducers'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n// import { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/Claims/ClaimsAdjudicationServices'\n\nimport classes from './Test.module.scss'\n\n// https://github.com/mui-org/material-ui-pickers/issues/1388\n// const WrappedTextField = props => <ClaimsInputBase {...props} />\n\nexport default function Test (props) {\n  const [storage, setStorage] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    date_from: new Date()\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facilities: []\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const [errors, setErrors] = React.useState({ date_from: '' })\n\n  const [toggle, setToggle] = React.useState('')\n\n  React.useEffect(() => {\n    PageTitleService('Test')\n    // BreadcrumbsService.setSelectedItems(['test'])\n  }, [])\n\n  const onChange = ({ value, field }) => {\n    setStorage(state => ({ ...state, [field]: value }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sidebar}>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('auto-complete')}\n        >\n          Auto-Complete\n        </Button>\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('date-picker')}\n        >\n          Date-Pickers\n        </Button>\n        <Button variant='contained' color='primary' className='button-positive' onClick={() => setToggle('pdf-viewer')}>\n          Pdf-Viewer\n        </Button>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-positive'\n          onClick={() => setToggle('error-producer')}\n        >\n          Error-Producer\n        </Button>\n      </div>\n      <div className={classes.content}>\n        <div className={classes.title}>\n          <Typography variant='h4'>{toggle.toUpperCase()}</Typography>\n        </div>\n        <div className={classes.wrapper}>\n          {toggle === 'auto-complete' && (\n            <AutoCompletes\n              service={ClaimsAdjudicationServices}\n              errors={errors}\n              storage={storage}\n              debounce={debounce}\n              suggestion={suggestion}\n              setErrors={setErrors}\n              onChange={onChange}\n              setStorage={setStorage}\n              setDebounce={setDebounce}\n              setSuggestion={setSuggestion}\n            />\n          )}\n\n          {toggle === 'date-picker' && (\n            <DatePickers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'pdf-viewer' && (\n            <PdfViewers errors={errors} storage={storage} setErrors={setErrors} onChange={onChange} />\n          )}\n\n          {toggle === 'error-producer' && <ErrorProducers errors={errors} storage={storage} setErrors={setErrors} />}\n        </div>\n      </div>\n    </div>\n  )\n}\n","const roles = {\n  BATCH_ENCODER: ['BATCH_ENCODER'],\n  BATCH_ENCODER_SUPERVISOR: ['BATCH_ENCODER_SUPERVISOR'],\n  CLAIMS_DETAILS_ENCODER: ['CLAIMS_ENCODER', 'CLAIMS_DETAILS_ENCODER'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: ['CLAIMS_DETAILS_ENCODER_SUPERVISOR'],\n  CLAIMS_ANALYST: ['CLAIMS_ANALYST', 'CLAIMS_VERIFIER'],\n  PR_OFFICER: ['PR_OFFICER'],\n  PR_OFFICER_SUPERVISOR: ['PR_OFFICER_SUPERVISOR'],\n  MEDICAL_CONSULTANT: ['MEDICAL_CONSULTANT'],\n  CLAIMS_RECON: ['CLAIMS_RECON'],\n  CLAIMS_VERIFIER_SUPERVISOR: ['CLAIMS_VERIFIER_SUPERVISOR', 'CLAIMS_SUPERVISOR'],\n  CLAIMS_MANAGER: ['CLAIMS_MANAGER']\n}\n\nconst mapRoles = role => {\n  for (const r in roles) {\n    if (roles[r].includes(role)) return r\n  }\n}\n\nexport { mapRoles, roles }\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\nimport { dataValue } from 'Pages/Protected/Partner/AffiliationFormEncoder/Pages/HospitalAffiliation/components/Utilities/dataHeader'\n\nconst initialState = {\n  doctor: [],\n  client: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'REMOVE_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { index, field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].filter((i, _index) => index !== _index)\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  error: errorReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\n// const initialState = {\n//   pro: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   facility: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   doctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   anesthesiologist: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   pfDoctor: {\n//     id: [],\n//     full_name: [],\n//     data: []\n//   },\n//   specialization: {\n//     description: [],\n//     data: []\n//   },\n//   hospitalItem: {\n//     id: [],\n//     name: [],\n//     data: []\n//   },\n//   icd10: [],\n//   cpt: {\n//     description: [],\n//     code: [],\n//     data: []\n//   },\n//   contract: {\n//     years: []\n//   }\n// }\n\n// const icd10 = {\n//   given_diagnosis: [],\n//   description: [],\n//   code: [],\n//   data: []\n// }\n\nconst initialState = {\n  pro: [],\n  facility: [],\n  doctor: [],\n  anesthesiologist: [],\n  pfDoctor: [],\n  specialization: [],\n  hospitalItem: [],\n  icd10: [],\n  cpt: [],\n  contract: [],\n  given_diagnosis: [],\n  description: [],\n  code: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: suggestion\n        }\n      })()\n\n    case 'RESET_SUGGESTION':\n      return (() => {\n        let { field } = action.payload\n        return {\n          ...state,\n          [field]: [...initialState[field]]\n        }\n      })()\n\n    // case 'SET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     let { field, suggestion } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: { ...initialState[field], ...suggestion }\n    //     }\n    //   })()\n\n    // case 'SET_SUGGESTION_ON_ARRAY':\n    //   return (() => {\n    //     let { field, index, by, suggestion, data } = action.payload\n\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           i = { ...i, [by]: suggestion, data }\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    // case 'ADD_SUGGESTION_TO_ARRAY':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: [...state[field], { ...icd10 }]\n    //     }\n    //   })()\n\n    // case 'RESET_SUGGESTION_OBJECT':\n    //   return (() => {\n    //     const { field } = action.payload\n    //     return { ...state, [field]: initialState[field] }\n    //   })()\n\n    // case 'RESET_SUGGESTION_ARRAY':\n    //   return (() => {\n    //     const { field, index } = action.payload\n    //     return {\n    //       ...state,\n    //       [field]: state[field].map((i, _index) => {\n    //         if (index === _index) {\n    //           for (let f in icd10) i[f] = icd10[f]\n    //         }\n    //         return i\n    //       })\n    //     }\n    //   })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// import StackTrace from 'stacktrace-js'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\n// TEST Page\nimport Test from './Components/Test/Test'\n\nimport BatchEncodingServices from 'Services/Api/Claims/BatchEncodingServices'\n\n// Constants\nimport { mapRoles } from './Constant/ClaimUsers'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\n// window.onerror = function (msg, file, line, col, error) {\n//   StackTrace.fromError(error).then(err => {\n//     StackTrace.report(err, `${process.env.REACT_APP_SERVER_API}/c/c/error`, {\n//       type: 'window.onerror',\n//       url: window.location.href,\n//       userId: window.userId,\n//       agent: window.navigator.userAgent,\n//       date: new Date(),\n//       msg: msg\n//     })\n//   })\n// }\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(mapRoles(role))\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = props => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' render={() => BatchEncoderRoutes(props)} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          <Route path='/test' exact component={Test} />\n\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic({ userRole })}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => BatchEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' render={() => ClaimsAnalystRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' render={() => PaymentRequestRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER_SUPERVISOR' && (\n            <Route path='/' render={() => PaymentRequestSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' render={() => MedicalConsultantRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' render={() => ClaimsReconRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsVerifierSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' render={() => ClaimsManagerRoutes({ userRole })} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n"],"sourceRoot":""}