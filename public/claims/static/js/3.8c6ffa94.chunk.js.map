{"version":3,"sources":["Utilities/TextFormatter.js","Services/ExtractValidationResult.js","SharedComponents/Table/Table.js","SharedComponents/Alert/Alert.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/SearchTextComponent/SearchTextComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","Pages/Protected/Claims/Components/DentalChart/Teeth/style.module.scss","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","SharedComponents/DatePicker/DatePicker.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.module.scss","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.module.scss","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.module.scss","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.module.scss","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.module.scss","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/UtilizationReport.module.scss","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.module.scss","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.module.scss","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.module.scss","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.module.scss","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.module.scss","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.module.scss","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.module.scss","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.module.scss","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.module.scss","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/LoadingIndicator/LoadingIndicator.module.scss","SharedComponents/ClientMemberLookup/ClientMemberLookup.module.scss","SharedComponents/ClientMemberLookup/ClientMemberModal.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/Components/DentalChart/DentalChart.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/DatePicker/DatePicker.module.scss","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Test.module.scss","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.module.scss","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.module.scss","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.module.scss","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.module.scss","Pages/Protected/Claims/Components/ViewList2/ViewList.js","Pages/Protected/Claims/Components/Tiles/CreatedBundlesTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedBundlesTile.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/Components/BatchEncoder/Dashboard/Dashboard.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/DatePicker/DatePicker.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BundleDetails/BundleDetails.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/Store/contants.js","Pages/Protected/Claims/Store/actions/BatchEncoding/index.js","Pages/Protected/Claims/Store/actions/BatchEncoding/batch.js","Pages/Protected/Claims/Store/actions/BatchEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claim.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/grandTotal.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/dentalProcedure.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsEncoding/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claim.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/claimType.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/dropdown.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/suggestion.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/procedure.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/hospitalItem.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/professionalFee.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/discrepancy.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/error.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/escalation.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/inquiry.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reassign.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/reject.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/recon.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/utilization.js","Pages/Protected/Claims/Store/actions/ClaimsAnalysis/return.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/RcsSoaValidator.js","Pages/Protected/Claims/Components/BatchEncoder/BundlePage/BundlePage.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/Components/BatchEncoder/NewBundlePage/NewBundlePage.js","Services/Api/ClaimsEncodingServices.js","Controllers/SoaEtlController.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Parser/index.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/UploadSpace/UploadSpace.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/Components/DynamicTable/DynamicTable.js","Pages/Protected/Claims/Components/FieldMapper/DataPairs/DataPairs.js","Pages/Protected/Claims/Components/FieldMapper/FieldMapper.js","Pages/Protected/Claims/Components/BatchEncoder/UploadSoaPage/UploadSoaPage.js","Services/Api/ClaimsServices.js","Services/ArrayToCSV.js","Utilities/SafeAccess.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/Footer/Footer.js","Services/Api/CustomerCareServices.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/TransmittalReport.js","Pages/Protected/Claims/Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport.js","Pages/Protected/Claims/Components/Reports/PRCheckReport/PRCheckReport.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/mapData.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utilization.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Utilization/Utils/pagination.js","Services/Api/ClaimsAdjudicationServices.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/style/theme.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/data/legend.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/config/months.js","Pages/Protected/Claims/Components/Reports/UtilizationReport/UtilizationReport.js","Pages/Protected/Claims/Components/Reports/LoadingHimsData/LoadingHimsData.js","Pages/Protected/Claims/Components/Reports/ConfinementReport/ConfinementReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/constants.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/Footer/Footer.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/PaymentRequestReport.js","Pages/Protected/Claims/Components/Reports/PaymentRequestReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Components/Reports/ReimbursementReport/ReimbursementReport.js","Services/Api/ClaimsMaintainerServices.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/validator/DateRangeValidator.js","Pages/Protected/Claims/Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport.js","Pages/Protected/Claims/Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport.js","Pages/Protected/Claims/Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport.js","Pages/Protected/Claims/Components/Reports/PerformanceReport/PerformanceReport.js","Pages/Protected/Claims/Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport.js","Pages/Protected/Claims/Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport.js","Pages/Protected/Claims/Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport.js","Pages/Protected/Claims/Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport.js","Pages/Protected/Claims/Components/Reports/DetailedClaimsReport/DetailedClaimsReport.js","Pages/Protected/Claims/Routes/Reports.js","Pages/Protected/Claims/Components/Reports/TransmittalReport/helper/staticHeaderFooter.js","Pages/Protected/Claims/Routes/BatchEncoder.js","Pages/Protected/Claims/Components/Tiles/BatchAndEncoderTile.js","Pages/Protected/Claims/Components/Tiles/ForReconciliationClaimsTile.js","Services/Api/BatchEncodingSupervisoryServices.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","SharedComponents/LoadingIndicator/LoadingIndicator.js","Utilities/ArrayCompare.js","SharedComponents/ClientMemberLookup/ClientMemberLookup.js","SharedComponents/ClientMemberLookup/ClientMemberModal.js","Services/Api/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Utilities/Total.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ReturnValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Components/FloatingFields/FloatingFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/Unit.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitTable.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Utilities/DefaultValue.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitHeaders.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Mapper/BenefitFooters.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/query.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/pagination.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Exclusions/Utils/sortBy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/getValidators2.js","Pages/Protected/Claims/Components/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/3.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Incisor/4.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Canine/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Premolar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/1.js","Pages/Protected/Claims/Components/DentalChart/Teeth/Molar/2.js","Pages/Protected/Claims/Components/DentalChart/Teeth/TeethFactory.js","Pages/Protected/Claims/Components/DentalChart/TeethGroup.js","Pages/Protected/Claims/Components/DentalChart/DentalChart.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/Components/ClaimsViewer/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/index.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/Components/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/Routes/BatchEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/OpenBatchesTile.js","Pages/Protected/Claims/Components/Tiles/MyBatchesTile.js","Pages/Protected/Claims/Components/Tiles/CompletedBatchesTile.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/BatchPage/BatchPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/InPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Emergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Reimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/MedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Pharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/Dental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/AutoFill/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimsRemarks/ClaimsRemarks.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/getValidators2.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Validators/index.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DentalProcedureForm/DentalProcedureForm.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfo/ReimbursementInfo.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/ProcedureForm/DiagnosisValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoder.js","Pages/Protected/Claims/Components/Tiles/ClaimsEncoderTile.js","Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/Components/ButtonFooter/ButtonFooter.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage.js","Pages/Protected/Claims/Routes/ClaimsDetailsEncoderSupervisor.js","Pages/Protected/Claims/Components/Tiles/ForAdjudicationTile.js","Pages/Protected/Claims/Components/Tiles/MyClaimsTile.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/Tiles/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ReturnedEscalatedClaimsTile.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Components/DatePicker/DatePicker.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Validations/DateValidator.js","Pages/Protected/Claims/Components/ClaimsAnalyst/Test/Test.js","Pages/Protected/Claims/Routes/ClaimsAnalyst.js","Pages/Protected/Claims/Components/Tiles/ForPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/SubmittedPaymentRequestTile.js","Pages/Protected/Claims/Components/Tiles/OverrideClaimTile.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/Components/PaymentRequest/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage.js","Pages/Protected/Claims/Routes/PaymentRequest.js","Pages/Protected/Claims/Components/Tiles/SubmittedPrSupervisorTile.js","Services/Api/PaymentRequestSupervisorServices.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList.js","Pages/Protected/Claims/Routes/PaymentRequestSupervisor.js","Pages/Protected/Claims/Components/MedicalConsultant/ViewList/ViewList.js","Pages/Protected/Claims/Components/MedicalConsultant/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/MedicalConsultant.js","Pages/Protected/Claims/Components/ClaimsReconciliation/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsRecon.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/Components/ButtonFooter/ButtonFooter.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/MedicalCollectiblesServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList.js","Pages/Protected/Claims/Components/Tiles/RejectedClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsVerifierTile.js","Pages/Protected/Claims/Components/Tiles/ReconciledClaimsTile.js","Pages/Protected/Claims/Components/Tiles/ClaimsForApprovalTile.js","Pages/Protected/Claims/Components/Tiles/MedicalCollectiblesTile.js","Pages/Protected/Claims/Components/Tiles/ReimbursementClaimTile.js","Pages/Protected/Claims/Components/ClaimsVerifierSupervisor/Dashboard/Dashboard.js","Pages/Protected/Claims/Routes/ClaimsVerifierSupervisor.js","Services/Api/ClaimsManagerServices/ClaimsManagerServices.js","Pages/Protected/Claims/Components/ClaimsManager/Dashboard/Dashboard.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/ReassignValidator.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/Components/AssignDialog/AssignDialog.js","Pages/Protected/Claims/Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage.js","Pages/Protected/Claims/Components/ClaimsManager/MaintenancePage/MaintenancePage.js","Pages/Protected/Claims/Routes/ClaimsManager.js","Pages/Protected/Claims/Constant/ClaimUsers.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/bundlesReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/batchReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/BatchEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/grandTotalReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/dentalProcedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsEncoding/index.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/claimTypeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/suggestionsReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/dropDownReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/procedureReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/hospitalItemReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/professionalFeeReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/discrepancyReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/errorReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/escalationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/inquiryReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reassignReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/rejectReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/reconReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/utilizationReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/returnReducer.js","Pages/Protected/Claims/Store/reducers/ClaimsAnalysis/index.js","Pages/Protected/Claims/Store/index.js","Pages/Protected/Claims/Store/reducers/index.js","Pages/Protected/Claims/index.js"],"names":["CurrencyFormatter","value","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","_value","moment","isValid","DateFormatterByAbbreviation","LargeNumberFormatter","parseFloat","NameFormatter","args","initial","abr","lastName","firstName","middleName","last_name","first_name","middle_name","format1","filter","Boolean","join","format2","extract","_errors","error","details","e","field","path","message","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","onClick","event","disabled","aria-label","direction","Math","ceil","max","CustomTable","id","TableContainerProps","TableProps","head","body","footer","pagination","limit","rowsPerPageOptions","onChange","footerComponent","Fragment","component","Paper","table","float","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","Alert","defaultFunction","open","cancelLabel","okLabel","onOk","onCancel","onClose","aria-labelledby","aria-describedby","variant","color","autoFocus","DashboardTileComponent","children","header","title","viewList","actionHeader","onFilterChange","isFilterShown","React","useState","setFilter","wrapper","input","selected","action","list","Children","map","child","displayName","useStyles","display","alignItems","minWidth","border","focus","borderColor","flex","iconButton","padding","divider","width","height","margin","SearchTextComponent","placeholder","setFocus","onBlur","autoComplete","onFocus","TextFieldCurrency","label","required","currency","readOnly","other","customInput","InputBase","isNumericString","displayType","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","values","module","exports","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","actions","marginTop","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","clip","overflow","position","top","EnhancedTable","headCells","handleRequestSort","handleSelectAllClick","order","orderBy","checkAll","sorter","size","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","selectStatus","headCell","key","align","center","numeric","disablePadding","sortDirection","active","CustomizedDialogs","columns","searchTextPlaceHolder","setViewList","onViewListChange","handleOnClose","p","show","debounce","setDebounce","Dialog","fullWidth","maxWidth","PaperProps","style","DialogTitle","disableTypography","Typography","IconButton","button","DialogContent","dividers","content","search","clearTimeout","setTimeout","stickyHeader","TableCell","sortField","TableSortLabel","sort","name","match","handleColumnFiltering","data","CreatedBundlesTile","services","sizes","items","setItems","initialValue","useEffect","Promise","all","getBundles","category","range","getBundleCount","then","batchResponse","batchCountResponse","results","state","Button","LoadingService","loading","createBundle","res","history","push","prevState","TableHead","item","index","bundle_number","date","due","facility","to","params","_params","_data","row","SubmittedBundlesTile","TaskTrayComponent","showTitle","toArray","cloneElement","_sizes","xs","sm","lg","Grid","container","itemSize","s","TicketListComponent","viewAllLink","FormControl","Select","MenuItem","caption","axios","instance","BatchEncodingServices","url","method","batch_number","on","headers","ExcludeErrorConstants","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","tiles","AutoComplete","suggestions","_error","setError","trim","currentTarget","contains","relatedTarget","square","suggestion","handleItemClick","DatePicker","disableComponents","tabindex","noMargin","setOpen","selectedDate","setSelectedDate","InputRef","useRef","handleOnFocus","current","handleOnBlur","utils","MomentUtils","TextFieldComponent","ref","icon","clearable","TextFieldNumber","formattedValue","BundleDetails","errors","isReadOnly","disableControls","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","length","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","i","term","earliest_term","isNaN","newDate","date_received","add","full_name","ex","md","total_rcs","toISOString","due_date","soa_number","total_soa_amt","facility_id","facility_name","doctor_id","doctor_name","reassign_notes","multiline","rows","BatchList","batches","onDelete","openDialog","canEdit","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","searchFilter","batch","setBatch","includes","claim","toLowerCase","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","Checkbox","_index","handleClick","buttonWrapper","deleteMessage","getMessage","DropDown","addNew","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","startsWith","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","greater","messages","notes","allow","when","is","otherwise","options","abortEarly","validate","ExtractValidationResult","BATCH_ENCODING","CLAIMS_ENCODING","CLAIMS_ANALYSIS","payload","for","constants","dasdas","resetClaim","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimDoctor","setClaimRoom","addClaimDiagnosis","setClaimDiagnosis","setClaimPrimaryDiagnosis","removeClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","addClaimHospitalItem","updateClaimHospitalItem","removeClaimHospitalItem","addClaimProfessionalFee","updateClaimProfessionalFee","removeClaimProfessionalFee","setClaimType","setDropDown","initDropDowns","initSuggestions","setSuggestionObject","setSuggestionOnArray","addSuggestionToArray","removeSuggestionToArray","resetSuggestionObject","resetSuggestionArray","setProcedure","setHospitalItem","setProfessionalFee","initDiscrepancy","setDiscrepancy","resetError","resetEscalation","addEscalationMessages","setEscalationMessages","setEscalationMessage","setEscalationAssignee","resetInquiry","addInquiryMessages","setInquiryMessages","setInquiryMessage","setInquiryAssignee","resetReassign","addReassignMessages","setReassignMessages","setReassignMessage","setReassignAssignee","setRejectStatus","setClaimPro","resetRecon","setReconNotes","setLimitType","resetLimitType","resetReturn","setReturnNote","setShowBatchForm","setSelectedBatch","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","dispatch","useDispatch","useSelector","BatchEncoding","saveControl","showPrompt","setShowPrompt","confirmAction","setConfirmAction","setErrors","CustomTextField","doctor","DialogActions","BatchFormValidator","bundle_soa","batches_soa","valid","bundle_rcs","batches_rcs","setBatchAction","setSaveBatchControl","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setSearchFilter","setOpenDialog","openBundleDialog","setOpenBundleDialog","openRCSDialog","setOpenRCSDialog","setOpenError","submitStatus","setsubmitStatus","isSupervisor","user_id","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","status","received","soa","amount","getBatches","cancelBundle","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","validateSoaRcs","reduce","accu","curr","RcsSoaValidator","newBatch","updateBatch","f","createBatch","split","updateBundle","handleOnOk","deleteMultipleBatch","catch","onOpen","source","NewBundlePage","setDisableControls","openAlert","setOpenAlert","due_date_adjustment","newBundle","setNewBundle","NewBundleValidator","form","inputs","save","ClaimsEncodingServices","claim_number","responseType","Accept","SoaEtlController","MINIMUM_KEYS","BUNDLE_SOA_NUM","BUNDLE_RCS_DATE","BUNDLE_FACILITY_NAME","BUNDLE_FACILITY_CODE","BATCH_CLAIMS_SOURCE","BATCH_CLAIM_TYPE","CLAIM_DATE_AVAILMENT","CLAIM_DATE_ADMITTED","CLAIM_DATE_DISCHARGE","CLAIM_LOA_NUM","CLAIM_APPROVAL_CODE","CLAIM_MEMBER_NUM","CLAIM_MEMBER_NAME","CLAIM_DIAGNOSIS_NAME","CLAIM_DIAGNOSIS_CODE","CLAIM_DOCTOR_NAME","CLAIM_DOCTOR_AMOUNT","CLAIM_PROCEDURE_NAME","CLAIM_PROCEDURE_AMOUNT","CLAIM_HOSPITAL_ITEM_NAME","CLAIM_HOSPITAL_ITEM_AMOUNT","COLUMN_TEMPLATES","DEFAULT","transform","dataRows","dataMapping","defaults","console","log","fields","prepData","_transformPreviewDataToPrepData","_transformPrepDataToHierarchicalData","JSON","stringify","loadToApi","successCallback","resolve","reject","bundleNumber","bundleParam","addBatchPromises","batchParam","claims","resolveBatchPromise","rejectBatchPromise","a","addClaim","addClaims","outputEntries","forEach","dataEntry","outputEntry","hasSingleValue","Object","keys","columnKey","dataValue","outputKey","fieldKey","prepDataRows","currentBatch","currentClaim","soaNumber","dateReceived","claimType","approvalCode","nameParts","member_account_number","member_first_name","member_middle_name","member_last_name","approval_code","loa_number","diagnosis","professional_fees","hospital_items","procedures","date_from","date_to","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","room_type","room_rate","pro_id","pro_name","diagnosisName","diagnosisCode","flag","code","description","lineItem","lineAmount","gross_amount","specialization","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","amount_not_covered","reason","amount_due_from_member","reason_for_charging_member","item_code","DEBUG","test","file","onComplete","reader","FileReader","onload","workbook","XLSX","read","result","sheet","Sheets","SheetNames","sheet_to_json","raw","shift","_item","readAsBinaryString","Progress","withStyles","borderRadius","bar","LinearProgress","UploadSpace","onSelectFile","dialogRef","dragged","setDragged","fileLoaded","setFileLoaded","progress","setProgress","handleOnDrag","preventDefault","stopPropagation","handleParse","Parser","fileName","onDrop","dataTransfer","files","onDragOver","onDragLeave","clickable","click","warning","accept","DynamicTable","onRemoveFile","onDetectDataRows","tableState","setTableState","selectedItems","handleOnChangeItems","endAt","find","__index__","DataPair","targets","sources","onClickRemove","onChangeSource","onChangeTarget","DataPairContainer","onClickAddNew","dropdown_source","dropdown_target","FieldMapper","claimSources","ApiService","onSaveSuccess","onChangeHeaderInputs","onChangeClaimTypeDataMapping","facilityTemplate","setFacilityTemplate","isDefault","template","setTemplate","templates","setTemplates","dialog","setDialog","mesage","alertDialog","setAlertDialog","getTemplates","_default","is_default","_id","handleOnChangeFacility","getFacilitySuggestions","handleOnChangeDialog","section","groups","_template","t","handleOnChangeTemplate","_fields","last","onClickAddField","splice","onRemoveField","storeTemplate","template_name","storeFacilityTemplate","template_id","FormControlLabel","control","default","UploadSoaPage","setData","headerInputs","setHeaderInputs","claimTypeValues","setClaimTypeValues","setDataRows","handleOnCancel","claimTypeMap","element","fileHeaders","onSuccess","ClaimsAdjudicationServices","client","Download","extension","statics","newLine","c_header","c_footer","_rows","joined","currentValue","blob","Blob","ipcRenderer","window","require","readAsDataURL","onloadend","base64data","pop","send","FileSaver","saveAs","SafeAccess","def","delimeter","obj","completeColumns","remarks","ClaimsUtilLedgerReport","dataColumns","hideReport","hideHeader","dateRange","refresh","from","Date","setClaims","dateRangeError","setDateRangeError","setColumns","handleOnPaginate","handleOnFilter","fetchLedger","ClaimsServices","utilizationLegder","_claims","date_admission_from","date_admission_to","date_service","date_service_from","date_service_to","contract_from","contract_to","filtered","entry","indexOf","formatData","output","property","disableFuture","submit","DateRangeValidator","col","ArrayToCSV","c","fontSize","maxHeight","claimIndex","colIndex","username","total","ar_amount","signatories","CustomerCareServices","account_number","mct_id","where","skip","offset","client_account_no","MedicalConsultantServices","member_account_no","icd_code","filters","UserManagementServices","role_name","this","getUsers","class","mapData","claim_no","diagnoses","primary_diagnosis","icd10_code","primary_icd10_code","provider","partner_name","doctors","setDoctors","partner_doctor_name","total_amount","grand_total","session","date_admitted","date_issued","concat","headCellsComplete","randomRange","random","Utilization","ClaimsAnalysis","fetchService","isMember","member","utilizationLoa","hideSearchBar","hideActionColumn","setHeadCells","setRows","allList","setAllList","filteredRows","setFilteredRows","utilized","ibnr","graph","setGraph","benefit_limits","info","member_id","icd","category_code","IcdCptStorageServices","diagnosis_code","_utilizationLoa","_search","some","procedure_name","cpt_code","toString","itemFilter","handleSearchChange","exc","lodash","take","chunk","setPaginate","background","hover","role","tabIndex","cell","renderRows","claimNo","getClaimResponse","analyzeRespone","analysis_results","ClaimsReconServices","InPatient","OutPatientProcedure","OutPatientConsultation","MedicineAllowance","MedicalSupplies","ClinicManagement","mockData","months","clientColumns","memberDataColumns","id_row","label_left","label_right","name_row","bundle_row","date_row","bundles","total_approved_amount","total_tax_amount","initialDetails","total_pr_amount","discount_amount","PaymentRequestReport","medical_partner_id","medical_partner_name","fetching","setFetching","setDetails","column","getBundleSoaSuggestions","handlePagination","paymentRequestClaims","handleGenerateReport","approved_amount","tax_amount","static_header","hasOwnProperty","_columns","no","static_footer","staticHeaderFooter","handleOnChangeBundleSoa","paymentRequestReport","searchValue","typo","TextFieldStyle","colSpan","CircularProgress","member_name","handling","date_max","initialClaims","month","number_of_claims","claims_processed","amount_processed","total_received","total_processed","contract_plan","claim_status","user","geography","reportPages","transmittal","registered_name","corporate_account_no","setClient","returnClient","setReturnClient","setTotal","setUsername","localStorage","getItem","getUserById","handleClientOnChange","getClientSuggestions","getClientInfo","fetchTransmittalItems","transmittalReport","_totam_amout","_ar_amount","total_due_from_member","contracts","PdfViewer2Service","service","getTransmittalReportPdf","left","right","utilizationLedger","treasuryTransmittalReport","reports","setReports","fetchReport","_reports","report","date_requested","check_date","minHeight","utilizationReport","reportType","setReportType","actual","graphData","setGraphData","ABL","MBL","limitType","graphFilter","setGraphFilter","account_no","setMember","setUtilizationLoa","setMemberFetchStatus","fetchTable","newData","newChild","percentage","getPercentage","childContainer","utilizationClientTable","getMember","getMemberUtilizationLoa","err","response","RadioGroup","Radio","utilizationClient","getClientUtilization","getClientUtilizationLoa","graphClientRes","clientUtilRes","clientUtilLoaRes","utilAmount","loaAmount","total_utilization_amount","total_ibnr_amount","legend","mark","textAlign","tooltip","bottom","year","toFixed","cases","availed_by_principals","availed_by_dependents","memberinfo","memberinfoRow","memberInfoLabel","memberInfoValue","diff","getUtilizations","prReports","loadingHimsData","fetchHIMSData","loadingHIMSData","availment_date","approved_date","posted_date","date_discharged","payment_due_date","handleOnColumnFilter","confinementReport","fetchRecords","reimbursementReport","grandTotal","reimbursementClaimReport","word","substring","hidden","claimsSummaryReport","setSuggestion","geopgraphy","handleOnChange","_category","lookupsQuery","processed","productivityPerformaceReport","region","receivedTotal","processedTotal","productivityReport","received_total","processed_total","returnedClaimsReport","setDateRange","handleOnClickFilter","_total","claim_amount","return_reason","performanceReport","contract_plan_type","average","work","agingPartialApprovedReport","total15Days","total1Week","total1Month","totalAll","agingPartialApprovedClaimsReport","agingReturnedClaims","agingReturnClaimsReport","claimsBeyond3Months","date_of_service","agingReimbursement","reimbursement_category","reimbursmentAgingReport","detailedClaimsReport","reportsItems","BATCH_ENCODER","BATCH_ENCODER_SUPERVISOR","CLAIMS_DETAILS_ENCODER","CLAIMS_DETAILS_ENCODER_SUPERVISOR","CLAIMS_ANALYST","PR_OFFICER","PR_OFFICER_SUPERVISOR","MEDICAL_CONSULTANT","CLAIMS_RECON","CLAIMS_VERIFIER_SUPERVISOR","CLAIMS_MANAGER","generateBreadCrumbs","userRole","breads","r","generateSideBar","generateRoutes","exact","sideBarItems","breadcrumbs","dashboard","specificBundle","uploadSoa","BatchAndEncoderTile","getBatchEncoderWork","getBatchEncoderWorkCount","batchEncoders","total_bundle","total_batch","ForReconciliationClaimsTile","for_recon","ticket","getClaims","getClaimCount","claimResponse","claimCountResponse","allClaims","allClaimsCount","BatchEncodingSupervisoryServices","note","assignee","AssignDialog","setShow","onSubmit","reassign","setReassign","showAlert","setShowAlert","users","setUsers","reassignErrors","setReassignErrors","comment","assign","ReassignValidator","columnss","CreatedBundlesPage","batchEncoderId","setBatchEncoderId","openModal","setOpenModal","activeAssigning","setActiveAssigning","headerCheckBox","setHeaderCheckBox","_batchEncoderId","handleOnViewListChange","selectedCount","handleOnItemSelect","bundle_numbers","reassignBundles","DiscrepancyBase","discrepancy","iconStyle","others","retainSpace","autoWidth","showIcon","anchorEl","setAnchorEl","setMessage","Array","isArray","flat","Infinity","m","spreadResult","handleClose","Popover","anchorOrigin","vertical","horizontal","transformOrigin","whiteSpace","LoadingIndicator","animation","includesAny","s1","s2","ClientMemberLookup","allSearch","allSearchText","allSearchFields","mode","onRecordSet","apiData","setApiData","finalRows","setFinalRows","setSelected","colFilters","setColFilters","setLoading","fetchData","translateRows","filterData","fetches","responses","colIdx","val","handleOnSort","handleColumnFilter","_row","entries","revertRow","ClientMemberModal","CustomerCareService","renameProp","oldProp","newProp","old","AutoFillInitializer","AutoFill","loa","member_info","first_middle","given_name","common","loa_no","proc","diagnosis_given_diagnosis","diagnosis_description","prof","diag","room","date_admitted_date","now","date_discharged_date","partner_id","rooms","localeCompare","sensitivity","rate","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","recommendation","reimbursement_type","customer_account_number","client_id","company_name","client_name","medicine_category","tooth_number","tooth_numbers","date_issued_date","claim_remarks","other_name","subType","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","permissions","requiredFields","showReimbursement","showApprovalCode","showClaimSource","showLoaNumber","showCompany","isDental","showMemberAccountNumber","isCM","memberAccountNumber","setMemberAccountNumber","contractPlanTypeLoading","setContractPlanTypeLoading","memberModal","setMemberModal","clientModal","setClientModal","handleOnClickClientLookup","handleFetchContracts","accountNumber","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","getLoaDetails","update","client_account_number","client_account_name","contract","getMembers","getMemberContractPlanType","finally","handleSetMember","getClients","getClientrContractPlanType","handleSetClient","ICDTextFields","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","delete","Tooltip","GivenDiagnosisField","givenDiag","onChangeGivenDiag","given_diagnosis","DiagnosisList","openDeleteDialog","setOpenDeleteDialog","handleOnClickAddDiagnosis","defaultBehaviour","lastEntry","handleOnChangeIcd10","icd10","getIcd10Suggestions","synonym","getICDSynonyms","_by","handleOnConfirmDelete","create","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureForm","doValidate","showAmountPaidByMember","showPhilhealthField","showAmountNotCovered","showAmountDueFromMember","procedure","dropDown","prop","handleOnChangeCpt","cpt","getCptSuggestions","handleOnChangeDiagnosis","fieldArr","_field","reason_charging","amount_due_from_client","reason_for_charging_client","buttons","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","Item","List","lineItems","dental_procedures","grand","ProcedureList","handleClickLineDiscrepancy","Set","expand","Total","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","hospital_item","handleOnSave","handleOCancel","HospitalItemList","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","major","getSpecializationSuggestions","getDoctorSpecilizations","handleOnChangeSpecialization","professional_fee","ProfessionalFeeList","ClaimFooter","onReject","onViewAnalysisSheet","onViewLetterOfAdvice","onReassign","onEscalate","onApprove","isReimbursement","onRemove","onViewClaimNotice","onReturn","reimbursement_info","userManagementService","escalations","c_return","return","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","returnModal","setReturnModal","rejectModal","setRejectModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","removeModal","setRemoveModal","validateModal","setValidateModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","returnError","setReturnErrors","initDropdownUsers","roles","getUsersByRole","sortBy","doValidateMiddleware","return_advice","goBack","analysis_sheet","enabled","visible","letter_of_advice","escalate","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","remove","modals","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","ReturnValidator","doValidateReturn","DisapprovedLabel","reasons","disapproved","generateMessage","TextFieldSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","nodes","onItemClick","TreeView","defaultCollapseIcon","defaultExpandIcon","node","TreeItem","nodeId","planPackage","benefitCategory","benefits","tree_id","ValueField","FloatingFields","elements","setFields","elem","layout","unit","Functions","parent_name","limit_type","limits","age_limit","max_availee","DefaultValue","no_of_days","time_from","time_to","member_type","plan_type","peso_limit_amt","no_of_members","peso_limit","payment","availment","limit_unit","Unit","rollover","eligible_availees","days_deployed","eligibility","empty","RB","EM","IP","OP","PV","SD","MT","OM","CC","number_of_days","DNT","SH","ADD","mobile_ape_availees","partner","rb_limit_type","abl_mbl","rb_limit","rb_mode_of_payment","annual","semiannual","quarterly","monthly","mode_of_payment","rb_pec_limit_type","pec","PHP","Months","rb_pec_limit","rb_pec_limit_specify","time_based_limit","number_mount","day_based","billing_arangement","billingArrangement","premium","billback","rider_fee","imputed_in_premiums","billback_net","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","billback_fee","billback_type","rider_fee_unit","waiting_period","waiting_period_type","waitin_period_unit","limit_for_all","limit_for_all_unit","availment_per_year","voluntary_upgrading_type","voluntary_upgrading_amount","involuntary_upgrading_type","except_suite_room","involuntary_upgrading_amount","Benefits","setTable","setContractId","planType","setPlanType","setPlanPackage","setBenefitCategory","lastRoomAndBoard","setLastRoomAndBoard","roomAndBoard","setRoomAndBoard","coverages","setCoverages","riders","setRiders","rootNode","setRootNode","benefitNode","setBenefitNode","setHeaders","footers","setFooters","MCT","benefit_tree","rnb","_keys","_name","getRows","BenefitTable","getHeaders","getFooters","parent_keys","pkey","sub_node","acc","BenefitHeaders","BenefitFooters","handleTableSort","handleTableFilter","selectedPlan","setSelectedPlan","planTypes","setPlanTypes","allExclusions","setAllExclusions","exclusionList","setExclusionList","getExclusions2","handleOnSetItem","plan_types","plan_types_keys","planTypeKey","ex_nodes","exclusionKey","inner_node","innerKey","is_excluded","item_name","parent_code","handleOnSearch","benefit","queriedData","mutable_data","onQuery","sortedData","Link","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partnerId","setPartnerId","partnerName","setPartnerName","partnerLocation","setPartnerLocation","partners","setPartners","anySearch","setAnySearch","fetchAll","queryColumn","collection","searchObj","address","any","_partners","sorted","unit_no","floor","building_no","building_name","street","barangay","district","city","zip_code","fetchDoctors","first","middle","sub","schedule","Contract","getMemberContract","getClientContract","setFileName","setTitle","setService","brand_name","pdf","initialPageNumber","initialScale","RightPanelTabs","onReturnEscalate","onReturnInquire","memberFetchStatus","clientFetchStatus","getPartners","getDoctors","inquiries","recon","tabs","communication","comments","ClaimsRemarks","selected_fields","available_fields","boolean","contract_year_from","contract_year_to","official_receipt_number","getValidators","getValidators2","ClaimInPatient","onChangeFacility","onChangePro","_type","getClaimDetails","getReason","doValidateAll","doValidateProcedure","doValidateHospitalItem","doValidateProfessionalFee","_allowedFields","_lineItemFields","getRooms","pro","claim_sub","sub_type","base","startOf","constainerStyle","validator","MainValidator","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","ClaimMedicineAllowance","account_name","ContractRange","hasDiscrepancy","handleOnItemClick","Incisor1","viewBox","crown","gums","fill","Incisor2","Incisor3","Incisor4","Canine1","Canine2","Premolar1","Molar1","Molar2","TeethFactory","flipY","circle","teeth","flipX","TeethGroup","states","_details","startAt","reverse","uppper","lower","DentalChart","chart","upper","ClaimDental","contract_year","constructDentalStates","ClaimAPE","ClaimECU","ClaimPharmacy","ClaimPPE","ppe_packagers","ppe_packages","ListItem","ListItemText","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfo","canPrintNotice","setShowModal","doReject","doViewClaimNotice","lookup","reimbursement_info_analysts","showAdd","setShowAdd","reasonDropdown","setReasonDropdown","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","handleOnClickSave","scrollTo","scrollHeight","behavior","ItemForm","setItem","today","handleOnLookup","handleOnChangeReason","hasError","tempReasons","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","batchNumber","setBatchNumber","allowedFields","setAllowedFields","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setShowReimbursementModal","_claim","reimbursement_details","endOf","wrap","permission","DashboardRedirect","counter","setCounter","_counter","interval","setInterval","clearInterval","GetClaimComponent","_props","SelectecClaimType","hasPrimary","itemError","ClaimAnalysis","setClientFetchStatus","setGrandTotal","breadCrumbsList","isManager","claimNumber","setClaimNumber","getClaim","_claim_type","__type","getDiscrepancy","getClaimType","getEscalationLogs","getInquiryLogs","getReconNotes","getClient","adjudicationResults","fieldIndex","item_type","item_id","getComments","getInquiries","getNotes","getReport","getAnalysisSheet","getReports","getLetterOfAdvice","getLetterNotice","doValidateBase","rest","doValidateDiagnosis","DiagnosisListValidator","not","ProcedureValidator","diagnosisError","exists","ProcedureDiagnosisValidator","HospitalItemValidator","HospitalItemDiagnosisValidator","ProfessionalFeeValidator","ProfessionalFeeDiagnosisValidator","group","groupEnd","callback","anaesthesiologist","getAnaesthesiologistSuggestions","inquire","receiver_id","onInquire","employee_id","proUsersLookup","getProSuggestions","removeClaim","returnClaim","base_errors","createdBundles","specificClaim","utilization","contact","OpenBatchesTile","getBatchCount","openBatches","openBatchCount","handleOnEncode","assignBatch","MyBatchesTile","myBatches","myBatchCount","CompletedBatchesTile","completedBatches","completedBatchCount","openTickets","BatchesPage","BatchDetails","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","cmHeadCells","prManagerheadCells","ClaimList","selectedClaimNumber","onConfirm","actionItems","setActionItems","submittedBatch","setPagination","setOrder","setOrderBy","claim_numbers","claimNumbers","rowsLength","ProviderSchedule","header1","fontStyle","partition","BatchPage","apiService","setSelectedClaimNumber","claimCount","setClaimCount","showProviderSchedule","setShowProviderSchedule","cancelDialog","setCancelDialog","getClaimsAndCount","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","reqApprovalCode","reqLoaNumber","ClaimsEncoding","handleOnRemoveDiagnosis","CptTextFields","CptTextField","unsubscribe","subscribe","handleOnChangeProcedureForm","diagnosi","handleOnUpdateProcedure","HospitalItemTextFields","HospitalItemTextField","onChangeName","handleOnChangeHospitalForm","handleOnUpdateHospitalItem","handleOnChangeProfessionalFeeForm","handleOnUpdateProfessionalFee","setDentalProcedure","showProcedureForm","generateKey","showHospitalItemForm","showProfessionalFeeForm","lineItemFields","setlineItemFields","isAdd","ToothNumber","DentalProcedureForm","dentalProcedure","doValidateDentalProcedure","isModified","setIsModified","showSaveAlert","setShowSaveAlert","setType","initial_values","_setDialog","_resolve","SoftValidatorAlertComponent","SoftValidatorService","resetGrandTotal","ClaimPage","_claimNumber","pageTitle","breadCrumbs","getBatchDetails","DentalProcedureValidator","DentalProcedureDiagnosisValidator","claimFields","updateClaim","specificBatch","ClaimsEncoderTile","getEncoders","getEncodersBatches","total_count","startCase","total_batches","ClaimsEncoderSupervisorServices","setReassignNotes","handleOnSubmitReassign","alert","CreatedBatchesPage","setSelectStatus","headcell","setId","getEncoderBatches","handleTableRenderer","handleSelectAll","handleItemSelect","date_due","cesFooter","prev_user","getEncoderBatch","assigned","ForAdjudicationTile","handleOnAnalyze","assignClaim","handleFilterChange","MyClaimsTile","my","aria-controls","aria-haspopup","SubmittedClaimsTile","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","submitted","handleOnShowPdf","Menu","keepMounted","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","handleDateChange","ClaimsInputBase","allowKeyboardControl","showTodayButton","top100Films","Test","storage","setStorage","facilities","Autocomplete","getOptionLabel","option","renderInput","TextField","freeSolo","onInputChange","inputValue","InputProps","endAdornment","InputAdornmentProps","DateValidator","analyze","exclusions","ForPaymentRequestTile","mTitle","paymentRequestClaimCount","SubmittedPaymentRequestTile","OverrideClaimTile","PaymentRequestServices","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","requestBatch","should_include","supervisor","approved_by_uid","paymentRequest","specificPaymentRequest","submittedPaymentRequest","SubmittedPrSupervisorTile","getSubmittedPaymentRequest","bundleResponse","submittedRequestClaims","submittedRequestClaimCount","verifierName","total_bundles","processor_id","PaymentRequestSupervisorServices","pr_officer","getPaymentRequestBundles","handleOnSearchColumn","for_review","handleOnReview","review","reassignData","setReassignData","getClaimsAnalyst","claimsCount","ClaimsReimbursementServices","MedicalCollectiblesServices","ClaimsPage","userId","setClaimsCount","ClaimsVerifierSupervisorServices","getItems","handleUnselectAll","handleOnSearchAll","RejectedClaimsTile","getItemCount","ClaimsVerifierTile","verifiers","setVerifiers","totalSubordinatesClaims","getSubordinates","usersCount","prev","handleOnReviewUser","total_claims","ReconTIle","ClaimsForApprovalTile","MedicalCollectiblesTile","ReimbursementClaimTile","ReconciledClaimsTile","reconciled","forApproval","view","reimbursement","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","viewPermission","reviewPermission","rejectedPermissions","ClaimsManagerServices","BatchDetailsPage","UserManagementApi","setClaim","forOverride","setForOverride","getBatchAndClaims","getApprovedClaims","batchRes","claimsRes","getClaimsVerifierSupervisors","analystRes","supervisorRes","overrideClaims","initialItem","deactivate","MaintenancePage","setLookup","showAddItem","setShowAddItem","ClaimsMaintainerServices","isActive","activate","initialLookup","storeLookups","updateLookups","handleOnEditItem","maintenance","submittedSpecificPaymentRequest","prManagerPermissions","initialState","bundlesReducer","batchReducer","suggestionsReducer","combineReducers","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","reassignReducer","errorReducer","discrepancyReducer","escalationReducer","inquiryReducer","rejectReducer","reconReducer","utilizationReducer","returnReducer","reducers","createStore","ClaimsModule","setUserRole","isLoading","setIsLoading","document","mapRoles","store","Store","render","SideBarService","BatchEncoderRoutes","removeItem","batchEncoderLogic","BatchEncoderSupervisorRoutes","ClaimsDetailsEncoderRoutes","BatchePage","ClaimsDetailsEncoderSupervisorRoutes","ClaimsAnalystRoutes","SubmittedPaymentRequestPage","PaymentRequestRoutes","SubmittedPaymentRequestList","PaymentRequestSupervisorRoutes","MedicalConsultantRoutes","ClaimsReconRoutes","ClaimsList","ClaimsVerifierSupervisorRoutes","ClaimsManagerRoutes"],"mappings":"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","file":"static/js/3.8c6ffa94.chunk.js","sourcesContent":["import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400,\n    border: '1px solid transparent'\n  },\n  focus: {\n    borderColor: 'green'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ value, onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  const [focus, setFocus] = React.useState()\n\n  return (\n    <Paper className={`${classes.root} ${focus && classes.focus} box-shadow-field`} onBlur={() => setFocus(false)}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        value={value || null}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n        onFocus={() => setFocus(true)}\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2LrBe\",\"teeth\":\"style_teeth__2oVTW\",\"flip-x\":\"style_flip-x__1PGnc\",\"flip-y\":\"style_flip-y__33IP9\",\"crown\":\"style_crown__1599k\",\"gums\":\"style_gums__11FhV\",\"extracted\":\"style_extracted__3PnGn\",\"filled\":\"style_filled__1lsjD\",\"other-details\":\"style_other-details__NUZKH\",\"circle\":\"style_circle__15989\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__8Tg0R\",\"header-container\":\"ViewList_header-container__2ebNU\",\"header\":\"ViewList_header__1yXdi\",\"title\":\"ViewList_title__2CYeW\",\"content\":\"ViewList_content__boknL\",\"search\":\"ViewList_search__2dgTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__oAI_u\",\"tiles\":\"Dashboard_tiles__2syUb\",\"task-tray\":\"Dashboard_task-tray__XT4CQ\",\"list-item\":\"Dashboard_list-item__12cH_\",\"details\":\"Dashboard_details__KoE3I\",\"detail-item\":\"Dashboard_detail-item__1IcO1\",\"label\":\"Dashboard_label__27GN_\",\"content\":\"Dashboard_content__1bf_x\",\"action\":\"Dashboard_action__3rzPy\",\"ticket-list\":\"Dashboard_ticket-list__2n3Wk\",\"completed_task\":\"Dashboard_completed_task__1hbob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"no-margin\":\"DatePicker_no-margin__2gW7n\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"focus\":\"DatePicker_focus__QzQPi\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"disabled\":\"DatePicker_disabled__1dIUt\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"focus\":\"TextFieldNumber_focus__1VUVD\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__1kDZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__1b5fa\",\"buttonWrapper\":\"BatchList_buttonWrapper__NCrl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__1Rotq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__14ooW\",\"title\":\"BundlePage_title__1Lc1W\",\"root\":\"BundlePage_root__a3kNL\",\"list-header\":\"BundlePage_list-header__1bSSF\",\"actions\":\"BundlePage_actions__3D_Z5\",\"bundle-details\":\"BundlePage_bundle-details__2awUE\",\"batch-list\":\"BundlePage_batch-list__3fbdk\",\"table-container\":\"BundlePage_table-container__4YbDV\",\"buttonWrapper\":\"BundlePage_buttonWrapper__y7DXv\",\"delete-button\":\"BundlePage_delete-button__2Bc0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__30-wL\",\"upload-container\":\"NewBundlePage_upload-container__1tAyb\",\"label\":\"NewBundlePage_label__tShUk\",\"form\":\"NewBundlePage_form__2WWBk\",\"inputs\":\"NewBundlePage_inputs__1PsuR\",\"input\":\"NewBundlePage_input__l22M7\",\"actions\":\"NewBundlePage_actions__1XH58\",\"save\":\"NewBundlePage_save__I7VG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSpace_root__3I1-s\",\"dragged\":\"UploadSpace_dragged__1DiLS\",\"container\":\"UploadSpace_container__38f8b\",\"clickable\":\"UploadSpace_clickable__20X37\",\"icon\":\"UploadSpace_icon__13iY0\",\"label\":\"UploadSpace_label__bx5xk\",\"warning\":\"UploadSpace_warning__2UISF\",\"progress-container\":\"UploadSpace_progress-container__2XgEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DynamicTable_root__3YBZd\",\"file-name-container\":\"DynamicTable_file-name-container__l4skU\",\"file-name\":\"DynamicTable_file-name__I3JZH\",\"icon\":\"DynamicTable_icon__384D9\",\"table\":\"DynamicTable_table__IETmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DataPairs_root__3KG2O\",\"header\":\"DataPairs_header__Bkti-\",\"child\":\"DataPairs_child__3_ngq\",\"source\":\"DataPairs_source__HI-Vj\",\"target\":\"DataPairs_target__Eu-V-\",\"action\":\"DataPairs_action__2HV-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FieldMapper_root__3_tUQ\",\"section\":\"FieldMapper_section__3oEw5\",\"groups\":\"FieldMapper_groups__2HNYq\",\"input\":\"FieldMapper_input__2Mszl\",\"field\":\"FieldMapper_field__2nwpO\",\"label\":\"FieldMapper_label__1skyK\",\"table\":\"FieldMapper_table__2XzRc\",\"dialog\":\"FieldMapper_dialog__3aDtJ\",\"header-container\":\"FieldMapper_header-container__2JtIE\",\"header\":\"FieldMapper_header__QCFUW\",\"title\":\"FieldMapper_title__3E3Bf\",\"content\":\"FieldMapper_content__b3Uqj\",\"footer\":\"FieldMapper_footer__3NYKX\",\"action\":\"FieldMapper_action__2Ci4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UploadSoaPage_root__1JzXF\",\"table\":\"UploadSoaPage_table__3q8r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsUtilLedgerReport_root__2f7j7\",\"header\":\"ClaimsUtilLedgerReport_header__3SkBF\",\"content\":\"ClaimsUtilLedgerReport_content__1W3eV\",\"filter\":\"ClaimsUtilLedgerReport_filter__3QHK8\",\"input\":\"ClaimsUtilLedgerReport_input__W6YU-\",\"submit\":\"ClaimsUtilLedgerReport_submit__f-hsB\",\"body\":\"ClaimsUtilLedgerReport_body__3G83I\",\"table\":\"ClaimsUtilLedgerReport_table__3TNU0\",\"remarks\":\"ClaimsUtilLedgerReport_remarks__3Z9th\",\"table-cell\":\"ClaimsUtilLedgerReport_table-cell__1plst\",\"table-row\":\"ClaimsUtilLedgerReport_table-row__3Y-tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3oHfX\",\"total\":\"Footer_total__3_8Xj\",\"total-row\":\"Footer_total-row__1NiIX\",\"total-cell\":\"Footer_total-cell__2ExBc\",\"all-signatories\":\"Footer_all-signatories__AM-GJ\",\"signatories\":\"Footer_signatories__2V122\",\"username\":\"Footer_username__1whot\",\"line-note\":\"Footer_line-note__1BI5X\",\"line-received\":\"Footer_line-received__KlyKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransmittalReport_root__13RYz\",\"header\":\"TransmittalReport_header__1LohO\",\"typo\":\"TransmittalReport_typo__2QKnI\",\"disabled\":\"TransmittalReport_disabled__3_q8n\",\"content\":\"TransmittalReport_content__3_9vc\",\"filter\":\"TransmittalReport_filter__27k1z\",\"input\":\"TransmittalReport_input__OnyIq\",\"submit\":\"TransmittalReport_submit__VuyPg\",\"search-header\":\"TransmittalReport_search-header__xdK5O\",\"search-header-child\":\"TransmittalReport_search-header-child__10jDH\",\"column\":\"TransmittalReport_column__1dPqY\",\"body\":\"TransmittalReport_body__26j71\",\"table\":\"TransmittalReport_table__1u_Pl\",\"right\":\"TransmittalReport_right__3OOJU\",\"h_amount\":\"TransmittalReport_h_amount__1-OuF\",\"h_ar\":\"TransmittalReport_h_ar__M03I0\",\"h_member\":\"TransmittalReport_h_member__2fOhO\",\"h_date\":\"TransmittalReport_h_date__14PcF\",\"handling\":\"TransmittalReport_handling__1t_0M\",\"table-row\":\"TransmittalReport_table-row__1nh4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TreasuryTransmittalReport_root__RmXBp\",\"header\":\"TreasuryTransmittalReport_header__3p3Rf\",\"content\":\"TreasuryTransmittalReport_content__1wzny\",\"filter\":\"TreasuryTransmittalReport_filter__2GQoK\",\"input\":\"TreasuryTransmittalReport_input__3hS-d\",\"submit\":\"TreasuryTransmittalReport_submit__FP1Mo\",\"body\":\"TreasuryTransmittalReport_body__HvS7_\",\"table\":\"TreasuryTransmittalReport_table__WES8q\",\"table-row\":\"TreasuryTransmittalReport_table-row__2lid3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PRCheckReport_root__2WSai\",\"header\":\"PRCheckReport_header__3S6zh\",\"content\":\"PRCheckReport_content__3989Q\",\"filter\":\"PRCheckReport_filter__1-XzS\",\"input\":\"PRCheckReport_input__29L_D\",\"submit\":\"PRCheckReport_submit__3VE-t\",\"body\":\"PRCheckReport_body__1ZDmc\",\"table\":\"PRCheckReport_table__2MkNN\",\"table-row\":\"PRCheckReport_table-row__e88aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__h-zoM\",\"header\":\"Utilization_header__1ivJ-\",\"graph\":\"Utilization_graph__3ZLe9\",\"anual-benefit\":\"Utilization_anual-benefit__1VWqy\",\"line-graph\":\"Utilization_line-graph__1p8lX\",\"container\":\"Utilization_container__4lgbS\",\"line-container\":\"Utilization_line-container__2OYMe\",\"item\":\"Utilization_item__2yhM3\",\"line-details\":\"Utilization_line-details__10WCH\",\"label\":\"Utilization_label__3Mdsb\",\"color\":\"Utilization_color__1LPa-\",\"search\":\"Utilization_search__3pjGe\",\"table\":\"Utilization_table__1yiXM\",\"cell\":\"Utilization_cell__18zs3\",\"icon\":\"Utilization_icon__3oS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UtilizationReport_root__29RLR\",\"header\":\"UtilizationReport_header__F8Q9y\",\"content\":\"UtilizationReport_content__KyGyi\",\"filter\":\"UtilizationReport_filter__3HaBQ\",\"input\":\"UtilizationReport_input__1NNnv\",\"submit\":\"UtilizationReport_submit__gyDiv\",\"radio-group\":\"UtilizationReport_radio-group__2NtcH\",\"radio-container\":\"UtilizationReport_radio-container___KTHn\",\"body\":\"UtilizationReport_body__pKJ3l\",\"table\":\"UtilizationReport_table__3QcuP\",\"graph-reports\":\"UtilizationReport_graph-reports__35PtI\",\"graph-legend\":\"UtilizationReport_graph-legend__1VYWe\",\"legend-wrapper\":\"UtilizationReport_legend-wrapper__OXtbJ\",\"legend-group\":\"UtilizationReport_legend-group__3M_DG\",\"legend\":\"UtilizationReport_legend__2OmGP\",\"header-report\":\"UtilizationReport_header-report__39ovc\",\"report-primary\":\"UtilizationReport_report-primary__2Vx_L\",\"title\":\"UtilizationReport_title__1jyQx\",\"report-details\":\"UtilizationReport_report-details__1bGh-\",\"graph\":\"UtilizationReport_graph__3KuFD\",\"item\":\"UtilizationReport_item__MLRbC\",\"header-data\":\"UtilizationReport_header-data__o2M-w\",\"mark\":\"UtilizationReport_mark__1xh3X\",\"text\":\"UtilizationReport_text__2mdEi\",\"graph-plot\":\"UtilizationReport_graph-plot__2918H\",\"plot-items\":\"UtilizationReport_plot-items__21fJr\",\"graph-group\":\"UtilizationReport_graph-group__TSW3K\",\"graph-container\":\"UtilizationReport_graph-container__2GdhR\",\"bar-chart-wrapper\":\"UtilizationReport_bar-chart-wrapper__3nonl\",\"bar-chart\":\"UtilizationReport_bar-chart__2qoxe\",\"tooltip\":\"UtilizationReport_tooltip__17mGM\",\"graph-category\":\"UtilizationReport_graph-category__3HxMk\",\"table-row\":\"UtilizationReport_table-row__1LDFs\",\"memberinfo\":\"UtilizationReport_memberinfo__2VG76\",\"memberInfoLabel\":\"UtilizationReport_memberInfoLabel__UAA-3\",\"memberInfoValue\":\"UtilizationReport_memberInfoValue__3qy2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingHimsData_root__3WU8t\",\"header\":\"LoadingHimsData_header__3AgKz\",\"typo\":\"LoadingHimsData_typo__2IkSb\",\"disabled\":\"LoadingHimsData_disabled__31oIJ\",\"content\":\"LoadingHimsData_content__ck1LN\",\"filter\":\"LoadingHimsData_filter__1TZ1x\",\"input\":\"LoadingHimsData_input__YHPrG\",\"submit\":\"LoadingHimsData_submit__qqksA\",\"body\":\"LoadingHimsData_body__3yN6l\",\"table\":\"LoadingHimsData_table__11EHs\",\"table-row\":\"LoadingHimsData_table-row__1ltt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ConfinementReport_root__1uSjB\",\"header\":\"ConfinementReport_header__16HCk\",\"content\":\"ConfinementReport_content__HdGg-\",\"filter\":\"ConfinementReport_filter__24wrc\",\"input\":\"ConfinementReport_input__auX4A\",\"submit\":\"ConfinementReport_submit__1ztRA\",\"body\":\"ConfinementReport_body__16cNS\",\"table\":\"ConfinementReport_table__3HeUY\",\"remarks\":\"ConfinementReport_remarks__15eon\",\"table-cell\":\"ConfinementReport_table-cell__3g-6U\",\"table-row\":\"ConfinementReport_table-row__1Ag6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NykO\",\"total\":\"Footer_total__106js\",\"total-row\":\"Footer_total-row__2oNxf\",\"total-cell\":\"Footer_total-cell__2mlRs\",\"bundle\":\"Footer_bundle__cygl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestReport_root__1yyHg\",\"header\":\"PaymentRequestReport_header__1hEoh\",\"typo\":\"PaymentRequestReport_typo__lzZPi\",\"disabled\":\"PaymentRequestReport_disabled__7bH-b\",\"content\":\"PaymentRequestReport_content__3Xk-l\",\"filter\":\"PaymentRequestReport_filter__2HiUS\",\"input\":\"PaymentRequestReport_input__1BVX2\",\"submit\":\"PaymentRequestReport_submit__nlqNw\",\"search-header\":\"PaymentRequestReport_search-header__13iAT\",\"search-header-child\":\"PaymentRequestReport_search-header-child__3hgZo\",\"column-label\":\"PaymentRequestReport_column-label__28Gps\",\"column-input\":\"PaymentRequestReport_column-input__zavve\",\"column-label2\":\"PaymentRequestReport_column-label2__38wK2\",\"body\":\"PaymentRequestReport_body__Qp11G\",\"table\":\"PaymentRequestReport_table__25wJP\",\"right\":\"PaymentRequestReport_right__ZClv0\",\"handling\":\"PaymentRequestReport_handling__cz42W\",\"table-row\":\"PaymentRequestReport_table-row__3HEQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementReport_root__32Om0\",\"header\":\"ReimbursementReport_header__12zwF\",\"content\":\"ReimbursementReport_content__mbnn4\",\"filter\":\"ReimbursementReport_filter__1WwW5\",\"input\":\"ReimbursementReport_input__kohO7\",\"submit\":\"ReimbursementReport_submit__1MEua\",\"body\":\"ReimbursementReport_body__2-ZBv\",\"table\":\"ReimbursementReport_table__3HtyM\",\"hidden\":\"ReimbursementReport_hidden__kOzBm\",\"remarks\":\"ReimbursementReport_remarks__3VTZf\",\"table-cell\":\"ReimbursementReport_table-cell__1DP3G\",\"table-row\":\"ReimbursementReport_table-row__3QOOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsSummaryReport_root__1ka3i\",\"header\":\"ClaimsSummaryReport_header__39eJB\",\"field-filter\":\"ClaimsSummaryReport_field-filter__2SIg-\",\"input\":\"ClaimsSummaryReport_input__2fYOe\",\"content\":\"ClaimsSummaryReport_content__2_BF2\",\"filter\":\"ClaimsSummaryReport_filter__id9k7\",\"submit\":\"ClaimsSummaryReport_submit__FEVvZ\",\"body\":\"ClaimsSummaryReport_body__13Jph\",\"table\":\"ClaimsSummaryReport_table__7Ph-I\",\"remarks\":\"ClaimsSummaryReport_remarks__2FkBN\",\"table-cell\":\"ClaimsSummaryReport_table-cell__2Ld-d\",\"footer\":\"ClaimsSummaryReport_footer__1028J\",\"label\":\"ClaimsSummaryReport_label__4CdeZ\",\"received\":\"ClaimsSummaryReport_received__2ZOV5\",\"processed\":\"ClaimsSummaryReport_processed__KMDYx\",\"total\":\"ClaimsSummaryReport_total__Adq-O\",\"table-row\":\"ClaimsSummaryReport_table-row__4aT6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductivityPerformaceReport_root__2dUB0\",\"header\":\"ProductivityPerformaceReport_header__2jbkM\",\"field-filter\":\"ProductivityPerformaceReport_field-filter__35OXP\",\"input\":\"ProductivityPerformaceReport_input__2o3yw\",\"content\":\"ProductivityPerformaceReport_content__1p5h0\",\"filter\":\"ProductivityPerformaceReport_filter__3M0No\",\"submit\":\"ProductivityPerformaceReport_submit__2SI5D\",\"body\":\"ProductivityPerformaceReport_body__3eVBy\",\"table\":\"ProductivityPerformaceReport_table__J_Mgn\",\"remarks\":\"ProductivityPerformaceReport_remarks__1pXa6\",\"table-cell\":\"ProductivityPerformaceReport_table-cell__1Q-O3\",\"footer\":\"ProductivityPerformaceReport_footer__2ioMa\",\"table-row\":\"ProductivityPerformaceReport_table-row__2Wduf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReturnedClaimsReport_root__3miJ9\",\"header\":\"ReturnedClaimsReport_header__2QSE3\",\"typo\":\"ReturnedClaimsReport_typo__3UFCW\",\"disabled\":\"ReturnedClaimsReport_disabled__182Sx\",\"content\":\"ReturnedClaimsReport_content__14MOK\",\"filter\":\"ReturnedClaimsReport_filter__2meIS\",\"input\":\"ReturnedClaimsReport_input__19ygB\",\"submit\":\"ReturnedClaimsReport_submit__1Mgt8\",\"body\":\"ReturnedClaimsReport_body__220AW\",\"table\":\"ReturnedClaimsReport_table__1WY5j\",\"remarks\":\"ReturnedClaimsReport_remarks__10htg\",\"table-cell\":\"ReturnedClaimsReport_table-cell__aqjTo\",\"handling\":\"ReturnedClaimsReport_handling__10Zah\",\"table-row\":\"ReturnedClaimsReport_table-row__3MQ-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PerformanceReport_root__3v0l5\",\"header\":\"PerformanceReport_header__2cAig\",\"field-filter\":\"PerformanceReport_field-filter__1J_xd\",\"input\":\"PerformanceReport_input__qTNUq\",\"content\":\"PerformanceReport_content__1RJ-f\",\"filter\":\"PerformanceReport_filter__3HVDH\",\"submit\":\"PerformanceReport_submit__1sQmg\",\"body\":\"PerformanceReport_body__3mx5Y\",\"table\":\"PerformanceReport_table__1eG1Z\",\"remarks\":\"PerformanceReport_remarks__3BqBk\",\"table-cell\":\"PerformanceReport_table-cell__XM63r\",\"footer\":\"PerformanceReport_footer__1gA8-\",\"table-row\":\"PerformanceReport_table-row__2u1xW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingPartialApprovedReport_root__njXRF\",\"header\":\"AgingPartialApprovedReport_header__33b_k\",\"field-filter\":\"AgingPartialApprovedReport_field-filter__3Z1mh\",\"input\":\"AgingPartialApprovedReport_input__3a_o0\",\"content\":\"AgingPartialApprovedReport_content__1pWFX\",\"filter\":\"AgingPartialApprovedReport_filter__3sVP8\",\"submit\":\"AgingPartialApprovedReport_submit__3D5zL\",\"body\":\"AgingPartialApprovedReport_body__39FC8\",\"table\":\"AgingPartialApprovedReport_table__2EheT\",\"remarks\":\"AgingPartialApprovedReport_remarks__2lfE6\",\"table-cell\":\"AgingPartialApprovedReport_table-cell__dRnX7\",\"footer\":\"AgingPartialApprovedReport_footer__33O-v\",\"label\":\"AgingPartialApprovedReport_label__20iKa\",\"table-row\":\"AgingPartialApprovedReport_table-row__TdYPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AgingReturnClaimReport_root__2ZjYN\",\"header\":\"AgingReturnClaimReport_header__2pYrS\",\"field-filter\":\"AgingReturnClaimReport_field-filter__3bBD5\",\"input\":\"AgingReturnClaimReport_input__yJYHL\",\"content\":\"AgingReturnClaimReport_content__2dDb7\",\"filter\":\"AgingReturnClaimReport_filter__J2zBy\",\"submit\":\"AgingReturnClaimReport_submit__2ONSY\",\"body\":\"AgingReturnClaimReport_body__2v_Du\",\"table\":\"AgingReturnClaimReport_table__3OBJ-\",\"remarks\":\"AgingReturnClaimReport_remarks__1NXHH\",\"table-cell\":\"AgingReturnClaimReport_table-cell__gHjGb\",\"footer\":\"AgingReturnClaimReport_footer__3M3iw\",\"label\":\"AgingReturnClaimReport_label__1bL4K\",\"table-row\":\"AgingReturnClaimReport_table-row__2LK4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsBeyond3MonthsReport_root__3VXaM\",\"header\":\"ClaimsBeyond3MonthsReport_header__3lsVk\",\"typo\":\"ClaimsBeyond3MonthsReport_typo__264r4\",\"field-filter\":\"ClaimsBeyond3MonthsReport_field-filter__3_-_O\",\"input\":\"ClaimsBeyond3MonthsReport_input__3rZEj\",\"content\":\"ClaimsBeyond3MonthsReport_content__2QCP_\",\"filter\":\"ClaimsBeyond3MonthsReport_filter__1_UPE\",\"submit\":\"ClaimsBeyond3MonthsReport_submit__3Ixe3\",\"body\":\"ClaimsBeyond3MonthsReport_body__1a198\",\"table\":\"ClaimsBeyond3MonthsReport_table__3XK2P\",\"remarks\":\"ClaimsBeyond3MonthsReport_remarks__2x-XG\",\"table-cell\":\"ClaimsBeyond3MonthsReport_table-cell__2Bcc3\",\"handling\":\"ClaimsBeyond3MonthsReport_handling__1s9wT\",\"table-row\":\"ClaimsBeyond3MonthsReport_table-row__1FRZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementAgingReport_root__3Qevg\",\"header\":\"ReimbursementAgingReport_header__2fR1j\",\"field-filter\":\"ReimbursementAgingReport_field-filter__3omDl\",\"input\":\"ReimbursementAgingReport_input__uImhm\",\"content\":\"ReimbursementAgingReport_content__kcYV4\",\"filter\":\"ReimbursementAgingReport_filter__2vQYS\",\"submit\":\"ReimbursementAgingReport_submit__34jwM\",\"body\":\"ReimbursementAgingReport_body__1Aq7Z\",\"table\":\"ReimbursementAgingReport_table__2m2l3\",\"remarks\":\"ReimbursementAgingReport_remarks__3qa3B\",\"table-cell\":\"ReimbursementAgingReport_table-cell__3QyBG\",\"footer\":\"ReimbursementAgingReport_footer__3RAWu\",\"table-row\":\"ReimbursementAgingReport_table-row__3R0lS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DetailedClaimsReport_root__pZDjc\",\"header\":\"DetailedClaimsReport_header__b7pO0\",\"typo\":\"DetailedClaimsReport_typo__-qeZp\",\"disabled\":\"DetailedClaimsReport_disabled__32hnn\",\"content\":\"DetailedClaimsReport_content__30k_Y\",\"filter\":\"DetailedClaimsReport_filter__3uIPD\",\"input\":\"DetailedClaimsReport_input__3mk2W\",\"submit\":\"DetailedClaimsReport_submit__28yJR\",\"body\":\"DetailedClaimsReport_body__2wNh-\",\"table\":\"DetailedClaimsReport_table__1QGoK\",\"label\":\"DetailedClaimsReport_label__y28Kk\",\"hidden\":\"DetailedClaimsReport_hidden__1H_Ss\",\"remarks\":\"DetailedClaimsReport_remarks__E0xIw\",\"table-cell\":\"DetailedClaimsReport_table-cell__3rPot\",\"handling\":\"DetailedClaimsReport_handling__WipVd\",\"footer\":\"DetailedClaimsReport_footer__10ig-\",\"table-row\":\"DetailedClaimsReport_table-row__TiSmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1q5aB\",\"tiles\":\"Dashboard_tiles__2EVcx\",\"row\":\"Dashboard_row__1-jaR\",\"task-tray\":\"Dashboard_task-tray__1GVCA\",\"list-item\":\"Dashboard_list-item__3bt0O\",\"details\":\"Dashboard_details__vEx2z\",\"detail-item\":\"Dashboard_detail-item__2vLSc\",\"label\":\"Dashboard_label__1wDfJ\",\"content\":\"Dashboard_content__3ngEB\",\"action\":\"Dashboard_action__1YK0T\",\"ticket-list\":\"Dashboard_ticket-list__2qkpP\",\"wrapper\":\"Dashboard_wrapper__30OUo\",\"float\":\"Dashboard_float__vdcOu\",\"completed_task\":\"Dashboard_completed_task__2zPQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__23Ujl\",\"header-container\":\"AssignDialog_header-container__yl2nA\",\"header\":\"AssignDialog_header__3VGqX\",\"title\":\"AssignDialog_title__3z9IT\",\"content\":\"AssignDialog_content__ibboc\",\"input\":\"AssignDialog_input__2xDp_\",\"footer\":\"AssignDialog_footer__26ROV\",\"assign\":\"AssignDialog_assign__b5j_4\",\"to\":\"AssignDialog_to__4uznN\",\"action\":\"AssignDialog_action__3Hmu9\",\"message-content\":\"AssignDialog_message-content__3scNs\",\"message\":\"AssignDialog_message__WFHxL\",\"message-child\":\"AssignDialog_message-child__1-8nz\",\"alert-title\":\"AssignDialog_alert-title__2Werr\",\"footer-action\":\"AssignDialog_footer-action__1CV67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBundlesPage_root__3yhzm\",\"content\":\"CreatedBundlesPage_content__38yCp\",\"first-container\":\"CreatedBundlesPage_first-container__22tad\",\"action\":\"CreatedBundlesPage_action__16R81\",\"search\":\"CreatedBundlesPage_search__1ZBFS\",\"table\":\"CreatedBundlesPage_table__295G-\",\"footer\":\"CreatedBundlesPage_footer__2xe-r\",\"actions\":\"CreatedBundlesPage_actions__3feoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__3KSsR\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__1DMc_\",\"max-width\":\"DiscrepancyBase_max-width__AgMfs\",\"auto-width\":\"DiscrepancyBase_auto-width__3hZoL\",\"discrepancy\":\"DiscrepancyBase_discrepancy__EFJsJ\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__278mF\",\"with-margin\":\"DiscrepancyBase_with-margin__3UThX\",\"icon\":\"DiscrepancyBase_icon__3BUJ7\",\"display-hidden\":\"DiscrepancyBase_display-hidden__2uBK6\",\"display-none\":\"DiscrepancyBase_display-none__3au4S\",\"message\":\"DiscrepancyBase_message__10P-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingIndicator_root__1QWbJ\",\"loading\":\"LoadingIndicator_loading__3Nv8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberLookup_root__3O8kK\",\"search\":\"ClientMemberLookup_search__2Crg2\",\"table\":\"ClientMemberLookup_table__vUzoY\",\"loading\":\"ClientMemberLookup_loading__w2vwH\",\"input\":\"ClientMemberLookup_input__1zsR_\",\"selected\":\"ClientMemberLookup_selected__25J7P\",\"default-override\":\"ClientMemberLookup_default-override__2M4nX\",\"footer\":\"ClientMemberLookup_footer__1TxMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientMemberModal_root__nf2t4\",\"header-container\":\"ClientMemberModal_header-container__2TpBd\",\"header\":\"ClientMemberModal_header__3jFfv\",\"title\":\"ClientMemberModal_title__aQLcu\",\"content\":\"ClientMemberModal_content__1ZzDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseDetails_root__1sXMB\",\"wrapper\":\"BaseDetails_wrapper__36CBG\",\"groups\":\"BaseDetails_groups__3iH6M\",\"input\":\"BaseDetails_input__33wlu\",\"search\":\"BaseDetails_search__3HeKm\",\"box-search-button\":\"BaseDetails_box-search-button__31qFK\",\"no-pad\":\"BaseDetails_no-pad__hmdGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2UDqG\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__tUggz\",\"header\":\"ICDTextField_header___QvWL\",\"delete\":\"ICDTextField_delete__1QGhl\",\"description\":\"ICDTextField_description__3nYcX\",\"code\":\"ICDTextField_code__3U5AV\",\"primary\":\"ICDTextField_primary__1iHwC\",\"discrepancy\":\"ICDTextField_discrepancy__S1yCX\",\"wrapper\":\"ICDTextField_wrapper__2CKYW\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__NjIhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1e8te\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__PsY8D\",\"has-error\":\"DiagnosisList_has-error__2xPng\",\"title\":\"DiagnosisList_title__1qdNr\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2ON5n\",\"error\":\"DiagnosisList_error__1Vbz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__32M3A\",\"groups\":\"ProcedureForm_groups__dcIQZ\",\"diagnosis\":\"ProcedureForm_diagnosis__23R5U\",\"input\":\"ProcedureForm_input__38bS_\",\"limit\":\"ProcedureForm_limit__3nb9n\",\"description\":\"ProcedureForm_description__2Hdy7\",\"code\":\"ProcedureForm_code__i2i2k\",\"buttons\":\"ProcedureForm_buttons__2CdpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3AdZk\",\"table\":\"ProcedureList_table__10YsE\",\"table-header\":\"ProcedureList_table-header__17a3B\",\"table-description\":\"ProcedureList_table-description__22Tav\",\"add-link\":\"ProcedureList_add-link__Jk8bg\",\"row\":\"ProcedureList_row__1SUZy\",\"align\":\"ProcedureList_align__3E32S\",\"center\":\"ProcedureList_center__3umXK\",\"right\":\"ProcedureList_right__yYRNE\",\"discrepancy\":\"ProcedureList_discrepancy__3nlct\",\"icon-container\":\"ProcedureList_icon-container__-1hA_\",\"table-total\":\"ProcedureList_table-total__a6mY3\",\"caption\":\"ProcedureList_caption__aqG17\",\"amount\":\"ProcedureList_amount__3Wz7S\",\"groups\":\"ProcedureList_groups__3j6lu\",\"input\":\"ProcedureList_input__nZI-i\",\"buttons\":\"ProcedureList_buttons__1cLC0\",\"table-grid\":\"ProcedureList_table-grid__20Uo9\",\"message\":\"ProcedureList_message__2P1i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__1FWwW\",\"groups\":\"HospitalItemForm_groups__2XyW6\",\"diagnosis\":\"HospitalItemForm_diagnosis__3sjLa\",\"input\":\"HospitalItemForm_input__1y2VP\",\"limit\":\"HospitalItemForm_limit__24jFc\",\"description\":\"HospitalItemForm_description__1tsvR\",\"code\":\"HospitalItemForm_code__3bAga\",\"buttons\":\"HospitalItemForm_buttons__3Rewh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3P8XU\",\"table\":\"HospitalItemList_table__1_Iw2\",\"table-header\":\"HospitalItemList_table-header__1nWDu\",\"table-description\":\"HospitalItemList_table-description__2RsHb\",\"add-link\":\"HospitalItemList_add-link__Ap2Fd\",\"row\":\"HospitalItemList_row__3Y9w1\",\"align\":\"HospitalItemList_align__3Cquk\",\"center\":\"HospitalItemList_center__2uJ8Q\",\"right\":\"HospitalItemList_right__1YzKx\",\"discrepancy\":\"HospitalItemList_discrepancy__2rt0u\",\"icon-container\":\"HospitalItemList_icon-container__37b7k\",\"table-total\":\"HospitalItemList_table-total__35dxK\",\"caption\":\"HospitalItemList_caption__-jFT8\",\"amount\":\"HospitalItemList_amount__jgs1I\",\"groups\":\"HospitalItemList_groups__1Jxjv\",\"input\":\"HospitalItemList_input__3ysJe\",\"buttons\":\"HospitalItemList_buttons__3zaDd\",\"table-grid\":\"HospitalItemList_table-grid__wBYBH\",\"message\":\"HospitalItemList_message__3E-4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__3B4jc\",\"groups\":\"ProfessionalFeeForm_groups__dlWbX\",\"diagnosis\":\"ProfessionalFeeForm_diagnosis__1BrAK\",\"input\":\"ProfessionalFeeForm_input__333On\",\"limit\":\"ProfessionalFeeForm_limit__1lq0S\",\"buttons\":\"ProfessionalFeeForm_buttons__2lZlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2Og-R\",\"table\":\"ProfessionalFeeList_table__2NcVa\",\"specialization\":\"ProfessionalFeeList_specialization__11Av7\",\"table-header\":\"ProfessionalFeeList_table-header__2PK3t\",\"table-description\":\"ProfessionalFeeList_table-description__30ZVR\",\"add-link\":\"ProfessionalFeeList_add-link__2AlqJ\",\"row\":\"ProfessionalFeeList_row__1uiD-\",\"align\":\"ProfessionalFeeList_align__3XDND\",\"center\":\"ProfessionalFeeList_center__3xzMO\",\"right\":\"ProfessionalFeeList_right__1_oyw\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1DP02\",\"icon-container\":\"ProfessionalFeeList_icon-container__1sopO\",\"table-total\":\"ProfessionalFeeList_table-total__bFKvI\",\"caption\":\"ProfessionalFeeList_caption__2uJsv\",\"amount\":\"ProfessionalFeeList_amount__Bwl5O\",\"groups\":\"ProfessionalFeeList_groups__3OH3g\",\"input\":\"ProfessionalFeeList_input__LBwVv\",\"buttons\":\"ProfessionalFeeList_buttons__V3_MP\",\"table-grid\":\"ProfessionalFeeList_table-grid__148wo\",\"message\":\"ProfessionalFeeList_message__2GTKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__3TUHv\",\"left\":\"ClaimFooter_left__2BPxB\",\"center\":\"ClaimFooter_center__2tYE7\",\"right\":\"ClaimFooter_right__31DOI\",\"escalate\":\"ClaimFooter_escalate__2Wg_9\",\"header-container\":\"ClaimFooter_header-container__3MyMe\",\"header\":\"ClaimFooter_header__2h2N5\",\"title\":\"ClaimFooter_title__2HClu\",\"content\":\"ClaimFooter_content__2ZAYv\",\"input\":\"ClaimFooter_input__1T6qD\",\"footer\":\"ClaimFooter_footer__aACcA\",\"assign\":\"ClaimFooter_assign__2fguI\",\"to\":\"ClaimFooter_to__iojTq\",\"action\":\"ClaimFooter_action__3rpDz\",\"reassign\":\"ClaimFooter_reassign__32y-a\",\"return\":\"ClaimFooter_return__1aB5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__2fuHC\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__3Mg-w\",\"disapproved\":\"DisapprovedLabel_disapproved__2jHnW\",\"icon-container\":\"DisapprovedLabel_icon-container__2AwzY\",\"message\":\"DisapprovedLabel_message__mRFZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__CJdTJ\",\"wrapper\":\"ChatBox_wrapper__Udbg_\",\"header\":\"ChatBox_header__1cGwF\",\"title\":\"ChatBox_title__2zeRL\",\"body\":\"ChatBox_body__3cDDA\",\"messages\":\"ChatBox_messages__1p2Ci\",\"split\":\"ChatBox_split__3YuFW\",\"balloon\":\"ChatBox_balloon__2wMJO\",\"mheader\":\"ChatBox_mheader___jqXV\",\"sender\":\"ChatBox_sender__1OlBm\",\"time\":\"ChatBox_time__20VAg\",\"mbody\":\"ChatBox_mbody__34g_9\",\"content\":\"ChatBox_content__2ekaM\",\"receive\":\"ChatBox_receive__1SB9q\",\"me\":\"ChatBox_me__3g5h1\",\"placeholder\":\"ChatBox_placeholder__2r0o4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__BfHb8\",\"contract-id\":\"SideBar_contract-id__1i7cP\",\"id\":\"SideBar_id__hD-Fx\",\"plan-types\":\"SideBar_plan-types__22aGd\",\"node\":\"SideBar_node__12eOL\",\"benefit-label\":\"SideBar_benefit-label__355P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ValueField_root__3IGn7\",\"value\":\"ValueField_value__2tKyn\",\"center\":\"ValueField_center__3Ytb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FloatingFields_root__24bnx\",\"wrapper\":\"FloatingFields_wrapper__2Pcva\",\"w-30\":\"FloatingFields_w-30__3n_pJ\",\"w-50\":\"FloatingFields_w-50__1n6EK\",\"w-100\":\"FloatingFields_w-100__3NIZO\",\"center\":\"FloatingFields_center__123ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__bhUTi\",\"wrapper\":\"Benefits_wrapper__3FSOt\",\"left-side\":\"Benefits_left-side__1RHLZ\",\"title\":\"Benefits_title__2Y66j\",\"right-side\":\"Benefits_right-side__2K0vf\",\"header\":\"Benefits_header__3Cy59\",\"table-header\":\"Benefits_table-header__1UT8m\",\"search\":\"Benefits_search__OOfZa\",\"contract\":\"Benefits_contract__3j7Fa\",\"table\":\"Benefits_table__38mZl\",\"hidden\":\"Benefits_hidden__2oBEr\",\"cell\":\"Benefits_cell__12KcA\",\"footer\":\"Benefits_footer__2PXlW\",\"center\":\"Benefits_center__1s61P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__aIVf_\",\"header\":\"Exclusions_header__2PP5C\",\"body\":\"Exclusions_body__10OEr\",\"search\":\"Exclusions_search__2ex94\",\"plan-types\":\"Exclusions_plan-types__rtSrd\",\"type\":\"Exclusions_type__AJdcD\",\"table\":\"Exclusions_table__3GuIp\",\"hidden\":\"Exclusions_hidden__1fYuW\",\"cell\":\"Exclusions_cell__3huMq\",\"handling\":\"Exclusions_handling__3_HIN\",\"center\":\"Exclusions_center__36WKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__3pngF\",\"header\":\"PartnerNetwork_header__2joMW\",\"search\":\"PartnerNetwork_search__QRWSW\",\"table\":\"PartnerNetwork_table__id1kf\",\"hidden\":\"PartnerNetwork_hidden__1Wg_f\",\"cell\":\"PartnerNetwork_cell__24Zde\",\"doctors\":\"PartnerNetwork_doctors__3qxwm\",\"header-container\":\"PartnerNetwork_header-container__uNSDQ\",\"title\":\"PartnerNetwork_title__2pC_E\",\"content\":\"PartnerNetwork_content__OC-z4\",\"center\":\"PartnerNetwork_center__VSY8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Contract_root__2TV5c\",\"wrapper\":\"Contract_wrapper__7hk_4\",\"pdf\":\"Contract_pdf__14ff5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"RightPanelTabs_center__2F79-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__1AD2B\",\"header\":\"ClaimsRemarks_header__2JuzE\",\"header-text\":\"ClaimsRemarks_header-text__2hE-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__1S7ZM\",\"first-container\":\"ClaimInPatient_first-container__1hi-9\",\"groups\":\"ClaimInPatient_groups__3GlMb\",\"input\":\"ClaimInPatient_input__D_kUM\",\"child-container\":\"ClaimInPatient_child-container__LtiUL\",\"left-side\":\"ClaimInPatient_left-side__3BSE_\",\"right-side\":\"ClaimInPatient_right-side__7yeR8\",\"tables-container\":\"ClaimInPatient_tables-container__1FSgK\",\"wrapper\":\"ClaimInPatient_wrapper__2Ll5k\",\"table\":\"ClaimInPatient_table__33jlK\",\"table-header\":\"ClaimInPatient_table-header__32cAA\",\"table-description\":\"ClaimInPatient_table-description__LHg-Q\",\"add-link\":\"ClaimInPatient_add-link__2HgjW\",\"row\":\"ClaimInPatient_row__19SQp\",\"align\":\"ClaimInPatient_align__3EmF1\",\"center\":\"ClaimInPatient_center__mwmUx\",\"right\":\"ClaimInPatient_right__2NOPD\",\"table-total\":\"ClaimInPatient_table-total__ADdpw\",\"caption\":\"ClaimInPatient_caption__3GWNc\",\"amount\":\"ClaimInPatient_amount__14BmU\",\"sticky\":\"ClaimInPatient_sticky__1p4_i\",\"grand-total\":\"ClaimInPatient_grand-total__5xeWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__32DbM\",\"first-container\":\"ClaimOutPatientProcedure_first-container__7XqrM\",\"groups\":\"ClaimOutPatientProcedure_groups__2khSB\",\"input\":\"ClaimOutPatientProcedure_input__2wGBp\",\"child-container\":\"ClaimOutPatientProcedure_child-container__3Qm-6\",\"left-side\":\"ClaimOutPatientProcedure_left-side__aiMMr\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2qNzx\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__24TXm\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1oOih\",\"table\":\"ClaimOutPatientProcedure_table__3gy4g\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1vFDA\",\"table-description\":\"ClaimOutPatientProcedure_table-description__2sVgC\",\"add-link\":\"ClaimOutPatientProcedure_add-link__20WGP\",\"row\":\"ClaimOutPatientProcedure_row__1154i\",\"align\":\"ClaimOutPatientProcedure_align__1-JcK\",\"center\":\"ClaimOutPatientProcedure_center__2LEg6\",\"right\":\"ClaimOutPatientProcedure_right__1b2OO\",\"table-total\":\"ClaimOutPatientProcedure_table-total__25Yuw\",\"caption\":\"ClaimOutPatientProcedure_caption__1-1aH\",\"amount\":\"ClaimOutPatientProcedure_amount__1pVET\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2J6YA\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__2-FT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1OYw5\",\"first-container\":\"ClaimOutPatientConsultation_first-container__36dTh\",\"groups\":\"ClaimOutPatientConsultation_groups__2FduB\",\"input\":\"ClaimOutPatientConsultation_input__qhYZ3\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1yLGC\",\"left-side\":\"ClaimOutPatientConsultation_left-side__1Q-9R\",\"right-side\":\"ClaimOutPatientConsultation_right-side__ZE8bC\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__1BJ87\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1zN1p\",\"table\":\"ClaimOutPatientConsultation_table__11vlA\",\"table-header\":\"ClaimOutPatientConsultation_table-header__2v7ad\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1oqaA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__3akmi\",\"row\":\"ClaimOutPatientConsultation_row__28nQM\",\"align\":\"ClaimOutPatientConsultation_align__1dHEU\",\"center\":\"ClaimOutPatientConsultation_center__1_QYZ\",\"right\":\"ClaimOutPatientConsultation_right__ZGur7\",\"table-total\":\"ClaimOutPatientConsultation_table-total__po07J\",\"caption\":\"ClaimOutPatientConsultation_caption__3vMTQ\",\"amount\":\"ClaimOutPatientConsultation_amount__1Ev9r\",\"sticky\":\"ClaimOutPatientConsultation_sticky__JCmg6\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__9crdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3Dhsx\",\"first-container\":\"ClaimEmergency_first-container__o2WbL\",\"groups\":\"ClaimEmergency_groups__1udG1\",\"input\":\"ClaimEmergency_input__2anfv\",\"child-container\":\"ClaimEmergency_child-container__1p4eO\",\"left-side\":\"ClaimEmergency_left-side__36vix\",\"right-side\":\"ClaimEmergency_right-side__3uIlK\",\"tables-container\":\"ClaimEmergency_tables-container__1qiki\",\"wrapper\":\"ClaimEmergency_wrapper__3WqYc\",\"table\":\"ClaimEmergency_table__Jj0aB\",\"table-header\":\"ClaimEmergency_table-header__1i-JE\",\"table-description\":\"ClaimEmergency_table-description__Xz_Ya\",\"add-link\":\"ClaimEmergency_add-link__3k7IP\",\"row\":\"ClaimEmergency_row__1Esd0\",\"align\":\"ClaimEmergency_align__1S8uR\",\"center\":\"ClaimEmergency_center__2CsIC\",\"right\":\"ClaimEmergency_right__2vx76\",\"table-total\":\"ClaimEmergency_table-total__2oM7S\",\"caption\":\"ClaimEmergency_caption__25QSW\",\"amount\":\"ClaimEmergency_amount__tTDY5\",\"sticky\":\"ClaimEmergency_sticky__3o2tq\",\"grand-total\":\"ClaimEmergency_grand-total__2QhZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__1epVL\",\"first-container\":\"ClaimMedicineAllowance_first-container__2ZF-j\",\"groups\":\"ClaimMedicineAllowance_groups__2H4ww\",\"input\":\"ClaimMedicineAllowance_input__8xyct\",\"child-container\":\"ClaimMedicineAllowance_child-container__28G1C\",\"left-side\":\"ClaimMedicineAllowance_left-side__1WUXX\",\"right-side\":\"ClaimMedicineAllowance_right-side__1igyg\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3dELc\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__9Um0n\",\"table\":\"ClaimMedicineAllowance_table__3EybV\",\"table-header\":\"ClaimMedicineAllowance_table-header__2pBup\",\"table-description\":\"ClaimMedicineAllowance_table-description__1PmDt\",\"add-link\":\"ClaimMedicineAllowance_add-link__1AbYf\",\"row\":\"ClaimMedicineAllowance_row__2WWWY\",\"align\":\"ClaimMedicineAllowance_align__39ocu\",\"center\":\"ClaimMedicineAllowance_center__3EtXe\",\"right\":\"ClaimMedicineAllowance_right__27Jp2\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IsI8\",\"caption\":\"ClaimMedicineAllowance_caption__DMDzf\",\"amount\":\"ClaimMedicineAllowance_amount__1LRtQ\",\"sticky\":\"ClaimMedicineAllowance_sticky__EUuY7\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1JKZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalChart_root__2NsEP\",\"title\":\"DentalChart_title__2XddS\",\"container\":\"DentalChart_container__iRz9F\",\"chart\":\"DentalChart_chart__3tLNQ\",\"upper\":\"DentalChart_upper__3L8HX\",\"lower\":\"DentalChart_lower__2M2mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__256b4\",\"first-container\":\"ClaimDental_first-container__38T7E\",\"groups\":\"ClaimDental_groups__3jvsJ\",\"input\":\"ClaimDental_input__haCWE\",\"contract-range\":\"ClaimDental_contract-range__37ykS\",\"chart\":\"ClaimDental_chart__3-xWm\",\"child-container\":\"ClaimDental_child-container__3mow6\",\"left-side\":\"ClaimDental_left-side__3jave\",\"right-side\":\"ClaimDental_right-side__1FQqB\",\"tables-container\":\"ClaimDental_tables-container__1C3Pu\",\"wrapper\":\"ClaimDental_wrapper__1RMw-\",\"table\":\"ClaimDental_table__1LS70\",\"table-header\":\"ClaimDental_table-header__1b5ix\",\"table-description\":\"ClaimDental_table-description__3_nXw\",\"add-link\":\"ClaimDental_add-link__2HTRl\",\"row\":\"ClaimDental_row__1X_Fq\",\"align\":\"ClaimDental_align__1TfeR\",\"center\":\"ClaimDental_center__2wbY9\",\"right\":\"ClaimDental_right__3UJIj\",\"table-total\":\"ClaimDental_table-total__209ol\",\"caption\":\"ClaimDental_caption__TjFQ_\",\"amount\":\"ClaimDental_amount__2qE7s\",\"sticky\":\"ClaimDental_sticky__1m1JQ\",\"grand-total\":\"ClaimDental_grand-total__3-zy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__3iC6V\",\"first-container\":\"ClaimAPE_first-container__rfLOL\",\"groups\":\"ClaimAPE_groups___LUKZ\",\"input\":\"ClaimAPE_input__3KeOV\",\"contract-range\":\"ClaimAPE_contract-range__3lIhD\",\"child-container\":\"ClaimAPE_child-container__1cNVx\",\"left-side\":\"ClaimAPE_left-side__3k7Fu\",\"right-side\":\"ClaimAPE_right-side__2yzN-\",\"tables-container\":\"ClaimAPE_tables-container__Q8Qw-\",\"wrapper\":\"ClaimAPE_wrapper__2G6uN\",\"table\":\"ClaimAPE_table__3HkNw\",\"table-header\":\"ClaimAPE_table-header__15MOT\",\"table-description\":\"ClaimAPE_table-description__1mF2U\",\"add-link\":\"ClaimAPE_add-link__1xoUx\",\"row\":\"ClaimAPE_row__3kl-i\",\"align\":\"ClaimAPE_align__3dAFu\",\"center\":\"ClaimAPE_center__3dtFL\",\"right\":\"ClaimAPE_right__15WMJ\",\"table-total\":\"ClaimAPE_table-total__30NF6\",\"caption\":\"ClaimAPE_caption__-xHuO\",\"amount\":\"ClaimAPE_amount__2j9QR\",\"sticky\":\"ClaimAPE_sticky__1awLT\",\"grand-total\":\"ClaimAPE_grand-total__3M-am\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__rZ8IS\",\"first-container\":\"ClaimECU_first-container__2FNj4\",\"groups\":\"ClaimECU_groups__2RmkW\",\"input\":\"ClaimECU_input__1Tnla\",\"contract-range\":\"ClaimECU_contract-range__21rJC\",\"child-container\":\"ClaimECU_child-container__26HT3\",\"left-side\":\"ClaimECU_left-side__3-TzS\",\"right-side\":\"ClaimECU_right-side__11s0l\",\"tables-container\":\"ClaimECU_tables-container__3eYaA\",\"wrapper\":\"ClaimECU_wrapper__h-NDN\",\"table\":\"ClaimECU_table__UgdcY\",\"table-header\":\"ClaimECU_table-header__2u8yv\",\"table-description\":\"ClaimECU_table-description__B5h1x\",\"add-link\":\"ClaimECU_add-link__xzFPx\",\"row\":\"ClaimECU_row__2xFZY\",\"align\":\"ClaimECU_align__3ToIF\",\"center\":\"ClaimECU_center__3XEtE\",\"right\":\"ClaimECU_right__1u8Su\",\"table-total\":\"ClaimECU_table-total__1N-8u\",\"caption\":\"ClaimECU_caption__3WoBZ\",\"amount\":\"ClaimECU_amount__UXVTQ\",\"sticky\":\"ClaimECU_sticky__HXgU3\",\"grand-total\":\"ClaimECU_grand-total__x5-d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__3o6nU\",\"first-container\":\"ClaimPharmacy_first-container__24DOY\",\"groups\":\"ClaimPharmacy_groups__gN0O5\",\"input\":\"ClaimPharmacy_input__2zV0D\",\"child-container\":\"ClaimPharmacy_child-container__3bxBF\",\"left-side\":\"ClaimPharmacy_left-side__36Ydb\",\"right-side\":\"ClaimPharmacy_right-side__3b9ZU\",\"tables-container\":\"ClaimPharmacy_tables-container__29er7\",\"wrapper\":\"ClaimPharmacy_wrapper__1tYX9\",\"table\":\"ClaimPharmacy_table__sOxO5\",\"table-header\":\"ClaimPharmacy_table-header__vbfpz\",\"table-description\":\"ClaimPharmacy_table-description__1rTw7\",\"add-link\":\"ClaimPharmacy_add-link__1oaJN\",\"row\":\"ClaimPharmacy_row__3U2ex\",\"align\":\"ClaimPharmacy_align__1qqZT\",\"center\":\"ClaimPharmacy_center__KJIk6\",\"right\":\"ClaimPharmacy_right__K6eAn\",\"table-total\":\"ClaimPharmacy_table-total__3IDSI\",\"caption\":\"ClaimPharmacy_caption__2JNG1\",\"amount\":\"ClaimPharmacy_amount__1wFSr\",\"sticky\":\"ClaimPharmacy_sticky__2QcKU\",\"grand-total\":\"ClaimPharmacy_grand-total__28Qkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__It_Uf\",\"first-container\":\"ClaimPPE_first-container__2PDwy\",\"groups\":\"ClaimPPE_groups__3F8T-\",\"input\":\"ClaimPPE_input__3KbyV\",\"contract-range\":\"ClaimPPE_contract-range__21-LF\",\"child-container\":\"ClaimPPE_child-container__19svW\",\"left-side\":\"ClaimPPE_left-side__3EWSi\",\"right-side\":\"ClaimPPE_right-side__Mcre2\",\"tables-container\":\"ClaimPPE_tables-container__3vLX8\",\"wrapper\":\"ClaimPPE_wrapper__2lDkk\",\"table\":\"ClaimPPE_table__1d9ZQ\",\"table-header\":\"ClaimPPE_table-header__2jfWY\",\"table-description\":\"ClaimPPE_table-description__B0pV4\",\"add-link\":\"ClaimPPE_add-link__2TK1j\",\"row\":\"ClaimPPE_row__hPaGI\",\"align\":\"ClaimPPE_align__EakZn\",\"center\":\"ClaimPPE_center__2DSBO\",\"right\":\"ClaimPPE_right__1jInO\",\"table-total\":\"ClaimPPE_table-total__1-SlE\",\"caption\":\"ClaimPPE_caption__RtH_1\",\"amount\":\"ClaimPPE_amount__3GEJt\",\"sticky\":\"ClaimPPE_sticky__3IMMC\",\"grand-total\":\"ClaimPPE_grand-total__2O3kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3aZUF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3n5WF\",\"groups\":\"ClaimMedicalSupplies_groups__1kAYn\",\"input\":\"ClaimMedicalSupplies_input__3w3Na\",\"child-container\":\"ClaimMedicalSupplies_child-container__1qpYg\",\"left-side\":\"ClaimMedicalSupplies_left-side__3fj2z\",\"right-side\":\"ClaimMedicalSupplies_right-side__3Jxo1\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2g1bZ\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__1YB7S\",\"table\":\"ClaimMedicalSupplies_table__39sXK\",\"table-header\":\"ClaimMedicalSupplies_table-header__3dEXc\",\"table-description\":\"ClaimMedicalSupplies_table-description__TGhRl\",\"add-link\":\"ClaimMedicalSupplies_add-link__17TK6\",\"row\":\"ClaimMedicalSupplies_row__2vdFX\",\"align\":\"ClaimMedicalSupplies_align__yK5co\",\"center\":\"ClaimMedicalSupplies_center__12JQw\",\"right\":\"ClaimMedicalSupplies_right__XJJUu\",\"table-total\":\"ClaimMedicalSupplies_table-total__3NnUJ\",\"caption\":\"ClaimMedicalSupplies_caption__2811S\",\"amount\":\"ClaimMedicalSupplies_amount__puMje\",\"sticky\":\"ClaimMedicalSupplies_sticky__2SQjJ\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__Dtrsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__cFi4C\",\"first-container\":\"ClaimClinicManagement_first-container__z1jWC\",\"groups\":\"ClaimClinicManagement_groups__1Y38E\",\"input\":\"ClaimClinicManagement_input__1xBc_\",\"search\":\"ClaimClinicManagement_search__9MCKU\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__2mHNL\",\"no-pad\":\"ClaimClinicManagement_no-pad__1Uccu\",\"child-container\":\"ClaimClinicManagement_child-container__kVMQD\",\"left-side\":\"ClaimClinicManagement_left-side__2dy65\",\"right-side\":\"ClaimClinicManagement_right-side__FXm_-\",\"tables-container\":\"ClaimClinicManagement_tables-container__2fZlC\",\"wrapper\":\"ClaimClinicManagement_wrapper__CK0dL\",\"table\":\"ClaimClinicManagement_table__9y78F\",\"table-header\":\"ClaimClinicManagement_table-header__CvQ9s\",\"table-description\":\"ClaimClinicManagement_table-description__1K-ma\",\"add-link\":\"ClaimClinicManagement_add-link__E0inx\",\"row\":\"ClaimClinicManagement_row__1ZByz\",\"align\":\"ClaimClinicManagement_align__3Bsjj\",\"center\":\"ClaimClinicManagement_center__1agdC\",\"right\":\"ClaimClinicManagement_right__1n2Y8\",\"table-total\":\"ClaimClinicManagement_table-total__1ka1r\",\"caption\":\"ClaimClinicManagement_caption__1rGus\",\"amount\":\"ClaimClinicManagement_amount__3GbWj\",\"sticky\":\"ClaimClinicManagement_sticky__VwhGL\",\"grand-total\":\"ClaimClinicManagement_grand-total__223ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__2ZhBR\",\"header-container\":\"ReimbursementInfo_header-container__2Be7O\",\"header\":\"ReimbursementInfo_header__3zAnI\",\"title\":\"ReimbursementInfo_title__1ZCQA\",\"content\":\"ReimbursementInfo_content__1LKaM\",\"basic-info\":\"ReimbursementInfo_basic-info__1pQO5\",\"label\":\"ReimbursementInfo_label__1eWwR\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__2LS9L\",\"container\":\"ReimbursementInfo_container__3j2Tx\",\"show-cell\":\"ReimbursementInfo_show-cell__V330m\",\"cell\":\"ReimbursementInfo_cell__3e4E4\",\"groups\":\"ReimbursementInfo_groups__2b0kL\",\"input\":\"ReimbursementInfo_input__1-9pI\",\"reasons-container\":\"ReimbursementInfo_reasons-container__O8h98\",\"delete\":\"ReimbursementInfo_delete__2NG1u\",\"reasons\":\"ReimbursementInfo_reasons__1Bpgw\",\"add-link\":\"ReimbursementInfo_add-link__3IClX\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__265UY\",\"footer\":\"ReimbursementInfo_footer__2HTae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__3hhrG\",\"first-container\":\"ClaimReimbursement_first-container__38NDs\",\"wrap\":\"ClaimReimbursement_wrap__1ey6r\",\"input\":\"ClaimReimbursement_input__36yRs\",\"child-container\":\"ClaimReimbursement_child-container__1VY-Q\",\"left-side\":\"ClaimReimbursement_left-side__343Le\",\"right-side\":\"ClaimReimbursement_right-side__2CbJR\",\"tables-container\":\"ClaimReimbursement_tables-container__2WwnX\",\"wrapper\":\"ClaimReimbursement_wrapper__1Jn5F\",\"table\":\"ClaimReimbursement_table__ksGL1\",\"table-header\":\"ClaimReimbursement_table-header__1BJ7k\",\"table-description\":\"ClaimReimbursement_table-description__30ZTt\",\"add-link\":\"ClaimReimbursement_add-link__iKc2O\",\"row\":\"ClaimReimbursement_row__1vEel\",\"align\":\"ClaimReimbursement_align__27QCo\",\"center\":\"ClaimReimbursement_center__28QGF\",\"right\":\"ClaimReimbursement_right__RESK7\",\"table-total\":\"ClaimReimbursement_table-total__3V1AF\",\"caption\":\"ClaimReimbursement_caption__38fKN\",\"amount\":\"ClaimReimbursement_amount__1w8eC\",\"sticky\":\"ClaimReimbursement_sticky__2pMEc\",\"grand-total\":\"ClaimReimbursement_grand-total__26LC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2CKVA\",\"tiles\":\"Dashboard_tiles__1zqWv\",\"task-tray\":\"Dashboard_task-tray__1JXKE\",\"list-item\":\"Dashboard_list-item__330ar\",\"details\":\"Dashboard_details__2yOoR\",\"detail-item\":\"Dashboard_detail-item__222xC\",\"label\":\"Dashboard_label__1pqEl\",\"content\":\"Dashboard_content__2u9m1\",\"action\":\"Dashboard_action__Epa7q\",\"ticket-list\":\"Dashboard_ticket-list__2hY-r\",\"wrapper\":\"Dashboard_wrapper__2R19Z\",\"float\":\"Dashboard_float__1wkpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__QvxEj\",\"groups\":\"BatchDetails_groups__287zx\",\"input\":\"BatchDetails_input__tzzPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__1wK71\",\"title\":\"ClaimListHeader_title__3VPI4\",\"wrapper\":\"ClaimListHeader_wrapper__2or4f\",\"button\":\"ClaimListHeader_button__3Hs-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__dqWZg\",\"default-override\":\"ClaimList_default-override__1mOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3Hb8e\",\"header-container\":\"ProviderSchedule_header-container__1JwiJ\",\"header1\":\"ProviderSchedule_header1__3gDQw\",\"title\":\"ProviderSchedule_title__3sbdz\",\"body\":\"ProviderSchedule_body__1mUiH\",\"content\":\"ProviderSchedule_content__2z-Wg\",\"table\":\"ProviderSchedule_table__1IJDe\",\"groups\":\"ProviderSchedule_groups__2QLV6\",\"partition\":\"ProviderSchedule_partition__1QDjs\",\"action\":\"ProviderSchedule_action__3vB_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__26Wrc\",\"claims-container\":\"BatchPage_claims-container__2G2QW\",\"footer\":\"BatchPage_footer__3Fysl\",\"actions\":\"BatchPage_actions___M6eN\",\"delete-button\":\"BatchPage_delete-button__1fPqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__sN0KI\",\"input\":\"BaseDetails_input__3fzd_\",\"search\":\"BaseDetails_search__1xIEN\",\"box-search-button\":\"BaseDetails_box-search-button__1prH9\",\"no-pad\":\"BaseDetails_no-pad__2S67i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__hOE-z\",\"header\":\"ICDTextField_header__3AzkP\",\"description\":\"ICDTextField_description__fLJtE\",\"code\":\"ICDTextField_code__snQp0\",\"primary\":\"ICDTextField_primary__1rF7r\",\"actions\":\"ICDTextField_actions__ROI6c\",\"wrapper\":\"ICDTextField_wrapper__2Tl6S\",\"given-diagnosis\":\"ICDTextField_given-diagnosis__1PFMi\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__3GWEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__1dpY2\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1iY52\",\"has-error\":\"DiagnosisList_has-error__3hfPU\",\"title\":\"DiagnosisList_title__qjkfp\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__3tk0Y\",\"error\":\"DiagnosisList_error__2Q9Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__16Cl9\",\"header\":\"CptTextField_header__18VEF\",\"description\":\"CptTextField_description__38J8w\",\"code\":\"CptTextField_code__3zwiV\",\"wrapper\":\"CptTextField_wrapper__14kEU\",\"sub-wrapper\":\"CptTextField_sub-wrapper__3kUzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__3MFfj\",\"groups\":\"ProcedureForm_groups__33Ssh\",\"limit\":\"ProcedureForm_limit__1jMQI\",\"input\":\"ProcedureForm_input__1I42d\",\"buttons\":\"ProcedureForm_buttons__3gBiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__3kCkJ\",\"header\":\"HospitalItemTextField_header__1p8vm\",\"description\":\"HospitalItemTextField_description__3dt50\",\"code\":\"HospitalItemTextField_code__37pF3\",\"wrapper\":\"HospitalItemTextField_wrapper__2ejzj\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__1TcFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2OG0L\",\"groups\":\"HospitalItemForm_groups__3_yeP\",\"limit\":\"HospitalItemForm_limit__zR-Bu\",\"input\":\"HospitalItemForm_input__1ZqXE\",\"buttons\":\"HospitalItemForm_buttons__1C7f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__2ptS9\",\"groups\":\"ProfessionalFeeForm_groups__K8Zz9\",\"limit\":\"ProfessionalFeeForm_limit__dn0RU\",\"input\":\"ProfessionalFeeForm_input__20gH-\",\"buttons\":\"ProfessionalFeeForm_buttons__2JE2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3v4P_\",\"table\":\"ProcedureList_table__1lDzW\",\"table-header\":\"ProcedureList_table-header__OUZ2f\",\"table-description\":\"ProcedureList_table-description__1woO4\",\"add-link\":\"ProcedureList_add-link__3Y3oZ\",\"row\":\"ProcedureList_row__2-dja\",\"align\":\"ProcedureList_align__qvO_Y\",\"center\":\"ProcedureList_center__3o-L0\",\"right\":\"ProcedureList_right__3krqZ\",\"table-total\":\"ProcedureList_table-total__1VNZY\",\"caption\":\"ProcedureList_caption__164Op\",\"amount\":\"ProcedureList_amount__E-XjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__3MjT2\",\"table\":\"HospitalItemList_table__dG_Tf\",\"table-header\":\"HospitalItemList_table-header__2MLsx\",\"table-description\":\"HospitalItemList_table-description__B2u7N\",\"add-link\":\"HospitalItemList_add-link__3rajh\",\"row\":\"HospitalItemList_row__2dICf\",\"align\":\"HospitalItemList_align__1olVn\",\"center\":\"HospitalItemList_center__aS130\",\"right\":\"HospitalItemList_right__2ZVKU\",\"table-total\":\"HospitalItemList_table-total__2NfAE\",\"caption\":\"HospitalItemList_caption__2asKo\",\"amount\":\"HospitalItemList_amount__t79nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2w3dt\",\"table\":\"ProfessionalFeeList_table__10Ygk\",\"table-header\":\"ProfessionalFeeList_table-header__14PMs\",\"table-description\":\"ProfessionalFeeList_table-description__1zGjK\",\"add-link\":\"ProfessionalFeeList_add-link__3_ArR\",\"row\":\"ProfessionalFeeList_row__99ivp\",\"align\":\"ProfessionalFeeList_align__10CgV\",\"center\":\"ProfessionalFeeList_center__5efkN\",\"right\":\"ProfessionalFeeList_right__2qbRI\",\"table-total\":\"ProfessionalFeeList_table-total__3stF4\",\"caption\":\"ProfessionalFeeList_caption__119dY\",\"amount\":\"ProfessionalFeeList_amount__2aSsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsRemarks_root__2Ee-X\",\"header\":\"ClaimsRemarks_header__3yH1H\",\"header-text\":\"ClaimsRemarks_header-text__3BhQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__9kPKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__3osD9\",\"first-container\":\"ClaimInPatient_first-container__3t49M\",\"groups\":\"ClaimInPatient_groups__3oIox\",\"input\":\"ClaimInPatient_input__hVAF4\",\"child-container\":\"ClaimInPatient_child-container__2Cq2R\",\"tables-container\":\"ClaimInPatient_tables-container__2oIYc\",\"left-side\":\"ClaimInPatient_left-side__3DTmU\",\"wrapper\":\"ClaimInPatient_wrapper__35AeS\",\"table\":\"ClaimInPatient_table__18wS_\",\"table-header\":\"ClaimInPatient_table-header__EDm4F\",\"table-description\":\"ClaimInPatient_table-description__2dbX9\",\"add-link\":\"ClaimInPatient_add-link__2PqWJ\",\"row\":\"ClaimInPatient_row__2S-um\",\"align\":\"ClaimInPatient_align__-0kRI\",\"center\":\"ClaimInPatient_center__SCdjg\",\"right\":\"ClaimInPatient_right__SWljZ\",\"table-total\":\"ClaimInPatient_table-total__1FFT6\",\"caption\":\"ClaimInPatient_caption__12ndJ\",\"amount\":\"ClaimInPatient_amount__1BJYs\",\"right-side\":\"ClaimInPatient_right-side__16K8Y\",\"sticky\":\"ClaimInPatient_sticky__3RBSE\",\"grand-total\":\"ClaimInPatient_grand-total__27yFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__3Ga7K\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3Bo1i\",\"groups\":\"ClaimOutPatientProcedure_groups__1_PgN\",\"input\":\"ClaimOutPatientProcedure_input__2yb91\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2IJug\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__koGml\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2oLag\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__3yj4V\",\"table\":\"ClaimOutPatientProcedure_table__39AFH\",\"table-header\":\"ClaimOutPatientProcedure_table-header__2_DFL\",\"table-description\":\"ClaimOutPatientProcedure_table-description__22jzE\",\"add-link\":\"ClaimOutPatientProcedure_add-link__2zVd0\",\"row\":\"ClaimOutPatientProcedure_row__3tr7i\",\"align\":\"ClaimOutPatientProcedure_align__3aSS8\",\"center\":\"ClaimOutPatientProcedure_center__26F-I\",\"right\":\"ClaimOutPatientProcedure_right__2TzV6\",\"table-total\":\"ClaimOutPatientProcedure_table-total__2SbHo\",\"caption\":\"ClaimOutPatientProcedure_caption__37F57\",\"amount\":\"ClaimOutPatientProcedure_amount__1nHfc\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2kHXN\",\"sticky\":\"ClaimOutPatientProcedure_sticky__YQpzp\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3r0fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1iLTK\",\"first-container\":\"ClaimOutPatientConsultation_first-container__1-5nU\",\"groups\":\"ClaimOutPatientConsultation_groups__2oMDd\",\"input\":\"ClaimOutPatientConsultation_input__19UZR\",\"child-container\":\"ClaimOutPatientConsultation_child-container__aUMUP\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__2mF2h\",\"left-side\":\"ClaimOutPatientConsultation_left-side__19GSs\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__1t8lb\",\"table\":\"ClaimOutPatientConsultation_table__37ymv\",\"table-header\":\"ClaimOutPatientConsultation_table-header__1mDNN\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1K6LA\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1kLWg\",\"row\":\"ClaimOutPatientConsultation_row__1QVq1\",\"align\":\"ClaimOutPatientConsultation_align__JzFHT\",\"center\":\"ClaimOutPatientConsultation_center__Kj125\",\"right\":\"ClaimOutPatientConsultation_right__2UzFx\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3Y5uM\",\"caption\":\"ClaimOutPatientConsultation_caption__1fpt6\",\"amount\":\"ClaimOutPatientConsultation_amount__2NcEC\",\"right-side\":\"ClaimOutPatientConsultation_right-side__2G55v\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1p7r8\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__3hH8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__oSnYx\",\"first-container\":\"ClaimEmergency_first-container__3b0DZ\",\"groups\":\"ClaimEmergency_groups__fVn6k\",\"input\":\"ClaimEmergency_input__20Z4V\",\"child-container\":\"ClaimEmergency_child-container__2B7dx\",\"tables-container\":\"ClaimEmergency_tables-container__1SqZm\",\"left-side\":\"ClaimEmergency_left-side__2XQXV\",\"wrapper\":\"ClaimEmergency_wrapper__2dRHq\",\"table\":\"ClaimEmergency_table__2Ye6U\",\"table-header\":\"ClaimEmergency_table-header__XQM6o\",\"table-description\":\"ClaimEmergency_table-description__eEvjz\",\"add-link\":\"ClaimEmergency_add-link__3f1pP\",\"row\":\"ClaimEmergency_row__9kBGW\",\"align\":\"ClaimEmergency_align__2pcQ2\",\"center\":\"ClaimEmergency_center__2EBE3\",\"right\":\"ClaimEmergency_right__3yT5b\",\"table-total\":\"ClaimEmergency_table-total__1Sfid\",\"caption\":\"ClaimEmergency_caption__3PPFO\",\"amount\":\"ClaimEmergency_amount__22h7o\",\"right-side\":\"ClaimEmergency_right-side__1VzuD\",\"sticky\":\"ClaimEmergency_sticky__2nEt5\",\"grand-total\":\"ClaimEmergency_grand-total__1rCNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__2xwxL\",\"label\":\"ToothNumber_label__3a7e8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2Acnv\",\"groups\":\"DentalProcedureForm_groups__2VwcV\",\"limit\":\"DentalProcedureForm_limit__B0N0H\",\"input\":\"DentalProcedureForm_input__3fOJ9\",\"buttons\":\"DentalProcedureForm_buttons__1zf4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__2JDL2\",\"first-container\":\"ClaimDental_first-container__1bgJH\",\"groups\":\"ClaimDental_groups__1-ERD\",\"chart\":\"ClaimDental_chart__3Dc9C\",\"input\":\"ClaimDental_input__25h7r\",\"contract-range\":\"ClaimDental_contract-range__3m5nq\",\"child-container\":\"ClaimDental_child-container__3e0an\",\"tables-container\":\"ClaimDental_tables-container__cMXte\",\"left-side\":\"ClaimDental_left-side__1TcV5\",\"wrapper\":\"ClaimDental_wrapper__3ThOl\",\"table\":\"ClaimDental_table__2F5f1\",\"table-header\":\"ClaimDental_table-header__2akCh\",\"table-description\":\"ClaimDental_table-description__216ml\",\"add-link\":\"ClaimDental_add-link__lzfHs\",\"row\":\"ClaimDental_row__3LXFH\",\"align\":\"ClaimDental_align__mJMlm\",\"center\":\"ClaimDental_center__3s7zR\",\"right\":\"ClaimDental_right__1k-F1\",\"table-total\":\"ClaimDental_table-total__3QDdT\",\"caption\":\"ClaimDental_caption__3mlFq\",\"amount\":\"ClaimDental_amount__2ltb-\",\"right-side\":\"ClaimDental_right-side__1TuoJ\",\"sticky\":\"ClaimDental_sticky__2jLb5\",\"grand-total\":\"ClaimDental_grand-total__gc69p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__3tnOB\",\"first-container\":\"ClaimMedicineAllowance_first-container__AHNJn\",\"groups\":\"ClaimMedicineAllowance_groups__2iRok\",\"input\":\"ClaimMedicineAllowance_input__1XM4n\",\"child-container\":\"ClaimMedicineAllowance_child-container__eGvyY\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__9NdEv\",\"left-side\":\"ClaimMedicineAllowance_left-side__3ULwO\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__2a9dZ\",\"table\":\"ClaimMedicineAllowance_table__tRJMn\",\"table-header\":\"ClaimMedicineAllowance_table-header__1Ynyj\",\"table-description\":\"ClaimMedicineAllowance_table-description__3P7Fc\",\"add-link\":\"ClaimMedicineAllowance_add-link__bcTPs\",\"row\":\"ClaimMedicineAllowance_row__X0O5w\",\"align\":\"ClaimMedicineAllowance_align__BxZLW\",\"center\":\"ClaimMedicineAllowance_center__bUmmq\",\"right\":\"ClaimMedicineAllowance_right__1oGzD\",\"table-total\":\"ClaimMedicineAllowance_table-total__1IQEl\",\"caption\":\"ClaimMedicineAllowance_caption__15HJx\",\"amount\":\"ClaimMedicineAllowance_amount__1OeW6\",\"right-side\":\"ClaimMedicineAllowance_right-side__2LJsC\",\"sticky\":\"ClaimMedicineAllowance_sticky__1tKev\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1HUo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__10qUm\",\"first-container\":\"ClaimAPE_first-container__3VIQz\",\"groups\":\"ClaimAPE_groups__1H7zB\",\"input\":\"ClaimAPE_input__2Wllf\",\"contract-range\":\"ClaimAPE_contract-range__1xKUx\",\"child-container\":\"ClaimAPE_child-container__2-Cqb\",\"tables-container\":\"ClaimAPE_tables-container__2c44w\",\"left-side\":\"ClaimAPE_left-side__3Grb8\",\"wrapper\":\"ClaimAPE_wrapper__3kVSF\",\"table\":\"ClaimAPE_table__omI3l\",\"table-header\":\"ClaimAPE_table-header__2bLUm\",\"table-description\":\"ClaimAPE_table-description__1imB1\",\"add-link\":\"ClaimAPE_add-link__2hydA\",\"row\":\"ClaimAPE_row__2LLeH\",\"align\":\"ClaimAPE_align__2aoEU\",\"center\":\"ClaimAPE_center__DIEY_\",\"right\":\"ClaimAPE_right__3JBKi\",\"table-total\":\"ClaimAPE_table-total__1hqGE\",\"caption\":\"ClaimAPE_caption__2uqYE\",\"amount\":\"ClaimAPE_amount__1I4D8\",\"right-side\":\"ClaimAPE_right-side__3R0S8\",\"sticky\":\"ClaimAPE_sticky__3qv6w\",\"grand-total\":\"ClaimAPE_grand-total__1i42h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__Y8G80\",\"first-container\":\"ClaimECU_first-container__1rhnH\",\"groups\":\"ClaimECU_groups__3Ibk_\",\"input\":\"ClaimECU_input__26EJ2\",\"child-container\":\"ClaimECU_child-container__1MXFG\",\"tables-container\":\"ClaimECU_tables-container__1eXUa\",\"left-side\":\"ClaimECU_left-side__2cvFC\",\"wrapper\":\"ClaimECU_wrapper__gZOgU\",\"table\":\"ClaimECU_table__1Bicl\",\"table-header\":\"ClaimECU_table-header__1vKl3\",\"table-description\":\"ClaimECU_table-description__qUDPT\",\"add-link\":\"ClaimECU_add-link__wl7KO\",\"row\":\"ClaimECU_row__20V6A\",\"align\":\"ClaimECU_align__4hqDF\",\"center\":\"ClaimECU_center__1bRln\",\"right\":\"ClaimECU_right__3VP8v\",\"table-total\":\"ClaimECU_table-total__GSoyb\",\"caption\":\"ClaimECU_caption__156Qz\",\"amount\":\"ClaimECU_amount__3anBs\",\"right-side\":\"ClaimECU_right-side__3rxLw\",\"sticky\":\"ClaimECU_sticky__1sJqT\",\"grand-total\":\"ClaimECU_grand-total__3ggCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__3RVRM\",\"first-container\":\"ClaimPPE_first-container__21sPt\",\"groups\":\"ClaimPPE_groups__u8awx\",\"input\":\"ClaimPPE_input__2H_V4\",\"packages\":\"ClaimPPE_packages__3-Fqt\",\"child-container\":\"ClaimPPE_child-container__4CbFv\",\"tables-container\":\"ClaimPPE_tables-container__1P7tK\",\"left-side\":\"ClaimPPE_left-side__1Wl6h\",\"wrapper\":\"ClaimPPE_wrapper__EWklO\",\"table\":\"ClaimPPE_table__ECnsY\",\"table-header\":\"ClaimPPE_table-header__1MiEt\",\"table-description\":\"ClaimPPE_table-description__23Chj\",\"add-link\":\"ClaimPPE_add-link__2jmjj\",\"row\":\"ClaimPPE_row__3D1tu\",\"align\":\"ClaimPPE_align__12mQb\",\"center\":\"ClaimPPE_center__3ZjbJ\",\"right\":\"ClaimPPE_right__3uBxk\",\"table-total\":\"ClaimPPE_table-total__vFP-x\",\"caption\":\"ClaimPPE_caption__3SGWC\",\"amount\":\"ClaimPPE_amount__3eFhL\",\"right-side\":\"ClaimPPE_right-side__MiTxO\",\"sticky\":\"ClaimPPE_sticky__1TIh3\",\"grand-total\":\"ClaimPPE_grand-total__IdBsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__2OUHv\",\"first-container\":\"ClaimPharmacy_first-container__3CTh5\",\"groups\":\"ClaimPharmacy_groups__1dXFx\",\"input\":\"ClaimPharmacy_input__1fnDP\",\"child-container\":\"ClaimPharmacy_child-container__2DXAY\",\"tables-container\":\"ClaimPharmacy_tables-container__OVhpf\",\"left-side\":\"ClaimPharmacy_left-side__2knv5\",\"wrapper\":\"ClaimPharmacy_wrapper__uDOW8\",\"table\":\"ClaimPharmacy_table__2ttlx\",\"table-header\":\"ClaimPharmacy_table-header__2DPRY\",\"table-description\":\"ClaimPharmacy_table-description__anC6p\",\"add-link\":\"ClaimPharmacy_add-link__3-l-Y\",\"row\":\"ClaimPharmacy_row__1EBvJ\",\"align\":\"ClaimPharmacy_align__3dWWS\",\"center\":\"ClaimPharmacy_center__2Lg3i\",\"right\":\"ClaimPharmacy_right__3Irs7\",\"table-total\":\"ClaimPharmacy_table-total__sPYMH\",\"caption\":\"ClaimPharmacy_caption__2a4nY\",\"amount\":\"ClaimPharmacy_amount__AYkmn\",\"right-side\":\"ClaimPharmacy_right-side__1ss74\",\"sticky\":\"ClaimPharmacy_sticky__RRGLs\",\"grand-total\":\"ClaimPharmacy_grand-total__3QkK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3NBGF\",\"first-container\":\"ClaimMedicalSupplies_first-container__3-YoF\",\"groups\":\"ClaimMedicalSupplies_groups__3hkzB\",\"input\":\"ClaimMedicalSupplies_input__22TfW\",\"child-container\":\"ClaimMedicalSupplies_child-container__eULTM\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__2zfdH\",\"left-side\":\"ClaimMedicalSupplies_left-side__2MoH7\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__2hL_L\",\"table\":\"ClaimMedicalSupplies_table__2JI1-\",\"table-header\":\"ClaimMedicalSupplies_table-header__CX7uX\",\"table-description\":\"ClaimMedicalSupplies_table-description__14O2d\",\"add-link\":\"ClaimMedicalSupplies_add-link__1nCh7\",\"row\":\"ClaimMedicalSupplies_row__g6Y-_\",\"align\":\"ClaimMedicalSupplies_align__1_hYI\",\"center\":\"ClaimMedicalSupplies_center__eJ3xR\",\"right\":\"ClaimMedicalSupplies_right__1Rf4R\",\"table-total\":\"ClaimMedicalSupplies_table-total__XHhz_\",\"caption\":\"ClaimMedicalSupplies_caption__1slE2\",\"amount\":\"ClaimMedicalSupplies_amount__3oFZd\",\"right-side\":\"ClaimMedicalSupplies_right-side__gNovx\",\"sticky\":\"ClaimMedicalSupplies_sticky__3bxBP\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__1G-Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__1r___\",\"first-container\":\"ClaimClinicManagement_first-container__2skqe\",\"groups\":\"ClaimClinicManagement_groups__3FbWr\",\"input\":\"ClaimClinicManagement_input__2Keb1\",\"search\":\"ClaimClinicManagement_search__2LTYC\",\"box-search-button\":\"ClaimClinicManagement_box-search-button__3GicP\",\"no-pad\":\"ClaimClinicManagement_no-pad__2SIL6\",\"child-container\":\"ClaimClinicManagement_child-container__n7uq4\",\"tables-container\":\"ClaimClinicManagement_tables-container__3NmAQ\",\"left-side\":\"ClaimClinicManagement_left-side__D4Ima\",\"wrapper\":\"ClaimClinicManagement_wrapper__3yNmB\",\"table\":\"ClaimClinicManagement_table__1OvWr\",\"table-header\":\"ClaimClinicManagement_table-header__2avVb\",\"table-description\":\"ClaimClinicManagement_table-description__2hA0s\",\"add-link\":\"ClaimClinicManagement_add-link__2GJYD\",\"row\":\"ClaimClinicManagement_row__1YHad\",\"align\":\"ClaimClinicManagement_align__3VKHt\",\"center\":\"ClaimClinicManagement_center__2ugQN\",\"right\":\"ClaimClinicManagement_right__2YJdE\",\"table-total\":\"ClaimClinicManagement_table-total__12gwG\",\"caption\":\"ClaimClinicManagement_caption__1ufF7\",\"amount\":\"ClaimClinicManagement_amount__38Qbv\",\"right-side\":\"ClaimClinicManagement_right-side__33DHV\",\"sticky\":\"ClaimClinicManagement_sticky__jEfao\",\"grand-total\":\"ClaimClinicManagement_grand-total__1xe5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfo_root__A48Ge\",\"header-container\":\"ReimbursementInfo_header-container__7Rc0y\",\"header\":\"ReimbursementInfo_header__2Fspq\",\"title\":\"ReimbursementInfo_title__1JbPt\",\"content\":\"ReimbursementInfo_content__1O8ol\",\"basic-info\":\"ReimbursementInfo_basic-info__1oPax\",\"label\":\"ReimbursementInfo_label__LDCyS\",\"collapsible-cell\":\"ReimbursementInfo_collapsible-cell__1PlUR\",\"container\":\"ReimbursementInfo_container__M1ZXd\",\"show-cell\":\"ReimbursementInfo_show-cell__1q80V\",\"cell\":\"ReimbursementInfo_cell__2ZIqz\",\"groups\":\"ReimbursementInfo_groups__na5mh\",\"input\":\"ReimbursementInfo_input__2qSpD\",\"reasons-container\":\"ReimbursementInfo_reasons-container__3vqkq\",\"delete\":\"ReimbursementInfo_delete__2aKoN\",\"reasons\":\"ReimbursementInfo_reasons__1twVx\",\"add-link\":\"ReimbursementInfo_add-link__3leZg\",\"empty-reasons\":\"ReimbursementInfo_empty-reasons__2hpfm\",\"footer\":\"ReimbursementInfo_footer__3FzeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__2-8KB\",\"first-container\":\"ClaimReimbursement_first-container__18fTD\",\"wrap\":\"ClaimReimbursement_wrap__3HMhP\",\"input\":\"ClaimReimbursement_input__3la5w\",\"child-container\":\"ClaimReimbursement_child-container__1kWRr\",\"tables-container\":\"ClaimReimbursement_tables-container__PR9B_\",\"left-side\":\"ClaimReimbursement_left-side__1m7FN\",\"wrapper\":\"ClaimReimbursement_wrapper__246w6\",\"table\":\"ClaimReimbursement_table__2S73N\",\"table-header\":\"ClaimReimbursement_table-header__1zQ8j\",\"table-description\":\"ClaimReimbursement_table-description__2tmiu\",\"add-link\":\"ClaimReimbursement_add-link__2JH4c\",\"row\":\"ClaimReimbursement_row__1OSjx\",\"align\":\"ClaimReimbursement_align__3OEDi\",\"center\":\"ClaimReimbursement_center__13TIn\",\"right\":\"ClaimReimbursement_right__3fu2G\",\"table-total\":\"ClaimReimbursement_table-total__3dvpa\",\"caption\":\"ClaimReimbursement_caption__2HDFA\",\"amount\":\"ClaimReimbursement_amount__3l1fZ\",\"right-side\":\"ClaimReimbursement_right-side__14Gxn\",\"sticky\":\"ClaimReimbursement_sticky__26GxQ\",\"groups\":\"ClaimReimbursement_groups__38k8I\",\"grand-total\":\"ClaimReimbursement_grand-total__7vHa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2d4M4\",\"tiles\":\"Dashboard_tiles__16_MG\",\"row\":\"Dashboard_row__2TDbS\",\"task-tray\":\"Dashboard_task-tray__1YmzT\",\"task-tray-monitor\":\"Dashboard_task-tray-monitor__1FeES\",\"ticket-list\":\"Dashboard_ticket-list__1Q0kW\",\"wrapper\":\"Dashboard_wrapper__1T3tt\",\"float\":\"Dashboard_float__1Xub9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2xUj2\",\"buttons\":\"ButtonFooter_buttons__3v_r7\",\"counter\":\"ButtonFooter_counter__1pqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__1B1lo\",\"header-container\":\"AssignDialog_header-container__2q19w\",\"header\":\"AssignDialog_header__4mmtH\",\"title\":\"AssignDialog_title__1t8cw\",\"content\":\"AssignDialog_content__Y7uRW\",\"input\":\"AssignDialog_input__2npYe\",\"footer\":\"AssignDialog_footer__3QHDI\",\"assign\":\"AssignDialog_assign__1aP36\",\"to\":\"AssignDialog_to__2eLiV\",\"action\":\"AssignDialog_action__2H051\",\"message-content\":\"AssignDialog_message-content__1NrdY\",\"message\":\"AssignDialog_message__27R73\",\"message-child\":\"AssignDialog_message-child__2eYo7\",\"alert-title\":\"AssignDialog_alert-title__ZMO3M\",\"footer-action\":\"AssignDialog_footer-action__27lzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CreatedBatchesPage_root__1b7-1\",\"table-container\":\"CreatedBatchesPage_table-container__1gFsH\",\"search-container\":\"CreatedBatchesPage_search-container__2wgNb\",\"reassign\":\"CreatedBatchesPage_reassign__14Y6T\",\"search\":\"CreatedBatchesPage_search__2mhtd\",\"action-container\":\"CreatedBatchesPage_action-container__Pa7R0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__1PwO3\",\"groups\":\"BatchDetails_groups__3A2VN\",\"input\":\"BatchDetails_input__3hwk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__2YvdB\",\"title\":\"ClaimListHeader_title__2tIMg\",\"wrapper\":\"ClaimListHeader_wrapper__1gVaD\",\"button\":\"ClaimListHeader_button__2wf-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__27Pnu\",\"default-override\":\"ClaimList_default-override__2T421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__3iS6_\",\"claims-container\":\"BatchPage_claims-container__FFC4C\",\"footer\":\"BatchPage_footer__6IBOB\",\"actions\":\"BatchPage_actions__BbrLm\",\"delete-button\":\"BatchPage_delete-button__1-tPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2It_d\",\"tiles\":\"Dashboard_tiles__2DX72\",\"task-tray\":\"Dashboard_task-tray__2MeJZ\",\"list-item\":\"Dashboard_list-item__1ixUY\",\"details\":\"Dashboard_details__39R6g\",\"detail-item\":\"Dashboard_detail-item__1qIsO\",\"label\":\"Dashboard_label__2wpxb\",\"content\":\"Dashboard_content__2vmkp\",\"action\":\"Dashboard_action__10xYG\",\"ticket-list\":\"Dashboard_ticket-list__1iTbF\",\"wrapper\":\"Dashboard_wrapper__3z4j1\",\"float\":\"Dashboard_float__1Hiew\",\"completed_task\":\"Dashboard_completed_task__RN1as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__2gr1_\",\"label\":\"DatePicker_label__2IDg0\",\"wrapper\":\"DatePicker_wrapper__1l4FZ\",\"read-only-value\":\"DatePicker_read-only-value__KJseI\",\"text-field\":\"DatePicker_text-field__3ms9r\",\"no-margin\":\"DatePicker_no-margin__367V6\",\"input\":\"DatePicker_input__1xj3x\",\"date-button\":\"DatePicker_date-button__2wW8j\",\"focus\":\"DatePicker_focus__MeKma\",\"has-error\":\"DatePicker_has-error__2F-Pz\",\"disabled\":\"DatePicker_disabled__6UGGx\",\"error\":\"DatePicker_error__3XqbD\",\"date\":\"DatePicker_date__2JSbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Test_root__LER1m\",\"row\":\"Test_row__2iY25\",\"input\":\"Test_input__3gEl6\",\"proto-auto-complete\":\"Test_proto-auto-complete__3-JWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1WSgv\",\"tiles\":\"Dashboard_tiles__URUGc\",\"task-tray\":\"Dashboard_task-tray__3PFmp\",\"list-item\":\"Dashboard_list-item__1dXth\",\"details\":\"Dashboard_details__1uD2x\",\"detail-item\":\"Dashboard_detail-item__2Xq4I\",\"label\":\"Dashboard_label__2Y7DU\",\"content\":\"Dashboard_content__12k-O\",\"action\":\"Dashboard_action__3-klY\",\"ticket-list\":\"Dashboard_ticket-list__3SSgK\",\"wrapper\":\"Dashboard_wrapper__3sukD\",\"float\":\"Dashboard_float__3_xKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__2gGvt\",\"text-fields\":\"PaymentRequestPage_text-fields__3gFF0\",\"sub-container\":\"PaymentRequestPage_sub-container__a_dOn\",\"input-container\":\"PaymentRequestPage_input-container__2GjiG\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__1Efns\",\"table-container\":\"PaymentRequestPage_table-container__2yAdZ\",\"headers\":\"PaymentRequestPage_headers__1XNVW\",\"header\":\"PaymentRequestPage_header__3MXgw\",\"submit-header\":\"PaymentRequestPage_submit-header__19DA-\",\"dialog-container\":\"PaymentRequestPage_dialog-container__1a70q\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__1W80E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestPage_root__3CH1o\",\"text-fields\":\"SubmittedPaymentRequestPage_text-fields__1EAYV\",\"sub-container\":\"SubmittedPaymentRequestPage_sub-container__39S8A\",\"input-container\":\"SubmittedPaymentRequestPage_input-container__1e-Ty\",\"ellipsis-container\":\"SubmittedPaymentRequestPage_ellipsis-container__1UrAU\",\"table-container\":\"SubmittedPaymentRequestPage_table-container__3oIBa\",\"headers\":\"SubmittedPaymentRequestPage_headers__IUsth\",\"header\":\"SubmittedPaymentRequestPage_header__1W3nu\",\"dialog-container\":\"SubmittedPaymentRequestPage_dialog-container__2sZln\",\"buttonWrapper\":\"SubmittedPaymentRequestPage_buttonWrapper__3s1pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__3PeJc\",\"tiles\":\"Dashboard_tiles__OVU2I\",\"task-tray\":\"Dashboard_task-tray__1krbX\",\"list-item\":\"Dashboard_list-item__3vY_C\",\"details\":\"Dashboard_details__3NoCG\",\"detail-item\":\"Dashboard_detail-item__JLMfd\",\"label\":\"Dashboard_label__3AA6w\",\"content\":\"Dashboard_content__16txH\",\"action\":\"Dashboard_action__Apy9_\",\"ticket-list\":\"Dashboard_ticket-list__2Kmdx\",\"wrapper\":\"Dashboard_wrapper__1-oZ4\",\"float\":\"Dashboard_float__3w1H_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SubmittedPaymentRequestList_root__dXrnn\",\"header-container\":\"SubmittedPaymentRequestList_header-container__33jMu\",\"header\":\"SubmittedPaymentRequestList_header__1UkBI\",\"title\":\"SubmittedPaymentRequestList_title__31KGj\",\"search\":\"SubmittedPaymentRequestList_search__1SQIf\",\"table\":\"SubmittedPaymentRequestList_table__1sht8\",\"buttonWrapper\":\"SubmittedPaymentRequestList_buttonWrapper__2ZvKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2ue5H\",\"header-container\":\"ViewList_header-container__q77ZU\",\"header\":\"ViewList_header__2lKSa\",\"title\":\"ViewList_title__AuuEZ\",\"content\":\"ViewList_content__3GRUr\",\"search\":\"ViewList_search__cofXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28Vtl\",\"tiles\":\"Dashboard_tiles__1wpMD\",\"task-tray\":\"Dashboard_task-tray__1IvyN\",\"list-item\":\"Dashboard_list-item__12jAd\",\"details\":\"Dashboard_details__2H0bw\",\"detail-item\":\"Dashboard_detail-item__3Fwan\",\"label\":\"Dashboard_label__3wCdh\",\"content\":\"Dashboard_content__39XQQ\",\"action\":\"Dashboard_action__1O7UY\",\"ticket-list\":\"Dashboard_ticket-list__kcd4U\",\"wrapper\":\"Dashboard_wrapper__2FBsH\",\"float\":\"Dashboard_float__WBsaU\",\"completed_task\":\"Dashboard_completed_task__y2ijY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2pt7a\",\"tiles\":\"Dashboard_tiles__2zhqD\",\"row\":\"Dashboard_row__3jP5M\",\"task-tray\":\"Dashboard_task-tray__2N8YZ\",\"list-item\":\"Dashboard_list-item__JD2zf\",\"details\":\"Dashboard_details__1uEl7\",\"detail-item\":\"Dashboard_detail-item__2ijgN\",\"label\":\"Dashboard_label__34lgV\",\"content\":\"Dashboard_content__3COhO\",\"action\":\"Dashboard_action__36U9f\",\"ticket-list\":\"Dashboard_ticket-list__2OwTr\",\"wrapper\":\"Dashboard_wrapper__Q93wn\",\"float\":\"Dashboard_float__2hGqR\",\"completed_task\":\"Dashboard_completed_task__3VhqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ButtonFooter_root__2X5k5\",\"buttons\":\"ButtonFooter_buttons__2aw08\",\"counter\":\"ButtonFooter_counter__20NW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__RJlxK\",\"header-container\":\"AssignDialog_header-container__1o5Gi\",\"header\":\"AssignDialog_header__3ISr0\",\"title\":\"AssignDialog_title__2y4cT\",\"content\":\"AssignDialog_content__24eRW\",\"input\":\"AssignDialog_input__NW5vD\",\"footer\":\"AssignDialog_footer__2rmZz\",\"assign\":\"AssignDialog_assign__2WmDm\",\"to\":\"AssignDialog_to__1Lcwa\",\"action\":\"AssignDialog_action__2z0LV\",\"message-content\":\"AssignDialog_message-content__WGOqe\",\"message\":\"AssignDialog_message__3BYCA\",\"message-child\":\"AssignDialog_message-child__2BQeL\",\"alert-title\":\"AssignDialog_alert-title__gx1Vh\",\"footer-action\":\"AssignDialog_footer-action__rMIKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimsList_root__32NKA\",\"table-container\":\"ClaimsList_table-container__2xz0B\",\"search-container\":\"ClaimsList_search-container__1JKTH\",\"reassign\":\"ClaimsList_reassign__177eW\",\"search\":\"ClaimsList_search__2869S\",\"action-container\":\"ClaimsList_action-container__3VFV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1zt4e\",\"tiles\":\"Dashboard_tiles__N_XeU\",\"row\":\"Dashboard_row__3-lCS\",\"task-tray\":\"Dashboard_task-tray__L-btV\",\"list-item\":\"Dashboard_list-item__2Z2uy\",\"details\":\"Dashboard_details__-wyqw\",\"detail-item\":\"Dashboard_detail-item__jAHga\",\"label\":\"Dashboard_label__KNpiW\",\"content\":\"Dashboard_content__17Lfg\",\"action\":\"Dashboard_action__38kLX\",\"ticket-list\":\"Dashboard_ticket-list__3bes0\",\"wrapper\":\"Dashboard_wrapper__38JoV\",\"float\":\"Dashboard_float__1YyQM\",\"completed_task\":\"Dashboard_completed_task__1dK9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__28tvA\",\"tiles\":\"Dashboard_tiles__1xRNf\",\"row\":\"Dashboard_row__1lZjx\",\"task-tray\":\"Dashboard_task-tray__m0Mne\",\"list-item\":\"Dashboard_list-item__1W9Rx\",\"details\":\"Dashboard_details__3v-9d\",\"detail-item\":\"Dashboard_detail-item__SBoHO\",\"label\":\"Dashboard_label__2lH5b\",\"content\":\"Dashboard_content__3NMtD\",\"action\":\"Dashboard_action__nDNUz\",\"ticket-list\":\"Dashboard_ticket-list__3Y9ji\",\"wrapper\":\"Dashboard_wrapper__3fNte\",\"float\":\"Dashboard_float__3aYNI\",\"completed_task\":\"Dashboard_completed_task__2-BCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reassign\":\"AssignDialog_reassign__vQHL2\",\"header-container\":\"AssignDialog_header-container__1qQN2\",\"header\":\"AssignDialog_header__3PltF\",\"title\":\"AssignDialog_title__e_cZ1\",\"content\":\"AssignDialog_content__3wFoW\",\"input\":\"AssignDialog_input__AeSdQ\",\"footer\":\"AssignDialog_footer__3dKcT\",\"assign\":\"AssignDialog_assign__X3IaA\",\"to\":\"AssignDialog_to__2FSjd\",\"action\":\"AssignDialog_action__HdROx\",\"message-content\":\"AssignDialog_message-content__3s8j-\",\"message\":\"AssignDialog_message__1o7jm\",\"message-child\":\"AssignDialog_message-child__l94pI\",\"alert-title\":\"AssignDialog_alert-title__3GyBp\",\"footer-action\":\"AssignDialog_footer-action__2CQoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetailsPage_root__1WnVw\",\"footer\":\"BatchDetailsPage_footer__2mXHQ\",\"actions\":\"BatchDetailsPage_actions__qSR-l\",\"delete-button\":\"BatchDetailsPage_delete-button__17y_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MaintenancePage_root__18jNl\",\"button-parent\":\"MaintenancePage_button-parent__1YFg4\",\"active\":\"MaintenancePage_active__3Ltsc\",\"header\":\"MaintenancePage_header__3ou_p\",\"header-wrapper\":\"MaintenancePage_header-wrapper__14ljZ\",\"header-text\":\"MaintenancePage_header-text__LYsHh\",\"table\":\"MaintenancePage_table__2RLkb\",\"add-item-root\":\"MaintenancePage_add-item-root__iVNF-\",\"wrapper\":\"MaintenancePage_wrapper__3LPhK\",\"text-wrapper\":\"MaintenancePage_text-wrapper__27CjW\",\"radio-buttons\":\"MaintenancePage_radio-buttons__1E3wP\",\"button-wrapper\":\"MaintenancePage_button-wrapper__DTWi8\"};","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker/DatePicker'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\nexport default function CustomizedDialogs ({\n  id,\n  columns,\n  searchTextPlaceHolder,\n  viewList,\n  setViewList,\n  onViewListChange,\n  body\n}) {\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    // console.log(args)\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    onViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent id='search' onChange={handleSearchChange} placeholder={searchTextPlaceHolder} />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {columns.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  <TextField\n                    onChange={event => {\n                      const search = event.target.value\n                      clearTimeout(debounce)\n                      setDebounce(\n                        setTimeout(() => {\n                          handleColumnFiltering({\n                            field: headCell.sortField,\n                            value: search,\n                            match: headCell.match\n                          })\n                        }, 500)\n                      )\n                    }}\n                  />\n                  {/* {(headCell.type && headCell.type === 'date') || headCell.match === 'date' ? (\n                    <DatePicker\n                      noMargin\n                      id={`${headCell.field}`}\n                      onChange={date => {\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                      value={null}\n                    />\n                  ) : (\n                    <TextField\n                      noMargin\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  )} */}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={body(viewList.data)}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CreatedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    LoadingService.loading(true)\n    services.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'created',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'created',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Created Bundles' })\n    services\n      .getBundles({ category: 'created', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'created',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'created-count' }}\n        sizes={sizes}\n        title='Created Bundles'\n        id='created-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='created-view-list'\n          >\n            View List\n          </Typography>\n        }\n        actionHeader={\n          <Button\n            variant='contained'\n            color='primary'\n            className='button-neutral'\n            onClick={generateBundleNumber}\n            id='create-new-bundle'\n          >\n            Create New Bundle\n          </Button>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`created-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='created-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCreatedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default CreatedBundlesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst SubmittedBundlesTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date_due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBundles({\n        category: 'submitted',\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n        range: 'this-week'\n      }),\n      services.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      setItems({ data: batchResponse.data.data.results, count: batchCountResponse.data.data })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    services\n      .getBundles({\n        category: 'submitted',\n        range: value,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setItems(prevState => ({ ...prevState, data: data.results }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Submitted Bundles' })\n    services\n      .getBundles({ category: 'submitted', limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'submitted-count' }}\n        sizes={sizes}\n        title='Submitted Bundles'\n        id='submitted-bundles'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`created-${item.id}`} id={`created-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`submitted-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='submitted-bundles'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedBundlesTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedBundlesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <CreatedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setFocus(false)\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper id={`${props.id}-suggestion`} className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      id={`${props.id}-suggestion-${index}`}\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport moment from 'moment'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const {\n    id,\n    label,\n    required,\n    value,\n    format,\n    disableComponents = false,\n    readOnly,\n    onChange,\n    error,\n    tabindex,\n    noMargin = false,\n    ...other\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(value)\n    // setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(moment(date))\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper\n                    className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n                      error ? classes['has-error'] : focus && classes.focus\n                    } box-shadow-field ${disableComponents && classes.disabled}`}\n                    onBlur={handleOnBlur}\n                  >\n                    <InputBase\n                      id={id}\n                      inputProps={{ ref: InputRef }}\n                      className={classes.input}\n                      value={p.value}\n                      onFocus={handleOnFocus}\n                      disabled={disableComponents}\n                    />\n\n                    <div className={classes['date-button']}>\n                      <IconButton\n                        id={`${id}-date-button`}\n                        className={classes.button}\n                        disabled={disableComponents}\n                        size='small'\n                        onClick={() => setOpen(true)}\n                      >\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              clearable\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={date => onChange({ fieldName: 'date_received', fieldValue: date.toISOString() })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={date => onChange({ fieldName: 'due_date', fieldValue: date.toISOString() })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      {details.reassign_notes && (\n        <Grid container spacing={3}>\n          <Grid item sm={6} xs={12}>\n            <TextField\n              multiline\n              rows={3}\n              id='reassign-notes'\n              label='Reassign Notes'\n              value={details.reassign_notes}\n              readOnly\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    canEdit,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false,\n    searchFilter = '',\n    selectStatus = true\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches\n      .filter(i => {\n        if (i.batch_number.includes(searchFilter)) return true\n        if (i.claim.type.toLowerCase().includes(searchFilter.toLowerCase())) return true\n        if (i.total_rcs === parseFloat(searchFilter)) return true\n      })\n      .map(i => ({\n        ...i,\n        selected: false\n      }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches, searchFilter])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll={canEdit}\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        selectStatus={selectStatus}\n        // allowCheck\n        // allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                {canEdit && (\n                  <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                    <Checkbox\n                      color='default'\n                      disabled={Boolean(isBundleCompleted)}\n                      checked={i.selected}\n                      onClick={event => handleClick({ index, batch })}\n                    />\n                  </TableCell>\n                )}\n                <TableCell id={`batch-no-${index}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {canEdit && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents = false,\n    addNew = { show: false, value: 'add-new', text: 'Add New' },\n    error,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              {items && (\n                <Select\n                  id={id}\n                  onChange={handleChange}\n                  onFocus={() => setFocus(true)}\n                  onBlur={() => setFocus(false)}\n                  classes={{ root: classes.select }}\n                  input={<InputBase className={classes.input} />}\n                  {...other}\n                  disabled={disableComponents}\n                >\n                  {items.map((item, index) => (\n                    <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                      {item.text}\n                    </MenuItem>\n                  ))}\n                  {addNew.show && (\n                    <MenuItem key={`${id}-items-add-new`} id={`${id}-items-add-new`} value={addNew.value}>\n                      {addNew.text}\n                    </MenuItem>\n                  )}\n                </Select>\n              )}\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push({ text: type, value: type })\n      }\n    } else {\n      list.push({ text: type, value: type })\n    }\n  }\n  return list\n}\n\nconst suggestion = (filter = '') => {\n  const list = []\n  for (const type in types) {\n    if (filter !== '') {\n      if (type.toLowerCase().startsWith(filter.toLowerCase())) {\n        list.push(type)\n      }\n    } else {\n      list.push(type)\n    }\n  }\n  return list\n}\nexport default { types, dropdown, suggestion }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000)\n    .greater(0)\n    .messages({\n      'number.less': `Billed Amount should be less than {#limit}`,\n      'number.greater': 'Billed Amount should be greater than 0'\n    }),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export default {\n  for: { BATCH_ENCODING: 'BATCH_ENCODING', CLAIMS_ENCODING: 'CLAIMS_ENCODING', CLAIMS_ANALYSIS: 'CLAIMS_ANALYSIS' }\n}\n","import { setBundleItems, addBundle, setSelectedBundle, setBundleBatches, addBatch } from './bundles'\nimport { setSelectedBatch, setShowBatchForm, setBatchAction, setSaveBatchControl } from './batch'\nimport { initSuggestions, setSuggestionObject, resetSuggestionObject } from './suggestion'\n\nexport default {\n  setBundleItems,\n  addBundle,\n  setSelectedBundle,\n  setBundleBatches,\n  addBatch,\n  //* Batch\n  setSelectedBatch,\n  setShowBatchForm,\n  setBatchAction,\n  // *Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setSaveBatchControl\n}\n","import constants from './../../contants'\n\nexport const setSelectedBatch = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload,\n    dasdas: 'dasdasd'\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.BATCH_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\nimport { resetError, setError } from './error'\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\nimport { setGrandTotal, resetGrandTotal } from './grandTotal'\nimport { setDentalProcedure } from './dentalProcedure'\nimport { resetReassign, setReassignNotes, setReassignAssignee } from './reassign'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // Grand Total\n  setGrandTotal,\n  resetGrandTotal,\n  // Dental Procedure\n  setDentalProcedure,\n  setClaimPro,\n  resetReassign,\n  setReassignNotes,\n  setReassignAssignee,\n  resetError,\n  setError,\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setGrandTotal = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","import constants from './../../contants'\n\nexport const setDentalProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_NOTES',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ENCODING,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import {\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setClaimPro\n} from './claim'\n\nimport { setClaimType } from './claimType'\n\nimport { setDropDown, initDropDowns } from './dropdown'\nimport {\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray\n} from './suggestion'\n\nimport { setProcedure } from './procedure'\nimport { setHospitalItem } from './hospitalItem'\nimport { setProfessionalFee } from './professionalFee'\n\nimport { initDiscrepancy, setDiscrepancy } from './discrepancy'\n\nimport { resetError, setError } from './error'\n\nimport {\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee\n} from './escalation'\n\nimport { resetInquiry, addInquiryMessages, setInquiryMessages, setInquiryMessage, setInquiryAssignee } from './inquiry'\n\nimport {\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee\n} from './reassign'\n\nimport {\n  resetReturn,\n  setReturnNote\n} from './return'\n\nimport { setRejectStatus } from './reject'\n\nimport { resetRecon, setReconNotes } from './recon'\n\nimport { setLimitType, resetLimitType } from './utilization'\n\nexport default {\n  //* Claim\n  resetClaim,\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimFacility,\n  setClaimDoctor,\n  setClaimRoom,\n  addClaimDiagnosis,\n  setClaimDiagnosis,\n  setClaimPrimaryDiagnosis,\n  removeClaimDiagnosis,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  //* ClaimType\n  setClaimType,\n  //* DropDown\n  setDropDown,\n  initDropDowns,\n  //* Suggestions\n  initSuggestions,\n  setSuggestionObject,\n  setSuggestionOnArray,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  resetSuggestionObject,\n  resetSuggestionArray,\n  //* Procedure\n  setProcedure,\n  //* Hospital Item\n  setHospitalItem,\n  //* Professional Fee\n  setProfessionalFee,\n  // * Discrepancy\n  initDiscrepancy,\n  setDiscrepancy,\n  // * Errror\n  resetError,\n  setError,\n  resetEscalation,\n  addEscalationMessages,\n  setEscalationMessages,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetInquiry,\n  addInquiryMessages,\n  setInquiryMessages,\n  setInquiryMessage,\n  setInquiryAssignee,\n  // * Reassign\n  resetReassign,\n  addReassignMessages,\n  setReassignMessages,\n  setReassignMessage,\n  setReassignAssignee,\n  setRejectStatus,\n  setClaimPro,\n  // Recon\n  resetRecon,\n  setReconNotes,\n  setLimitType,\n  resetLimitType,\n  // Return supervisor/manager\n  resetReturn,\n  setReturnNote\n}\n","import constants from './../../contants'\n\nexport const resetClaim = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setClaimType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDropDowns = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initSuggestions = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProcedure = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setHospitalItem = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setProfessionalFee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const initDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetEscalation = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetInquiry = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const addInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGES',\n    payload\n  }\n}\n\nexport const setInquiryMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_MESSAGE',\n    payload\n  }\n}\n\nexport const setInquiryAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_INQUIRY_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReassign = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setRejectStatus = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetRecon = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const setLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import constants from './../../contants'\n\nexport const resetReturn = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'RESET_RETURN_NOTES',\n    payload\n  }\n}\n\nexport const setReturnNote = payload => {\n  return {\n    for: constants.for.CLAIMS_ANALYSIS,\n    type: 'SET_RETURN_NOTES',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setShowBatchForm, setSelectedBatch } = actions\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(({ BatchEncoding: state }) => state.batch.selected)\n  const show = useSelector(({ BatchEncoding: state }) => state.batch.show)\n  const action = useSelector(({ BatchEncoding: state }) => state.batch.action)\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n  const saveControl = useSelector(({ BatchEncoding: state }) => state.batch.saveControl)\n  const [showPrompt, setShowPrompt] = React.useState(false)\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    if (error) setShowPrompt(true)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                required\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n          <Alert\n            open={showPrompt}\n            message={'Please ensure that all fields are filled-up except for Notes and Comments.'}\n            okLabel='Ok'\n            onOk={() => setShowPrompt(false)}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .required()\n    .integer()\n    .min(0),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `\"Due Date\" should have a maximum length of Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .less(100000000)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` })\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_soa: Joi.number()\n    .label('Total Bundle Soa Amount')\n    .required(),\n  batches_soa: Joi.number()\n    .label('Total Batches Soa Amount')\n    .valid(Joi.ref('bundle_soa'))\n    .required(),\n  bundle_rcs: Joi.number()\n    .label('Total No. of Bundle RCS')\n    .required(),\n  batches_rcs: Joi.number()\n    .label('Total No. of Batches RCS')\n    .valid(Joi.ref('bundle_rcs'))\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from './Components/BundleDetails/BundleDetails'\nimport BatchList from './Components/BatchList/BatchList'\nimport BatchForm from './Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Validator\nimport BundleValidator from './BundleValidator'\nimport RcsSoaValidator from './RcsSoaValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} = actions\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [searchFilter, setSearchFilter] = React.useState('')\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openRCSDialog, setOpenRCSDialog] = React.useState({})\n\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number, user_id: isSupervisor } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      const { user_id } = props.match.params\n      if (user_id) {\n        BreadcrumbsService.setSelectedItems([\n          'dashboard',\n          `createdBundles:${user_id}`,\n          `specificBundle:${bundle_number}`\n        ])\n      } else {\n        BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n      }\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status,\n        reassign_notes: data.reassign_notes\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      LoadingService.loading(false)\n    })\n  }\n\n  const cancelBundle = () => {\n    const { user_id } = props.match.params\n    const path = user_id ? `/batch-encoder-work/${user_id}` : '/'\n    props.history.push(path)\n  }\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      // getBundleDetails(bundle.bundle_number)\n      cancelBundle()\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const ValidateBundle = () => {\n    if (validateSoaRcs()) {\n      setOpenRCSDialog(state => ({\n        ...state,\n        show: true\n        // message:\n        //   'The Total No. of RCS and Total SOA Amount of the Bundle details and the Total No. of RCS and Total Billed Amount of the Batch details do not match.'\n      }))\n    } else {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: true,\n        message: 'Are you sure you want to Submit this?',\n        handleOnOk: handleOnSubmit\n      }))\n    }\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const validateSoaRcs = () => {\n    const batches_rcs = batches.reduce((accu, curr) => accu + curr.total_rcs, 0)\n    const batches_soa = batches.reduce((accu, curr) => accu + curr.amount_billed, 0)\n    const { error } = RcsSoaValidator({\n      bundle_rcs: bundle.total_rcs,\n      batches_rcs,\n      bundle_soa: bundle.total_soa_amt,\n      batches_soa\n    })\n    let messages = []\n    if (error) {\n      if (error.batches_rcs) messages.push('The Total No. of RCS')\n      if (error.batches_soa) messages.push('The Total SOA Amount')\n      setOpenRCSDialog(state => ({\n        ...state,\n        message: messages.length > 0 ? messages.join(' and ') + ' of Bundle Details and Batch details do not match' : ''\n      }))\n    }\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && !isSupervisor && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent onChange={event => setSearchFilter(event.target.value)} />\n              {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              canEdit={!submitStatus && !isSupervisor}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n              searchFilter={searchFilter}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && !isSupervisor && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={ValidateBundle}\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n\n      <Alert\n        open={openRCSDialog.show}\n        message={openRCSDialog.message}\n        cancelLabel='Close'\n        onCancel={() => setOpenRCSDialog(state => ({ ...state, show: false }))}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  bundle_number: Joi.number()\n    .label('Bundle Number')\n    .integer()\n    .greater(0)\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0)\n    .required(),\n  date_received: Joi.date()\n    .label('Date Received')\n    .required()\n    .max('now'),\n  due_date: Joi.date()\n    .label('Due Date')\n    .required()\n    .min(Joi.ref('date_received'))\n    .messages({\n      'date.min': `The \"Due Date\" should be later than the Date Received`\n    }),\n  soa_number: Joi.string()\n    .trim()\n    .label('SOA No')\n    .allow('')\n    .required(),\n  total_soa_amt: Joi.number()\n    .label('Total SOA Amount')\n    .greater(0)\n    .required(),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Facility)')\n    .required(),\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow(''),\n  // .messages({ 'string.empty': `'Enter N/A if Not Applicable'` }),\n  // .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Medical Partner Name (Doctor)')\n    .allow('')\n    // .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    setNewBundle(state => ({ ...state, [field]: value }))\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = () => {\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    const { error } = NewBundleValidator({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSave = () => {\n    setDisableControls(true)\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n\n    const data = {\n      ...newBundle,\n      date_received: moment(newBundle.date_received).toISOString(),\n      due_date: moment(newBundle.due_date).toISOString()\n    }\n\n    if (validate()) {\n      setDisableControls(false)\n      return\n    }\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['upload-container']}>\n        <Link to={`/bundles/upload-soa`}>\n          <Typography id='upload-soa-button' variant='subtitle2' className={`bold text-link ${classes.label}`}>\n            + Upload SOA\n          </Typography>\n        </Link>\n      </div>\n\n      <Paper className={classes.form}>\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-bundle-number'\n              label='Bundle No.'\n              value={newBundle.bundle_number}\n              fullWidth\n              disabled\n              error={errors.bundle_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldNumber\n              id='create-new-bundle-total-rcs'\n              required\n              label='Total No. of RCS'\n              value={newBundle.total_rcs}\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n              error={errors.total_rcs}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-date-received'\n              label='Date Received'\n              value={newBundle.date_received}\n              disabled={disableControls}\n              onChange={date => {\n                // Adjust due date accordingly to date received and term adjustment\n                const due_date = date.add(newBundle.due_date_adjustment, 'days').toISOString()\n\n                setNewBundle(state => ({ ...state, date_received: date.toISOString(), due_date: due_date }))\n              }}\n              error={errors.date_received}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <DatePicker\n              id='create-new-bundle-due-date'\n              label='Due Date'\n              disabled={disableControls}\n              value={newBundle.due_date}\n              onChange={date => setNewBundle(state => ({ ...state, due_date: date.toISOString() }))}\n              error={errors.due_date}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <CustomTextField\n              id='create-new-bundle-soa-number'\n              label='SOA No.'\n              fullWidth\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n              error={errors.soa_number}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <TextFieldCurrency\n              id='create-new-bundle-total-soa'\n              required\n              label='Total SOA Amount'\n              fullWidth\n              value={newBundle.total_soa_amt}\n              disabled={disableControls}\n              onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n              error={errors.total_soa_amt}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.inputs}>\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-id'\n              required\n              label='Medical Partner ID'\n              value={newBundle.facility_id}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n              }\n              error={errors.facility_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-facility-partner-name'\n              required\n              label='Medical Partner Name (Facility)'\n              value={newBundle.facility_name}\n              disabled={disableControls}\n              suggestions={suggestions.medicalPartner.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n              }\n              error={errors.facility_name}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-docotr-partner-id'\n              label='Medical Partner ID'\n              value={newBundle.doctor_id}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.id}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_id}\n            />\n          </Grid>\n\n          <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n            <AutoComplete\n              id='create-new-bundle-doctor-name'\n              label='Medical Partner Name (Doctor)'\n              value={newBundle.doctor_name}\n              disabled={disableControls}\n              suggestions={suggestions.doctorPartner.full_name}\n              onChange={(value, isSuggestionClick, selectedIndex) =>\n                handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n              }\n              error={errors.doctor_name}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.actions}>\n          <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n            Cancel\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={() =>\n              !validate() &&\n              setOpenAlert(state => ({\n                ...state,\n                show: true,\n                message: 'Are you sure you want to save this?'\n              }))\n            }\n            disabled={disableControls}\n            id='save'\n          >\n            Save\n          </Button>\n\n          <Alert\n            open={openAlert.show}\n            message={openAlert.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenAlert(state => ({ ...state, show: false }))}\n            onOk={handleOnSave}\n          />\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getLetterNotice ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","// TODO: Uncomment\nimport moment from 'moment'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport claimTypes from 'Constant/claimTypes'\n\n/**\n * SOA ETL Controller. \n * An ETL (Extract Transform Load) controller \"prototype/function\" class intended to contain ETL\n * logic for extracting, transforming and loading SOA import data.\n *\n * As of the moment, extraction and loading is being done elsewhere outside this\n * utility. So this class is currently only performing the \"Transformation phase\"\n */\nfunction SoaEtlController() { }\n\nSoaEtlController.MINIMUM_KEYS = {\n  BUNDLE_SOA_NUM: 'BUNDLE_SOA_NUM',\n  // BUNDLE_RCS_NUM: 'BULDE_RCS_NUM',\n  BUNDLE_RCS_DATE: 'BUNDLE_RCS_DATE',\n\n  BUNDLE_FACILITY_NAME: 'BUNDLE_FACILITY_NAME',\n  BUNDLE_FACILITY_CODE: 'BUNDLE_FACILITY_CODE',\n\n  BATCH_CLAIMS_SOURCE: 'BATCH_CLAIMS_SOURCE',\n  BATCH_CLAIM_TYPE: 'BATCH_CLAIM_TYPE',\n\n  CLAIM_DATE_AVAILMENT: 'CLAIM_DATE_AVAILMENT',\n  CLAIM_DATE_ADMITTED: 'CLAIM_DATE_ADMITTED',\n  CLAIM_DATE_DISCHARGE: 'CLAIM_DATE_DISCHARGE',\n  CLAIM_LOA_NUM: 'CLAIM_LOA_NUM',\n  CLAIM_APPROVAL_CODE: 'CLAIM_APPROVAL_CODE',\n  CLAIM_MEMBER_NUM: 'CLAIM_MEMBER_NUM',\n  CLAIM_MEMBER_NAME: 'CLAIM_MEMBER_NAME',\n  CLAIM_DIAGNOSIS_NAME: 'CLAIM_DIAGNOSIS_NAME',\n  CLAIM_DIAGNOSIS_CODE: 'CLAIM_DIAGNOSIS_CODE',\n\n  CLAIM_DOCTOR_NAME: 'CLAIM_DOCTOR_NAME',\n  CLAIM_DOCTOR_AMOUNT: 'CLAIM_DOCTOR_AMOUNT',\n\n  CLAIM_PROCEDURE_NAME: 'CLAIM_PROCEDURE_NAME',\n  CLAIM_PROCEDURE_AMOUNT: 'CLAIM_PROCEDURE_AMOUNT',\n\n  CLAIM_HOSPITAL_ITEM_NAME: 'CLAIM_HOSPITAL_ITEM_NAME',\n  CLAIM_HOSPITAL_ITEM_AMOUNT: 'CLAIM_HOSPITAL_ITEM_AMOUNT'\n}\n\nSoaEtlController.COLUMN_TEMPLATES = {\n  DEFAULT:\n  {\n    // Bundle fields\n    'SOA No.': SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM,\n    // 'RCSNum': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM,\n    'RCSNum': SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM,\n    'RCS Date': SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE,\n\n    // Batch fields\n    'Claim Type': SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE,\n\n    // Claim fields\n\n    // Claim fields - date\n    'Date of Availment': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_AVAILMENT,\n    'Date Admitted': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED,\n    'Date Discharge': SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE,\n\n    'Approval Code / LOE No.': SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE,\n\n    'Member Number': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM,\n    'Patient Name': SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME,\n\n    'Diagnosis': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME,\n    'ICD10 Code': SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE,\n\n    // Claim fields - line items\n    'Doctors Name': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME,\n    'PF Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT,\n\n    'Procedure': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME,\n    'Proc Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT,\n\n    'Hospital Item': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME,\n    'HospItem Amt': SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT\n  }\n}\n\n/**\n * Performs transformation of specified data rows using the specified data mapping\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n */\nSoaEtlController.transform = function (dataRows, dataMapping, defaults = {}) {\n  console.log('soa_etl', 'transform')\n\n  // Initial check parameters\n  if (!dataRows || !dataMapping || !dataMapping.columns || !dataMapping.fields[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]) throw { error: 'invalid parameters' }\n  const prepData = SoaEtlController._transformPreviewDataToPrepData(dataRows, dataMapping, defaults)\n  console.log(prepData)\n\n  const bundle = SoaEtlController._transformPrepDataToHierarchicalData(prepData)\n  console.log(JSON.stringify(bundle, null, 2))\n\n  return bundle\n}\n\n/** \n * Loads the specified bundle data unto the Claims server by invoking the appropriate API calls\n * for the bundle, batch and claims information found in the bundle data.\n * \n * @param bundle bundle data from transform()\n */\nSoaEtlController.loadToApi = function (bundle, successCallback) {\n\n  let promise = new Promise(function (resolve, reject) {\n    // TODO: refactor; callback hell\n\n    // Invoke Create Bundle\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      const bundleNumber = data\n      console.log(bundleNumber)\n\n      bundle.bundle_number = bundleNumber\n\n      const bundleParam = { ...bundle }\n      delete bundleParam.batches\n\n      // Invoke Update Bundle\n      BatchEncodingServices.updateBundle({ bundle_number: bundleNumber, data: bundleParam }).then(res => {\n\n        // Create promise for each add batch operation (which contains add-claims operation)\n        const addBatchPromises = bundle.batches.map(batch => {\n          const batchParam = { ...batch }\n          delete batchParam.claims\n\n          // Create single promise for add batch\n          const promise = new Promise((resolveBatchPromise, rejectBatchPromise) => {\n\n            // Call create batch API\n            BatchEncodingServices.createBatch({ data: batchParam, bundle_number: bundleNumber })\n              .then(res => {\n                const { data } = res.data\n                batch.batch_number = data.batch_number\n\n                async function addClaims() {\n                  for (let i = 0; i < batch.claims.length; i++) {\n                    const claim = batch.claims[i]\n                    // Invoke create claim\n                    await ClaimsEncodingServices.addClaim({ batch_number: batch.batch_number, data: claim })\n                  }\n                  resolveBatchPromise()\n                }\n\n                // Create claims for batch\n                addClaims()\n\n              })\n              .catch(() => {\n                rejectBatchPromise('Batch creation failed')\n              })\n          })\n\n          return promise\n        })\n\n        // Note: VNI requirement, is to not perform automatic bundle submission \n        //       and consequentially, no automatic claims creation for claims under the\n        //       automatically created batches. That is the function requirement. \n        //       The technical operation however, needs claims to be created but just \n        //       NOT visible as of yet to claims encoders (and up).\n        // // Todo: refactor to wait for all batches to be created before submitting bundle\n        // BatchEncodingServices.submitBundle({ bundle_number: bundleNumber }).then(res => {\n        //   if (successCallback) { successCallback();} \n        //   resolve()\n        //   // batch.claims.forEach(element => {\n        //   //   let claim = element\n        //   // })\n        // }).catch(() => {\n        //   reject('Bundle submission failed')\n        // })\n\n\n        // PromiseUtil.executeInSequence(addBatchPromises)\n        Promise.all(addBatchPromises)\n          .then(() => {\n            console.log('success SOA loading unto API')\n            //alert('success SOA loading unto API')\n            resolve(bundle.bundle_number)\n          })\n\n      }).catch(() => {\n        console.log('failed SOA loading unto API')\n        //alert('failed SOA loading unto API')\n        reject('Bundle creation failed')\n      })\n\n    })\n  });\n\n  return promise\n}\n\n\n/**\n * Performs transformation of \"preview data rows\" to \"preparation data rows\"\n *\n * Data mapping given should contain the following keys:\n * <ul>\n *   <li>columns: for mapping columns from import file to Claims model</li>\n *   <li>fields: for mapping specific field values to Claims model</li>\n * </ul>\n *\n * Examples:\n * <code>\n *   {\n *     columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * <code>\n *   {\n *     columns: {},\n *     fields: {\n *               [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: {}\n *             }\n *   }\n * </code>\n *\n * @param dataRows data rows to be transformed\n * @param dataMapping data mapping information\n *\n * @return mapped-out data rows\n */\nSoaEtlController._transformPreviewDataToPrepData = function (dataRows, dataMapping, defaults = {}) {\n  const outputEntries = []\n  let prevEntry = {}\n  dataRows.forEach(dataEntry => {\n    const outputEntry = {}\n    let hasSingleValue = false\n    Object.keys(dataMapping.columns).forEach(columnKey => {\n      let dataValue = dataEntry[columnKey]\n      let outputKey = dataMapping.columns[columnKey]\n\n      // If no value for the key\n      if (!dataValue || dataValue.trim().length === 0) {\n        dataValue = ''\n        // Attempt to use previous row's value\n        // dataValue = prevEntry[outputKey]\n        // if (!dataValue) dataValue = ''\n      } else {\n        hasSingleValue = true\n      }\n\n      // Store upon output entry\n      outputEntry[outputKey] = dataValue.trim()\n    })\n\n    if (hasSingleValue) {\n      if (defaults) {\n        Object.keys(defaults).forEach(key => {\n          outputEntry[key] = defaults[key]\n        })\n      }\n\n      Object.keys(dataMapping.fields).forEach(fieldKey => {\n        let value = outputEntry[fieldKey]\n        if (value && value.length > 0) {\n          outputEntry[fieldKey] = dataMapping.fields[fieldKey][value]\n          if (!outputEntry[fieldKey]) throw 'Missing claim type or wrong data format in the uploaded SOA file.'\n        }\n      })\n\n      outputEntries.push(outputEntry)\n    }\n    // Keep track of previews row\n    prevEntry = outputEntry\n  })\n  return outputEntries\n}\n\n/** \n * Transforms Preparation Data into Hierarchical Data (bundle, batches and claims).\n * \n * @param prepDataRows output from _transformPreviewDataToPrepData()\n * \n * @return bundle object which includes underneath batches and claims objects\n */\nSoaEtlController._transformPrepDataToHierarchicalData = function (prepDataRows) {\n  let prevPrepEntry = {}\n\n  let bundle = null\n  let currentBatch = null\n  let currentClaim = null\n  let totalGrossAmount = 0\n\n  prepDataRows.forEach(dataEntry => {\n\n    const soaNumber = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_SOA_NUM]\n    if (!bundle) {\n      // let rcsTotal = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_NUM]\n      // try {\n      //   rcsTotal = parseInt(rcsTotal)\n      // } catch {\n      //   throw 'Error: Invalid Total RCS (' + rcsTotal + ')'\n      // }\n\n      // bundle = {\n      //   soa: { number: soaNumber, amount: 0.0 },\n      //   date: { received: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE] },\n      //   facility: {\n      //     id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n      //     name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]\n      //   },\n      //   total_rcs: rcsTotal,\n      //   batches: []\n      // }\n      const dateReceived = dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]\n      bundle = {\n        soa_number: soaNumber,\n        total_soa_amt: 0.0,\n\n        // TODO: uncomment\n        date_received: moment(dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_RCS_DATE]).format('MM/DD/YYYY'),\n        due_date: moment(dateReceived).add(30, 'days').format('MM/DD/YYYY'),\n\n        facility_id: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE],\n        facility_name: dataEntry[SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME],\n        // total_rcs: rcsTotal,\n        total_rcs: 0,\n        doctor_id: '',\n        doctor_name: '',\n        batches: []\n      }\n    }\n\n    // Enforce there is only SOA number\n    if (soaNumber !== '' && soaNumber !== bundle.soa_number) {\n      //throw 'Error: Another SOA Number found (' + soaNumber + ')'\n      throw 'Unable to upload SOA file. Please ensure there is one SOA no. only.'\n    }\n\n    // Fetch claim type and check if there is a change\n    const claimType = dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]\n    if (!currentBatch || (claimType != '' && claimType != currentBatch.claim_type)) {\n      // currentBatch = {\n      //   claim: {\n      //     type: claimType,\n      //     source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n      //   },\n      //   claims: []\n      // }\n\n      currentBatch = {\n        claim_type: claimType,\n        claim_source: dataEntry[SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE],\n        doctor_id: '',\n        doctor_name: '',\n        total_rcs: 0,\n        amount_billed: 0.0,\n        notes: \"SYSTEM GENERATED BATCH VIA SOA UPLOAD\\n\",\n        claims: []\n      }\n\n      bundle.batches.push(currentBatch)\n    }\n\n    // Fetch approval code and check if there is a change\n    const approvalCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE]\n    if (!currentClaim || (approvalCode != '' && approvalCode != currentClaim[SoaEtlController.MINIMUM_KEYS.CLAIM_APPROVAL_CODE])) {\n\n      // Increment total RCS for the parent batch\n      currentBatch.total_rcs += 1\n      bundle.total_rcs += 1\n\n      const memberName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NAME]\n      const nameParts = memberName.split(',')\n\n      // currentClaim = {\n      //   member: {\n      //     account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n      //     last_name: nameParts[0].trim(),\n      //     first_name: nameParts[1].trim(),\n      //     middle_name: '',\n      //   },\n      //   approval_code: approvalCode,\n      //   professional_fees: [],\n      //   hospital_items: [],\n      //   procedures: []\n      // }\n\n      currentClaim = {\n        member_account_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_MEMBER_NUM],\n        member_first_name: nameParts[1].trim(),\n        member_middle_name: '',\n        member_last_name: nameParts[0].trim(),\n\n        facility_id: bundle.facility_id,\n        facility_name: bundle.facility_name,\n\n        approval_code: approvalCode,\n        loa_number: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_LOA_NUM],\n\n        diagnosis: [],\n        professional_fees: [],\n        hospital_items: [],\n        procedures: [],\n\n        date_from: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_ADMITTED],\n        date_to: dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DATE_DISCHARGE],\n\n        claim_sub_type: 'Surgical',\n        claim_sub_sub_type: 'Physical',\n\n        with_corporate_guarantee: '',\n        loa_notes: '',\n\n      }\n\n      if (currentBatch.claim_type === 'In Patient') {\n        currentClaim.room_type = 'WARD'\n        currentClaim.room_rate = 0.0\n        currentClaim.pro_id = 'N/A'\n        currentClaim.pro_name = 'N/A'\n      }\n\n      currentBatch.claims.push(currentClaim)\n    }\n\n    // Check for diagnosis entries  \n    const diagnosisName = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_NAME]\n    const diagnosisCode = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DIAGNOSIS_CODE]\n    if (diagnosisName && diagnosisCode) {\n      const flag = currentClaim.diagnosis.length == 0\n      currentClaim.diagnosis.push({ code: diagnosisCode, description: diagnosisName, primary: flag })\n    }\n\n    let lineItem = null\n    let lineAmount = null\n\n    // Check for line item - professional fee \n    lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_NAME]\n    lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_DOCTOR_AMOUNT]\n    if (lineItem && lineAmount) {\n      try {\n        lineAmount = parseFloat(lineAmount)\n      } catch {\n        lineAmount = 0.0\n      }\n \n      bundle.total_soa_amt += lineAmount\n      currentBatch.amount_billed += lineAmount\n      \n      currentClaim.professional_fees.push({\n        doctor_name: lineItem, doctor_id: \"unknown\", gross_amount: lineAmount,\n        specialization: \"unknown\", vat_amount: 0, amount_paid_by_member: 0,\n        philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n      })\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Procedure') {\n      // Check for line item - hospital item \n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_HOSPITAL_ITEM_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.hospital_items.push({\n          name: lineItem, item_code: \"unknown\", gross_amount: lineAmount,\n          vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\", amount_not_covered: 0, reason: \"\", amount_due_from_member: 0, reason_for_charging_member: \"\"\n        })\n      }\n    }\n\n    if (currentBatch.claim_type !== 'Out Patient Consultation') {\n        // Check for line item - procedure\n      lineItem = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_NAME]\n      lineAmount = dataEntry[SoaEtlController.MINIMUM_KEYS.CLAIM_PROCEDURE_AMOUNT]\n      if (lineItem && lineAmount) {\n        try {\n          lineAmount = parseFloat(lineAmount)\n        } catch {\n          lineAmount = 0.0\n        }\n\n        bundle.total_soa_amt += lineAmount\n        currentBatch.amount_billed += lineAmount\n\n        currentClaim.procedures.push({\n          description: lineItem, gross_amount: lineAmount,\n          code: \"unknown\", vat_amount: 0, amount_paid_by_member: 0, philhealth_amount_paid: 0, philhealth_remarks: \"\"\n        })\n      }\n    }\n\n  })\n\n  return bundle\n}\n\n\n// TODO: set to false on normal operation; set to true only for debugging purposes\nSoaEtlController.DEBUG = false\n\nif (SoaEtlController.DEBUG) {\n  SoaEtlController.test = function () {\n\n    const dataRows = [\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '5556',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Yu, Eusebio',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 0\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': 'Cardiac Arrest',\n        'ICD10 Code': 'C0055',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 1\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': 'Dr. ABC',\n        'PF Amt': '500',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 2\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': 'X-Ray',\n        'Proc Amt': '1000',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 3\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': 'Dextrose',\n        'HospItem Amt': ' 850.00 ',\n        '__index__': 4\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 5\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 6\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 7\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 8\n      },\n      {\n        'SOA No.': '',\n        'RCSNum': '',\n        'RCS Date': '',\n        'Claim Type': '',\n        'Date of Availment': '',\n        'Date Admitted': '',\n        'Date Discharge': '',\n        'Approval Code / LOE No.': '',\n        'Member Number': '',\n        'Patient Name': '',\n        'Diagnosis': '',\n        'ICD10 Code': '',\n        'Doctors Name': '',\n        'PF Amt': '',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 9\n      },\n      {\n        'SOA No.': 'SOA0001',\n        'RCSNum': '1',\n        'RCS Date': '1/10/2020',\n        'Claim Type': 'IP',\n        'Date of Availment': '1/11/2020',\n        'Date Admitted': '1/11/2020',\n        'Date Discharge': '1/14/2020',\n        'Approval Code / LOE No.': '6667',\n        'Member Number': '8000-0001',\n        'Patient Name': 'Conan, Detective',\n        'Diagnosis': 'Dengue',\n        'ICD10 Code': 'D0001',\n        'Doctors Name': 'Dr. Evil',\n        'PF Amt': '100000.00',\n        'Procedure': '',\n        'Proc Amt': '',\n        'Hospital Item': '',\n        'HospItem Amt': '',\n        '__index__': 10\n      },\n    ]\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]:\n        {\n          'IP': 'In Patient',\n          'OPP': 'Out Patient Procedure',\n          'OPC': 'Out Patient Consultation'\n        }\n\n      }\n    }\n    console.log(dataMapping)\n\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: 'Hospital',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: 'HOS000012',\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: 'Davao Doctors Hospital',\n    }\n\n    const bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    SoaEtlController.loadToApi(bundle)\n  }\n\n  // TODO: comment out\n  // SoaEtlController.test()\n}\n\n// TODO: Uncomment\nexport default SoaEtlController\n","import XLSX from 'xlsx'\n\nexport default async function XLSXParser ({ file, onComplete }) {\n  let headers = null\n  const results = []\n\n  var reader = new FileReader()\n  reader.onload = function (e) {\n    const workbook = XLSX.read(e.target.result, { type: 'binary' })\n\n    const sheet = workbook.Sheets[workbook.SheetNames[0]]\n    const data = XLSX.utils.sheet_to_json(sheet, { raw: false, header: 1 })\n    headers = data.shift()\n\n    for (let index = 0; index < data.length; index++) {\n      const _item = {}\n      headers.map(i => (_item[i] = ''))\n\n      data[index].map((value, index) => (_item[headers[index]] = value))\n\n      if (index === data.length - 1 && !data[index].length) continue\n\n      results.push(_item)\n    }\n\n    onComplete({ headers, results })\n  }\n\n  reader.readAsBinaryString(file)\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Parser from './../../Parser'\n\n// Style\nimport classes from './UploadSpace.module.scss'\n\nconst Progress = withStyles({\n  root: {\n    height: 15,\n    borderRadius: 20,\n    backgroundColor: '#c7c7c7'\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#00ab00'\n  }\n})(LinearProgress)\n\nexport default function UploadSpace (props) {\n  const { onSelectFile } = props\n  const dialogRef = React.useRef()\n\n  const [dragged, setDragged] = React.useState(false)\n  const [fileLoaded, setFileLoaded] = React.useState()\n  const [progress, setProgress] = React.useState(0)\n\n  const handleOnClick = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    dialogRef.current.click()\n  }\n\n  const handleOnChangeFile = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n\n    if (!file) return\n\n    handleParse(file)\n  }\n\n  const handleOnDrag = state => e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragged(state)\n  }\n\n  const handleDrop = e => {\n    setDragged(false)\n    e.preventDefault()\n    e.stopPropagation()\n\n    // TODO if multiple file and invalid file type\n    const [file] = e.dataTransfer.files\n\n    handleParse(file)\n  }\n\n  const handleParse = file => {\n    setFileLoaded(true)\n\n    console.log(file)\n    Parser({\n      file,\n      onComplete: ({ results, headers }) => {\n        setProgress(100)\n        setTimeout(() => onSelectFile({ items: results, headers, fileName: file.name }), 1000)\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {!fileLoaded && (\n        <div\n          className={`${classes.root} ${dragged && classes.dragged}`}\n          onDrop={handleDrop}\n          onDragOver={handleOnDrag(true)}\n          onDragLeave={handleOnDrag(false)}\n        >\n          <div className={`${classes.container} ${classes.clickable}`} onClick={handleOnClick}>\n            <FontAwesomeIcon icon='file-upload' className={classes.icon} />\n            <Typography variant='subtitle2' className={classes.label}>\n              Click or drag/drop file to preview\n            </Typography>\n\n            <div className={classes.warning}>\n              <Typography variant='subtitle2' className={classes.label}>\n                Make sure the dates are in the format where the\n              </Typography>\n              <Typography variant='subtitle2' className={classes.label}>\n                <span>month is written first</span> (ex. MM/DD/YYYY or YYYY/MM/DD)\n              </Typography>\n            </div>\n          </div>\n\n          <input\n            id='file-dialog'\n            type='file'\n            ref={dialogRef}\n            style={{ display: 'none' }}\n            accept='.xlsx, .xls, .csv'\n            onChange={handleOnChangeFile}\n          />\n        </div>\n      )}\n\n      {fileLoaded && (\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes['progress-container']}>\n              <Progress variant='determinate' value={progress} />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './DynamicTable.module.scss'\n\nexport default function DynamicTable (props) {\n  const { headers, items, fileName } = props.data\n  const { onRemoveFile } = props\n  const { onDetectDataRows } = props\n\n  const [tableState, setTableState] = React.useState({\n    limit: 10,\n    page: 1\n  })\n\n  const [selectedItems, setSelectedItems] = React.useState([])\n\n  React.useEffect(() => {\n    handleOnChangeItems({})\n  }, [])\n\n  React.useEffect(() => {\n    onDetectDataRows(selectedItems)\n  }, [selectedItems])\n\n  const handleOnTableChange = params => {\n    setTableState(state => ({ ...state, ...params }))\n    handleOnChangeItems(params)\n  }\n\n  const handleOnChangeItems = ({ page = 1, limit = 10 }) => {\n    const _items = []\n\n    const startAt = (page - 1) * limit\n    const endAt = page * limit\n\n    for (let index = startAt; index < endAt; index++) {\n      const item = items[index]\n      if (!item) break\n\n      const hasValue = Object.keys(item).find(key => { return item[key] && item[key].trim().length > 0 })\n      if (hasValue) _items.push({ ...item, __index__: index })\n    }\n\n    setSelectedItems(_items)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['file-name-container']}>\n        <Typography id='file-name' variant='subtitle2' className={classes['file-name']}>\n          {fileName}\n        </Typography>\n\n        <IconButton size='small'>\n          <FontAwesomeIcon icon='minus-circle' className={classes.icon} onClick={onRemoveFile} />\n        </IconButton>\n      </div>\n\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              <TableCell id={`column-row-number`}>#</TableCell>\n\n              {headers.map(item => (\n                <TableCell key={item} id={`column-${item}`}>\n                  {item}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={selectedItems.map(item => (\n            <TableRow key={`${JSON.stringify(item)}-${item.__index__}`}>\n              <TableCell id={`row-${item.__index__}`}>{item.__index__ + 1}</TableCell>\n\n              {headers.map(header => (\n                <TableCell key={`item-${header}-${item.__index__}`}>{item[header]}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n          count={setSelectedItems.length}\n          page={tableState.page}\n          limit={tableState.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnTableChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\n// Shared Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './DataPairs.module.scss'\nimport { Typography } from '@material-ui/core'\n\nconst DataPair = props => {\n  const { index, sources, targets, source, target } = props\n  const { onClickRemove, onChangeSource, onChangeTarget } = props\n\n  return (\n    <div className={classes.child}>\n      <div className={classes.source}>\n        {/* <DropDown items={sources} value={source} onChange={onChangeSource} /> */}\n        <TextField\n          className={classes.name}\n          id={`input-source-${index}`}\n          value={source}\n          onChange={onChangeSource}\n          autoFocus\n          fullWidth\n        />\n      </div>\n      <div className={classes.target}>\n        <DropDown items={targets} value={target} onChange={onChangeTarget} />\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickRemove}>Remove</Button>\n      </div>\n    </div>\n  )\n}\nexport default function DataPairContainer (props) {\n  const { headers = ['Source', 'Target'], fields = [], sources, targets } = props\n  const { onClickAddNew, onClickRemove, onChangeSource, onChangeTarget } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        {headers.map((head, index) => (\n          <Typography key={`heade-${index}`} variant='h6'>\n            {head}\n          </Typography>\n        ))}\n      </div>\n      <div className={classes.children}>\n        {fields.map((field, index) => (\n          <DataPair\n            key={`field-${index}`}\n            index={index}\n            sources={sources}\n            targets={targets}\n            source={field.source || ''}\n            target={field.target || ''}\n            onChangeSource={event => onChangeSource({ index, value: event.target.value })}\n            onChangeTarget={event => onChangeTarget({ index, value: event.target.value })}\n            onClickRemove={event => onClickRemove({ index })}\n          />\n        ))}\n      </div>\n      <div className={classes.action}>\n        <Button onClick={onClickAddNew}>Add New</Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n// Shared Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport DataPairContainer from './DataPairs/DataPairs'\n\n// Styles\nimport classes from './FieldMapper.module.scss'\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nconst dropdown_source = [\n  { value: 'OP', text: 'OP' },\n  { value: 'PF', text: 'PF' },\n  { value: 'IP', text: 'IP' }\n]\n\nconst dropdown_target = [\n  { value: 'In Patient', text: 'In Patient' },\n  { value: 'Out Patient Procedure', text: 'Out Patient Procedure' },\n  { value: 'Out Patient Consultation', text: 'Out Patient Consultation' },\n  { value: 'Reimbursement', text: 'Reimbursement' },\n  { value: 'Emergency', text: 'Emergency' },\n  { value: 'Dental', text: 'Dental' },\n  { value: 'Medicine Allowance', text: 'Medicine Allowance' },\n  { value: 'APE', text: 'APE' },\n  { value: 'ECU', text: 'ECU' },\n  { value: 'Pharmacy', text: 'Pharmacy' },\n  { value: 'PPE', text: 'PPE' },\n  { value: 'Medical Supplies', text: 'Medical Supplies' },\n  { value: 'Clinic Management', text: 'Clinic Management' }\n]\n\nexport default function FieldMapper (props) {\n  // Variables\n  const { sources = dropdown_source, targets = dropdown_target, claimSources = claim_sources } = props\n\n  // Services\n  const { ApiService } = props\n\n  // Callbacks\n  const { onSaveSuccess } = props\n  const { onChangeHeaderInputs } = props\n  const { onChangeClaimTypeDataMapping } = props\n\n  // Local Variables\n  const [facilityTemplate, setFacilityTemplate] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    claim_source: ''\n  })\n  const [template, setTemplate] = React.useState({\n    id: '',\n    name: '',\n    isDefault: false,\n    fields: []\n  })\n\n  const [templates, setTemplates] = React.useState([])\n\n  const [suggestions, setSuggestions] = React.useState({\n    facility: {}\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null\n  })\n\n  const [dialog, setDialog] = React.useState({\n    show: false,\n    name: '',\n    isDefault: false,\n    error: {}\n  })\n\n  const [alertDialog, setAlertDialog] = React.useState({\n    show: false,\n    mesage: '',\n    okLabel: 'Okay'\n  })\n\n  // Listeners\n  React.useEffect(() => {\n    getTemplates()\n  }, [])\n\n  React.useEffect(() => {\n    onChangeHeaderInputs(facilityTemplate)\n  }, [facilityTemplate])\n\n  React.useEffect(() => {\n    onChangeClaimTypeDataMapping(template.fields)\n  }, [template])\n\n  // Fetchers\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, facility: { [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getTemplates = () => {\n    ApiService.getTemplates().then(res => {\n      const { data } = res.data\n      setTemplates(data.map(data => ({ ...data, value: data.name, text: data.name })))\n      const _default = data.find(d => d.is_default === true)\n      if (_default) {\n        setTemplate({ id: _default._id, name: _default.name, fields: _default.fields, isDefault: _default.is_default })\n      }\n    })\n  }\n\n  // Events\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setFacilityTemplate(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          setFacilityTemplate(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n        }\n      }\n    } else {\n      setSuggestions(state => ({ ...state, facility: [] }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const handleOnClickAddNewTemplate = () => {\n    setDialog({ show: true, name: '', isDefault: false, error: {} })\n  }\n\n  const handleOnChangeTemplate = ({ value, text }) => {\n    const _template = templates.find(t => t.value === value)\n    setTemplate({ id: _template._id, name: _template.name, fields: _template.fields, isDefault: _template.is_default })\n  }\n\n  const handleOnChangeDialog = ({ field, value }) => {\n    setDialog(state => ({ ...state, [field]: value }))\n  }\n\n  const onClickAddField = () => {\n    const _fields = template.fields\n    const last = _fields[_fields.length - 1]\n    if (last && (last.source === '' || last.target === '')) return\n    _fields.push({ source: '', target: '' })\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onRemoveField = ({ index }) => {\n    const _fields = template.fields\n    _fields.splice(index, 1)\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeSource = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], source: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const onChangeTarget = ({ index, value }) => {\n    const _fields = template.fields\n    _fields[index] = { ..._fields[index], target: value }\n    setTemplate(state => ({ ...state, fields: _fields }))\n  }\n\n  const doValidateTemplate = () => {\n    if (dialog.name === '') return false\n\n    return true\n  }\n\n  const doValidateFacilityTemplate = () => {\n    if (template.fields.length < 1) return false\n    template.fields.forEach(field => {\n      if (field.source === '' || field.target === '') {\n        return false\n      }\n    })\n\n    return true\n  }\n\n  const handleOnSaveTemplateDialog = () => {\n    if (!doValidateTemplate()) {\n      setAlertDialog({\n        show: true,\n        message: 'Enter Template Name',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: dialog.isDefault, fields: [] },\n      template_name: dialog.name\n    }).then(res => {\n      const { data } = res.data\n      setDialog({\n        show: false,\n        name: '',\n        isDefault: false,\n        error: {}\n      })\n      getTemplates()\n      setTemplate({ id: data._id, name: data.name, isDefault: data.is_default, fields: data.fields })\n    })\n  }\n\n  const handleOnSaveFacilityTemplate = () => {\n    if (!doValidateFacilityTemplate()) {\n      setAlertDialog({\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.',\n        okLabel: 'Okay'\n      })\n      return\n    }\n\n    ApiService.storeTemplate({\n      data: { is_default: template.isDefault, fields: template.fields },\n      template_name: template.name\n    }).then(res => {\n      const { data } = res.data\n      ApiService.storeFacilityTemplate({\n        data: {\n          facility_name: facilityTemplate.facility_name,\n          claim_source: facilityTemplate.claim_source,\n          template_id: data._id\n        },\n        facility_id: facilityTemplate.facility_id\n      }).then(res => {\n        setAlertDialog({\n          show: true,\n          message: 'SOA details mapping of data successfully saved.',\n          okLabel: 'Okay'\n        })\n        onSaveSuccess({ template, facility: facilityTemplate })\n      })\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-id'\n              required\n              label='Medical Partner ID'\n              value={facilityTemplate.facility_id}\n              suggestions={suggestions.facility.id}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_id',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <AutoComplete\n              id='medical-partner-facility-name'\n              required\n              label='Medical Partner (Facility) Name'\n              value={facilityTemplate.facility_name}\n              suggestions={suggestions.facility.name}\n              onChange={(value, isSuggestionClick) =>\n                handleOnChangeFacility({\n                  field: 'facility_name',\n                  value,\n                  isSuggestionClick\n                })\n              }\n            />\n          </div>\n          <div className={classes['input']}>\n            <DropDown\n              id='claim-source'\n              label='Claim Source'\n              required\n              items={claimSources}\n              value={facilityTemplate.claim_source}\n              onChange={event => setFacilityTemplate(state => ({ ...state, claim_source: event.target.value }))}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <Typography variant='h6' className={classes.title}>\n            Data Values\n          </Typography>\n        </div>\n        <div className={classes.groups}>\n          <div className={classes['input']}>\n            <DropDown\n              id='data-templates'\n              label='Data Mapping Template'\n              required\n              items={templates}\n              value={template.name}\n              onChange={event =>\n                event.target.value !== 'add-new'\n                  ? handleOnChangeTemplate({ value: event.target.value, text: event.target.text })\n                  : handleOnClickAddNewTemplate()\n              }\n              addNew={{\n                show: true,\n                text: '+ Add New Data Map',\n                value: 'add-new'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.section}>\n        <div className={classes.groups}>\n          <div className={classes.field}>\n            <div className={classes.label}>\n              <Typography>Claim Type</Typography>\n            </div>\n            <div className={classes.table}>\n              <DataPairContainer\n                headers={['Values', 'Data Column']}\n                sources={sources}\n                targets={targets}\n                fields={template.fields}\n                onClickAddNew={() => onClickAddField()}\n                onClickRemove={({ index }) => onRemoveField({ index })}\n                onChangeSource={({ index, value }) => onChangeSource({ index, value })}\n                onChangeTarget={({ index, value }) => onChangeTarget({ index, value })}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.groups}>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            onClick={handleOnSaveFacilityTemplate}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth='sm'\n        onClose={() => setDialog(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={dialog.show}\n        className={classes.dialog}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Define Data Map\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDialog(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.input}>\n            <TextField\n              className={classes.name}\n              id='data-map-name'\n              value={dialog.name}\n              autoFocus\n              fullWidth\n              placeholder='Template Name'\n              onChange={event => handleOnChangeDialog({ field: 'name', value: event.target.value })}\n              error={dialog.error.name}\n            />\n          </div>\n          <div className={classes.input}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.default}\n                  id='data-map-default'\n                  checked={dialog.isDefault}\n                  value={dialog.isDefault}\n                  onChange={event => handleOnChangeDialog({ field: 'isDefault', value: event.target.checked })}\n                />\n              }\n              label={'Set as default template'}\n            />\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.action}>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, show: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={handleOnSaveTemplateDialog}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Alert\n        open={alertDialog.show}\n        message={alertDialog.message}\n        okLabel={alertDialog.okLabel}\n        onOk={() => {\n          setAlertDialog(state => ({ ...state, show: false }))\n        }}\n      />\n    </Paper>\n  )\n}\n","import React, { Fragment } from 'react'\n// import Grid from '@material-ui/core/Grid'\n// import Paper from '@material-ui/core/Paper'\n// import moment from 'moment'\nimport Button from '@material-ui/core/Button'\n// import Typography from '@material-ui/core/Typography'\n\n// Controller\nimport SoaEtlController from 'Controllers/SoaEtlController'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport UploadSpace from './Components/UploadSpace/UploadSpace'\nimport DynamicTable from './Components/DynamicTable/DynamicTable'\nimport FieldMapper from '../../FieldMapper/FieldMapper'\n// import CustomTextField from 'SharedComponents/TextField/CustomTextField'\n// import DatePicker from 'SharedComponents/DatePicker/DatePicker'\n// import AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n// import Alert from 'SharedComponents/Alert/Alert'\n\n// // Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// Style\nimport classes from './UploadSoaPage.module.scss'\nimport claimTypes from 'Constant/claimTypes'\n\nexport default function UploadSoaPage (props) {\n  const { ApiService } = props\n  const [data, setData] = React.useState()\n  const [headerInputs, setHeaderInputs] = React.useState({})\n  const [claimTypeValues, setClaimTypeValues] = React.useState([])\n  const [openAlert, setOpenAlert] = React.useState({})\n  const [dataRows, setDataRows] = React.useState([])\n\n  React.useEffect(() => {\n    PageTitleService(`Upload SOA File`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'uploadSoa'])\n  }, [])\n\n  const handleOnSelectFile = data => setData(data)\n\n  const handleOnRemoveFile = () => setData()\n\n  const handleOnCancelUpload = () => setData()\n\n  const handleProceedUpload = () => {\n    if (!claimTypeValues || claimTypeValues.length === 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message:\n          'SOA details and mapping of data is required. Please complete first the SOA details and mapping of data to continue.'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_id) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner ID'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.facility_name) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Medical Partner Name'\n      }))\n      return\n    }\n\n    if (!headerInputs || !headerInputs.claim_source) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please provide Claim Source'\n      }))\n      return\n    }\n\n    // Construct data mapping for Transformation\n    const claimTypeMap = {}\n    claimTypeValues.forEach(element => {\n      claimTypeMap[element.source] = element.target\n    })\n\n    const dataMapping = {\n      columns: SoaEtlController.COLUMN_TEMPLATES.DEFAULT,\n      fields: {\n        [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIM_TYPE]: claimTypeMap\n      }\n    }\n\n    // Construct defaults for Transformation\n    const defaults = {\n      [SoaEtlController.MINIMUM_KEYS.BATCH_CLAIMS_SOURCE]: headerInputs.claim_source,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_CODE]: headerInputs.facility_id,\n      [SoaEtlController.MINIMUM_KEYS.BUNDLE_FACILITY_NAME]: headerInputs.facility_name\n    }\n\n    const fileHeaders = Object.keys(dataRows[0])\n    const fileMapping = Object.keys(dataMapping.columns)\n    const err = fileMapping.filter(head => !fileHeaders.includes(head))\n\n    if (err.length > 0) {\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'Please make sure that the uploaded SOA file has the correct column headers.'\n      }))\n      return\n    }\n\n    LoadingService.loading(true)\n\n    let bundle = null\n    // Invoke transformation\n    try {\n      bundle = SoaEtlController.transform(dataRows, dataMapping, defaults)\n    } catch (ex) {\n      LoadingService.loading(false)\n      // Unable to upload SOA file. Please ensure there is one SOA no. only.\"\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: ex\n      }))\n      return\n    }\n\n    const onSuccess = function (bundle_number) {\n      // alert('SOA Upload successful')\n      // setAlertCloseHandlerAlert(handleOnCancel)\n\n      setOpenAlert(state => ({\n        ...state,\n        show: true,\n        message: 'SOA Uploaded Successfully: Bundle No. ' + bundle_number,\n        onOk: () => {\n          handleOnCancel()\n          setOpenAlert(state => ({\n            ...state,\n            show: false\n          }))\n        }\n      }))\n    }\n\n    // Invoke loading unto Claims API\n    SoaEtlController.loadToApi(bundle, onSuccess)\n      .then(bundle_number => {\n        onSuccess(bundle_number)\n        LoadingService.loading(false)\n      })\n      .catch(() => {\n        LoadingService.loading(false)\n        setOpenAlert(state => ({\n          ...state,\n          show: true,\n          message: 'SOA Upload failed'\n        }))\n      })\n  }\n\n  // close for validation\n  const handleOnClose = () => {\n    setOpenAlert(state => ({\n      ...state,\n      show: false\n    }))\n  }\n\n  const handleOnCancel = () => {\n    LoadingService.loading(true)\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n      handleOnCancelUpload()\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {SoaEtlController.DEBUG && (\n        <Button\n          variant='contained'\n          color='primary'\n          className='button-negative'\n          id='test-etl'\n          onClick={SoaEtlController.test}\n        >\n          Test ETL\n        </Button>\n      )}\n\n      {!data && <UploadSpace onSelectFile={handleOnSelectFile} />}\n\n      {data && (\n        <div className={classes.table}>\n          <DynamicTable\n            data={data}\n            onRemoveFile={handleOnRemoveFile}\n            onDetectDataRows={dataRows => {\n              setDataRows(dataRows)\n            }}\n          />\n        </div>\n      )}\n\n      {data && (\n        <Fragment>\n          <FieldMapper\n            ApiService={ApiService}\n            onSaveSuccess={({ template, facility }) => {\n              console.log('Field Mapper Saved!', { template, facility })\n            }}\n            onChangeHeaderInputs={headerInputs => {\n              setHeaderInputs(headerInputs)\n            }}\n            onChangeClaimTypeDataMapping={fields => {\n              setClaimTypeValues(fields)\n            }}\n          />\n\n          {/* TODO: replace evil quick-fix */}\n          <br />\n\n          <div align='right'>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel-upload'\n              onClick={handleOnCancel}\n            >\n              Cancel\n            </Button>\n            {/* TODO: replace evil quick-fix */}\n            &nbsp; &nbsp;\n            <Button\n              id='proceed-upload'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleProceedUpload}\n            >\n              Upload\n            </Button>\n          </div>\n        </Fragment>\n      )}\n\n      <Alert open={openAlert.show} message={openAlert.message} okLabel='Close' onOk={openAlert.onOk || handleOnClose} />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/c')\n\nexport default class ClaimsAdjudicationServices {\n  static utilizationLegder (params) {\n    return axios({\n      url: `/utilization-ledger`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static transmittalReport (params, client) {\n    return axios({\n      url: '/transmittal-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getTransmittalReportPdf (params) {\n    return axios({\n      url: '/transmittal-report/reports',\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' },\n      params\n    })\n  }\n\n  static utilizationClient (params) {\n    return axios({\n      url: '/utilization-ledger/client',\n      method: 'GET',\n      params\n    })\n  }\n\n  static utilizationClientTable (params) {\n    return axios({\n      url: '/utilization-ledger/client/table',\n      method: 'GET',\n      params\n    })\n  }\n\n  static loadingHIMSData (params) {\n    return axios({\n      url: `/loading-hims-data`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static confinementReport (params) {\n    return axios({\n      url: `/confinement-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestReport (params) {\n    return axios({\n      url: '/payment-request-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static paymentRequestClaims (params, bundle_number) {\n    return axios({\n      url: `/payment-request-report/${bundle_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursementClaimReport (params) {\n    return axios({\n      url: '/reimbursement-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static productivityReport (params) {\n    return axios({\n      url: '/productivity-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static claimsSummaryReport (params) {\n    return axios({\n      url: '/claims-summary-report',\n      method: 'GET',\n      params\n    })\n  }\n\n  static lookupsQuery ({ category, field, value }) {\n    return axios({\n      url: `/lookups/auto-suggest`,\n      method: 'GET',\n      params: { category, field, value },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static lookupsAll ({ category }) {\n    return axios({\n      url: `/lookups/auto-suggest/${category}`,\n      method: 'GET',\n      params: { category },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static returnedClaimsReport (params) {\n    return axios({\n      url: `/returned-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingPartialApprovedClaimsReport (params) {\n    return axios({\n      url: `/aging-partial-approved-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static agingReturnClaimsReport (params) {\n    return axios({\n      url: `/aging-return-claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static claimsBeyond3Months (params) {\n    return axios({\n      url: `/claims-beyond-3-months`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reimbursmentAgingReport (params) {\n    return axios({\n      url: `/reimbursement-aging`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static performanceReport (params) {\n    return axios({\n      url: `/performance-report`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static detailedClaimsReport (params) {\n    return axios({\n      url: `/detailed-claims-report`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import FileSaver from 'file-saver'\n\nexport default function Download ({ fileName = 'CSV', header = [], rows = [], extension = 'csv', statics = [], data = [] }) {\n  const valueSeperator = ','\n  const newLine = '\\r\\n'\n  const [c_header = [], c_footer = []] = statics\n\n  let _rows = [\n    ...c_header,\n    header.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n    newLine,\n    ...rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(valueSeperator), '').slice(1),\n        newLine\n      ].join('')\n    ),\n    ...c_footer\n  ]\n\n  if (data && data.length) _rows = data\n\n  const blob = new Blob(_rows, { type: 'data:text/csv;charset=utf-8' })\n\n  // Trial\n  try {\n    const { ipcRenderer } = window.require('electron')\n\n    const reader = new FileReader()\n    reader.readAsDataURL(blob)\n    reader.onloadend = function () {\n      const data = reader.result\n      const base64data = data.split(';base64,').pop()\n      ipcRenderer.send('open-save-dialog', { data: base64data, fileName })\n    }\n  } catch (error) {\n    FileSaver.saveAs(blob, `${fileName}.${extension}`)\n  }\n}\n","// Received Path as Array\n// Received Path as String\n\nconst SafeAccess = (value, path, def = undefined, delimeter = '.') => {\n  if (typeof path === 'object') {\n    return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n  } else if (typeof path === 'string') {\n    return (\n      path.split(delimeter).reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n    )\n  }\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Date Range From\" should be on or before \"Date Range To\"`\n    }),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimsUtilLedgerReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Batch No.', data: 'batch_number', search: true, match: 'any' },\n  { label: 'Claim No.', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Claim Type', data: 'claim_type', search: true, match: 'any' },\n  { label: 'Approval Code', data: 'approval_code', search: true, match: 'start' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Loa No.', data: 'loa_number', search: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, match: 'any' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' },\n  { label: 'Member Last Name', data: 'member_last_name', search: true, match: 'any' },\n  { label: 'Member First Name', data: 'member_first_name', search: true, match: 'any' },\n  { label: 'Member Middle Name', data: 'member_middle_name', search: true, match: 'any' },\n  { label: 'Client Account Number', data: 'client_account_number', search: true, match: 'any' },\n  { label: 'Client Account Name', data: 'client_name', search: true, match: 'any' },\n  { label: 'Customer Account Number', data: 'customer_company_account_number', search: true, match: 'any' },\n  { label: 'Company Name', data: 'company_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Facility) Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID', data: 'doctor_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Doctor) Name', data: 'doctor_name', search: true, match: 'any' },\n  { label: 'Medical Partner ID (Anesthesiologist)', data: 'anesthesiologist_id', search: true, match: 'any' },\n  { label: 'Medical Partner (Anesthesiologist) Name', data: 'anesthesiologist_name', search: true, match: 'any' },\n  { label: 'Date Admitted', type: 'date', data: 'date_admission_from', search: true, match: 'date' },\n  { label: 'Date Discharged', type: 'date', data: 'date_admission_to', search: true, match: 'date' },\n  { label: 'Date of Service', type: 'date', data: 'date_service', search: true, match: 'date' },\n  { label: 'Date of Service (From)', type: 'date', data: 'date_service_from', search: true, match: 'date' },\n  { label: 'Date of Service (To)', type: 'date', data: 'date_service_to', search: true, match: 'date' },\n  { label: 'Contract Year (From)', type: 'date', data: 'contract_from', search: true, match: 'date' },\n  { label: 'Contract Year (To)', type: 'date', data: 'contract_to', search: true, match: 'date' },\n  { label: 'Department', data: 'department', search: true, match: 'any' },\n  { label: 'Recommendation', data: 'recommendation', search: true, match: 'any' },\n  { label: 'Room Type', data: 'room_type', search: true, match: 'any' },\n  { label: 'Room Rate', data: 'room_rate', search: true, match: 'exact' },\n  { label: 'PRO ID', data: 'pro_id', search: true, match: 'any' },\n  { label: 'PRO Name', data: 'pro_name', search: true, match: 'any' },\n  { label: 'Claim Sub Type', data: 'claim_sub_type', search: true, match: 'any' },\n  { label: 'Claim Sub-sub Type', data: 'claim_sub_sub_type', search: true, match: 'any' },\n  { label: 'With Corporate Guaranty', data: 'with_corporate_guaranty', search: true, match: 'any' },\n  { label: 'Medicine Category', data: 'medicine_category', search: true, match: 'any' },\n  { label: 'Reimbursement Type', data: 'reimbursement_type', search: true, match: 'any' },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Official Receipt Number', data: 'receipt_number', search: true, match: 'any' },\n  { label: 'APE/PPE Package/s', data: 'ape_ppe_packages', search: true, match: 'any' },\n  { label: 'Given Diagnosis', type: 'array', data: 'diagnosis.given_diagnosis', search: true, match: 'any' },\n  { label: 'ICD10 Description', type: 'array', data: 'diagnosis.description', search: true, match: 'any' },\n  { label: 'ICD10 Code', type: 'array', data: 'diagnosis.code', search: true, match: 'any' },\n  { label: 'ICD10 Primary', type: 'array', data: 'diagnosis.primary', search: true, match: 'any' },\n  { label: 'LOA Notes', data: 'loa_notes', search: true, match: 'any' },\n  { label: 'Tooth Number', type: 'array', data: 'dental_procedures.tooth_number', search: true, match: 'exact' },\n  { label: 'Procedure Name', type: 'array', data: 'procedures.description', search: true, match: 'any' },\n  { label: 'CPT Code', type: 'array', data: 'procedures.code', search: true, match: 'any' },\n  { label: '(Procedures) Gross Amount', type: 'array', data: 'procedures.gross_amount', search: true, match: 'exact' },\n  { label: '(Procedures) Vat Amount', type: 'array', data: 'procedures.vat_amount', search: true, match: 'exact' },\n  {\n    label: '(Procedures) Amount Paid by Member',\n    type: 'array',\n    data: 'procedures.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'procedures.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) PhilHealth Remarks',\n    type: 'array',\n    data: 'procedures.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount not Covered',\n    type: 'array',\n    data: 'procedures.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Procedures) Reason', type: 'array', data: 'procedures.reason', search: true, match: 'any' },\n  {\n    label: '(Procedures) Amount due From Member',\n    type: 'array',\n    data: 'procedures.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Member',\n    type: 'array',\n    data: 'procedures.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Procedures) Amount due From Client',\n    type: 'array',\n    data: 'procedures.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Procedures) Reason for Charging Client',\n    type: 'array',\n    data: 'procedures.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Hospital Item Name', type: 'array', data: 'hospital_items.name', search: true, match: 'any' },\n  { label: 'Item Code', type: 'array', data: 'hospital_items.item_code', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Gross Amount',\n    type: 'array',\n    data: 'hospital_items.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Vat Amount',\n    type: 'array',\n    data: 'hospital_items.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Amount Paid by Member',\n    type: 'array',\n    data: 'hospital_items.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'hospital_items.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) PhilHealth Remarks',\n    type: 'array',\n    data: 'hospital_items.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount not Covered',\n    type: 'array',\n    data: 'hospital_items.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Hospital Items) Reason', type: 'array', data: 'hospital_items.reason', search: true, match: 'any' },\n  {\n    label: '(Hospital Items) Amount due From Member',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Member',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Hospital Items) Amount due From Client',\n    type: 'array',\n    data: 'hospital_items.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Hospital Items) Reason for Charging Client',\n    type: 'array',\n    data: 'hospital_items.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Medical Partner ID', type: 'array', data: 'professional_fees.doctor_id', search: true, match: 'any' },\n  { label: 'Doctor Name', type: 'array', data: 'professional_fees.doctor_name', search: true, match: 'any' },\n  { label: 'Specialization', type: 'array', data: 'professional_fees.specialization', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Gross Amount',\n    type: 'array',\n    data: 'professional_fees.gross_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Vat Amount',\n    type: 'array',\n    data: 'professional_fees.vat_amount',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Amount Paid by Member',\n    type: 'array',\n    data: 'professional_fees.amount_paid_by_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Amount Paid',\n    type: 'array',\n    data: 'professional_fees.philhealth_amount_paid',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) PhilHealth Remarks',\n    type: 'array',\n    data: 'professional_fees.philhealth_remarks',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount not Covered',\n    type: 'array',\n    data: 'professional_fees.amount_not_covered',\n    search: true,\n    match: 'exact'\n  },\n  { label: '(Professional Fee) Reason', type: 'array', data: 'professional_fees.reason', search: true, match: 'any' },\n  {\n    label: '(Professional Fee) Amount due From Member',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_member',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Member',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_member',\n    search: true,\n    match: 'any'\n  },\n  {\n    label: '(Professional Fee) Amount due From Client',\n    type: 'array',\n    data: 'professional_fees.amount_due_from_client',\n    search: true,\n    match: 'exact'\n  },\n  {\n    label: '(Professional Fee) Reason for Charging Client',\n    type: 'array',\n    data: 'professional_fees.reason_for_charging_client',\n    search: true,\n    match: 'any'\n  },\n\n  { label: 'Claim Remarks', data: 'claim_remarks', search: true, match: 'any', remarks: true }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsUtilLedgerReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange, refresh } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'status_date'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Ledger Report')\n    BreadcrumbsService.setSelectedItems(['utilizationLedger'])\n  }, [])\n\n  // const [allClaims, setAllClaims] = React.useState({\n  //   data: [],\n  //   columns: columns.map(value => ({\n  //     name: value.name,\n  //     type: value.type\n  //   }))\n  // })\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchLedger = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n        // date_admission_from: DateFormatter(claim.date_admitted),\n        // date_discharged: DateFormatter(claim.date_discharged),\n        // date_issued: DateFormatter(claim.date_issued),\n        // diagnosis: claim.diagnosis && claim.diagnosis.length > 0 ? claim.diagnosis.shift().description : null\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim,\n        date_admission_from: DateFormatter(claim.date_admission_from),\n        date_admission_to: DateFormatter(claim.date_admission_to),\n        date_service: DateFormatter(claim.date_service),\n        date_service_from: DateFormatter(claim.date_service_from),\n        date_service_to: DateFormatter(claim.date_service_to),\n        contract_from: DateFormatter(claim.contract_from),\n        contract_to: DateFormatter(claim.contract_to)\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Utilization Ledger Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchLedger()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchLedger()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Component\nimport { Typography } from '@material-ui/core'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { username, total = {} } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AMOUNT: ${CurrencyFormatter(total.amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL AR: ${CurrencyFormatter(total.ar_amount)}`}</p>\n          </div>\n        </div>\n      </div>\n      <div className={classes['all-signatories']}>\n        <div className={classes.signatories}>\n          <Typography>Transmitted by: </Typography>\n          <Typography className={classes.username}>{username}</Typography>\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Noted by: </Typography>\n          <div className={classes['line-note']} />\n        </div>\n        <div className={classes.signatories}>\n          <Typography>Received by: </Typography>\n          <div className={classes['line-received']} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/x/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ account_number }) {\n    return axios({\n      url: `/member`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClient ({ account_number }) {\n    return axios({\n      url: `/client`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ account_number }) {\n    return axios({\n      url: `/members/${account_number}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n\n  static getMemberContract ({ mct_id }) {\n    return axios({\n      url: `/member/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientContract ({ mct_id }) {\n    return axios({\n      url: `/client/contract`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1, Accept: 'application/pdf' },\n      responseType: 'blob',\n      params: { mct_id }\n    })\n  }\n\n  static getClientInfo ({ value, field }) {\n    return axios({\n      url: `/client-info`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { [field]: value }\n    })\n  }\n\n  static getClients ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/clients`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getMembers ({ where, fields, order, limit, skip, offset }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { where, fields, order, limit, skip, offset }\n    })\n  }\n\n  static getClientUtilizationLoa ({ client_account_no }) {\n    return axios({\n      url: `/client/${client_account_no}/utilization-loa`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getMemberContractPlanType ({ account_number }) {\n    return axios({\n      url: `/member/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getClientrContractPlanType ({ account_number }) {\n    return axios({\n      url: `/client/contract-plan-type`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { account_number }\n    })\n  }\n\n  static getDoctorSpecilizations ({ data }) {\n    return axios({\n      url: '/doctor-specializations',\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 },\n      params: { data }\n    })\n  }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n\n  static getClaimsAnalyst () {\n    return this.getUsers('CLAIMS_ANALYST')\n  }\n\n  static getUserById (id) {\n    return axios({\n      url: `http://18.138.94.224:4101/api/users/${id}`,\n      method: 'GET'\n    })\n  }\n}\n","export default {\n  header: ['Company:', 'Account No.:', 'Contract:', 'Date:'],\n  footer: ['Total', 'Transmitted by:', 'Noted by:', 'Received by:']\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Styles\nimport classes from './TransmittalReport.module.scss'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BatchEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { initSuggestions, resetSuggestionObject, setSuggestionObject } = actions\n\nconst columns = [\n  { label: 'NO.', sortField: 'number', sort: false, align: 'left', class: 'h_no' },\n  { label: 'LOA NO.', sortField: 'latest.loa_number', sort: true, align: 'left', class: 'h_loa' },\n  { label: 'DATE', sortField: 'status_date', sort: true, align: 'left', class: 'h_date' },\n  { label: 'MEMBER', sortField: 'member_name', sort: true, align: 'left', class: 'h_member' },\n  { label: 'AMOUNT', sortField: 'total_amount', sort: false, align: 'right', class: 'h_amount' },\n  { label: 'AR', sortField: 'total_due_from_member', sort: false, align: 'right', class: 'h_ar' }\n]\n\nexport default function TransmittalReport (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(({ BatchEncoding: state }) => state.suggestions)\n\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [client, setClient] = React.useState({\n    registered_name: '',\n    corporate_account_no: ''\n  })\n\n  const [returnClient, setReturnClient] = React.useState({})\n\n  const [total, setTotal] = React.useState({\n    amount: 0,\n    ar_amount: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [username, setUsername] = React.useState('')\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    PageTitleService('Transmittal Report')\n    BreadcrumbsService.setSelectedItems(['transmittal'])\n\n    // TODO is this right?\n    const _id = localStorage.getItem('user_id')\n    UserManagementServices.getUserById(_id).then(res => {\n      const { username = '' } = res.data\n      setUsername(username)\n    })\n  }, [])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleClientOnChange = ({ value, field, isSuggestionClick }) => {\n    setClient(state => ({ ...state, [field]: value }))\n    if (isSuggestionClick) {\n      for (const i of suggestions.client.data) {\n        if (value === i.registered_name || value === i.corporate_account_no) {\n          dispatch(resetSuggestionObject({ field: 'client' }))\n          setClient(state => ({\n            ...state,\n            registered_name: i.registered_name,\n            corporate_account_no: i.corporate_account_no\n          }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'client' }))\n      getClientSuggestions({ value, field })\n    }\n  }\n\n  const getClientSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getClientInfo({ value, field }).then(res => {\n            const { data = [] } = res.data\n\n            const item = []\n            for (const d of data) {\n              item.push(d[field])\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'client',\n                suggestion: { [field]: item, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchTransmittalItems = params => {\n    if (client.registered_name === '' || client.corporate_account_no === '') {\n      LoadingService.loading(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n\n    LoadingService.loading(true)\n    ClaimsServices.transmittalReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      client\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page, client = {} } = res.data.data\n      const _totam_amout = raw.reduce((a, c) => a + c.total_amount, 0)\n      const _ar_amount = raw.reduce((a, c) => a + c.total_due_from_member, 0)\n\n      setReturnClient(client)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      setTotal(state => ({\n        ...state,\n        amount: !_totam_amout <= 0 ? _totam_amout : 0,\n        ar_amount: !_ar_amount <= 0 ? _ar_amount : 0\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...claims,\n      ...args\n    }\n\n    setClaims(state => ({ ...state, ...args }))\n    fetchTransmittalItems(params)\n  }\n\n  const handlePrintReport = params => {\n    if (!claims.data.length) return\n\n    PdfViewer2Service({\n      name: 'Transmittal Report',\n      fileName: 'transmittal_report',\n      service: ClaimsServices.getTransmittalReportPdf({\n        range: params.range,\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        client\n      }),\n      open: true\n    })\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n    const rows = []\n\n    claims.raw.forEach(item => {\n      item.date = DateFormatter(item.date)\n      rows.push(Object.values(item))\n    })\n\n    const statics = staticHeaderFooter({ ...returnClient, ...total, username })\n    LoadingService.loading(true)\n    ArrayToCSV({ fileName: `${client.registered_name} Transmittal Report`, header, rows, statics })\n    LoadingService.loading(false)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Company:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by company name'\n                  id='company-name'\n                  value={client.registered_name}\n                  suggestions={suggestions.client.registered_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'registered_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classes['search-header-child']}>\n            <div className={classes.column}>\n              <Typography variant='h6'>Account No.:</Typography>\n            </div>\n            <div className={classes.column}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by account number'\n                  id='account-number'\n                  value={client.corporate_account_no}\n                  suggestions={suggestions.client.corporate_account_no}\n                  onChange={(value, isSuggestionClick) =>\n                    handleClientOnChange({\n                      field: 'corporate_account_no',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchTransmittalItems(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='print-report' onClick={() => handlePrintReport(claims)} disabled={!claims.data.length}>\n              <PrintIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Print Report\n              </Typography>\n            </Button>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <TableSortLabel\n                        active={claims.orderBy === headCell.sortField}\n                        direction={claims.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {item.loa_number}\n                    </TableCell>\n                    <TableCell className={classes.left} align='left'>\n                      {DateFormatter(item.date)}\n                    </TableCell>\n                    <TableCell className={classes.member} align='left'>{`${item.member_name}`}</TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_amount <= 0 ? item.total_amount : 0)}\n                    </TableCell>\n                    <TableCell className={classes.right} align='right'>\n                      {CurrencyFormatter(!item.total_due_from_member <= 0 ? item.total_due_from_member : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer username={username} total={total} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport ArrayToCSV from 'Services/ArrayToCSV'\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './TreasuryTransmittalReport.module.scss'\n\nconst columns = [\n  { label: 'Date Requested', data: 'date_requested', search: true, match: 'date' },\n  { label: 'Transmittal No.', data: 'transimittal_no', search: true, match: 'any' },\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Delivery Status', data: 'delivery_status', search: true, match: 'any' },\n  { label: 'Received By', data: 'received_by', search: true, match: 'any' },\n  { label: 'Date Received', data: 'date_received', search: true, match: 'date' }\n]\n\nexport default function TreasuryTransmittalReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Treasury Transmittal Reports')\n    BreadcrumbsService.setSelectedItems(['treasuryTransmittalReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './PRCheckReport.module.scss'\n\nconst columns = [\n  { label: 'Payee Name', data: 'payee_name', search: true, match: 'any' },\n  { label: 'Check Voucher No.', data: 'check_voucher_no', search: true, match: 'any' },\n  { label: 'Check Voucher Date.', data: 'check_voucher_date', search: true, match: 'date' },\n  { label: 'Check No.', data: 'check_no', search: true, match: 'start' },\n  { label: 'Check Date', data: 'check_date', search: true, match: 'date' },\n  { label: 'Bank Name', data: 'bank_name', search: true, match: 'any' },\n  { label: 'Check Amount', data: 'check_amount', search: true, match: 'any' },\n  { label: 'Check Release Date', data: 'check_release_date', search: true, match: 'date' },\n  { label: 'FPAD Transmittal Date', data: 'fpad_transmittal_date', search: true, match: 'date' },\n  { label: 'Date Received (FPAD Delivery)', data: 'date_received_fpad_delivery', search: true, match: 'date' }\n]\n\nexport default function PRCheckReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'date_requested',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('PR and Check Report')\n    BreadcrumbsService.setSelectedItems(['prReports'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchReport()\n    // Watch filter items\n  }, [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  const fetchCSV = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        return columns.map(col => {\n          if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n          return formatData({ type: col.type, source: report, field: col.data })\n        })\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  const fetchReport = () => {\n    // TODO:\n    // Change service if api becomes available\n    LoadingService.loading(true)\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n      setReports(state => ({ ...state, data: _reports, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = search => {\n    /*\n     * Debounce for searching through\n     * SearchTextComponent\n     */\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              onChange={e => handleSearchChange(e.target.value)}\n              placeholder={`Search for Payee Name`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{\n              style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n            }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !reports.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              reports.data &&\n              reports.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={reports.count}\n            page={reports.page}\n            limit={reports.limit}\n            rowsPerPageOptions={reports.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import { DateFormatter } from 'Utilities/TextFormatter'\n\nexport const mapData = ({ data }) => {\n  return data.map(i => {\n    return {\n      claim_no: i.claim_no || '',\n      diagnosis: i.diagnosis || i.diagnoses || [{ diagnosis: i.primary_diagnosis || '', icd10_code: i.primary_icd10_code || '' }],\n      procedures: i.procedures || [], // partner_doctor_name\n      provider: { facility: [i.partner_name] || '', doctor: i.doctors ? setDoctors(i.doctors, i.partner_doctor_name) : i.partner_doctor_name ? [i.partner_doctor_name] : [] },\n      amount: i.total_amount || i.grand_total || 0,\n      session: i.session || 1,\n      date: DateFormatter(i.date_admitted) || DateFormatter(i.date_issued),\n      type: i.type,\n      status: i.status\n    }\n  })\n}\n\nconst setDoctors = (doctors = [], partner_name) => {\n  if (partner_name == undefined) return doctors.map(i => (i.name))\n  return doctors.map(i => (i.name)).concat([partner_name])\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { setPaginate } from './Utils/pagination'\nimport { mapData } from './Utils/mapData'\nimport { itemFilter } from './Utils/query'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setLimitType, resetLimitType } = actions\n\nconst headCellsComplete = [\n  { name: 'Claim ID', sortField: 'claim_no', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedures', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(({ ClaimsAnalysis: state }) => state.title)\n\n  const {\n    fetchService,\n    diagnosis,\n    isMember = true,\n    member = {},\n    utilizationLoa = [],\n    hideSearchBar = false,\n    hideActionColumn = false,\n    dataColumns\n  } = props\n\n  const [headCells, setHeadCells] = React.useState(headCellsComplete)\n  const [rows, setRows] = React.useState([])\n  const [allList, setAllList] = React.useState([])\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    filter: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = headCellsComplete\n    } else {\n      filtered = headCellsComplete.filter(entry => dataColumns.indexOf(entry.sortField) > -1)\n    }\n    setHeadCells(filtered)\n  }, [dataColumns])\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (member.benefit_limits) {\n        if (member.benefit_limits.length > 0) {\n          type = member.benefit_limits[0].type\n          limit = member.benefit_limits[0].limit\n        }\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.info.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          const list = mapData({\n            data: [\n              ...utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n              ...data.map(i => ({ ...i, status: 'Approved' }))\n            ]\n          })\n\n          setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n          setRows(list.slice(0, filteredRows.limit))\n          setAllList(list)\n\n          let ibnr = 0\n          let utilized = 0\n\n          utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = (diagnosis && diagnosis.filter(icd => icd.primary === true)[0]) || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { diagnosis_code } = data[0] || []\n\n          // If claim have no diagnosis field then return all\n          primary.code ? (primary.category_code = diagnosis_code) : (primary.category_code = '')\n\n          fetchService({\n            member_account_no: member.info.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            const list = mapData({\n              data: [\n                ..._utilizationLoa.map(i => ({ ...i, type: 'IBNR' })),\n                ...data.map(i => ({ ...i, status: 'Approved' }))\n              ]\n            })\n\n            setFilteredRows(state => ({ ...state, count: list.length, data: list }))\n            setRows(list.slice(0, filteredRows.limit))\n            setAllList(list)\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    // console.log(list)\n    const _data = itemFilter({ search: filteredRows.search, filter: filteredRows.filter, data: allList })\n\n    setFilteredRows(state => ({ ...state, count: _data.length, data: _data, page: 1 }))\n    setRows(_data.slice(0, filteredRows.limit))\n  }, [filteredRows.search, filteredRows.filter])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field, type } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (type === 'all') setFilteredRows(state => ({ ...state, search }))\n        else setFilteredRows(state => ({ ...state, filter: { ...state.filter, [field]: search } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: filteredRows })\n    setFilteredRows(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow id={`utilization-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        {headCells.map(headCell => {\n          switch (headCell.sortField) {\n            case 'claim_no':\n              return (\n                <TableCell key={`${index}-claim-no`} id={`utilization-claim_no-${index}`}>\n                  <div className={classes.cell}>\n                    <span>{row.claim_no}</span>\n                    <span className={classes.label}>SWIPE</span>\n                    <span>YES</span>\n                  </div>\n                </TableCell>\n              )\n\n            case 'diagnosis':\n              return (\n                <TableCell key={`${index}-diagnosis`} id={`utilization-diagnosis-${index}`}>\n                  {row.diagnosis.map((row, index) => (\n                    <div key={`icd-${index}`} className={classes.cell}>\n                      <span>{row.diagnosis}</span>\n                      <span className={classes.label}>ICD 10 CODE</span>\n                      <span>{row.icd10_code}</span>\n                    </div>\n                  ))}\n                </TableCell>\n              )\n\n            case 'procedures':\n              return (\n                <TableCell key={`${index}-procedures`} id={`utilization-procedures-${index}`}>\n                  <div className={classes.cell}>\n                    {row.procedures.map((row, index) => (\n                      <div key={`procedure-${index}`} className={classes.cell}>\n                        <span>{row.procedure_name}</span>\n                        <span className={classes.label}>CPT CODE</span>\n                        <span>{row.cpt_code}</span>\n                      </div>\n                    ))}\n                  </div>\n                </TableCell>\n              )\n\n            case 'provider':\n              return (\n                <TableCell key={`${index}-provider`} id={`utilization-partner_name-${index}`}>\n                  <div className={classes.cell}>\n                    <div className={classes.cell}>\n                      {row.provider.facility.map((row, index) => (\n                        <span key={`facility-${index}`}>{row}</span>\n                      ))}\n                      {row.provider.doctor.length !== 0 && <span className={classes.label}>MEDICAL DOCTOR</span>}\n                      {row.provider.doctor.map((row, index) => (\n                        <span key={`doctor-${index}`}>{`${row},`}</span>\n                      ))}\n                    </div>\n                  </div>\n                </TableCell>\n              )\n\n            case 'amount':\n              return (\n                <TableCell key={`${index}-amount`} align='right' id={`utilization-grand_total-${index}`}>\n                  <span>{CurrencyFormatter(row.amount)}</span>\n                </TableCell>\n              )\n\n            case 'session':\n              return (\n                <TableCell key={`${index}-session`} align='right' id={`utilization-session-${index}`}>\n                  <span>{row.session}</span>\n                </TableCell>\n              )\n\n            case 'date':\n              return (\n                <TableCell key={`${index}-date_admitted`} id={`utilization-date_admitted-${index}`}>\n                  <span>{row.date}</span>\n                </TableCell>\n              )\n\n            case 'type':\n              return (\n                <TableCell key={`${index}-type`} id={`utilization-type-${index}`}>\n                  <span>{row.type}</span>\n                </TableCell>\n              )\n\n            case 'status':\n              return (\n                <TableCell key={`${index}-status`} align='center' id={`utilization-status-${index}`}>\n                  <span>{row.status}</span>\n                </TableCell>\n              )\n          }\n        })}\n\n        {hideActionColumn === false && (\n          <TableCell key={`${index}-icon`} align='center' id={`utilization-action-${index}`}>\n            <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n          </TableCell>\n        )}\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography id='utilization-graph-total' variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography id='utilization-graph-utilized' variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography id='utilization-graph-ibnr' variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography id='utilization-graph-available' variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search} style={{ display: hideSearchBar === true ? 'none' : 'block' }}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all', type: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n        <div style={{ display: hideSearchBar === false ? 'none' : 'block' }}>\n          {/* TODO: replace with filler */}\n          <br />\n          <br />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      id={`utilization-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField, type: 'column' })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              {hideActionColumn === false && <TableCell align='center' />}\n            </TableRow>\n          }\n          body={renderRows({ rows: rows })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","export const itemFilter = args => {\n  const { search, filter, data = [] } = args\n  let _data = data\n\n  if (search) {\n    const _search = search.toLowerCase()\n    _data = _data.filter(i => {\n      return i.claim_no.toLowerCase().includes(_search) ||\n        i.diagnosis.some(i => i.diagnosis.toLowerCase().includes(_search) || i.icd10_code.toLowerCase().includes(_search)) ||\n        i.procedures.some(i => i.procedure_name.toLowerCase().includes(_search) || i.cpt_code.toLowerCase().includes(_search)) ||\n        i.provider.doctor.some(i => i.toLowerCase().includes(_search)) ||\n        i.provider.facility.some(i => i.toLowerCase().includes(_search)) ||\n        i.amount.toString().toLowerCase().includes(_search) ||\n        i.session.toString().toLowerCase().includes(_search) ||\n        i.date.toLowerCase().includes(_search) ||\n        i.type.toLowerCase().includes(_search) ||\n        i.status.toLowerCase().includes(_search)\n    })\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const _fields = Object.keys(filter)\n\n    for (const f of _fields) {\n      let value = filter[f].toLowerCase()\n      if (value && f === 'diagnosis') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.diagnosis.toLowerCase().includes(value) || i.icd10_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'procedures') {\n        _data = _data.filter(i => {\n          return i[f].some(i => i.procedure_name.toLowerCase().includes(value) || i.cpt_code.toLowerCase().includes(value))\n        })\n      } else if (value && f === 'provider') {\n        _data = _data.filter(i => {\n          return i[f].doctor.some(i => i.toLowerCase().includes(value)) || i[f].facility.some(i => i.toLowerCase().includes(value))\n        })\n      } else if (value) {\n        _data = _data.filter(i => {\n          return i[f].toString().toLowerCase().includes(value)\n        })\n      }\n    }\n  }\n  return _data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // static getDropdown (params) {\n  //   return axios({\n  //     url: '/lookups/dropdown',\n  //     method: 'GET',\n  //     params,\n  //     headers: { [ExcludeErrorConstants['all']]: 1 }\n  //   })\n  // }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getICDSynonyms (params) {\n    return axios({\n      url: `/lookups/icd-10-synonym`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static inquire ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/inquire`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getClientUtilization ({ client_account_no }) {\n    return axios({\n      url: `/claims/client/${client_account_no}/utilizations`,\n      method: 'GET'\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static removeClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/destroy`,\n      method: 'DELETE',\n      data: { claim_number }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getTemplates () {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'GET'\n    })\n  }\n\n  static getTemplate ({ template_name }) {\n    return axios({\n      url: `/data-map/templates/${template_name}`,\n      method: 'GET'\n    })\n  }\n\n  static storeTemplate ({ template_name, data }) {\n    return axios({\n      url: `/data-map/templates`,\n      method: 'POST',\n      params: { template_name },\n      data\n    })\n  }\n\n  static getFacilityTemplate ({ facility_id }) {\n    return axios({\n      url: `/data-map/templates/${facility_id}`,\n      method: 'GET'\n    })\n  }\n\n  static storeFacilityTemplate ({ facility_id, data }) {\n    return axios({\n      url: `/data-map/facilities`,\n      method: 'POST',\n      params: { facility_id },\n      data\n    })\n  }\n}\n","/**\n * Graph Color Theme\n */\nconst theme = {\n  InPatient: '#EDEDED',\n  OutPatientProcedure: '#DEDEDE',\n  OutPatientConsultation: '#9EA3AC',\n  Reimbursement: '#0D5E40',\n  Emergency: '#FAB435',\n  Dental: '#8034AD',\n  MedicineAllowance: '#1AB1C4',\n  APE: '#3AB77D',\n  ECU: '#FD5451',\n  Pharmacy: '#62FFB7',\n  PPE: '#1E2071',\n  MedicalSupplies: '#E6A8E4',\n  ClinicManagement: '#66AFBE'\n}\nexport default theme\n","const mockData = [\n  { description: 'In Patient', type: 'InPatient' },\n  { description: 'Out Patient Procedure', type: 'OutPatientProcedure' },\n  { description: 'Out Patient Consultation', type: 'OutPatientConsultation' },\n  { description: 'Reimbursement', type: 'Reimbursement' },\n  { description: 'Emergency', type: 'Emergency' },\n  { description: 'Dental', type: 'Dental' },\n  { description: 'Medicine Allowance', type: 'MedicineAllowance' },\n  { description: 'APE', type: 'APE' },\n  { description: 'ECU', type: 'ECU' },\n  { description: 'Pharmacy', type: 'Pharmacy' },\n  { description: 'PPE', type: 'PPE' },\n  { description: 'Medical Supplies', type: 'MedicalSupplies' },\n  { description: 'Clinic Management', type: 'ClinicManagement' }\n]\n\nexport default mockData\n","const months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\n\nexport default months\n","import React from 'react'\n\nimport moment from 'moment'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// import ClaimsUtilLedgerReport from '../ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport Utilization from './../../ClaimsViewer/Components/Utilization/Utilization'\n\n// Services\n// TODO\n// Change ClaimsService when API for Treasury is available\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, LargeNumberFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './style/UtilizationReport.module.scss'\nimport theme from './style/theme'\n\n// Data\nimport legend from './data/legend'\n\n// Config\nimport months from './config/months'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst clientColumns = [\n  { label: 'Type', field: 'type', search: true, match: 'any' },\n  { label: 'Total Amount', field: 'total_amount', search: true, match: 'number' },\n  { label: 'Number of Cases', field: 'cases', search: true, match: 'number' },\n  { label: 'Availed By Principals', field: 'availed_by_principals', search: true, match: 'number' },\n  { label: 'Availed By Dependents', field: 'availed_by_dependents', search: true, match: 'number' }\n]\n\n// const memberDataColumns = [\n//   'loa_number',\n//   'approval_code',\n//   'claim_number',\n//   'diagnosis',\n//   'procedures.description',\n//   'facility_id'\n// ]\n\nconst memberDataColumns = ['claim_no', 'diagnosis', 'procedures', 'provider']\n\nexport default function UtilizationReport (props) {\n  const [reports, setReports] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'type',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [debounce, setDebounce] = React.useState(null)\n  const [reportType, setReportType] = React.useState('client')\n\n  /**\n   * initial -> initialized on generate report\n   * actual -> data displayed on the graph\n   * initial is retained as reference for filtering\n   *  graph data to refrain from making api calls\n   */\n  const [graphData, setGraphData] = React.useState({\n    initial: [],\n    actual: []\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  const [limitType, setLimitType] = React.useState({ ABL: 'Annual Benefit Limit', MBL: 'Maximum Benefit Limit' })\n\n  const [graphFilter, setGraphFilter] = React.useState('all')\n  // const [refreshMemberReport, doRefreshMemberReport] = React.useState(0)\n  const [client, setClient] = React.useState({ name: '--', account_no: '', limit: { type: '', limit: 0 } })\n  const [member, setMember] = React.useState({})\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Utilization Report')\n    BreadcrumbsService.setSelectedItems(['utilizationReport'])\n  }, [])\n\n  React.useEffect(() => {\n    fetchTable()\n    // Watch filter items\n\n    // [reports.search, reports.filter, reports.orderBy, reports.order, reports.limit, reports.page]\n  }, [reports.filter, reports.orderBy, reports.order, reports.limit, reports.page])\n\n  React.useEffect(() => {\n    /**\n     * Handle Graph Filtering\n     * Also Handles Initial Data\n     */\n    let newData\n    if (graphFilter === 'all') {\n      // Returns all data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        const newChild = data.claims.map(child => ({ ...child, percentage: getPercentage(child.total_amount) }))\n        return { ...data, claims: newChild }\n      })\n    } else {\n      // Returns selected data after being processed for percentage count\n      newData = graphData.initial.map(data => {\n        let childContainer = []\n        data.claims.map(child => {\n          if (child.claim_type === graphFilter) {\n            childContainer.push({ ...child, percentage: getPercentage(child.total_amount) })\n          }\n        })\n        return { ...data, claims: childContainer }\n      })\n    }\n\n    setGraphData(p => ({ ...p, actual: newData }))\n  }, [graphFilter, graphData.initial])\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    // TODO:\n    // Change service if api becomes available\n    ClaimsServices.utilizationLegder({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.count > 0 ? reports.count : reports.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _reports = results.map(report => ({\n        ...report,\n        date_requested: DateFormatter(report.date_requested),\n        check_date: DateFormatter(report.check_date),\n        date_received: DateFormatter(report.date_received)\n      }))\n\n      const rows = _reports.map(report => {\n        /**\n         * Disabled: Change to dynamic mapping\n         *  if ever needed to print cvs\n         */\n        // return columns.map(col => {\n        //   if (col.type === 'array') console.log(formatData({ type: col.type, source: report, field: col.data }))\n        //   return formatData({ type: col.type, source: report, field: col.data })\n        // })\n      })\n\n      // const header = columns.map(c => c.label)\n      // LoadingService.loading(true)\n      // ArrayToCSV({ fileName: 'Treasury Transmittal Report', header, rows })\n      // LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: reports.range.from,\n      date_to: reports.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchReport = () => {\n    if (reportType === 'member') {\n      getMember(reports.search)\n      // doRefreshMemberReport(refreshMemberReport + 1)\n      return\n    }\n\n    if (reports.search === '') return\n    LoadingService.loading(true)\n    Promise.all([\n      ClaimsServices.utilizationClient({\n        search: reports.search,\n        range: reports.range,\n        filter: reports.filter,\n        sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n        page: reports.page,\n        limit: reports.limit,\n        type: graphFilter\n      }),\n      ClaimsReconServices.getClientUtilization({ client_account_no: reports.search }),\n      CustomerCareServices.getClientUtilizationLoa({ client_account_no: reports.search })\n    ])\n      .then(res => {\n        const [graphClientRes, clientUtilRes, clientUtilLoaRes] = res\n        const { data: graph } = graphClientRes.data\n        const { data: utilAmount } = clientUtilRes.data\n        const { data: loaAmount } = clientUtilLoaRes.data\n\n        // Total limit is just a placeholder, waiting for the endpoint // dirty fix\n        setGraph(state => ({\n          ...state,\n          total: graph.client.limit.limit,\n          utilized: utilAmount.total_utilization_amount || 0,\n          ibnr: loaAmount.total_ibnr_amount || 0\n        }))\n        setGraphData(p => ({ ...p, initial: graph.results }))\n        setClient(state => ({\n          ...state,\n          name: graph.client.name,\n          account_no: graph.client.account_number,\n          limit: graph.client.limit\n        }))\n        fetchTable()\n      })\n      .catch(err => console.error(`Error Fetching Data: ${err}`))\n  }\n\n  // Fetching table\n  const fetchTable = () => {\n    ClaimsServices.utilizationClientTable({\n      search: reports.search,\n      range: reports.range,\n      filter: reports.filter,\n      sort: `${reports.orderBy}|${reports.order ? 'asc' : 'desc'}`,\n      page: reports.page,\n      limit: reports.limit\n    }).then(res => {\n      const { results = [], page, count, limit } = res.data.data\n\n      setReports(state => ({ ...state, data: results, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setReports(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n      }, 500)\n    )\n  }\n\n  const handleOnPaginate = args => {\n    setReports(state => ({ ...state, ...args }))\n  }\n\n  const handleSearchChange = event => {\n    // /*\n    //  * Debounce for searching through\n    //  * SearchTextComponent\n    //  */\n    const search = event.target.value\n    setReports(state => ({ ...state, search }))\n    // clearTimeout(debounce)\n    // setDebounce(\n    // setTimeout(() => {\n    //   }, 500)\n    // )\n  }\n\n  const handleReportType = args => {\n    setReportType(args.target.value)\n  }\n\n  const generateGraph = args => {\n    /**\n     * style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n     * -Prevents tooltip/popover description to display above the chart\n     */\n    return (\n      <div className={classes['graph-container']}>\n        <div className={classes['bar-chart-wrapper']}>\n          {args.map((data, index) => (\n            <div className={classes['bar-chart']}>\n              <div\n                className={classes.graph}\n                style={{ height: `${data.percentage}`, background: theme[data.claim_type] }}\n              >\n                {''}\n              </div>\n              <div\n                className={classes.tooltip}\n                style={{ bottom: `${data.percentage === '100%' ? '80%' : data.percentage}` }}\n              >\n                {`${LargeNumberFormatter(data.total_amount / 1000).toString()}K`}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n\n  const getPercentage = (args = 0) => {\n    // Returns argument on percentage scale\n    const result = (args / 250000) * 100\n    // Set maximum percentage to 100%\n    return `${result > 100 ? 100 : result}%`\n  }\n\n  const handleGraphFilter = args => {\n    // Triggers the filter watch function\n    setGraphFilter(args)\n  }\n\n  const getMember = account_number => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: account_number }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: account_number })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Report Type:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <RadioGroup className={classes['radio-group']} value={reportType} onChange={handleReportType}>\n                <div className={classes['radio-container']}>\n                  <p>Corporate Client</p> <Radio color='primary' value='client' />\n                </div>\n                <div className={classes['radio-container']}>\n                  <p> Member </p> <Radio color='primary' value='member' />\n                </div>\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <SearchTextComponent\n              id='search'\n              value={reports.search}\n              onChange={handleSearchChange}\n              placeholder={reportType == 'client' ? `Search for Client ID or Client Name` : `Search for Member ID`}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={classes.header}>\n        <Typography variant='h6'>Utilization Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='ledger-filter-date-from'\n                value={reports.range.from}\n                onChange={date => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='ledger-filter-date-to'\n                value={reports.range.to}\n                onChange={date => {\n                  setReports(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }}\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                fetchReport()\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Generate\n            </Button>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {reportType && reportType === 'client' && (\n        // TODO\n        /**\n         * Header-report:\n         * -Waiting for data\n         */\n        <div className={classes.body}>\n          <Typography variant='h6'>{client.name}</Typography>\n          <div className={classes['header-report']}>\n            <div className={classes['report-primary']}>\n              <div className={classes.title}>{client.limit.type ? limitType[client.limit.type] : ''}</div>\n              <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n            </div>\n            <div className={classes['report-details']}>\n              {graph.total ? (\n                <div className={classes.graph}>\n                  <div\n                    className={classes.item}\n                    style={{ background: '#00a896', width: `${(graph.utilized / graph.total) * 100}%` }}\n                  >\n                    {''}\n                  </div>\n                  <div\n                    className={classes.item}\n                    style={{ background: '#606c38', width: `${(graph.ibnr / graph.total) * 100}%` }}\n                  >\n                    {''}\n                  </div>\n                  <div\n                    className={classes.item}\n                    style={{\n                      background: '#e63946',\n                      width: `${\n                        ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                          ? 0\n                          : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                      }%`\n                    }}\n                  >\n                    {''}\n                  </div>\n                </div>\n              ) : null}\n              <div className={classes.legend}>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#00a896' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#00a896' }}>\n                      utilized\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.utilized)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#606c38' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: '#606c38' }}>\n                      ibnr\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(graph.ibnr)}`}</div>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes['header-data']}>\n                    <div className={classes.mark} style={{ background: '#e63946' }}>\n                      {''}\n                    </div>\n                    <div className={classes.text} style={{ color: 'e63946' }}>\n                      available\n                    </div>\n                  </div>\n                  <div className={classes.details}>{`PHP ${CurrencyFormatter(\n                    graph.total - graph.ibnr - graph.utilized\n                  )}`}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Typography variant='h6'>Utilization Summary</Typography>\n          <div className={classes.filter} style={{ textAlign: 'right' }}>\n            <span>\n              <FormControl>\n                <Select\n                  className={classes['select']}\n                  value={graphFilter}\n                  onChange={e => handleGraphFilter(e.target.value)}\n                >\n                  <MenuItem value={'all'}>\n                    <Typography className={classes.input}>All Types</Typography>\n                  </MenuItem>\n                  {legend.map(data => (\n                    <MenuItem value={data.type}>\n                      <Typography className={classes.input}>{data.description}</Typography>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </span>\n          </div>\n          <div className={classes['graph-legend']}>\n            <div className={classes['legend-wrapper']}>\n              {legend.map(data => (\n                <div className={classes['legend-group']}>\n                  <div className={classes['legend']} style={{ background: theme[data.type] }}>\n                    {''}\n                  </div>\n                  <div className={classes['description']}>{data.description}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={classes['graph-reports']}>\n            <div className={classes['graph-plot']}>\n              <div className={classes['plot-items']}>250k</div>\n              <div className={classes['plot-items']}>150k</div>\n              <div className={classes['plot-items']}>100k</div>\n              <div className={classes['plot-items']}>50k</div>\n              <div className={classes['plot-items']}>0</div>\n            </div>\n            {graphData.actual.map(data => (\n              <div className={classes['graph-group']}>\n                {generateGraph(data.claims)}\n                <div className={classes['graph-category']}>\n                  {months[data.month]} {graphData.actual && graphData.actual.length >= 12 ? data.year : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{\n                style: { maxHeight: '60vh', overflow: 'auto', position: 'relative', minHeight: '20vh' }\n              }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {clientColumns.map((headCell, index) => (\n                    <TableCell key={`table-header-${index}`}>\n                      <TableSortLabel\n                        active={reports.orderBy === headCell.field}\n                        direction={reports.order ? 'asc' : 'desc'}\n                        onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !reports.order })}\n                      >\n                        {headCell.label}\n                      </TableSortLabel>\n                      {headCell.search && (\n                        <div className={classes.input}>\n                          {headCell.type && headCell.type === 'date' ? (\n                            <DatePicker\n                              noMargin\n                              id={`${headCell.field}`}\n                              onChange={date =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: date.toISOString(),\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          ) : (\n                            <TextField\n                              noMargin\n                              onChange={event =>\n                                handleOnFilter({\n                                  field: headCell.field,\n                                  value: event.target.value,\n                                  match: headCell.match\n                                })\n                              }\n                            />\n                          )}\n                        </div>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              }\n              body={\n                reports.data &&\n                reports.data.map((claim, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{claim.type}</TableCell>\n                    <TableCell>{claim.total_amount.toFixed(2)}</TableCell>\n                    <TableCell>{claim.cases}</TableCell>\n                    <TableCell>{claim.availed_by_principals}</TableCell>\n                    <TableCell>{claim.availed_by_dependents}</TableCell>\n                  </TableRow>\n                ))\n              }\n              pagination\n              count={reports.count}\n              page={reports.page}\n              limit={reports.limit}\n              rowsPerPageOptions={reports.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* <ClaimsUtilLedgerReport\n        refresh={refreshMemberReport}\n        dateRange={{ from: reports.range.from, to: reports.range.to }}\n        dataColumns={memberDataColumns}\n        hideReport={reportType === 'client' ? 'true' : ''}\n        hideHeader='true'\n      /> */}\n\n      {reportType && reportType === 'member' && (\n        <div>\n          <div className={classes.header}>\n            <Typography variant='h6'>\n              {SafeAccess(member, ['info', 'first_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'middle_name'], '') +\n                ' ' +\n                SafeAccess(member, ['info', 'last_name'], '')}\n            </Typography>\n            <Typography variant='h6'>{SafeAccess(member, ['info', 'brand_name'], '')}</Typography>\n          </div>\n\n          <div className={classes.content}>\n            <table className={classes.memberinfo}>\n              <tbody>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'member_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>Birthdate (Age)</td>\n                  <td className={classes.memberInfoValue}>\n                    {member &&\n                      member.info &&\n                      moment(SafeAccess(member, ['info', 'date_of_birth'], '')).format('MMMM DD, YYYY') +\n                        ' (' +\n                        moment().diff(SafeAccess(member, ['info', 'date_of_birth'], ''), 'years', false) +\n                        ')'}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Gender</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'gender'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>Plant Type</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 1, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 1, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Civil Status</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'civil_status'], '')}</td>\n                </tr>\n                <tr className={classes.memberinfoRow}>\n                  <td className={classes.memberInfoLabel}>R&amp;B</td>\n                  <td className={classes.memberInfoValue}>{SafeAccess(member, ['info', 'plan_type'], '')}</td>\n\n                  <td className={classes.memberInfoLabel}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'type'], '')} Limit\n                  </td>\n                  <td className={classes.memberInfoValue}>\n                    {SafeAccess(member, ['benefit_limits', 0, 'limit_unit'], '') +\n                      ' ' +\n                      SafeAccess(member, ['benefit_limits', 0, 'limit'], '')}\n                  </td>\n\n                  <td className={classes.memberInfoLabel}>Effectivity Date</td>\n                  <td className={classes.memberInfoValue}>\n                    {moment(SafeAccess(member, ['info', 'effectivity_date'], '')).format('MMMM DD, YYYY')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          {/* TODO: replace with filler */}\n          <br />\n\n          <Utilization\n            fetchService={ClaimsAdjudicationServices.getUtilizations}\n            utilizationLoa={utilizationLoa}\n            // isMember={isMember}\n            member={member}\n            // client={client}\n            diagnosis={[]}\n            dataColumns={memberDataColumns}\n            hideSearchBar\n            hideActionColumn\n          />\n        </div>\n      )}\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './LoadingHimsData.module.scss'\n\nconst columns = [\n  { label: `Member's Account No.`, field: 'member_account_number', match: 'start' },\n  { label: `Member's Plan Contract`, field: 'contract', match: 'exact' },\n  { label: 'Claim No.', field: 'claim_number', search: true, match: 'start' },\n  { label: 'Date of Availment', type: 'date', field: 'availment_date', match: 'date' },\n  { label: 'Approved Date', type: 'date', field: 'approved_date', match: 'date' },\n  { label: 'Approved by', field: 'approved_by', match: 'any' },\n  { label: 'Posted Date', type: 'date', field: 'posted_date', match: 'date' },\n  { label: 'Posted by', field: 'posted_by', match: 'any' },\n  { label: 'TPA', field: 'TPA', match: 'any' },\n  { label: 'SOA Number', field: 'soa_number', match: 'start' },\n  { label: 'Office Branch', field: 'office_branch', match: 'any' },\n  { label: 'Reimbursement', field: 'reimbursement', match: 'exact' },\n  { label: 'Type of Availment', field: 'availment_type', match: 'any' },\n  { label: 'Amount of Availment', type: 'currency', field: 'availment_amount', match: 'number' },\n  { label: 'Date Admitted', type: 'date', field: 'date_admitted', match: 'date' },\n  { label: 'Date Discharge', type: 'date', field: 'date_discharged', match: 'date' },\n  { label: 'Hospital/Clinic Code', field: 'facility_code', match: 'any' },\n  { label: 'Procedure/s', field: 'procedures', match: 'any' },\n  { label: 'Diagnosis', field: 'diagnosis', match: 'any' },\n  { label: 'In House', field: 'in_house', match: 'any' },\n  { label: 'Payment Due Date', type: 'date', field: 'payment_due_date', match: 'date' },\n  { label: 'Breakdown Amount', type: 'currency', field: 'breakdown_amount', match: 'number' },\n  { label: 'Breakdown AR Amount', type: 'currency', field: 'breakdown_ar_amount', match: 'number' },\n  { label: 'AR Addresee', field: 'ar_addresee', match: 'any' },\n  { label: `Member's Name`, field: 'member_name', match: 'any' },\n  { label: 'Payee Code', field: 'payee_code', match: 'any' },\n  { label: 'Payee Name', field: 'payee_name', match: 'any' },\n  { label: 'Disease Code', field: 'disease_code', match: 'any' },\n  { label: 'Disease Name', field: 'disease_name', match: 'any' },\n  { label: 'Layer', field: 'layer', match: 'any' },\n  { label: 'Remarks', field: 'remarks', match: 'any' },\n  { label: 'AR Reason', field: 'ar_reason', match: 'any' },\n  { label: 'Code of AR Reason', field: 'ar_reason_code', match: 'any' },\n  { label: 'Type of Service', field: 'type_of_service', match: 'any' },\n  { label: 'Hospital Services Details', field: 'hospital_service_details', match: 'any' },\n  { label: 'Hospital Services Amount', type: 'currency', field: 'hospital_service_amount', match: 'number' },\n  { label: 'Hospital Services AR Amount', type: 'currency', field: 'hospital_service_ar_amount', match: 'number' }\n]\n\nexport default function LoadingHimsData (props) {\n  const [claims, setClaims] = React.useState({\n    raw: [],\n    data: [],\n    filter: {},\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'member_account_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Template for Loading HIMS Data')\n    BreadcrumbsService.setSelectedItems(['loadingHimsData'])\n  }, [])\n\n  const fetchHIMSData = params => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      console.log(res)\n      setClaims(state => ({ ...state, data: results, raw, count, page, limit }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchHIMSData(_params)\n  }\n\n  const handleOnColumnFilter = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    fetchHIMSData(_params)\n  }\n\n  const handleGenerateReport = () => {\n    LoadingService.loading(true)\n    ClaimsServices.loadingHIMSData({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { results } = res.data.data\n\n      const claims = results.map(i => ({\n        ...i,\n        availment_date: DateFormatter(i.availment_date),\n        approved_date: DateFormatter(i.approved_date),\n        posted_date: DateFormatter(i.posted_date),\n        date_admitted: DateFormatter(i.date_admitted),\n        date_discharged: DateFormatter(i.date_discharged),\n        payment_due_date: DateFormatter(i.payment_due_date)\n      }))\n\n      const header = columns.map(c => c.label)\n      const rows = claims.map(claim =>\n        columns.map(col => formatData({ type: col.type, source: claim, field: col.field }))\n      )\n\n      ArrayToCSV({ fileName: 'Loading HIMS Data Report', header, rows })\n      LoadingService.loading(false)\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                fetchHIMSData(claims)\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    <TableSortLabel\n                      active={claims.orderBy === headCell.field}\n                      direction={claims.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnPaginate({ orderBy: headCell.field, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnColumnFilter({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.field]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                              setClaims(state => ({\n                                ...state,\n                                filter: { ...state.filter, [headCell.field]: { value: search, match: headCell.match } }\n                              }))\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell key={`table-cell-${claimIndex}-${colIndex}`}>\n                      {formatData({ type: col.type, source: claim, field: col.field })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ConfinementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, match: 'any' },\n  { label: 'ICD10 Diagnosis', type: 'array', data: 'diagnosis.diagnosis_description', search: true, match: 'any' },\n  { label: 'Date of Service', type: 'date', data: 'date_from', search: true, match: 'date' },\n  { label: 'Member Account No.', data: 'member_account_number', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ConfinementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('List of Emergencies Leading to Confinement')\n    BreadcrumbsService.setSelectedItems(['confinementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0 } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n      setClaims(state => ({ ...state, data: _claims, count }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.confinementReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const _claims = results.map(claim => ({\n        ...claim\n      }))\n\n      const rows = _claims.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n      // console.log(rows)\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'List of Emergencies Leading to Confinement',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          []\n        ],\n        fileName: 'List of Emergencies Leading to Confinement Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output && output !== '' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","export default {\n  // rows\n  header: [\n    { id_row: { label_left: 'Medical Partner ID:', label_right: 'Total PR Amount:' } },\n    { name_row: { label_left: 'Medical Partner Name:', label_right: 'Discount Amount:' } },\n    { bundle_row: { label_left: 'Bundle/SOA Number:', label_right: 'Due Date:' } },\n    { date_row: {label_left: 'Bundle/SOA Date:'} }\n  ],\n  footer: ['Total']\n}\n","import React from 'react'\n\n// Material Component\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Footer.module.scss'\n\nexport default function ClaimsUtilLedgerReport (props) {\n  const { total = {}, bundles = [], page } = props\n\n  // TODO For refactoring :(( )\n  return (\n    <div className={classes.footer}>\n      <hr />\n      {bundles.length > 0 && (\n        <div className={classes.bundle}>\n          <p><span><b>Bundle Number: </b></span>{`${bundles[page - 1]}`}</p>\n        </div>\n      ) }\n\n      <div className={classes.total}>\n        <div className={classes['total-row']}>\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL APPROVED: ${CurrencyFormatter(total.total_approved_amount)}`}</p>\n          </div>\n\n          <div className={classes['total-cell']}>\n            <p>{`TOTAL TAX: ${CurrencyFormatter(total.total_tax_amount)}`}</p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { staticHeaderFooter } from './helper/staticHeaderFooter'\n\n// Components\nimport Footer from './Footer/Footer'\n\n// Validator\nimport DateRangeValidator from './../TransmittalReport/validator/DateRangeValidator'\n\n// Styles\nimport classes from './PaymentRequestReport.module.scss'\n\nconst columns = [\n  { label: 'No.', sortField: 'number', sort: false, search: false, align: 'left' },\n  { label: 'RCS/LOA No.', sortField: 'loa_number', sort: true, search: true, align: 'left', match: 'start' },\n  {\n    label: 'Member Account No.',\n    sortField: 'member_account_number',\n    sort: true,\n    search: true,\n    align: 'left',\n    match: 'any'\n  },\n  { label: 'Member Name', sortField: 'member_name', sort: true, search: true, align: 'left', match: 'any' },\n  { label: 'Approved Amount', sortField: 'approved_amount', sort: false, search: false, align: 'right' },\n  { label: 'Tax Amount', sortField: 'tax_amount', sort: false, search: false, align: 'right' }\n]\n\nconst initialDetails = {\n  total_pr_amount: 0,\n  discount_amount: 0,\n  due_date: '',\n  total_approved_amount: 0,\n  total_tax_amount: 0\n}\n\nexport default function PaymentRequestReport (props) {\n  const [claims, setClaims] = React.useState({\n    bundles: [],\n    raw: [],\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    orderBy: 'loa_number',\n    order: true,\n    page: 1,\n    limit: 1,\n    count: 0,\n    filter: {},\n    rowsPerPageOptions: [0],\n    // on filter_value\n    search: {\n      medical_partner_id: '',\n      medical_partner_name: '',\n      bundle: ''\n    }\n  })\n\n  const [fetching, setFetching] = React.useState(false)\n\n  const [details, setDetails] = React.useState(initialDetails)\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    bundle: {\n      id: [],\n      data: []\n    }\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Payment Request Report')\n    BreadcrumbsService.setSelectedItems(['paymentRequestReport'])\n  }, [])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    bundle: null,\n    column: null\n  })\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.medicalPartner.data) {\n        if (value === i.id || value === i.name) {\n          setClaims(state => ({\n            ...state,\n            search: { ...state.search, medical_partner_id: i.id, medical_partner_name: i.name }\n          }))\n\n          setSuggestions(state => ({\n            ...state,\n            medicalPartner: {\n              id: [],\n              name: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        medicalPartner: {\n          id: [],\n          name: [],\n          data: []\n        }\n      }))\n      const { 2: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Bundle/SOA*\n  const handleOnChangeBundleSoa = ({ value, field, isSuggestionClick }) => {\n    setClaims(state => ({ ...state, search: { ...state.search, [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.bundle.data) {\n        if (value === i.bundle_number || value === i.soa) {\n          setClaims(state => ({\n            ...state,\n            search: {\n              ...state.search,\n              bundle: value\n            }\n          }))\n          setSuggestions(state => ({\n            ...state,\n            bundle: {\n              id: [],\n              data: []\n            }\n          }))\n          return\n        }\n      }\n    } else {\n      setSuggestions(state => ({\n        ...state,\n        bundle: {\n          id: [],\n          data: []\n        }\n      }))\n      getBundleSoaSuggestions({ value })\n    }\n  }\n\n  const getBundleSoaSuggestions = ({ value = '' }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.bundle)\n    setDebounce(state => ({\n      ...state,\n      bundle: setTimeout(() => {\n        if (value) {\n          ClaimsServices.lookups({\n            on: 'bundle-soa',\n            params: { query: value }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n\n            // TODO Clarify if its OR (Bundle/SOA)\n            // store soa_number first\n            data.forEach(d => {\n              if (d.soa) _items.push(d.soa)\n              _items.push(d.bundle_number)\n            })\n\n            setSuggestions(state => ({\n              ...state,\n              bundle: { ...state.bundle, id: _items.filter(i => i.startsWith(value)), data }\n            }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnFilter = params => {\n    if (claims.search.medical_partner_id.trim().length < 3 || claims.search.medical_partner_name.trim().length < 3) {\n      LoadingService.loading(false)\n      setFetching(false)\n      return setClaims(state => ({ ...state, data: [] }))\n    }\n    LoadingService.loading(true)\n\n    ClaimsServices.paymentRequestReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter,\n      searchValue: params.search\n    }).then(res => {\n      const { results = [], raw = [], count, limit, page } = res.data.data\n      setClaims(state => ({ ...state, bundles: results, raw, count, page, limit }))\n\n      setFetching(true)\n\n      const bundle_number = results[params.page - 1]\n      if (bundle_number) {\n        ClaimsServices.paymentRequestClaims(\n          { sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}` },\n          bundle_number\n        ).then(res => {\n          const { results = [], details = {} } = res.data.data\n\n          // details.due_date = DateFormatter(details.due_date)\n\n          setClaims(state => ({ ...state, data: results }))\n          setDetails(state => ({ ...state, ...details }))\n          setFetching(false)\n          LoadingService.loading(false)\n        })\n      } else {\n        setClaims(state => ({ ...state, data: [] }))\n        setDetails(state => ({ ...state, ...initialDetails }))\n        setFetching(false)\n        LoadingService.loading(false)\n      }\n    })\n  }\n\n  const handlePagination = params => {\n    const bundle_number = params.bundles[params.page - 1]\n\n    ClaimsServices.paymentRequestClaims(\n      {\n        sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n        filter: params.filter\n      },\n      bundle_number\n    ).then(res => {\n      const { results = [], details = {} } = res.data.data\n\n      // details.due_date = DateFormatter(details.due_date)\n\n      setClaims(state => ({ ...state, data: results }))\n      setDetails(state => ({ ...state, ...details }))\n      setFetching(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const handleColumnFiltering = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    // setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n    setFetching(true)\n    setClaims(state => ({ ...state, ...params }))\n    handlePagination(_params)\n  }\n\n  const handleGenerateReport = () => {\n    if (!claims.raw.length) return\n\n    const header = columns.map(i => i.label)\n\n    const data = staticHeaderFooter({ ...claims.range, raw: claims.raw, ...claims.search, columns: header })\n\n    ArrayToCSV({ fileName: `${claims.search.medical_partner_name} Payment Request Report`, data })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes['search-header']}>\n          {/* row-1 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner ID:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner id'\n                  id='medical-partner-id'\n                  value={claims.search.medical_partner_id}\n                  suggestions={suggestions.medicalPartner.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Total PR Amount: ${CurrencyFormatter(details.total_pr_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-2 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Medical Partner Name:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by medical partner name'\n                  id='medical-partner-name'\n                  value={claims.search.medical_partner_name}\n                  suggestions={suggestions.medicalPartner.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'medical_partner_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Discount Amount: ${CurrencyFormatter(details.discount_amount)}`}</Typography>\n            </div>\n          </div>\n          {/* row-3 */}\n          <div className={classes['search-header-child']}>\n            <div className={classes['column-label']}>\n              <Typography variant='h6'>Bundle/SOA Number:</Typography>\n            </div>\n            <div className={classes['column-input']}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  placeholder='Search by bundle/soa number'\n                  id='account-number'\n                  value={claims.search.bundle}\n                  suggestions={suggestions.bundle.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeBundleSoa({\n                      field: 'bundle',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                />\n              </div>\n            </div>\n            <div className={classes['column-label2']}>\n              <Typography variant='h6'>{`Due Date: ${\n                details.due_date ? DateFormatter(details.due_date) : ''\n              }`}</Typography>\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range: </Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                if (validate()) return\n                LoadingService.loading(true)\n                handleOnFilter({ ...claims, page: 1 })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => handleGenerateReport()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          // onClick={event => {}}\n                          onClick={event =>\n                            handleColumnFiltering({ orderBy: headCell.sortField, order: !claims.order })\n                          }\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <TextField\n                      id={`text-field-${headCell.sortField}`}\n                      readOnly={!headCell.search}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce.column)\n                        setDebounce(state => ({\n                          ...state,\n                          column: setTimeout(() => {\n                            handleColumnFiltering({\n                              filter: {\n                                ...claims.filter,\n                                [headCell.sortField]: { value: search, match: headCell.match }\n                              }\n                            })\n                            // setClaims(state => ({\n                            //   ...state,\n                            //   filter: { ...state.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                          }, 500)\n                        }))\n                      }}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              fetching ? (\n                <TableRow className={classes['table-row']}>\n                  <TableCell align='center' colSpan={6}>\n                    <CircularProgress size={30} />\n                  </TableCell>\n                </TableRow>\n              ) : claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'>{item.loa_number}</TableCell>\n                    <TableCell align='left'>{item.member_account_number}</TableCell>\n                    <TableCell align='left'>{`${item.member_name}`}</TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.approved_amount <= 0 ? item.approved_amount : 0)}\n                    </TableCell>\n                    <TableCell align='right'>\n                      {CurrencyFormatter(!item.tax_amount <= 0 ? item.tax_amount : 0)}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n          <Footer\n            total={{ total_approved_amount: details.total_approved_amount, total_tax_amount: details.total_tax_amount }}\n            bundles={claims.bundles}\n            page={claims.page}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// TODO Need refactor\n// UGLY CSV Generation\nexport const staticHeaderFooter = args => {\n  const { columns = [], to, from, raw = [], medical_partner_id, medical_partner_name } = args\n  columns.push('\\r\\n')\n  const data = []\n\n  for (const item of raw) {\n    const total_approved_amount = item.details.reduce((a, c) => a + c.approved_amount, 0)\n    const total_tax_amount = item.details.reduce((a, c) => a + c.tax_amount, 0)\n\n    // HEADER\n    const static_header = constants.header.map(i => {\n      switch (true) {\n        case i.hasOwnProperty('id_row'):\n\n          return [i.id_row.label_left, medical_partner_id, '', '', i.id_row.label_right, total_approved_amount, '\\r\\n']\n        case i.hasOwnProperty('name_row'):\n          // hardcoded discount value\n          return [i.name_row.label_left, medical_partner_name, '', '', i.name_row.label_right, 0, '\\r\\n']\n        case i.hasOwnProperty('bundle_row'):\n          return [i.bundle_row.label_left, item._id, '', '', i.bundle_row.label_right, DateFormatter(item.due_date), '\\r\\n']\n        case i.hasOwnProperty('date_row'):\n          return [i.date_row.label_left, `${DateFormatter(from)} - ${DateFormatter(to)}`, '\\r\\n']\n      }\n    })\n\n    // COLUMN HEADER\n    const _columns = columns.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1)\n\n    // BODY\n    const claims = item.details.map((i, index) => ({ no: index + 1, ...i }))\n    const rows = []\n    claims.forEach(item => {\n      delete item.bundle_number\n      rows.push(Object.values(item))\n    })\n    const body = rows.map(row =>\n      [\n        row.reduce((joined, currentValue) => [joined, `\"${currentValue}\"`].join(','), '').slice(1),\n        '\\r\\n'\n      ].join('')\n    )\n\n    // FOOTER\n    const static_footer = constants.footer.map(i => {\n      switch (i) {\n        case 'Total':\n          return ['', '', '', i, total_approved_amount, total_tax_amount, '\\r\\n']\n      }\n    })\n    const _data = [].concat(static_header, '\\r\\n', _columns, '\\r\\n', body, '\\r\\n', static_footer, '\\r\\n', '\\r\\n', '\\r\\n')\n\n    data.push(..._data)\n  }\n\n  return data\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\n// import moment from 'moment'\n\n// Styles\nimport classes from './ReimbursementReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No.', data: 'no', search: false },\n  { label: 'Claim Number', data: 'claim_number', search: true, match: 'any' },\n  { label: 'Reimbursement Claim Amount', type: 'number', data: 'grand_total', search: false },\n  { label: 'Reimbursement Category', data: 'reimbursement_category', search: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', type: 'sentence', search: true, match: 'any' },\n  { label: 'Contract Plan Type', data: 'contract_plan_type', search: true, match: 'any' },\n  { label: 'Geography', data: 'geography', search: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ReimbursementReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'latest.date.from'\n    },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20],\n    grandTotal: 0\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Claims Report')\n    BreadcrumbsService.setSelectedItems(['reimbursementReport'])\n  }, [])\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], count = 0, grand_total = 0 } = data\n      setClaims(state => ({ ...state, data: results, count, grandTotal: grand_total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursementClaimReport({\n      search: claims.search,\n      range: claims.range,\n      filter: claims.filter,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.count > 0 ? claims.count : claims.rowsPerPageOptions[0]\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Claims Report',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Total Amount: ${grand_total}`]\n        ],\n        fileName: 'Reimbursement Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    fetchRecords()\n    // claim.range is triggered manually via Filter button\n  }, [props.refresh, claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'sentence') {\n      output = source[field]\n        .toLowerCase()\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n        .join(' ')\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' disabled={claims.data.length <= 0} onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel\n                      onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                    >\n                      {headCell.label}\n                    </TableSortLabel>\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: date.toISOString(),\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      ) : (\n                        <TextField\n                          noMargin\n                          onChange={event =>\n                            handleOnFilter({\n                              field: headCell.data,\n                              value: event.target.value,\n                              match: headCell.match\n                            })\n                          }\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.grandTotal)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsEncodingServices {\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static storeLookups ({ on, data, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'post',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static updateLookups ({ on, data, code, params }) {\n    return axios({\n      url: `/lookups/${code}/${on}`,\n      method: 'put',\n      data,\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date Range From')\n    .required(),\n  date_to: Joi.date()\n    .label('Date Range To')\n    .required()\n    .min(Joi.ref('date_from'))\n    .max(Joi.ref('date_max'))\n    .messages({\n      'date.min': `\"Date Range To\" should be on or after \"Date Range From\"`,\n      'date.max': `\"Date Range To\" should be on the same year....s\"`\n    }),\n  date_max: Joi.date()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// MUI Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PrintIcon from '@material-ui/icons/Print'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// Custom Components\nimport Table from 'SharedComponents/Table/Table'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsMaintainerServices from 'Services/Api/ClaimsMaintainerServices'\nimport classes from './ClaimsSummaryReport.module.scss'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\n\n// Validator\nimport DateRangeValidator from './validator/DateRangeValidator'\n\n// Utilities\nimport moment from 'moment'\n\nconst columns = [\n  { label: 'Month', align: 'center' },\n  { label: 'Number of Claims Received', align: 'center' },\n  { label: 'Number of Claims Processed', align: 'center' },\n  { label: 'Amount of Claims Processed', align: 'center' }\n]\nconst initialClaims = {\n  data: {\n    claims: [\n      { month: 'January', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'Febuary', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'March', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'April', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'May', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'June', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'July', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'August', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'September', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'October', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'November', number_of_claims: 0, claims_processed: 0, amount_processed: 0 },\n      { month: 'December', number_of_claims: 0, claims_processed: 0, amount_processed: 0 }\n    ],\n    total_received: 0,\n    total_processed: { count: 0, total: 0 }\n  },\n  range: {\n    from: moment().format(),\n    to: moment().format()\n  },\n  filter: {\n    claim_type: 'ALL',\n    claim_source: 'ALL',\n    claim_sub_type: 'ALL',\n    contract_plan: 'ALL',\n    section: 'ALL',\n    claim_status: 'ALL',\n    user: 'ALL',\n    geography: 'ALL'\n  }\n}\nconst initialValue = {\n  claim_type: [],\n  claim_source: [],\n  claim_sub_type: [],\n  contract_plan: [],\n  section: [],\n  claim_status: [],\n  user: [],\n  geography: []\n}\n\n/**\n * Claims Summary Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default function ClaimsSummaryReport (props) {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [suggestion, setSuggestion] = React.useState(initialValue)\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    geopgraphy: null\n  })\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [claims, setClaims] = React.useState(initialClaims)\n\n  React.useEffect(() => {\n    console.log('bleh')\n    PageTitleService('Claims Summary Report')\n    BreadcrumbsService.setSelectedItems(['claimsSummaryReport'])\n  }, [])\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.map(d => d[field])] }))\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  const handleOnFilter = () => {\n    LoadingService.loading(true)\n    const params = {\n      filter: claims.filter,\n      range: claims.range\n    }\n    ClaimsServices.claimsSummaryReport(params).then(({ data: res }) => {\n      const { data } = res\n      setClaims({ ...claims, data: data })\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to,\n      date_max: `12-31-${moment(claims.range.from).year()}`\n    })\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type || 'ALL'}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source || 'ALL'}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type || 'ALL'}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section || 'ALL'}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, section: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user || 'ALL'}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, user: event }\n                  }))\n                }}\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.geography || 'ALL'}\n                suggestions={[]}\n                onChange={event => {\n                  setClaims(state => ({\n                    ...state,\n                    filter: { ...state.filter, geography: event }\n                  }))\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && handleOnFilter()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => {}}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell className={classes[headCell.class]} align={headCell.align} key={`table-header-${index}`}>\n                    {headCell.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.claims.length ? (\n                claims.data.claims.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell align='center'>{item.month}</TableCell>\n                    <TableCell align='center'>{item.number_of_claims}</TableCell>\n                    <TableCell align='center'>{item.claims_processed}</TableCell>\n                    <TableCell align='center'>{item.amount_processed}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination={false}\n          />\n        </div>\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>Grand Total:</Typography>\n          </div>\n          <div className={classes.received}>\n            <Typography className='bold'>{claims.data.total_received}</Typography>\n          </div>\n          <div className={classes.processed}>\n            <Typography className='bold'>{claims.data.total_processed.count}</Typography>\n          </div>\n          <div className={classes.total}>\n            <Typography className='bold'>{claims.data.total_processed.total}</Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ProductivityPerformaceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Time', data: 'time' },\n  { label: 'Number of Claims Received', type: 'number', data: 'received' },\n  { label: 'Number of Claims Processed', type: 'number', data: 'processed' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', claim_sub_type: '', section: '', user: '', region: '' },\n    receivedTotal: 0,\n    processedTotal: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    claim_sub_type: [],\n    section: [],\n    user: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    claim_sub_type: null,\n    section: null,\n    user: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Productivity and Performance Report')\n    BreadcrumbsService.setSelectedItems(['productivityPerformaceReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        receivedTotal: received_total,\n        processedTotal: processed_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.productivityReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], received_total = 0, processed_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Productivity and Performance Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Claim Sub-Type/Category: ${claims.filter.claim_sub_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${received_total}`, `${processed_total}`].join(',')\n        ],\n        fileName: 'Productivity and Performance Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Sub-Type/Category</Typography>\n              <AutoComplete\n                placeholder='Search by claim sub-type/category'\n                id='claim-sub-type'\n                value={claims.filter.claim_sub_type}\n                suggestions={suggestion.claim_sub_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-sub-type',\n                    field: 'sub_type'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.receivedTotal)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.processedTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ReturnedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'number' },\n  { label: 'Reason for Return', sortField: 'return_reason', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner ID', sortField: 'facility_id', search: true, sort: true, match: 'start' },\n  { label: 'Medical Partner Name', sortField: 'facility_name', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' }\n]\n\nexport default function ReturnedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['returnedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], total = [], count, limit, page } = res.data.data\n      const [_total] = total\n\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        page,\n        limit,\n        total_amount: total.length ? _total.total_amount : 0\n      }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.returnedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', 'Total Amount:', `${claims.total_amount}`].join(',')\n        ],\n        fileName: 'Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={classes.input}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        readOnly={!headCell.search}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={index}>\n                    <TableCell align='left'>{item.no}</TableCell>\n                    <TableCell align='left'> {item.claim_number}</TableCell>\n                    <TableCell align='right'>{CurrencyFormatter(item.claim_amount)}</TableCell>\n                    <TableCell align='left'>{item.return_reason}</TableCell>\n                    <TableCell align='left'> {item.facility_id}</TableCell>\n                    <TableCell align='left'>{item.facility_name}</TableCell>\n                    <TableCell align='left'>{item.claim_type}</TableCell>\n                    <TableCell align='left'>{item.claim_source}</TableCell>\n                    <TableCell align='left'>{item.geography}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <Typography variant='caption' className='bold'>\n                <span>Total Amount: </span>\n                <span>{CurrencyFormatter(claims.total_amount)}</span>\n              </Typography>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './PerformanceReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'type' },\n  { label: 'Total Number of Handled Claims', type: 'number', data: 'count' },\n  { label: 'Average Handling Time', type: 'number', data: 'average' },\n  { label: 'Number of Hours Worked', type: 'number', data: 'work' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { claim_type: '', claim_source: '', contract_plan_type: '', section: '', user: '' },\n    total: {}\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    claim_type: [],\n    claim_source: [],\n    contract_plan_type: [],\n    section: [],\n    user: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    claim_type: null,\n    claim_source: null,\n    contract_plan_type: null,\n    section: null,\n    user: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n      setClaims(state => ({ ...state, data: results, total }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.performanceReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total = {} } = data\n\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Performance Summary Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Contract Plan Type: ${claims.filter.contract_plan_type}`,\n            '\\r\\n',\n            `Section: ${claims.filter.section}`,\n            '\\r\\n',\n            `User: ${claims.filter.user}`,\n            '\\r\\n'\n          ],\n          [`Grand Amount: `, `${total.count}`, `${total.average}`, `${total.work}`].join(',')\n        ],\n        fileName: 'Performance Summary Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Performance Summary Report')\n    BreadcrumbsService.setSelectedItems(['performanceReport'])\n  }, [])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Contract Plan Type</Typography>\n              <AutoComplete\n                placeholder='Search by contract plan type'\n                id='contract-plan-type'\n                value={claims.filter.contract_plan_type}\n                suggestions={suggestion.contract_plan_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'contract-plan-type',\n                    field: 'code'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Section</Typography>\n              <AutoComplete\n                placeholder='Search by section'\n                id='section'\n                value={claims.filter.section}\n                suggestions={suggestion.section}\n                onChange={\n                  (value, isSuggestionClick) => {}\n                  // handleOnChange({\n                  //   value,\n                  //   isSuggestionClick,\n                  //   category: 'claim-sub-type',\n                  //   field: 'sub_type'\n                  // })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>User</Typography>\n              <AutoComplete\n                placeholder='Search by user'\n                id='user'\n                value={claims.filter.user}\n                suggestions={suggestion.user}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'user',\n                    field: 'first_name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.total.count}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.total.average}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{claims.total.work}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingPartialApprovedReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month' },\n  { label: 'Number of partially approved claims within grace period', type: 'number', data: 'total15Days' },\n  { label: 'Number of partially approved claims 1 week beyond grace period', type: 'number', data: 'total1Week' },\n  { label: 'Number of partially approved claims 1 month beyond grace period', type: 'number', data: 'total1Month' },\n  { label: 'Percentage of partially approved claims beyond grace period (total)', type: 'number', data: 'totalAll' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { facility_id: '', facility_name: '', claim_type: '', claim_source: '', region: '' },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facility_id: [],\n    facility_name: [],\n    claim_type: [],\n    claim_source: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility_id: null,\n    facility_name: null,\n    claim_type: null,\n    claim_source: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Partially Approved Claim Report')\n    BreadcrumbsService.setSelectedItems(['agingPartialApprovedReport'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingPartialApprovedClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Aging of Partially Approved Claim Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Medical Partner ID: ${claims.filter.facility_id}`,\n            '\\r\\n',\n            `Medical Partner Name: ${claims.filter.facility_name}`,\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`].join(',')\n        ],\n        fileName: 'Aging of Partially Approved Claim Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.facility_id}\n                suggestions={suggestion.facility_id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'id'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.facility_name}\n                suggestions={suggestion.facility_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            // Footer trials\n            // footer={\n            //   <TableRow>\n            //     <TableCell>\n            //       <Typography variant='caption' className={`bold ${classes.label}`}>\n            //         <span>Grand Total: </span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total15Days)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Week)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Month)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.totalAll)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //   </TableRow>\n            // }\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className={`bold ${classes.label}`}>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total15Days)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Week)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Month)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.totalAll)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './AgingReturnClaimReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'Month', data: 'month' },\n  { label: 'Number of partially approved claims within grace period', type: 'number', data: 'total15Days' },\n  { label: 'Number of partially approved claims 1 week beyond grace period', type: 'number', data: 'total1Week' },\n  { label: 'Number of partially approved claims 1 month beyond grace period', type: 'number', data: 'total1Month' },\n  { label: 'Percentage of partially approved claims beyond grace period (total)', type: 'number', data: 'totalAll' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { facility_id: '', facility_name: '', claim_type: '', claim_source: '', region: '' },\n    total15Days: 0,\n    total1Week: 0,\n    total1Month: 0,\n    totalAll: 0\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facility_id: [],\n    facility_name: [],\n    claim_type: [],\n    claim_source: [],\n    region: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    facility_id: null,\n    facility_name: null,\n    claim_type: null,\n    claim_source: null,\n    region: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Aging of Returned Claims Report')\n    BreadcrumbsService.setSelectedItems(['agingReturnedClaims'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        total15Days,\n        total1Week,\n        total1Month,\n        totalAll\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.agingReturnClaimsReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], total15Days = 0, total1Week = 0, total1Month = 0, totalAll = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Aging of Returned Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Medical Partner ID: ${claims.filter.facility_id}`,\n            '\\r\\n',\n            `Medical Partner Name: ${claims.filter.facility_name}`,\n            '\\r\\n',\n            `Claim Type: ${claims.filter.claim_type}`,\n            '\\r\\n',\n            `Claim Source: ${claims.filter.claim_source}`,\n            '\\r\\n',\n            `Geogpraphy: ${claims.filter.region}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [`Grand Total`, `${total15Days}`, `${total1Week}`, `${total1Month}`, `${totalAll}`].join(',')\n        ],\n        fileName: 'Aging of Returned Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Partner ID</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner id'\n                id='facility-id'\n                value={claims.filter.facility_id}\n                suggestions={suggestion.facility_id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'id'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Medical Parttner Name</Typography>\n              <AutoComplete\n                placeholder='Search by medical partner name'\n                id='facility-name'\n                value={claims.filter.facility_name}\n                suggestions={suggestion.facility_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'facility',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Type</Typography>\n              <AutoComplete\n                placeholder='Search by claim type'\n                id='claim-type'\n                value={claims.filter.claim_type}\n                suggestions={suggestion.claim_type}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-type',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Claim Source</Typography>\n              <AutoComplete\n                placeholder='Search by claim source'\n                id='claim-source'\n                value={claims.filter.claim_source}\n                suggestions={suggestion.claim_source}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'claim-source',\n                    field: 'source'\n                  })\n                }\n              />\n            </div>\n            <div className={classes.input}>\n              <Typography variant='caption'>Geography</Typography>\n              <AutoComplete\n                placeholder='Search by region'\n                id='geography'\n                value={claims.filter.region}\n                suggestions={suggestion.region}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'region',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n            // Footer trials\n            // footer={\n            //   <TableRow>\n            //     <TableCell>\n            //       <Typography variant='caption' className={`bold ${classes.label}`}>\n            //         <span>Grand Total: </span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total15Days)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Week)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.total1Month)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //     <TableCell>\n            //       <Typography variant='caption' className='bold'>\n            //         <span>{CurrencyFormatter(claims.totalAll)}</span>\n            //       </Typography>\n            //     </TableCell>\n            //   </TableRow>\n            // }\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className={`bold ${classes.label}`}>\n                  <span>Grand Total: </span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total15Days)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Week)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.total1Month)}</span>\n                </Typography>\n                <Typography variant='caption' className='bold'>\n                  <span>{CurrencyFormatter(claims.totalAll)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\n// import { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ClaimsBeyond3MonthsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: 'No', data: 'no' },\n  { label: 'Claim Number', data: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Date Received', data: 'received_date', type: 'date', search: true, match: 'date', sort: true },\n  { label: 'Medical Partner ID', data: 'facility_id', search: true, sort: true, match: 'any' },\n  { label: 'Medical Partner Name', data: 'facility_name', search: true, sort: true, match: 'any' },\n  { label: 'Date of Service', data: 'date_of_service', type: 'date', search: true, sort: true, match: 'date' },\n  { label: 'Claim Amount', data: 'claim_amount', sort: false, type: 'currency' },\n  { label: 'Claim Type', data: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', data: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Claim Status', data: 'claim_status', search: true, sort: true, match: 'any' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  // const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'latest.date.received'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'latest.date.received' },\n    // range: {\n    //   from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n    //   to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n    //   field: 'status_date'\n    // },\n    filter: {\n      claim_number: '',\n      date_received: '',\n      facility_id: '',\n      facility_name: '',\n      date_of_service: '',\n      claim_type: '',\n      claim_source: '',\n      claim_status: ''\n    },\n    grandTotal: 0,\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Claims Beyond 3 Months Report')\n    BreadcrumbsService.setSelectedItems(['claimsBeyond3Months'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchRecords({ ...claims, ...range })\n  }\n\n  // const handleOnFilter = args => {\n  //   const { field, value, match } = args\n  //   setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  // }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchRecords({ ..._params, range: dateRange })\n  }\n\n  const fetchRecords = params => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: params.range,\n      filter: params.filter,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0, count, limit, page } = data\n      setClaims(state => ({\n        ...state,\n        data: results,\n        count,\n        limit,\n        page,\n        grandTotal: grand_total\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.claimsBeyond3Months({\n      range: claims.range,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { data } = res.data\n      const { results = [], grand_total = 0 } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Claims Beyond 3 Months',\n            '\\r\\n',\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          ['', '', '', '', '', `Grand Total`, `${grand_total}`].join(',')\n        ],\n        fileName: 'Claims Beyond 3 Months',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  // React.useEffect(() => {\n  //   // Goal: Adjust columns to show based on data columns passed as props\n\n  //   let filtered = null\n  //   if (!dataColumns || dataColumns.length === 0) {\n  //     filtered = completeColumns\n  //   } else {\n  //     filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n  //   }\n  //   setColumns(filtered)\n  // }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    // <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n    //   <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => handleOnClickFilter({ range: claims.range })}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.data, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    {/*  */}\n                    <div className={classes.input}>\n                      {headCell.type && headCell.type === 'date' ? (\n                        <DatePicker\n                          noMargin\n                          id={`${headCell.data}`}\n                          value={null}\n                          onChange={date => {\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: date.toISOString(), match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      ) : (\n                        <TextField\n                          readOnly={!headCell.search}\n                          noMargin\n                          onChange={event => {\n                            const search = event.target.value\n                            clearTimeout(debounce)\n                            setDebounce(\n                              setTimeout(() => {\n                                handleOnPaginate({\n                                  filter: {\n                                    ...claims.filter,\n                                    [headCell.data]: { value: search, match: headCell.match }\n                                  },\n                                  page: 1\n                                })\n                              }, 500)\n                            )\n                          }}\n                        />\n                      )}\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((claim, claimIndex) => (\n                  <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${claimIndex}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: claim, field: col.data })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            footerComponent={\n              <div className={classes.footer}>\n                <Typography variant='caption' className='bold'>\n                  <span>Grand Total: </span>\n                  <span>{CurrencyFormatter(claims.grandTotal)}</span>\n                </Typography>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { DateFormatter, CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './ReimbursementAgingReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst completeColumns = [\n  { label: '', data: 'item' },\n  { label: 'Number of Reimbursement Claims', type: 'number', data: 'reimbursement_count' },\n  { label: 'Number of Percentage of Reimbursement Claims', type: 'number', data: 'reimbursement_percent' }\n]\n\n/**\n * Claims Utilization Report\n *\n * @export\n *\n * @param {*} props\n *   dataColumns - default []; if defined, will be the allowable data columns that\n *     will be shown on the claims utilization report\n *   hideReport - default false; if defined, will be used to hide the entire report\n *   hideheader - default false; if defined, will be used to hide the header section\n *   dateRange - default current date; if defined, will be used to define the date range in-effect\n *\n * @returns\n */\nexport default props => {\n  const { dataColumns = [], hideReport, hideHeader, dateRange } = props\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    range: {\n      from: SafeAccess(dateRange, 'from', new Date().toISOString()),\n      to: SafeAccess(dateRange, 'to', new Date().toISOString()),\n      field: 'created_at'\n    },\n    filter: { reimbursement_category: '' }\n  })\n\n  const [suggestion, setSuggestion] = React.useState({\n    reimbursement_category: []\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    reimbursement_category: null\n  })\n\n  const [columns, setColumns] = React.useState(completeColumns)\n\n  React.useEffect(() => {\n    PageTitleService('Reimbursement Aging Report')\n    BreadcrumbsService.setSelectedItems(['agingReimbursement'])\n  }, [])\n\n  const handleOnFilter = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const fetchRecords = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      setClaims(state => ({\n        ...state,\n        data: results\n      }))\n      LoadingService.loading(false)\n    })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = () => {\n    LoadingService.loading(true)\n    ClaimsServices.reimbursmentAgingReport({\n      range: claims.range,\n      filter: claims.filter\n    }).then(res => {\n      const { data } = res.data\n      const { results = [] } = data\n      const rows = results.map(claim => {\n        return columns.map(col => formatData({ type: col.type, source: claim, field: col.data }))\n      })\n\n      const header = columns.map(c => c.label)\n\n      ArrayToCSV({\n        statics: [\n          [\n            'Reimbursement Aging Report',\n            '\\r\\n',\n            '\\r\\n',\n            `Reimbursement Category: ${claims.filter.reimbursement_category}`,\n            '\\r\\n',\n            `Date Range: ${DateFormatter(claims.range.from)} - ${DateFormatter(claims.range.to)}`,\n            '\\r\\n',\n            '\\r\\n'\n          ]\n        ],\n        fileName: 'Reimbursement Aging Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  // React.useEffect(() => {\n  //   fetchRecords()\n  //   // claim.range is triggered manually via Filter button\n  // }, [props.refresh])\n\n  React.useEffect(() => {\n    setClaims(state => ({\n      ...state,\n      range: {\n        ...state.range,\n        to: dateRange ? dateRange.to : new Date().toISOString(),\n        from: dateRange ? dateRange.from : new Date().toISOString()\n      }\n    }))\n  }, [dateRange])\n\n  React.useEffect(() => {\n    // Goal: Adjust columns to show based on data columns passed as props\n\n    let filtered = null\n    if (!dataColumns || dataColumns.length === 0) {\n      filtered = completeColumns\n    } else {\n      filtered = completeColumns.filter(entry => dataColumns.indexOf(entry.data) > -1)\n    }\n    setColumns(filtered)\n  }, [dataColumns])\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  const handleOnChange = ({ value, category, field, isSuggestionClick }) => {\n    const _category = category.split('-').join('_')\n    setClaims(state => ({ ...state, filter: { ...state.filter, [_category]: value } }))\n    if (!isSuggestionClick) {\n      clearTimeout(debounce[category])\n      setDebounce(state => ({\n        ...state,\n        [_category]: setTimeout(() => {\n          if (value) {\n            ClaimsServices.lookupsQuery({ category, field, value }).then(res => {\n              const { data } = res.data\n              if (data.body) {\n                setSuggestion(state => ({\n                  ...state,\n                  [_category]: ['ALL', ...data.body.splice(0, 10).map(d => d[field])]\n                }))\n              } else {\n                setSuggestion(state => ({ ...state, [_category]: ['ALL', ...data.splice(0, 10).map(d => d[field])] }))\n              }\n            })\n          }\n        }, 500)\n      }))\n    }\n  }\n\n  return (\n    <Paper className={classes.root} style={{ display: hideReport === 'true' ? 'none' : 'block' }}>\n      <div className={classes.header} style={{ display: hideHeader === 'true' ? 'none' : 'block' }}>\n        <div className={classes.content}>\n          <div className={classes['field-filter']}>\n            <div className={classes.input}>\n              <Typography variant='caption'>Reimbursment Category</Typography>\n              <AutoComplete\n                placeholder='Search by reimbursement Category'\n                id='reimbursment-category'\n                value={claims.filter.reimbursement_category}\n                suggestions={suggestion.reimbursement_category}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChange({\n                    value,\n                    isSuggestionClick,\n                    category: 'reimbursement-category',\n                    field: 'name'\n                  })\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <Typography variant='h6'>Date Range</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => !validate() && fetchRecords()}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV()}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className='bold text-link'>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    <TableSortLabel>{headCell.label}</TableSortLabel>\n                    {headCell.search && (\n                      <div className={classes.input}>\n                        {headCell.type && headCell.type === 'date' ? (\n                          <DatePicker\n                            noMargin\n                            id={`${headCell.data}`}\n                            value={null}\n                            onChange={date =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: date.toISOString(),\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        ) : (\n                          <TextField\n                            noMargin\n                            onChange={event =>\n                              handleOnFilter({\n                                field: headCell.data,\n                                value: event.target.value,\n                                match: headCell.match\n                              })\n                            }\n                          />\n                        )}\n                      </div>\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data &&\n              claims.data.map((claim, claimIndex) => (\n                <TableRow className={classes['table-row']} key={`table-item-${claimIndex}`}>\n                  {columns.map((col, colIndex) => (\n                    <TableCell\n                      className={col.remarks ? classes.remarks : classes['table-cell']}\n                      key={`table-cell-${claimIndex}-${colIndex}`}\n                    >\n                      {formatData({ type: col.type, source: claim, field: col.data })}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            }\n            pagination={false}\n          />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\n\n// Material Components\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\n// Shared Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport ClaimsServices from 'Services/Api/ClaimsServices'\nimport ArrayToCSV from 'Services/ArrayToCSV'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utility\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './DetailedClaimsReport.module.scss'\n\n// Validator\nimport DateRangeValidator from '../TransmittalReport/validator/DateRangeValidator'\n\nconst columns = [\n  { label: 'No.', sortField: 'no', search: false, sort: false, type: 'number' },\n  { label: 'Process Date', sortField: 'process_date', search: true, sort: true, match: 'date', type: 'date' },\n  { label: 'Claim Number', sortField: 'claim_number', search: true, sort: true, match: 'start' },\n  { label: 'Claim Type', sortField: 'claim_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Amount', sortField: 'claim_amount', search: false, sort: false, type: 'currency', align: 'right' },\n  { label: 'Claim Status', sortField: 'claim_status', search: true, sort: true, match: 'any' },\n  { label: 'Section', sortField: 'section', search: true, sort: true, match: 'any' },\n  { label: 'User', sortField: 'user', search: true, sort: true, match: 'any' },\n  { label: 'Claim Source', sortField: 'claim_source', search: true, sort: true, match: 'any' },\n  { label: 'Geography', sortField: 'geography', search: true, sort: true, match: 'any' },\n  { label: 'Contract Plan Type', sortField: 'contract_plan_type', search: true, sort: true, match: 'any' },\n  { label: 'Claim Sub-Type/Category', sortField: 'claim_sub_type', search: true, sort: true, match: 'any' }\n]\n\nexport default function DetailedClaimsReport (props) {\n  // separated date range to avoid fetch for non-filtering func\n  const [dateRange, setDateRange] = React.useState({\n    from: new Date().toISOString(),\n    to: new Date().toISOString(),\n    field: 'status_date'\n  })\n\n  const [claims, setClaims] = React.useState({\n    data: [],\n    search: '',\n    range: { from: new Date().toISOString(), to: new Date().toISOString(), field: 'status_date' },\n    filter: {},\n    orderBy: 'claim_number',\n    order: true,\n    page: 1,\n    limit: 10,\n    count: 0,\n    total_amount: 0,\n    total_received: 0,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [dateRangeError, setDateRangeError] = React.useState({\n    date_from: '',\n    date_to: ''\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Detailed Claims Report')\n    BreadcrumbsService.setSelectedItems(['detailedClaimsReport'])\n\n    // autofilter today\n    handleOnClickFilter({ range: claims.range })\n  }, [])\n\n  const fetchReport = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: params.range,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      limit: params.limit,\n      filter: params.filter\n    }).then(res => {\n      const { results = [], grand_total, count, limit, page, total_received } = res.data.data\n\n      setClaims(state => ({ ...state, data: results, count, page, limit, total_amount: grand_total, total_received }))\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnClickFilter = ({ range }) => {\n    if (validate()) return\n    LoadingService.loading(true)\n\n    // setRange to use in pagination, filtering\n    setDateRange(state => ({ ...state, ...range }))\n    fetchReport({ ...claims, ...range })\n  }\n\n  const handleOnPaginate = params => {\n    const _params = {\n      ...claims,\n      ...params\n    }\n\n    setClaims(state => ({ ...state, ...params }))\n    fetchReport({ ..._params, range: dateRange })\n  }\n\n  const validate = () => {\n    const { error } = DateRangeValidator({\n      date_from: claims.range.from,\n      date_to: claims.range.to\n    })\n\n    setDateRangeError({ ...error })\n    return !!error\n  }\n\n  const fetchCSV = params => {\n    LoadingService.loading(true)\n    ClaimsServices.detailedClaimsReport({\n      range: dateRange,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`\n    }).then(res => {\n      const { results, grand_total, total_received, count } = res.data.data\n      const header = columns.map(i => i.label)\n\n      const rows = results.map(i => {\n        return columns.map(col => formatData({ type: col.type, source: i, field: col.sortField }))\n      })\n\n      // array.from or of\n      ArrayToCSV({\n        statics: [\n          [\n            'Detailed Claims Report',\n            '\\r\\n',\n            '\\r\\n',\n            ['Date Range:', `${DateFormatter(dateRange.from)} - ${DateFormatter(dateRange.to)}`],\n            '\\r\\n',\n            '\\r\\n'\n          ],\n          [\n            '\\r\\n',\n            ['Number of Claims Received:', `${total_received}`],\n            '\\r\\n',\n            ['Number of Claims Processed:', `${count}`],\n            '\\r\\n',\n            ['Amount of Claims Processed:', `${grand_total}`]\n          ]\n        ],\n        fileName: 'Detailed Claims Report',\n        header,\n        rows\n      })\n      LoadingService.loading(false)\n    })\n  }\n\n  const formatData = ({ type = null, source, field }) => {\n    let output = ''\n    if (type === 'date') {\n      output = DateFormatter(source[field])\n    } else if (type === 'currency') {\n      output = CurrencyFormatter(source[field])\n    } else if (type === 'array') {\n      const [root, property] = field.split('.')\n      output = source[root] ? source[root].map(f => f[property]).join(`${'\\r\\n'}${'\\r\\n'}`) : ''\n    } else if (type === 'number') {\n      output = source[field]\n    } else {\n      output = source[field] ? source[field] : ''\n    }\n\n    return output !== '' && output !== 'undefined' && output !== `${'\\r\\n'}${'\\r\\n'}` ? output : 'N/A'\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant='h6'>Date Range:</Typography>\n        <div className={classes.content}>\n          <div className={classes.filter}>\n            <div className={classes.input}>\n              <p>From: </p>\n              <DatePicker\n                id='filter-date-from'\n                value={claims.range.from}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      from: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_from}\n              />\n            </div>\n            <div className={classes.input}>\n              <p>To: </p>\n              <DatePicker\n                id='filter-date-to'\n                value={claims.range.to}\n                onChange={date =>\n                  setClaims(state => ({\n                    ...state,\n                    range: {\n                      ...state.range,\n                      to: date.toISOString()\n                    }\n                  }))\n                }\n                disableFuture\n                error={dateRangeError.date_to}\n              />\n            </div>\n            <Button\n              className={`button-positive ${classes.submit}`}\n              onClick={() => {\n                handleOnClickFilter({ range: claims.range })\n              }}\n              variant='contained'\n              color='primary'\n            >\n              Filter\n            </Button>\n          </div>\n          <div className={classes.action}>\n            <Button id='generate-report' onClick={() => fetchCSV(claims)} disabled={!claims.data.length}>\n              <GetAppIcon fontSize='small' />\n              <Typography variant='caption' className={`bold ${!claims.data.length ? classes.disabled : classes.typo}`}>\n                Generate Report\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={classes.body}>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '60vh', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((headCell, index) => (\n                  <TableCell key={`table-header-${index}`}>\n                    {headCell.sort ? (\n                      <div>\n                        <TableSortLabel\n                          active={claims.orderBy === headCell.sortField}\n                          direction={claims.order ? 'asc' : 'desc'}\n                          onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n                        >\n                          {headCell.label}\n                        </TableSortLabel>\n                      </div>\n                    ) : (\n                      headCell.label\n                    )}\n                    <div className={`${classes.input} ${!headCell.search ? classes.hidden : ''}`}>\n                      <TextField\n                        noMargin\n                        id={`text-field-${headCell.sortField}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnPaginate({\n                                filter: {\n                                  ...claims.filter,\n                                  [headCell.sortField]: { value: search, match: headCell.match }\n                                },\n                                page: 1\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              claims.data.length ? (\n                claims.data.map((item, index) => (\n                  <TableRow className={classes['table-row']} key={`${item.claim_number}-${index}`}>\n                    {columns.map((col, colIndex) => (\n                      <TableCell\n                        align={col.align}\n                        className={col.remarks ? classes.remarks : classes['table-cell']}\n                        key={`table-cell-${index}-${colIndex}`}\n                      >\n                        {formatData({ type: col.type, source: item, field: col.sortField })}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={columns.length}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={claims.count}\n            page={claims.page}\n            limit={claims.limit}\n            rowsPerPageOptions={claims.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n            // footerComponent={\n            //   <Typography variant='caption' className='bold'>\n            //     <span>Total Amount: </span>\n            //     <span>{CurrencyFormatter(claims.total_amount)}</span>\n            //   </Typography>\n            // }\n          />\n        </div>\n        {/* trial ugly */}\n        <div className={classes.footer}>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Received: ${claims.total_received}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>{`Number of Claims Processed: ${claims.count}`}</Typography>\n          </div>\n          <div className={classes.label}>\n            <Typography className='bold'>\n              {`Amount of Claims Processed: ${CurrencyFormatter(claims.total_amount)}`}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\n// Pages\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\nimport TransmittalReport from './../Components/Reports/TransmittalReport/TransmittalReport'\nimport TreasuryTransmittalReport from '../Components/Reports/TreasuryTransmittalReport/TreasuryTransmittalReport'\nimport PRCheckReport from '../Components/Reports/PRCheckReport/PRCheckReport'\nimport UtilizationReport from '../Components/Reports/UtilizationReport/UtilizationReport'\nimport LoadingHimsData from '../Components/Reports/LoadingHimsData/LoadingHimsData'\nimport ConfinementReport from '../Components/Reports/ConfinementReport/ConfinementReport'\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\nimport ReimbursementReport from '../Components/Reports/ReimbursementReport/ReimbursementReport'\nimport ClaimsSummaryReport from '../Components/Reports/ClaimsSummaryReport/ClaimsSummaryReport'\nimport ProductivityPerformaceReport from '../Components/Reports/ProductivityPerformaceReport/ProductivityPerformaceReport'\nimport ReturnedClaimsReport from '../Components/Reports/ReturnedClaimsReport/ReturnedClaimsReport'\nimport PerformanceReport from '../Components/Reports/PerformanceReport/PerformanceReport'\nimport AgingPartialApprovedReport from '../Components/Reports/AgingPartialApprovedReport/AgingPartialApprovedReport'\nimport AgingReturnClaimReport from '../Components/Reports/AgingReturnClaimReport/AgingReturnClaimReport'\nimport ClaimsBeyond3MonthsReport from '../Components/Reports/ClaimsBeyond3MonthsReport/ClaimsBeyond3MonthsReport'\nimport ReimbursementAgingReport from '../Components/Reports/ReimbursementAgingReport/ReimbursementAgingReport'\nimport DetailedClaimsReport from '../Components/Reports/DetailedClaimsReport/DetailedClaimsReport'\n\nconst reportPages = {\n  transmittal: {\n    name: 'transmittal',\n    label: 'Transmittal Report',\n    to: '/reports/transmittal-report',\n    component: TransmittalReport\n  },\n  utilizationLedger: {\n    name: 'utilizationLedger',\n    label: 'Generate Utilization Ledger',\n    to: '/reports/utilization-ledger',\n    component: ClaimsUtilLedgerReport\n  },\n  treasuryTransmittalReport: {\n    name: 'treasuryTransmittalReport',\n    label: 'View Treasury Transmittal',\n    to: '/reports/treasury-reports',\n    component: TreasuryTransmittalReport\n  },\n  utilizationReport: {\n    name: 'utilizationReport',\n    label: 'View Account & Member Utilization',\n    to: '/reports/utilization',\n    component: UtilizationReport\n  },\n  prReports: {\n    name: 'prReports',\n    label: 'View PR and Check Details',\n    to: '/reports/pr-reports',\n    component: PRCheckReport\n  },\n  loadingHimsData: {\n    name: 'loadingHimsData',\n    label: 'Template for Loading HIMS Data',\n    to: '/reports/loading-hims-data',\n    component: LoadingHimsData\n  },\n  confinementReport: {\n    name: 'confinementReport',\n    label: 'List of Emergencies Leading to Confinement Report',\n    to: '/reports/confinement-report',\n    component: ConfinementReport\n  },\n  paymentRequestReport: {\n    name: 'paymentRequestReport',\n    label: 'Payment Request Report',\n    to: '/reports/payment-request-report',\n    component: PaymentRequestReport\n  },\n  reimbursementReport: {\n    name: 'reimbursementReport',\n    label: 'Reimbursement Claims Report',\n    to: '/reports/reimburesment-report',\n    component: ReimbursementReport\n  },\n  claimsSummaryReport: {\n    name: 'claimsSummaryReport',\n    label: 'Claims Summary Report',\n    to: '/reports/claims-summary-report',\n    component: ClaimsSummaryReport\n  },\n  productivityPerformaceReport: {\n    name: 'productivityPerformaceReport',\n    label: 'Productivity and Performance Report',\n    to: '/reports/productivity-performance',\n    component: ProductivityPerformaceReport\n  },\n  returnedClaimsReport: {\n    name: 'returnedClaimsReport',\n    label: 'Returned Claims Report',\n    to: '/reports/returned-claims-report',\n    component: ReturnedClaimsReport\n  },\n  performanceReport: {\n    name: 'performanceReport',\n    label: 'Performance Summary Report',\n    to: '/reports/performance',\n    component: PerformanceReport\n  },\n  agingPartialApprovedReport: {\n    name: 'agingPartialApprovedReport',\n    label: 'Aging of Partially Approved Claims Report',\n    to: '/reports/aging-partial-approve-claims',\n    component: AgingPartialApprovedReport\n  },\n  agingReturnedClaims: {\n    name: 'agingReturnedClaims',\n    label: 'Aging of Returned Claims Report',\n    to: '/reports/aging-returned-claims',\n    component: AgingReturnClaimReport\n  },\n  claimsBeyond3Months: {\n    name: 'claimsBeyond3Months',\n    label: 'Claims Beyond 3 Months Report',\n    to: '/reports/claims-beyond-3-months',\n    component: ClaimsBeyond3MonthsReport\n  },\n  agingReimbursement: {\n    name: 'agingReimbursement',\n    label: 'Reimbursement Aging Report',\n    to: '/reports/aging-reimbursement',\n    component: ReimbursementAgingReport\n  },\n  detailedClaimsReport: {\n    name: 'detailedClaimsReport',\n    label: 'Detailed Claims Report',\n    to: '/reports/detailed-claims-report',\n    component: DetailedClaimsReport\n  }\n}\n\nconst reportsItems = {\n  BATCH_ENCODER: ['utilizationLedger', 'transmittal', 'confinementReport'],\n  BATCH_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'transmittal',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_DETAILS_ENCODER: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: [\n    'utilizationLedger',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_ANALYST: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER: ['utilizationLedger', 'confinementReport'],\n  PR_OFFICER_SUPERVISOR: [\n    'utilizationLedger',\n    'loadingHimsData',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'returnedClaimsReport',\n    'detailedClaimsReport',\n    'detailedClaimsReport'\n  ],\n  MEDICAL_CONSULTANT: ['utilizationLedger', 'confinementReport'],\n  CLAIMS_RECON: [\n    'utilizationLedger',\n    'transmittal',\n    'prReports',\n    'treasuryTransmittalReport',\n    'utilizationReport',\n    'reimbursementReport',\n    'confinementReport'\n  ],\n  CLAIMS_VERIFIER_SUPERVISOR: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport'\n  ],\n  CLAIMS_MANAGER: [\n    'utilizationLedger',\n    'confinementReport',\n    'reimbursementReport',\n    'paymentRequestReport',\n    'productivityPerformaceReport',\n    'claimsSummaryReport',\n    'returnedClaimsReport',\n    'performanceReport',\n    'agingPartialApprovedReport',\n    'agingReturnedClaims',\n    'claimsBeyond3Months',\n    'agingReimbursement',\n    'detailedClaimsReport'\n  ]\n}\nconst generateBreadCrumbs = userRole => {\n  let breads = {}\n  for (const r of reportsItems[userRole]) {\n    breads[r] = { text: reportPages[r].label, to: reportPages[r].to }\n  }\n  return breads\n}\n\nconst generateSideBar = userRole => {\n  return {\n    label: 'Reports',\n    icon: 'chart-bar',\n    type: 'popover',\n    child: (reportsItems[userRole] && reportsItems[userRole].map(r => reportPages[r])) || []\n  }\n}\n\nconst generateRoutes = userRole => {\n  return reportsItems[userRole].map(r => (\n    <Route key={reportPages[r].name} exact path={reportPages[r].to} component={reportPages[r].component} />\n  ))\n}\n\nexport { generateSideBar, generateBreadCrumbs, generateRoutes }\n","import constants from './constants'\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport moment from 'moment'\n\nexport const staticHeaderFooter = args => {\n  const { registered_name, corporate_account_no, contracts = [], amount, ar_amount, username } = args\n\n  const static_header = constants.header.map(i => {\n    switch (i) {\n      case 'Company:':\n        return [i, registered_name, '\\r\\n']\n      case 'Account No.:':\n        return [i, corporate_account_no, '\\r\\n']\n      case 'Contract:':\n        return [i, contracts.length, '\\r\\n']\n      case 'Date:':\n        return [i, `${DateFormatter(new Date())} ${moment().format('LTS')}`, '\\r\\n']\n    }\n  })\n\n  const static_footer = constants.footer.map(i => {\n    switch (i) {\n      case 'Total':\n        return ['', '', '', i, amount, ar_amount, '\\r\\n']\n      case 'Transmitted by:':\n        return [i, username, '\\r\\n']\n      case 'Noted by:':\n        return [i, '--', '\\r\\n']\n      case 'Received by:':\n        return [i, '--', '\\r\\n']\n    }\n  })\n\n  return [\n    [...static_header, '\\r\\n'],\n    ['\\r\\n', ...static_footer]\n  ]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport Dashboard from './../Components/BatchEncoder/Dashboard/Dashboard'\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'encoder-name', name: 'Encoder Name', sortField: 'name', match: 'any' },\n  { id: 'total-bundle', name: 'Total Bundles', sortField: 'total_bundle', match: 'any' },\n  { id: 'total-batch', name: 'Total Batches', sortField: 'total_batch', match: 'any' }\n]\n\nconst BatchAndEncoderTile = props => {\n  const { services, sizes } = props\n  const [items, setItems] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatchEncoderWork({ category: 'created', limit: 10, sort: 'name|asc' }),\n      services.getBatchEncoderWorkCount()\n    ]).then(values => {\n      const [batchEncoders, count] = values\n      setItems({ data: batchEncoders.data.data.results, count: count.data.data })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    setViewList({ ...initialValue, show: true, title: 'Bundle and Batch Encoder' })\n    services.getBatchEncoderWork({ limit: 10, sort: 'name|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatchEncoderWork(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        count={{ color: 3, value: items.count, id: 'bundle-and-batch-encoder-count' }}\n        sizes={sizes}\n        title='Bundle and Batch Encoder'\n        id='bundle-and-batch-encoder'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='bundle-and-batch-encoder-view-list'\n          >\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={item.id}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.data.map((item, index) => (\n              <TableRow key={item.user_id}>\n                <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n                <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n                <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${item.user_id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='bundle-and-batch-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.user_id}>\n              <TableCell id={`batch-encoder-name-${index}`}>{item.name}</TableCell>\n              <TableCell id={`total-bundle-${index}`}>{item.total_bundle}</TableCell>\n              <TableCell id={`total-batch-${index}`}>{item.total_batch}</TableCell>\n              <TableCell id={`view-work-${index}`}>\n                <Link to={`/batch-encoder-work/${item.user_id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nBatchAndEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default BatchAndEncoderTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { name: 'SOA No.', sortField: 'soa_number', match: 'any' },\n  { name: 'Bundle', sortField: 'bundle_number', match: 'any' },\n  { name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ForReconciliationClaimsTile = props => {\n  const { services, sizes } = props\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const [viewList, setViewList] = React.useState({\n    category: 'for-recon',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'for-recon',\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for_recon'\n\n    services\n      .getClaims({\n        category,\n        range: value,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = `Claims for Reconciliation`\n    const category = 'for_recon'\n\n    setViewList(p => ({ ...p, show: true, title, category }))\n    services\n      .getClaims({ category, limit: viewList.limit, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claim-for-Reconciliation'\n        count={{ color: 3, value: claims.for_recon.count }}\n        sizes={sizes}\n        title='Claims for Reconciliation'\n        viewList={\n          <Typography id='fr-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map((item, index) => (\n                <TableCell\n                  key={index}\n                  // id={item.id}\n                >\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.for_recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number}</TableCell>\n                <TableCell>{item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell id={`view-review-${index}`}>\n                  <Link to={`/claims/recon/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View Claim\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claim-for-Reconciliation'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell>{item.claim_number}</TableCell>\n              <TableCell>{item.soa.number}</TableCell>\n              <TableCell>{item.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell>{item.facility.name}</TableCell>\n              <TableCell id={`view-review-${index}`}>\n                <Link to={`/claims/recon/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForReconciliationClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default ForReconciliationClaimsTile\n","import instance from './instance'\n// import { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/bes')\n\nexport default class BatchEncodingSupervisoryServices {\n  static getBatchEncoderWork (params) {\n    return axios({\n      url: '/batch-encoder-work',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchEncoderWorkCount () {\n    return axios({\n      url: '/batch-encoder-work/count',\n      method: 'GET'\n    })\n  }\n\n  static getBundles ({ user_id, params }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassignBundles ({ user_id, data }) {\n    return axios({\n      url: `/batch-encoder-work/${user_id}/bundles/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport CreatedBundlesTile from './../../../Components/Tiles/CreatedBundlesTile'\nimport SubmittedBundlesTile from './../../../Components/Tiles/SubmittedBundlesTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Bundle And Batch Encoding'>\n            <CreatedBundlesTile services={BatchEncodingServices} {...props} />\n            <SubmittedBundlesTile services={BatchEncodingServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { show, setShow, services, onSubmit } = props\n\n  const [reassign, setReassign] = React.useState({})\n  const [showAlert, setShowAlert] = React.useState()\n  const [users, setUsers] = React.useState([])\n\n  const [reassignErrors, setReassignErrors] = React.useState({})\n\n  React.useEffect(() => {\n    setReassign({})\n    setReassignErrors({})\n    setUsers([])\n    setShowAlert()\n\n    if (show) {\n      services.getUsers('BATCH_ENCODER').then(({ data: response }) => {\n        setUsers(\n          response.map(item => ({\n            value: item._id,\n            text: `${item.first_name} ${item.last_name}`\n          }))\n        )\n      })\n    }\n  }, [show])\n\n  const validate = () => {\n    const { error } = ReassignValidator(reassign)\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (!validate()) setShowAlert(true)\n  }\n\n  const handleOnClose = () => {\n    setShow()\n  }\n\n  const handleOnAlertConfirm = () => {\n    setShow()\n    onSubmit({ ...reassign })\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={show || false}\n          onClose={handleOnClose}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                onChange={event => {\n                  const note = event.target.value\n                  setReassign(state => ({\n                    ...state,\n                    note\n                  }))\n                }}\n                id='reassign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {users && users.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='dropdown-assign-to'\n                  items={users}\n                  value={reassign.assignee || ''}\n                  error={reassignErrors.assignee}\n                  onChange={event =>\n                    setReassign(state => ({\n                      ...state,\n                      assignee: event.target.value\n                    }))\n                  }\n                  disableComponents={!!(users && users.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button onClick={handleOnClose} variant='contained' color='primary' className='button-negative'>\n                  Cancel\n                </Button>\n                <Button onClick={handleOnSubmit} variant='contained' color='primary' className='button-positive'>\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={showAlert || false}\n          onClose={setShowAlert}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Bundle/SOA to Batch Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Bundle/SOA to the selected Batch Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This Bundle/SOA will be sent to the assigned Batch Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button onClick={() => setShowAlert()} variant='contained' color='primary' className='button-negative'>\n                Cancel\n              </Button>\n              <Button onClick={handleOnAlertConfirm} variant='contained' color='primary' className='button-positive'>\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\n// Shared Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Styles\nimport classes from './CreatedBundlesPage.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columnss = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date_received', match: 'date' },\n  { id: 'date-due', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nexport default function CreatedBundlesPage (props) {\n  const [bundle, setBundle] = React.useState({\n    data: [],\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    orderBy: 'date_due',\n    order: true,\n    filter: {}\n  })\n\n  const [batchEncoderId, setBatchEncoderId] = React.useState()\n  const [openModal, setOpenModal] = React.useState()\n  const [activeAssigning, setActiveAssigning] = React.useState()\n  const [headerCheckBox, setHeaderCheckBox] = React.useState({})\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const _batchEncoderId = props.match.params.user_id\n    setBatchEncoderId(_batchEncoderId)\n\n    PageTitleService('Created Bundles')\n    // BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${_batchEncoderId}`])\n    BreadcrumbsService.setSelectedItems(['dashboard', `createdBundles:${' '}`])\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: _batchEncoderId,\n      params: { limit: 10, sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}` }\n    }).then(({ data: response }) => {\n      const { results: data } = response.data\n      setBundle(state => ({ ...state, ...response.data, data }))\n    })\n  }, [])\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setBundle(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setBundle(p => ({ ...p, orderBy, order: !bundle.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${bundle.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: bundle.limit,\n      page: bundle.page,\n      search: bundle.search,\n      sort: `${bundle.orderBy}|${bundle.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingSupervisoryServices.getBundles({\n      user_id: batchEncoderId,\n      params: _params\n    }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setBundle(state => ({ ...state, data: results, count, limit, page }))\n\n      setHeaderCheckBox({})\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnItemSelect = index => {\n    setBundle(state => {\n      const data = state.data\n      data[index].selected = !data[index].selected\n\n      const selectedCount = data.filter(i => i.selected).length\n      setHeaderCheckBox({ checked: !!selectedCount, indeterminate: selectedCount && selectedCount !== data.length })\n\n      return { ...state, data }\n    })\n  }\n\n  const handleOnSelectAllItem = () => {\n    const { checked, indeterminate } = headerCheckBox\n\n    setBundle(state => {\n      return {\n        ...state,\n        data: state.data.map(i => ({\n          ...i,\n          selected: checked && indeterminate ? true : !(checked && !indeterminate)\n        }))\n      }\n    })\n\n    setHeaderCheckBox({ checked: (checked && indeterminate) || !checked })\n  }\n\n  const handleOnSubmit = ({ note, assignee }) => {\n    LoadingService.loading(true)\n\n    const bundle_numbers = []\n    bundle.data.filter(i => i.selected && bundle_numbers.push(i.bundle_number))\n\n    BatchEncodingSupervisoryServices.reassignBundles({\n      user_id: batchEncoderId,\n      data: {\n        note,\n        assignee,\n        bundle_numbers\n      }\n    }).then(res => {\n      handleOnViewListChange({})\n    })\n  }\n\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setBundle(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...bundle.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div className={classes['first-container']}>\n          <div className={classes.action}>\n            <Button\n              id='cancelreassign-btn'\n              variant='contained'\n              color='primary'\n              className='button-neutral'\n              onClick={() => setActiveAssigning(true)}\n              disabled={!!activeAssigning}\n            >\n              Re-Assign\n            </Button>\n          </div>\n\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for bundle number, date or facility name'\n            />\n          </div>\n        </div>\n\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { flex: 1, overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      style={{ marginTop: '30px' }}\n                      disabled={!bundle.data.length}\n                      checked={headerCheckBox.checked || false}\n                      indeterminate={headerCheckBox.indeterminate || false}\n                      onChange={handleOnSelectAllItem}\n                    />\n                  </TableCell>\n                )}\n\n                {columnss.map(column => (\n                  <TableCell key={column.sortField} id={column.id}>\n                    <TableSortLabel\n                      active={bundle.orderBy === column.sortField}\n                      direction={bundle.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(column.sortField)}\n                    >\n                      {column.name}\n                    </TableSortLabel>\n\n                    <TextField\n                      id={`text-field-${column.id}`}\n                      // value={newBundle.bundle_number}\n                      TextFieldStyle={{ margin: 0 }}\n                      fullWidth\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: column.sortField,\n                              value: search,\n                              match: column.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={bundle.data.map((item, index) => (\n              <TableRow key={item.bundle_number}>\n                {activeAssigning && (\n                  <TableCell id='checkbox-selecte-all' padding='checkbox' size='small'>\n                    <Checkbox\n                      color='primary'\n                      onChange={() => handleOnItemSelect(index)}\n                      checked={item.selected || false}\n                    />\n                  </TableCell>\n                )}\n\n                <TableCell id={`bundle-number-${index}`}>{item.bundle_number}</TableCell>\n                <TableCell id={`received-date-${index}`}>{DateFormatter(item.date.received)}</TableCell>\n                <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`view-work-${index}`}>\n                  <Link to={`/batch-encoder-work/${batchEncoderId}/bundles/${item.bundle_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n            count={bundle.count}\n            page={bundle.page}\n            limit={bundle.limit}\n            rowsPerPageOptions={[10, 15, 20]}\n            onChange={handleOnViewListChange}\n          />\n        </div>\n\n        <div className={classes.footer}>\n          {activeAssigning && (\n            <Typography variant='subtitle2' className={classes.title}>\n              Total Bundle Selected: {bundle.data.filter(i => i.selected).length}\n            </Typography>\n          )}\n\n          <div className={classes.actions}>\n            {activeAssigning ? (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => {\n                    setActiveAssigning()\n                  }}\n                  id='cancel'\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className={`${classes.save} button-positive`}\n                  onClick={() => setOpenModal(true)}\n                  disabled={!(headerCheckBox.checked || false)}\n                  id='save'\n                >\n                  Assign\n                </Button>\n              </React.Fragment>\n            ) : (\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push('/')}\n                id='cancel'\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </div>\n      </Paper>\n      <AssignDialog\n        show={openModal}\n        setShow={setOpenModal}\n        services={UserManagementServices}\n        onSubmit={handleOnSubmit}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false, autoWidth = false, showIcon = true } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div\n        className={`${classes[`input-wrapper`]} ${autoWidth ? classes['auto-width'] : classes['max-width']} ${\n          message !== '' ? classes['discrepancy'] : ''\n        }`}\n      >\n        {children}\n      </div>\n      {showIcon ? icon({ iconStyle }) : ''}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Style\nimport classes from './LoadingIndicator.module.scss'\n\nexport default function LoadingIndicator (props) {\n  // Variables\n  const { loading = false, children } = props\n  // Services\n  // Events\n  // Callbacks\n  // Local Variables\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <div className={classes.root}>\n          <div className={classes.loading} id='loading-overlay'>\n            <CircularProgress id='fetching-animation' className={classes.animation} size={50} />\n          </div>\n        </div>\n      ) : (\n        children\n      )}\n    </React.Fragment>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n// Services\n// import { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './ClientMemberLookup.module.scss'\n\nexport default function ClientMemberLookup (props) {\n  // Variables\n  const { columns = [], allSearch = '', allSearchText = '', allSearchFields, mode = '' } = props\n  // Services\n  const { service } = props\n  // Events\n  // Callbacks\n  const { onRecordSet } = props\n\n  // Local Variables\n  const [apiData, setApiData] = React.useState({\n    rows: [],\n    search: '',\n    order: '',\n    limit: 10\n    // count: 0,\n    // page: 1,\n    // rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [finalRows, setFinalRows] = React.useState([])\n  const [selected, setSelected] = React.useState(-1)\n  const [debounce, setDebounce] = React.useState(null)\n  const [colFilters, setColFilters] = React.useState({})\n  const [loading, setLoading] = React.useState(false)\n\n  React.useEffect(() => {\n    setApiData(state => ({ ...state, search: allSearch }), fetchData(allSearch))\n  }, [])\n\n  React.useEffect(() => {\n    const order = apiData.order.split(' ')\n    let _rows = lodash.orderBy(apiData.rows, [order[0]], [order[1]])\n    _rows = translateRows(_rows)\n    _rows = filterData(_rows)\n    setFinalRows(_rows)\n  }, [apiData.rows, apiData.order, colFilters])\n\n  const fetchData = search => {\n    if (search === '') return\n    setLoading(true)\n    let fields = {}\n    for (const col of columns) {\n      fields[col.id] = true\n    }\n    const order = apiData.order === '' ? `${columns[0].id} asc` : apiData.order\n    setApiData(state => ({ ...state, rows: [], order }))\n    let fetches = []\n    for (const field of allSearchFields) {\n      fetches.push(\n        new Promise((resolve, reject) => {\n          service({\n            where: { [field.id]: { value: search, match: field.match } },\n            order,\n            fields,\n            limit: apiData.limit\n          }).then(res => resolve(res))\n        })\n      )\n    }\n    Promise.all(fetches).then(responses => {\n      for (const res of responses) {\n        if (!res) return\n        const { data } = res.data\n        setApiData(state => ({ ...state, rows: [...state.rows, ...data[mode]] }))\n      }\n      setLoading(false)\n    })\n  }\n\n  const translateRows = rows => {\n    return rows.map(row => columns.map((col, colIdx) => col.value(row)))\n  }\n\n  const revertRow = row => {\n    if (!row) return\n    const _row = {}\n    for (const [index, cell] of Object.entries(row)) {\n      _row[columns[index].id] = cell\n    }\n    return _row\n  }\n\n  const filterData = rows => {\n    let _rows = rows\n    // _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, filters.all)).some(val => val))\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!colFilters[index]) return true\n            return includesAny(`${col}`, colFilters[index])\n          })\n          .some(val => val === false)\n    )\n    return _rows\n  }\n\n  const renderRows = rows => {\n    if (!rows) return\n    return rows.map((row, index) => (\n      <TableRow\n        id={`member-row-${index}`}\n        key={`member-${index}`}\n        hover\n        role='checkbox'\n        tabIndex={-1}\n        className={selected && selected[0] === row[0] ? classes.selected : classes['default-override']}\n      >\n        {columns.map((col, colIdx) => (\n          <TableCell key={`${col.id}-${colIdx}`} id={`${col.id}-${colIdx}`} onClick={() => handleItemClick(row)}>\n            {row[colIdx]}\n          </TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const handleOnSort = id => {\n    const [, direction] = apiData.order.split(' ')\n    setApiData(state => ({ ...state, order: `${id} ${direction !== 'asc' ? 'asc' : 'desc'}` }))\n  }\n\n  const handleColumnFilter = ({ id, index, value }) => {\n    setColFilters(state => ({ ...state, [index]: value }))\n  }\n\n  const handleItemClick = row => {\n    if (!selected) setSelected(row)\n    else if (row[0] === selected[0]) setSelected()\n    else setSelected(row)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <SearchTextComponent\n          id='search'\n          value={apiData.search}\n          onChange={event => {\n            const search = event.target.value\n            setApiData(state => ({ ...state, search }))\n            clearTimeout(debounce)\n            setDebounce(\n              setTimeout(() => {\n                fetchData(search)\n              }, 500)\n            )\n          }}\n          placeholder={allSearchText}\n        />\n      </div>\n      <div className={classes.table}>\n        <LoadingIndicator loading={loading}>\n          <Table\n            TableContainerProps={{ style: { height: '300px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map((cell, colIdx) => (\n                  <TableCell key={cell.id} id={cell.id}>\n                    <TableSortLabel\n                      active={apiData.order.split(' ')[0] === cell.id}\n                      direction={apiData.order.split(' ')[1] === 'asc' ? 'asc' : 'desc'}\n                      onClick={() => handleOnSort(cell.id)}\n                    >\n                      {cell.label}\n                    </TableSortLabel>\n                    <TextField\n                      onChange={event => {\n                        const search = event.target.value\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFilter({\n                              id: cell.id,\n                              index: colIdx,\n                              value: search\n                            })\n                          }, 250)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n\n                <TableCell align='center' />\n              </TableRow>\n            }\n            body={renderRows(finalRows)}\n            pagination={false}\n            // count={count}\n            // page={page}\n            // limit={limit}\n            // rowsPerPageOptions={rowsPerPageOptions}\n            // onChange={onPaginate}\n          />\n        </LoadingIndicator>\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant='contained'\n          color='primary'\n          id='select'\n          className='button-positive'\n          onClick={() => selected && onRecordSet(revertRow(selected))}\n        >\n          Select\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport MemberLookup from './ClientMemberLookup'\n\n// Styles\nimport classes from './ClientMemberModal.module.scss'\n\nexport default function ClientMemberModal (props) {\n  // Variables\n  const { show, title = '' } = props\n  // Services\n  // Events\n  // Callbacks\n  const { onClose } = props\n  // Local Variables\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={onClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <MemberLookup {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room[0].room_type : ''\n  const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => {\n        if (item.type.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type.toUpperCase(),\n          rate: item.rate\n        }\n      })\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n  console.log('zzz', procedures)\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  console.log(common, loa)\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\n// import ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  // const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  console.log(claim_type)\n  switch (claim_type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport DiscrepancyBase from './..//DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from '../../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showClaimSource = false,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const errors = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        onChange({ field: 'contract_plan_type', value: data.contract_plan_type })\n      })\n      .catch(err => {\n        console.log(err.response)\n        onChange({ field: 'contract_plan_type', value: '' })\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type,\n            claim\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.read && !isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n          </div>\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-customer-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_number\n                  }}\n                >\n                  <TextField\n                    id='company-account-number'\n                    label='Customer Account Number'\n                    value={claim.client_account_number}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                    error={errors.client_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='client-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickClientLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-company-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.client_account_name\n                  }}\n                >\n                  <TextField\n                    id='company-name'\n                    label='Company Name'\n                    value={claim.client_account_name}\n                    disabled={disableControls}\n                    required\n                    onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                    error={errors.client_account_name}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-member-account-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.member_account_number\n                  }}\n                >\n                  <TextField\n                    id='member-account-number'\n                    required\n                    label='Member Account No.'\n                    value={claim.member_account_number}\n                    disabled={disableControls}\n                    onChange={event =>\n                      onChange({\n                        field: 'member_account_number',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.member_account_number}\n                    readOnly={!permissions.update}\n                  />\n                  {permissions.update && (\n                    <div className={classes.search}>\n                      <Button\n                        id='member-account-number-search'\n                        variant='outlined'\n                        className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                        onClick={handleOnClickMemberLookup}\n                      >\n                        <SearchIcon />\n                      </Button>\n                    </div>\n                  )}\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {permissions.read && isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n                {permissions.update && (\n                  <div className={classes.search}>\n                    <Button\n                      id='client-account-number-search'\n                      variant='outlined'\n                      className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                      onClick={handleOnClickClientLookup}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  </div>\n                )}\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-client-account-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.client_account_number\n                }}\n              >\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={claim.client_account_name}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'client_account_name'\n                      })\n                    )\n                  }\n                  error={errors.client_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoments\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children } = props\n  return (\n    <div className={classes.root}>\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    required,\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary {required && ' *'}\n        </Typography>\n      </div>\n      <div className={classes['sub-wrapper']}>\n        <div className={classes.delete}>\n          {permissions.delete && (\n            <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          )}\n        </div>\n\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n              error={error.description}\n              readOnly={!permissions.update}\n            />\n          </div>\n        </Tooltip>\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n            error={error.code}\n            readOnly={!permissions.update}\n          />\n        </div>\n        <div className={classes.primary}>\n          <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst GivenDiagnosisField = props => {\n  const {\n    required,\n    id = '',\n    givenDiag = '',\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <Typography variant='subtitle2' className={classes.delete}>\n            {''}\n          </Typography>\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis {required && ' *'}\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={id}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            onChange={(value, isSuggestionClick) => onChangeGivenDiag({ value, isSuggestionClick })}\n            error={error.given_diagnosis}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField, GivenDiagnosisField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField, GivenDiagnosisField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  setError\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n          if (field === 'given_diagnosis') {\n            getIcd10Suggestions({ value, by: field, index, synonym: true })\n          }\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsAdjudicationServices.getICDSynonyms({ query: value }).then(res => {\n              const { data } = res.data\n              let _items = []\n              let _by = by\n              if (synonym) _by = 'description'\n              for (let d of data) _items.push(d[_by])\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by: _by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            }).then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields>\n              {items.map((item, index) => (\n                <React.Fragment key={`diagnosis-${index}`}>\n                  {/* // Given Diagnosis */}\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-given-${index}`}\n                    discrepancy={{\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    showIcon={false}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <GivenDiagnosisField\n                      required\n                      id={`given-diagnosis-${index}`}\n                      givenDiag={item.given_diagnosis}\n                      onChangeGivenDiag={args => handleOnChangeIcd10({ field: 'given_diagnosis', index, ...args })}\n                      permissions={permissions}\n                      suggestions={suggestions.icd10[index]}\n                      error={error && error.items && error.items[index]}\n                    />\n                  </DiscrepancyBase>\n                  <DiscrepancyBase\n                    id={`dp-icd-description-${index}`}\n                    key={`icd-${index}`}\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.diagnosis[index]\n                    }}\n                    retainSpace\n                    noMargin\n                    className={classes.discrepancy}\n                  >\n                    <ICDTextField\n                      required\n                      key={`icd-${index} ${error[index]}`}\n                      id={`icd-description-${index}`}\n                      codeId={`icd-code-${index}`}\n                      error={error && error.items && error.items[index]}\n                      description={item.description}\n                      suggestions={suggestions.icd10[index]}\n                      code={item.code}\n                      primary={item.primary}\n                      onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                      onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                      onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                      onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                      permissions={permissions}\n                    />\n                  </DiscrepancyBase>\n                </React.Fragment>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _error = doValidate({ data: procedure.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.diagnosis}>\n                  <div>\n                    <DropDown\n                      id='given-diagnosis'\n                      label='Given Diagnosis'\n                      required\n                      items={diagnosis.map(({ given_diagnosis }) => ({\n                        text: given_diagnosis,\n                        value: given_diagnosis\n                      }))}\n                      value={procedure.details.diagnosis_given_diagnosis}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_given_diagnosis',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.diagnosis_given_diagnosis}\n                      readOnly={!permissions.update}\n                    />\n                  </div>\n                  <div className={classes.groups}>\n                    <div className={`${classes.input} ${classes.limit}`}>\n                      <DropDown\n                        id='icd10-description'\n                        required\n                        label='ICD10 Description'\n                        items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                        value={procedure.details.diagnosis_description}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_description',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_description}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                    <div className={classes.input}>\n                      <DropDown\n                        id='icd10-code'\n                        required\n                        label='ICD10 Code'\n                        items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                        value={procedure.details.diagnosis_code}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_code',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_code}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt.description}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        isSuggestionClick,\n                        selectedIndex\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt.code}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                    }\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-tooth-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.tooth_number\n                  }}\n                  autoWidth\n                >\n                  <Typography variant='subtitle2' className={classes['label']}>\n                    {`Tooth Number *`}\n                  </Typography>\n                  <TextField\n                    id='tooth-number'\n                    value={procedure.details.tooth_number}\n                    onChange={event => {\n                      handleOnChange({\n                        field: 'tooth_number',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.tooth_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={procedure.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={procedure.details.amount_not_covered > 0}\n                      disableComponents={procedure.details.amount_not_covered === 0}\n                      value={procedure.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={procedure.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={procedure.details.amount_due_from_member > 0}\n                      disableComponents={procedure.details.amount_due_from_member === 0}\n                      value={procedure.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={procedure.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          procedure.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={procedure.details.amount_due_from_client > 0}\n                      disableComponents={procedure.details.amount_due_from_client === 0}\n                      value={procedure.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='procedure-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`procedure-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","const Item = item => {\n  // fields from Encoder\n  const { gross_amount = 0, vat_amount = 0, amount_paid_by_member = 0, philhealth_amount_paid = 0 } = item\n  // fields from Analyst\n  const { amount_not_covered = 0 } = item\n  // , amount_due_from_member = 0, amount_due_from_client = 0\n\n  return (\n    parseFloat(gross_amount) +\n    parseFloat(vat_amount) -\n    (parseFloat(amount_not_covered) + parseFloat(philhealth_amount_paid) + parseFloat(amount_paid_by_member))\n  )\n}\n\nconst List = items => {\n  return items.reduce((current, item) => current + Item(item), 0)\n}\n\nconst Grand = lineItems => {\n  const { procedures, dental_procedures, hospital_items, professional_fees } = lineItems || {}\n  let grand = 0\n  if (procedures) grand += List(procedures)\n  if (dental_procedures) grand += List(dental_procedures)\n  if (hospital_items) grand += List(hospital_items)\n  if (professional_fees) grand += List(professional_fees)\n  return grand\n}\n\nexport default { Item, List, Grand }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.procedure)\n  const procedure = useSelector(({ ClaimsAnalysis: state }) => state.procedure)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.procedure)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-procedure'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td\n                  id={`procedure-row-description-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.description}\n                </td>\n                <td\n                  id={`procedure-row-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`procedure-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'procedure-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const _error = doValidate({ data: hospitalItem.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.diagnosis}>\n                  <div>\n                    <DropDown\n                      id='given-diagnosis'\n                      label='Given Diagnosis'\n                      required\n                      items={diagnosis.map(({ given_diagnosis }) => ({\n                        text: given_diagnosis,\n                        value: given_diagnosis\n                      }))}\n                      value={hospitalItem.details.diagnosis_given_diagnosis}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_given_diagnosis',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.diagnosis_given_diagnosis}\n                      readOnly={!permissions.update}\n                    />\n                  </div>\n                  <div className={classes.groups}>\n                    <div className={`${classes.input} ${classes.limit}`}>\n                      <DropDown\n                        id='icd10-description'\n                        required\n                        label='ICD10 Description'\n                        items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                        value={hospitalItem.details.diagnosis_description}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_description',\n                            value: event.target.value\n                          })\n                        }\n                        readOnly={!permissions.update}\n                        error={_errors.diagnosis_description}\n                      />\n                    </div>\n                    <div className={classes.input}>\n                      <DropDown\n                        id='icd10-code'\n                        required\n                        label='ICD10 Code'\n                        items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                        value={hospitalItem.details.diagnosis_code}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_code',\n                            value: event.target.value\n                          })\n                        }\n                        readOnly={!permissions.update}\n                        error={_errors.diagnosis_code}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem.item_code}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospital-item-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospital-item-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={hospitalItem.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={hospitalItem.details.amount_not_covered > 0}\n                      disableComponents={hospitalItem.details.amount_not_covered === 0}\n                      value={hospitalItem.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={hospitalItem.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={hospitalItem.details.amount_due_from_member > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                      value={hospitalItem.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={hospitalItem.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          hospitalItem.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={hospitalItem.details.amount_due_from_client > 0}\n                      disableComponents={hospitalItem.details.amount_due_from_client === 0}\n                      value={hospitalItem.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='hospital-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`hospital-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setHospitalItem } = actions\n\nexport default function HospitalItemList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(({ ClaimsAnalysis: state }) => state.hospitalItem)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.hospital_item)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-hospital-item'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospital-item-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`hospital-item-row-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`hospital-item-row-code${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                  className={`${classes.align} ${classes.center}`}\n                >\n                  {i.item_code}\n                </td>\n                <td\n                  id={`hospital-item-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'hospital-item-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from './../DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    error = {},\n    doValidate,\n    permissions,\n    diagnosis,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const { code, description, given_diagnosis } = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: code,\n          diagnosis_description: description,\n          diagnosis_given_diagnosis: given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeSpecialization = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.specialization.data) {\n        if (value === i.description) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                specialization: i.description\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'specialization' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'specialization',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _error = doValidate({ data: professionalFee.details, index })\n    setErrors(_error)\n    if (Object.keys(_error).length <= 0) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            {diagnosis && (\n              <React.Fragment>\n                <div className={classes.diagnosis}>\n                  <div>\n                    <DropDown\n                      id='given-diagnosis'\n                      label='Given Diagnosis'\n                      required\n                      items={diagnosis.map(({ given_diagnosis }) => ({\n                        text: given_diagnosis,\n                        value: given_diagnosis\n                      }))}\n                      value={professionalFee.details.diagnosis_given_diagnosis}\n                      onChange={event =>\n                        handleOnChangeDiagnosis({\n                          field: 'diagnosis_given_diagnosis',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.diagnosis_given_diagnosis}\n                      readOnly={!permissions.update}\n                    />\n                  </div>\n                  <div className={classes.groups}>\n                    <div className={`${classes.input} ${classes.limit}`}>\n                      <DropDown\n                        id='icd10-description'\n                        required\n                        label='ICD10 Description'\n                        items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                        value={professionalFee.details.diagnosis_description}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_description',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_description}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                    <div className={classes.input}>\n                      <DropDown\n                        id='icd10-code'\n                        required\n                        label='ICD10 Code'\n                        items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                        value={professionalFee.details.diagnosis_code}\n                        onChange={event =>\n                          handleOnChangeDiagnosis({\n                            field: 'diagnosis_code',\n                            value: event.target.value\n                          })\n                        }\n                        error={_errors.diagnosis_code}\n                        readOnly={!permissions.update}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  suggestions={pfSuggestions.specialization.description}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeSpecialization({\n                      field: 'specialization',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-professional-fee-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='professional-fee-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={professionalFee.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={professionalFee.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={professionalFee.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n\n          {showAmountNotCovered && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_not_covered\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-not-covered'\n                      label='Amount Not Covered'\n                      value={professionalFee.details.amount_not_covered}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason = ''\n                          setErrors(state => ({ ...state, reason: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_not_covered',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_not_covered}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-not-covered-reason'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason\n                    }}\n                  >\n                    <DropDown\n                      id='amount-not-covered-reason'\n                      label='Reason'\n                      required={professionalFee.details.amount_not_covered > 0}\n                      disableComponents={professionalFee.details.amount_not_covered === 0}\n                      value={professionalFee.details.reason}\n                      items={dropDown.reason}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-member'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_member\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-member'\n                      label='Amount Due from Member'\n                      value={professionalFee.details.amount_due_from_member}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_member = ''\n                          setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_member',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-hospital-item'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_member\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-member'\n                      label='Reason for Charging Member'\n                      required={professionalFee.details.amount_due_from_member > 0}\n                      disableComponents={professionalFee.details.amount_due_from_member === 0}\n                      value={professionalFee.details.reason_for_charging_member}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_member',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_member}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          {showAmountDueFromMember && (\n            <React.Fragment>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.amount_due_from_client\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='amount-due-from-client'\n                      label='Amount Due from Client'\n                      value={professionalFee.details.amount_due_from_client}\n                      onChange={event => {\n                        if (event.target.value === 0) {\n                          professionalFee.details.reason_for_charging_client = ''\n                          setErrors(state => ({ ...state, amount_due_from_client: '' }))\n                        }\n\n                        handleOnChange({\n                          field: 'amount_due_from_client',\n                          value: event.target.value\n                        })\n                      }}\n                      error={_errors.amount_due_from_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes.input}>\n                  <DiscrepancyBase\n                    id='dp-amount-due-from-client'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.reason_for_charging_client\n                    }}\n                  >\n                    <DropDown\n                      id='reason-for-charging-client'\n                      label='Reason for Charging Client'\n                      required={professionalFee.details.amount_due_from_client > 0}\n                      disableComponents={professionalFee.details.amount_due_from_client === 0}\n                      value={professionalFee.details.reason_for_charging_client}\n                      items={dropDown.reason_charging}\n                      onChange={event =>\n                        handleOnChange({\n                          field: 'reason_for_charging_client',\n                          value: event.target.value\n                        })\n                      }\n                      error={_errors.reason_for_charging_client}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSave}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    id='professional-fee-delete-button'\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              id={`professional-fee-${permissions.create && permissions.update ? 'cancel' : 'close'}-button`}\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setProfessionalFee } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data, id, permissions, ...others } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(({ ClaimsAnalysis: state }) => state.professionalFee)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error.professional_fee)\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              id={'add-professional-fee'}\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-row-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td\n                  id={`professional-fee-row-doctor-${index}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`professional-fee-row-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`professional-fee-row-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    permissions={permissions}\n                    {...others}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography id={'professional-fee-total'} variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\nimport ReturnValidator from './ReturnValidator'\n\n// lodash\nimport { sortBy } from 'lodash'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee,\n  resetReturn,\n  setReturnNote\n} = actions\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    onReject,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReassign,\n    onSave,\n    onEscalate,\n    onApprove,\n    onCancel,\n    isReimbursement,\n    onRemove,\n    onViewClaimNotice,\n    onReturn\n  } = props\n  // Variables\n  const { disabled, permissions, reimbursement_info = [] } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const rejectStatus = useSelector(({ ClaimsAnalysis: state }) => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [returnModal, setReturnModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n  const [removeModal, setRemoveModal] = React.useState(false)\n  const [validateModal, setValidateModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [returnError, setReturnErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReturn = () => {\n    const { error } = ReturnValidator({\n      message: c_return.note\n    })\n\n    setReturnErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowReturnDialog = () => {\n    dispatch(resetReturn())\n    setReassignErrors({ message: '' })\n    dispatch(setReturnNote(''))\n    setReturnModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to approve this claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      setValidateModal(true)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {SafeAccess(permissions.return_advice, ['visible']) && reimbursement_info.length > 1 && (\n          <Button\n            id='btn-return-advice'\n            variant='contained'\n            color='secondary'\n            className='button-positive'\n            onClick={() => onViewClaimNotice({ goBack: false })}\n            disabled={disabled && permissions.analysis_sheet.enabled}\n          >\n            Return Advice\n          </Button>\n        )}\n      </div>\n      <div className={classes.center} />\n      <div className={classes.right}>\n        {permissions.visible && (\n          <React.Fragment>\n            {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n              <Button\n                id='btn-view-analysis'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewAnalysisSheet({ goBack: false })}\n                onClick={() => onViewAnalysisSheet({ goBack: false })}\n                disabled={disabled && permissions.analysis_sheet.enabled}\n              >\n                View Analysis Sheet\n              </Button>\n            )}\n            {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n              <Button\n                id='btn-view-loa'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                // onClick={() => !doValidateMiddleware() && onViewLetterOfAdvice({ goBack: false })}\n                onClick={() => onViewLetterOfAdvice({ goBack: false })}\n                disabled={disabled && permissions.letter_of_advice.enabled}\n              >\n                View Letter of Advice\n              </Button>\n            )}\n            {SafeAccess(permissions.escalate, ['visible']) && (\n              <Button\n                id='btn-escalate'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleEscalateDialog()}\n                disabled={disabled && permissions.escalate.enabled}\n              >\n                Escalate\n              </Button>\n            )}\n            {SafeAccess(permissions.reject, ['visible']) && (\n              <Button\n                id='btn-reject'\n                variant='contained'\n                color='secondary'\n                onClick={() =>\n                  !doValidateMiddleware() && (isReimbursement ? onReject({ goBack: false }) : setRejectModal(true))\n                }\n                disabled={rejectStatus && !isReimbursement}\n              >\n                Reject\n              </Button>\n            )}\n            {SafeAccess(permissions.return, ['visible']) && (\n              <Button\n                id='btn-return'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => handleOnShowReturnDialog()}\n                disabled={disabled && permissions.return.enabled}\n              >\n                Return\n              </Button>\n            )}\n            {SafeAccess(permissions.approve, ['visible']) && (\n              <Button\n                id='approve'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && handleOnShowModal()}\n                disabled={disabled && permissions.approve.enabled}\n              >\n                Approve\n              </Button>\n            )}\n            {SafeAccess(permissions.save, ['visible']) && (\n              <Button\n                id='save-for-now'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                onClick={() => !doValidateMiddleware() && setSaveModal(true)}\n                disabled={disabled && permissions.save.enabled}\n              >\n                Save for now\n              </Button>\n            )}\n            {SafeAccess(permissions.remove, ['visible']) && (\n              <Button\n                id='remove'\n                variant='contained'\n                color='secondary'\n                onClick={() => setRemoveModal(true)}\n                disabled={disabled && permissions.remove.enabled}\n              >\n                Remove\n              </Button>\n            )}\n            {SafeAccess(permissions, ['close']) ? (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => onCancel({ goBack: true })}>\n                Close\n              </Button>\n            ) : (\n              <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n                Cancel\n              </Button>\n            )}\n            {SafeAccess(permissions.reassign, ['visible']) && (\n              <Button\n                id='btn-reassign'\n                variant='contained'\n                color='secondary'\n                className='button-positive'\n                onClick={() => handleReassignDialog()}\n                disabled={disabled && permissions.reassign.enabled}\n              >\n                Reassign\n              </Button>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <div className={classes.modals}>\n        {SafeAccess(permissions.escalate, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={escalateModal.dialog}\n              className={classes.escalate}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reason For Escalation\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id='escalation-text'\n                    value={escalations.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                    error={escalationErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                    </Typography>\n                    <DropDown\n                      id='escalate-to'\n                      items={dropDownUsers}\n                      value={escalations.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setEscalationAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={escalationErrors.assignee}\n                      disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      id='escalate-cancel'\n                      onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() =>\n                        !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))\n                      }\n                      id='escalate-submit'\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={escalateModal.confirm}\n              message='Are you sure you want to escalate claim?'\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n                onEscalate({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reassign, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={reassignModal.dialog}\n              className={classes.reassign}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Reassign\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={reassign.message}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReassignMessage(event.target.value))}\n                    error={reassignErrors.message}\n                  />\n                </div>\n                <div className={classes.footer}>\n                  <div className={classes.assign}>\n                    <Typography variant='subtitle2' className={classes.to}>\n                      Assign To:\n                    </Typography>\n                    <DropDown\n                      id='reassign-to'\n                      items={dropDownUsers}\n                      value={reassign.assignee.id}\n                      onChange={event =>\n                        dispatch(\n                          setReassignAssignee({\n                            id: event.target.value,\n                            name: event.target.value\n                          })\n                        )\n                      }\n                      error={reassignErrors.assignee}\n                    />\n                  </div>\n\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n            <Alert\n              open={reassignModal.confirm}\n              message={\n                permissions.reassign && permissions.reassign.message\n                  ? permissions.reassign.message\n                  : 'Are you sure you want to re-assign claim?'\n              }\n              cancelLabel='No'\n              okLabel='Yes'\n              onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n              onOk={() => {\n                setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n                onReassign({ goBack: true })\n              }}\n            />\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.return, ['enabled']) && (\n          <React.Fragment>\n            <Dialog\n              fullWidth\n              maxWidth='md'\n              onClose={() => setReturnModal(state => ({ ...state, dialog: false }))}\n              aria-labelledby='customized-dialog-title'\n              open={returnModal.dialog}\n              className={classes.return}\n              PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n            >\n              <DialogTitle disableTypography className={classes['header-container']}>\n                <div className={classes.header}>\n                  <Typography variant='h6' className={classes.title}>\n                    Notes\n                  </Typography>\n                  <IconButton\n                    aria-label='close'\n                    className={classes.button}\n                    onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                </div>\n              </DialogTitle>\n\n              <DialogContent dividers className={classes.content}>\n                <div className={classes.input}>\n                  <TextField\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={c_return.note}\n                    autoFocus\n                    fullWidth\n                    placeholder='Compose a Message'\n                    onChange={event => dispatch(setReturnNote(event.target.value))}\n                    error={returnError.message}\n                  />\n                </div>\n                <div className={classes.return}>\n                  <div className={classes.action}>\n                    <Button\n                      onClick={() => setReturnModal(state => ({ ...state, dialog: false }))}\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={() => !doValidateReturn() && onReturn({ goBack: true })}\n                      variant='contained'\n                      color='primary'\n                      className='button-positive'\n                    >\n                      Ok\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </React.Fragment>\n        )}\n\n        {SafeAccess(permissions.reject, ['enabled']) && (\n          <Alert\n            open={rejectModal}\n            message='Are you sure you want to reject this claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setRejectModal(false)}\n            onOk={() => {\n              setRejectModal(false)\n              onReject({ goBack: false })\n            }}\n          />\n        )}\n\n        {SafeAccess(permissions.approve, ['enabled']) && (\n          <Alert\n            open={approveModal.show}\n            message={approveModal.message || 'Are you sure you want to approve the claim?'}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setApproveModal({ show: false })}\n            onOk={() => {\n              setApproveModal({ show: false })\n              onApprove({ goBack: false })\n            }}\n          />\n        )}\n\n        <Alert\n          open={validateModal}\n          message='Please input all mandatory fields'\n          okLabel='Ok'\n          onOk={() => {\n            setValidateModal(false)\n          }}\n        />\n\n        <Alert\n          open={saveModal}\n          message='Are you sure you want to save the changes?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setSaveModal(false)}\n          onOk={() => {\n            setSaveModal(false)\n            onSave(true)\n          }}\n        />\n\n        <Alert\n          open={cancelModal}\n          message='Are you sure you want to cancel?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setCancelModal(false)}\n          onOk={() => {\n            setCancelModal(false)\n            onCancel({ goBack: true })\n          }}\n        />\n\n        <Alert\n          open={removeModal}\n          message='Are you sure you want to remove this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRemoveModal(false)}\n          onOk={() => {\n            setRemoveModal(false)\n            onRemove({ goBack: true })\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab\n            id={`${item.props.id}-control`}\n            key={`${item.props.label}-tab-label`}\n            className={classes['item']}\n            label={item.props.label}\n          />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel\n          id={item.props.id}\n          key={`${item.props.label}-tab-content`}\n          className={classes['panels']}\n          value={value}\n          index={index}\n        >\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, nodes = [], onItemClick } = props\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          {nodes.map(node =>\n            node.type === 'item' ? (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes.node}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n                onClick={() => onItemClick({ planPackage: node.planPackage, benefitCategory: node.benefitCategory })}\n              />\n            ) : (\n              <TreeItem\n                id={`${node.id}-control`}\n                key={`node-${node.id}`}\n                className={`${classes['benefit-label']}`}\n                nodeId={`node-${node.id}`}\n                label={node.label}\n              >\n                {node.benefits &&\n                  Object.keys(node.benefits).map(key => (\n                    <TreeItem\n                      id={`node-coverages-${node.benefits[key].details.tree_id}-control`}\n                      key={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      className={classes.node}\n                      nodeId={`node-coverages-${node.benefits[key].details.tree_id}`}\n                      label={node.benefits[key].details.name}\n                      onClick={() =>\n                        onItemClick({\n                          planPackage: node.planPackage,\n                          benefitCategory: node.benefits[key].details.code\n                        })\n                      }\n                    />\n                  ))}\n              </TreeItem>\n            )\n          )}\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function ValueField (props) {\n  const { title = '', label = '', value = '' } = props\n\n  return (\n    <div className={`${classes.root}`}>\n      {title !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {title}\n        </Typography>\n      )}\n      {label !== '' && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n        </Typography>\n      )}\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\n\nimport classes from './FloatingFields.module.scss'\n\nexport default function FloatingFields (props) {\n  // Variables\n  const { elements, node } = props\n  // Events\n\n  const [fields, setFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (!elements) return\n    const values = elements.map(elem => ({ ...elem, value: elem.data(node) }))\n    setFields(values)\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        {fields.map(\n          field =>\n            field.value && (\n              <div key={field.id} className={classes[field.layout ? `w-${field.layout}` : 'w-100']}>\n                <ValueField\n                  key={`${field.id}`}\n                  id={field.id}\n                  title={field.title}\n                  label={field.label}\n                  value={field.value}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n","export default function (unit) {\n  if (!unit) return ''\n\n  switch (unit.toLowerCase()) {\n    case 'percentage':\n    case 'percent':\n      return '%'\n    case 'amount_limit':\n      return 'Amount Limit'\n    case 'max_session':\n      return 'Max Session'\n    case 'max_amount':\n      return 'Max Amount'\n    case 'percent_mbl':\n      return 'Percent of MBL'\n    case 'percent_abl':\n      return 'Percent of ABL'\n    case 'no_visits':\n      return 'No. of Visits'\n    default:\n      return unit\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  name: ({ nodes, details }) => details.name,\n  parent_name: ({ nodes, details }) => details.parent_name,\n  title: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.title', '-'),\n  limit_type: ({ nodes, details }) => details.limits.map(limit => limit.type).join('\\r\\n'),\n  age_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.age_limit', 0),\n  max_availee: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.max_availee', 0),\n  number: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.number', 0),\n  required: ({ nodes, details }) => DefaultValue(SafeAccess(details, 'custom_metadata.required') || false),\n  no_of_days: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_days', ''),\n  time_from: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_from', ''),\n  time_to: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.time_to', ''),\n  member_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.member_type', ''),\n  plan_type: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.plan_type', ''),\n  peso_limit_amt: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit_amt', ''),\n  no_of_members: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.no_of_members', 0),\n  peso_limit: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.peso_limit', ''),\n\n  // Arrays\n  payment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.payment', ''),\n  availment: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.availment', ''),\n  limit: ({ nodes, details }) =>\n    details.limits\n      .map(limit => limit.limit && limit.limit_unit && `${DigitFormatter(limit.limit)} ${Unit(limit.limit_unit)}`)\n      .join('\\r\\n'),\n  rollover: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.rollover', '')),\n  refresh: ({ nodes, details }) => UpperWord(SafeAccess(details, 'custom_metadata.refresh', '')),\n  eligible_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligible_availees', ''),\n  days_deployed: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.days_deployed', ''),\n  eligibility: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.eligibility', ''),\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true },\n    { id: 'rollover', name: 'Rollover', data: Functions.rollover, search: true },\n    { id: 'refresh', name: 'Refresh', data: Functions.refresh, search: true }\n  ],\n  // COVERAGE\n  EM: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  IP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'inner-limit-type',\n      name: 'Inner Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'inner-limit',\n      name: 'Inner Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'daily-inner-limit', name: 'Daily Inner Limit', data: Functions.empty, search: true }\n  ],\n  OP: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'benefit', name: 'Benefit', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  PV: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  APE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum-age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  PPE: [\n    { id: 'category', name: 'Category', data: Functions.parent_name, search: true },\n    { id: 'description', name: 'Description', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'minimum_age',\n      name: 'Minimum Age',\n      data: Functions.age_limit,\n      search: true\n    },\n    {\n      id: 'max-availee',\n      name: 'Max Availee',\n      data: Functions.max_availee,\n      search: true\n    },\n    { id: 'payment', name: 'Payment', data: Functions.payment, search: true },\n    {\n      id: 'required',\n      name: 'Required',\n      data: Functions.required,\n      search: true\n    }\n  ],\n  SD: [\n    { id: 'category', name: 'Category', data: Functions.name, search: true },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    { id: 'limit', name: 'Limit', data: Functions.limit, search: true }\n  ],\n\n  // RIDERS\n  MT: [\n    { id: 'provision', name: 'Provision', data: Functions.name, search: true },\n    {\n      id: 'eligible-availees',\n      name: 'Eligible Availees',\n      data: Functions.eligible_availees,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    { id: 'availment-type', name: 'Availment Type', data: Functions.availment, search: true }\n  ],\n  OM: [\n    {\n      id: 'excluded-medicine',\n      name: 'Excluded Medicine',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    },\n    {\n      id: 'availment-type',\n      name: 'Availment Type',\n      data: Functions.availment,\n      search: true\n    }\n  ],\n  CC: [\n    {\n      id: 'personnel',\n      name: 'Personnel',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'no-of-days',\n      name: 'No. of Days',\n      data: Functions.number_of_days,\n      search: true\n    },\n    {\n      id: 'days-deployed',\n      name: 'Days Deployed',\n      data: Functions.days_deployed,\n      search: true\n    },\n    {\n      id: 'time-from',\n      name: 'Time From',\n      data: Functions.time_from,\n      search: true\n    },\n    {\n      id: 'time-to',\n      name: 'Time To',\n      data: Functions.time_to,\n      search: true\n    }\n  ],\n  DNT: [\n    {\n      id: 'category',\n      name: 'Category',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'limit-type',\n      name: 'Limit Type',\n      data: Functions.limit_type,\n      search: true\n    },\n    {\n      id: 'limit',\n      name: 'Limit',\n      data: Functions.limit,\n      search: true\n    }\n  ],\n  SH: [\n    {\n      id: 'plan',\n      name: 'Plan',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    }\n  ],\n  ADD: [\n    {\n      id: 'provision',\n      name: 'Provision',\n      data: Functions.name,\n      search: true\n    },\n    {\n      id: 'member-type',\n      name: 'Member Type',\n      data: Functions.member_type,\n      search: true\n    },\n    {\n      id: 'plan-type',\n      name: 'Plan Type',\n      data: Functions.plan_type,\n      search: true\n    },\n    {\n      id: 'peso-limit-amount',\n      name: 'Peso Limit Amount',\n      data: Functions.peso_limit_amt,\n      search: true\n    }\n  ],\n  ECU: [\n    {\n      id: 'benefit',\n      name: 'Benefit',\n      data: Functions.title,\n      search: true\n    },\n    {\n      id: 'eligibility',\n      name: 'Eligibility',\n      data: Functions.eligibility,\n      search: true\n    },\n    {\n      id: 'no-of-members',\n      name: 'No. of Members',\n      data: Functions.no_of_members,\n      search: true\n    },\n    {\n      id: 'number',\n      name: 'Number',\n      data: Functions.number,\n      search: true\n    },\n    {\n      id: 'peso-limit',\n      name: 'Peso Limit',\n      data: Functions.peso_limit,\n      search: true\n    }\n  ]\n}\n","export default function (value) {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'Yes' : 'Optional'\n    case 'number':\n      return value\n    default:\n      return '--'\n  }\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  partner: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.dental_form_partner', '-'),\n  rate: ({ nodes, details }) => `${DigitFormatter(SafeAccess(details, 'custom_metadata.dental_form_rate', 0))} PHP`,\n  rb_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.type ? abl_mbl.type : ''\n  },\n  rb_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const abl_mbl = limits.find(item => ['ABL', 'MBL'].includes(item.type))\n    if (!abl_mbl) return ''\n    return abl_mbl.limit ? `${DigitFormatter(abl_mbl.limit)} ${Unit(abl_mbl.limit_unit)}` : ''\n  },\n  rb_mode_of_payment: ({ nodes, details }) => {\n    const modeOfPayment = {\n      annual: 'Annual',\n      semiannual: 'Semi-Annual',\n      quarterly: 'Quarterly',\n      monthly: 'Monthly'\n    }\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return modeOfPayment[data.mode_of_payment] || ''\n  },\n  rb_pec_limit_type: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    const units = {\n      PHP: 'Peso',\n      Months: 'Time-based'\n    }\n    return units[pec.limit_unit] || ''\n  },\n  rb_pec_limit: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (!['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    return `${DigitFormatter(pec.limit)} ${pec.limit_unit}`\n  },\n  rb_pec_limit_specify: ({ nodes, details }) => {\n    const limits = SafeAccess(details, 'limits', null)\n    if (!limits) return ''\n    const pec = limits.find(item => ['PEC'].includes(item.type))\n    if (!pec) return ''\n    if (['Percentage', 'PHP'].includes(pec.limit_unit)) return ''\n    if (!pec.time_based_limit) return ''\n    const lines = pec.time_based_limit.map(\n      item => `After ${item.number_mount} ${item.day_based}: ${item.limit} ${Unit(item.limit_type)}`\n    )\n    return lines.join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'limit-type',\n      title: 'Limit Type',\n      label: '',\n      data: Functions.rb_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: '',\n      data: Functions.rb_limit,\n      layout: '30'\n    },\n    {\n      id: 'mode-of-payment',\n      title: 'Mode of Payment',\n      label: '',\n      data: Functions.rb_mode_of_payment,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit-type',\n      title: 'PEC Limit Type',\n      label: '',\n      data: Functions.rb_pec_limit_type,\n      layout: '30'\n    },\n    {\n      id: 'pec-limit',\n      title: 'PEC  Limit',\n      label: '',\n      data: Functions.rb_pec_limit,\n      layout: '30'\n    },\n    {\n      id: 'specify-limit',\n      title: 'Specify  Limit*',\n      label: '',\n      data: Functions.rb_pec_limit_specify,\n      layout: '30'\n    }\n  ],\n  // COVERAGE\n  EM: [],\n  IP: [],\n  OP: [],\n  PV: [],\n  APE: [],\n  PPE: [],\n  SD: [],\n\n  // RIDERS\n  MT: [],\n  OM: [],\n  CC: [],\n  DNT: [\n    {\n      id: 'partner',\n      title: 'Partner',\n      label: '',\n      data: Functions.partner,\n      layout: '50'\n    },\n    {\n      id: 'rate-person',\n      title: 'Rate/Person',\n      label: '',\n      data: Functions.rate,\n      layout: '50'\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import { SafeAccess } from 'Utilities/SafeAccess'\nimport Unit from '../Utilities/Unit'\nimport DefaultValue from '../Utilities/DefaultValue'\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\n\nconst Functions = {\n  // Single Value\n  mobile_ape_availees: ({ nodes, details }) => SafeAccess(details, 'custom_metadata.mobile_ape_availees', ''),\n  billing_arangement: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    const billingArrangement = {\n      premium: 'Imputed in premiums',\n      billback: 'Bill back with admin fee',\n      rider_fee: '1-time rider fee to be upon enrollment',\n      imputed_in_premiums: 'Imputed in premiums',\n      billback_net: 'Bill back, net of APE cost with admin fee',\n      fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n      fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n      soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n      soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed'\n    }\n    // CC\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   fixed_rate_rider: \"Scheduled fixed rate for the entire rider\",\n    //   fixed_rate_personnel: \"Scheduled fixed rate per personnel deployed\",\n    //   soa_rate: \"Scheduled SOA based on fixed rate/hour/personnel deployed\",\n    //   soa_actual_cost: \"Scheduled SOA based on actual cost of personnel deployed\",\n    //   rider_fee: \"1-time rider fee to be upon start of contract\",\n    // }\n    // ECU\n    // const billingArrangement = {\n    //   imputed_in_premiums: 'Imputed in premiums',\n    //   billback: 'Bill back with admin fee',\n    //   billback_net: 'Bill back, net of APE cost with admin fee',\n    //   rider_fee: '1-time rider fee to be upon enrollment'\n    // }\n    // MT\n    // const billingArrangement = {\n    //   premium: \"Imputed in premiums\",\n    //   billback: \"Bill back with admin fee\",\n    //   rider_fee: \"1-time rider fee to be upon enrollment\"\n    // }\n    if (!data) return ''\n    if (!billingArrangement[data.billing_arangement]) return ''\n    return [\n      billingArrangement[data.billing_arangement],\n      data.billback_fee ? `${data.billback_fee} ${Unit(data.billback_type)}` : '',\n      data.rider_fee ? `${data.rider_fee} ${Unit(data.rider_fee_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  waiting_period: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data || !data.waiting_period_type) return ''\n    return [\n      data.waiting_period_type === 'effectivity' ? 'Waiting period after effectivity of member' : '',\n      data.waiting_period_type === 'date_of_hire' ? 'Waiting period after date of hire' : '',\n      data.waiting_period ? `${data.waiting_period} ${Unit(data.waitin_period_unit)}` : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n  limit: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit ? `${data.limit} ${Unit(data.limit_unit)}` : ''\n  },\n  limit_for_all: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.limit_for_all ? `${data.limit_for_all} ${Unit(data.limit_for_all_unit)}` : ''\n  },\n  availment_per_year: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    return data.availment_per_year ? `${DigitFormatter(data.availment_per_year)}` : ''\n  },\n  voluntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.voluntary_upgrading_type) return ''\n    switch (data.voluntary_upgrading_type) {\n      case 'paid_by_member':\n        return 'Room and Board difference is paid by the Member'\n      case 'first_hours_free':\n        return data.voluntary_upgrading_amount\n          ? `First ${data.voluntary_upgrading_amount} hours free`\n          : 'First 0 hour free'\n      case 'rate':\n        return data.voluntary_upgrading_amount ? `Rate: ${data.voluntary_upgrading_amount} %` : 'Rate: 0%'\n    }\n  },\n  involuntary_upgrading_type: ({ nodes, details }) => {\n    const data = SafeAccess(details, 'custom_metadata', null)\n    if (!data) return ''\n    if (!data.involuntary_upgrading_type) return ''\n    return [\n      data.except_suite_room && data.except_suite_room === true ? 'Except Suite Room' : '',\n      data.involuntary_upgrading_type === 'paid_by_member' ? 'Room and Board difference is paid by the Member' : '',\n      data.involuntary_upgrading_type === 'first_hours_free'\n        ? `First ${data.involuntary_upgrading_amount ? `${data.involuntary_upgrading_amount} hours` : '0 hour'} free`\n        : ''\n    ]\n      .filter(s => s !== '')\n      .join('\\r\\n')\n  },\n\n  // Empty\n  empty: ({ nodes, details }) => ''\n}\n\nexport default {\n  // Room and Board\n  RB: [\n    {\n      id: 'involuntary-room-upgrading',\n      title: 'Involuntary Room Upgrading',\n      label: '',\n      data: Functions.involuntary_upgrading_type\n    },\n    {\n      id: 'voluntary-room-upgrading',\n      title: 'Voluntary Room Upgrading',\n      label: '',\n      data: Functions.voluntary_upgrading_type\n    }\n  ],\n  // COVERAGE\n  EM: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  IP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  OP: [\n    {\n      id: 'limit',\n      title: 'Limit',\n      label: 'Amount Limit for all procedures',\n      data: Functions.limit\n    }\n  ],\n  PV: [],\n  APE: [\n    {\n      id: 'mobile-ape',\n      title: 'Mobile APE',\n      label: 'Min no. of availees in a shift (8 hrs)',\n      data: Functions.mobile_ape_availees\n    }\n  ],\n  PPE: [],\n  SD: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    }\n  ],\n\n  // RIDERS\n  MT: [\n    {\n      id: 'availment-per-year',\n      title: 'Availment Per Year',\n      label: '',\n      data: Functions.availment_per_year\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    },\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  OM: [\n    {\n      id: 'limit',\n      title: 'Limit for All',\n      label: '',\n      data: Functions.limit_for_all\n    },\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  CC: [\n    {\n      id: 'billing-arrangement',\n      title: 'Billing Arrangement',\n      label: '',\n      data: Functions.billing_arangement\n    }\n  ],\n  DNT: [\n    {\n      id: 'activation',\n      title: 'Activation',\n      label: '',\n      data: Functions.waiting_period\n    }\n  ],\n  SH: [],\n  ADD: [],\n  ECU: []\n}\n","import React from 'react'\n\n// Components\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\nimport SideBar from './Components/SideBar/SideBar'\nimport FloatingFields from './Components/FloatingFields/FloatingFields'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { includesAny } from 'Utilities/ArrayCompare'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Mapper\nimport BenefitTable from './Mapper/BenefitTable'\nimport BenefitHeaders from './Mapper/BenefitHeaders'\nimport BenefitFooters from './Mapper/BenefitFooters'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { isMember, member, client } = props\n\n  // Collections\n  const [columns, setColumns] = React.useState([])\n  const [rows, setRows] = React.useState([])\n\n  // Table Variables\n  const [table, setTable] = React.useState({\n    count: 0,\n    orderBy: 0,\n    order: 'asc',\n    limit: 5,\n    filters: { all: '', fields: {} },\n    page: 1,\n    rowsPerPageOptions: [5, 10, 15, 20]\n  })\n\n  // Local Variables\n  const [contractId, setContractId] = React.useState('')\n  const [planType, setPlanType] = React.useState('')\n  const [planPackage, setPlanPackage] = React.useState('')\n  const [benefitCategory, setBenefitCategory] = React.useState('')\n  const [lastRoomAndBoard, setLastRoomAndBoard] = React.useState('')\n\n  // Nodes\n  const [roomAndBoard, setRoomAndBoard] = React.useState({})\n  const [coverages, setCoverages] = React.useState({})\n  const [riders, setRiders] = React.useState({})\n\n  const [rootNode, setRootNode] = React.useState({})\n  const [benefitNode, setBenefitNode] = React.useState({})\n\n  const [headers, setHeaders] = React.useState([])\n  const [footers, setFooters] = React.useState([])\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      if (!member.latest_contract) return\n      let { plan_type } = member.info\n      const { MCT } = member.benefit_tree\n      plan_type = plan_type\n        .toUpperCase()\n        .split(' ')\n        .join('')\n\n      setContractId(member.latest_contract._id)\n      setPlanType(plan_type)\n      setRootNode(MCT)\n\n      const rnb = SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RB`, {})\n      setRoomAndBoard(rnb)\n      setCoverages(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.CV.nodes`, {}))\n      setRiders(SafeAccess(MCT, `nodes.CT.nodes.${plan_type}.nodes.RI.nodes`, {}))\n\n      if (rnb.nodes) {\n        const _keys = Object.keys(rnb.nodes).sort()\n        const _name = _keys[_keys.length - 1]\n        setLastRoomAndBoard(_name)\n        setBenefitCategory(_name)\n      }\n      setPlanPackage('RB')\n    } else {\n    }\n  }, [isMember, member, client])\n\n  React.useEffect(() => {\n    if (planType === '' || planPackage === '' || benefitCategory === '') return\n    setBenefitNode(SafeAccess(rootNode, `nodes.CT.nodes.${planType}.nodes.${planPackage}.nodes.${benefitCategory}`, {}))\n  }, [rootNode, planType, planPackage, benefitCategory])\n\n  React.useEffect(() => {\n    if (!benefitNode) return\n    const _rows = getRows()\n    setRows(_rows)\n    setColumns(BenefitTable[planPackage === 'RB' ? 'RB' : benefitCategory] || [])\n    setTable(state => ({ ...state, count: _rows.length }))\n\n    setHeaders(getHeaders())\n    setFooters(getFooters())\n  }, [benefitNode])\n\n  const getRows = () => {\n    let _columns = BenefitTable[benefitCategory]\n    const { nodes } = benefitNode\n\n    let parent_keys = []\n    if (benefitCategory === lastRoomAndBoard) {\n      if (!benefitNode) return []\n\n      if (Object.keys(benefitNode).length <= 0) {\n        return []\n      }\n    } else if (lastRoomAndBoard === '') {\n      return []\n    } else {\n      if (!nodes) return []\n\n      if (Object.keys(nodes).length <= 0) return []\n\n      parent_keys = Object.keys(nodes).sort()\n    }\n\n    let _rows = []\n    switch (benefitCategory) {\n      case lastRoomAndBoard:\n        _columns = BenefitTable['RB']\n        _rows = [_columns.map(col => col.data(benefitNode))]\n        break\n      case 'EM':\n      case 'PV':\n      case 'SD':\n      case 'ADD':\n        _rows = parent_keys.map((key, index) => _columns.map(col => col.data(nodes[key])))\n        break\n      default:\n        _rows = parent_keys\n          .map((pkey, index) =>\n            Object.keys(nodes[pkey].nodes)\n              .sort()\n              .map(key => {\n                const sub_node = nodes[pkey].nodes[key]\n                sub_node.details.parent_name = nodes[pkey].details.name\n                return _columns.map(col => col.data(sub_node))\n              })\n          )\n          .reduce((acc, curr) => [...acc, ...curr], [])\n\n        break\n    }\n\n    return _rows\n  }\n\n  const renderRows = () => {\n    if (!rows) return\n    const { all, fields } = table.filters\n\n    let _rows = rows\n\n    const ascending = (a, b) => a[table.orderBy].length - b[table.orderBy].length\n\n    const descending = (a, b) => b[table.orderBy].length - a[table.orderBy].length\n\n    _rows = table.order === 'asc' ? rows.sort(ascending) : rows.sort(descending)\n\n    _rows = _rows.filter(row => row.map((col, index) => includesAny(`${col}`, all)).some(val => val))\n\n    _rows = _rows.filter(\n      row =>\n        !row\n          .map((col, index) => {\n            if (!fields[index]) return true\n            return includesAny(`${col}`, fields[index])\n          })\n          .some(val => val === false)\n    )\n\n    return _rows.slice((table.page - 1) * table.limit, table.page * table.limit).map((row, index) => (\n      <TableRow key={`limits-row-${index}`}>\n        {columns.map((col, index) => (\n          <TableCell key={`limits-row-${index}-column-${col.id}`}>{row[index]}</TableCell>\n        ))}\n      </TableRow>\n    ))\n  }\n\n  const getHeaders = () => {\n    if (planPackage === 'RB') return BenefitHeaders['RB']\n    return BenefitHeaders[benefitCategory]\n  }\n\n  const getFooters = () => {\n    if (planPackage === 'RB') return BenefitFooters['RB']\n    return BenefitFooters[benefitCategory]\n  }\n\n  const handleSidebarItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setPlanPackage(planPackage)\n    setBenefitCategory(benefitCategory)\n  }\n\n  const handleTableSort = ({ id, index }) => {\n    const order = table.order === 'asc' ? 'desc' : 'asc'\n    setTable(state => ({ ...state, orderBy: index, order }))\n  }\n\n  const handleTableFilter = ({ id, value, index }) => {\n    setTable(state => ({\n      ...table,\n      filters: { ...state.filters, fields: { ...state.filters.fields, [index]: value } }\n    }))\n  }\n\n  const handleOnChangeSearchBox = value => {\n    setTable(state => ({ ...table, filters: { ...state.filters, all: value } }))\n  }\n\n  const handleOnPaginate = args => {\n    setTable(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            nodes={[\n              {\n                id: 'room_and_board',\n                label: 'Room and Board',\n                type: 'item',\n                planPackage: 'RB',\n                benefitCategory: lastRoomAndBoard\n              },\n              {\n                id: 'coverage',\n                label: 'Coverage',\n                type: 'list',\n                planPackage: 'CV',\n                benefits: coverages\n              },\n              {\n                id: 'riders',\n                label: 'Riders',\n                type: 'list',\n                planPackage: 'RI',\n                benefits: riders\n              }\n            ]}\n            onItemClick={handleSidebarItemClick}\n          />\n        </div>\n        <div className={classes['right-side']}>\n          <div className={classes.header}>\n            <FloatingFields elements={headers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n          {planPackage !== 'RB' && (\n            <div className={classes['table-header']}>\n              <div className={classes.search}>\n                <SearchTextComponent onChange={event => handleOnChangeSearchBox(event.target.value)} />\n              </div>\n              <div className={classes.contract}>\n                <span>Contract Type</span>\n                <span>---</span>\n              </div>\n            </div>\n          )}\n\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {columns.map((cell, index) => (\n                    <TableCell key={cell.data}>\n                      <TableSortLabel\n                        active={table.orderBy === cell.id || table.orderBy === index}\n                        direction={table.order === 'asc' ? 'asc' : 'desc'}\n                        onClick={event => handleTableSort({ id: cell.id, index })}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          id={`${cell.id}-input`}\n                          className={`${classes.search}`}\n                          onChange={event => handleTableFilter({ value: event.target.value, id: cell.id, index })}\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={renderRows()}\n              pagination\n              count={table.count}\n              page={table.page}\n              limit={table.limit}\n              rowsPerPageOptions={table.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n            />\n          </div>\n          <div className={classes.footer}>\n            <FloatingFields elements={footers} node={planPackage === 'RB' ? roomAndBoard : benefitNode} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Utilities\nimport { setPaginate } from './Utils/pagination'\nimport { sort } from './Utils/sortBy'\nimport { onQuery } from './Utils/query'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Item', sortField: 'item_name', search: true }\n]\n\nexport default function Benefits (props) {\n  const { isMember, member, client } = props\n\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlanTypes] = React.useState([])\n  const [rows, setRows] = React.useState([])\n  const [allExclusions, setAllExclusions] = React.useState([])\n  const [exclusionList, setExclusionList] = React.useState({\n    data: [],\n    orderBy: '',\n    order: 'desc',\n    count: 0,\n    page: 1,\n    limit: 5,\n    filter: {},\n    search: {},\n    plan_type: '',\n    rowsPerPageOptions: [5, 10, 15]\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      // getExclusions(member.benefit_tree)\n      const _rows = getExclusions2(member.benefit_tree)\n\n      setAllExclusions(_rows)\n      setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n      setRows(_rows.slice(0, exclusionList.limit))\n      handleOnSetItem(selectedPlan)\n    }\n  }, [member, isMember, client])\n\n  const getExclusions = nodes => {\n    const { MCT } = nodes\n    let arr_list = []\n\n    if (Object.keys(nodes).length) {\n      let plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n      let plan_type_keys = Object.keys(plan_types)\n\n      setPlanTypes(plan_type_keys)\n\n      for (const type of plan_type_keys) {\n        Object.keys(plan_types[type].nodes).forEach(i => {\n          if (i === 'EX') {\n            let child_node = Object.keys(plan_types[type].nodes[i].nodes)\n              .map(c => plan_types[type].nodes[i].nodes[c])\n              .filter(i => Object.keys(i.nodes).length)\n              .map(outer_node => {\n                if (Object.keys(outer_node.nodes).length) {\n                  return Object.values(outer_node.nodes)\n                    .filter(i => i.details.custom_metadata.is_excluded)\n                    .map(inner_node => ({\n                      item_name: inner_node.details.name,\n                      plan_type: type,\n                      type: outer_node.details.name,\n                      code: inner_node.details.code,\n                      parent_code: outer_node.details.code\n                    }))\n                }\n              })\n            arr_list = [].concat.apply([], child_node)\n          }\n        })\n      }\n    }\n    let _rows = arr_list.filter(benefit => benefit.plan_type === selectedPlan)\n\n    setAllExclusions(arr_list)\n    setExclusionList(state => ({ ...state, data: _rows, count: _rows.length }))\n    setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const getExclusions2 = nodes => {\n    const { MCT } = nodes\n    const plan_types = SafeAccess(MCT, `nodes.CT.nodes`, {})\n\n    const plan_types_keys = Object.keys(plan_types)\n    setPlanTypes(plan_types_keys)\n\n    let rows = []\n    plan_types_keys.forEach(planTypeKey => {\n      const ex_nodes = SafeAccess(plan_types, `${planTypeKey}.nodes.EX.nodes`, null)\n      if (ex_nodes) {\n        Object.keys(ex_nodes).map(exclusionKey => {\n          const inner_node = ex_nodes[exclusionKey]\n          Object.keys(inner_node.nodes).map(innerKey => {\n            const { details } = inner_node.nodes[innerKey]\n            if (details.custom_metadata.is_excluded) {\n              rows.push({\n                item_name: details.name,\n                plan_type: planTypeKey,\n                type: inner_node.details.name,\n                code: details.code,\n                parent_code: inner_node.details.code\n              })\n            }\n          })\n        })\n      }\n    })\n    return rows\n  }\n  // TODO will park this for now\n  // const handleOnSearchAll = args => {\n  //   const { search, page } = args\n\n  //   const queriedData = onQueryAll({\n  //     search: search.toLowerCase(),\n  //     data: allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n  //   })\n\n  //   setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n  //   setRows(queriedData.slice(0, exclusionList.limit))\n  // }\n  const handleOnSearch = args => {\n    const { search, page, range } = args\n    const _data = allExclusions.filter(benefit => benefit.plan_type === selectedPlan)\n\n    if (range !== 'all') {\n      exclusionList.filter[range] = search\n    } else {\n      exclusionList.search[range] = search\n    }\n\n    const queriedData = onQuery({ filter: exclusionList.filter, search: exclusionList.search, data: _data })\n\n    setExclusionList(state => ({ ...state, page, count: queriedData.length, data: queriedData }))\n    setRows(queriedData.slice(0, exclusionList.limit))\n  }\n\n  const handleOnPaginate = args => {\n    const { data, limit, page } = setPaginate({ args, exc: exclusionList })\n    setExclusionList(state => ({ ...state, limit, page }))\n    setRows(data)\n  }\n\n  const handleOnSetItem = item => {\n    let _rows = allExclusions.filter(benefit => benefit.plan_type === item)\n\n    setSelectedPlan(item)\n    setExclusionList(state => ({\n      ...state,\n      data: _rows,\n      count: _rows.length,\n      page: 1,\n      limit: state.rowsPerPageOptions[0]\n    }))\n    setRows(_rows.slice(0, exclusionList.rowsPerPageOptions[0]))\n\n    // TODO\n    // setExclusionList(state => ({ ...state, data: _rows, count: _rows.length, page: 1 }))\n    // setRows(_rows.slice(0, exclusionList.limit))\n  }\n\n  const handleOnSort = args => {\n    const { data: sortedData } = sort({ data: rows, field: args.orderBy, direction: args.order })\n\n    setRows(sortedData.slice(0, exclusionList.limit))\n    setExclusionList(state => ({ ...state, ...args }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link onClick={() => handleOnSetItem(item)}>\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-exclusion'\n            onChange={e => {\n              const search = e.target.value\n              clearTimeout(debounce)\n              setDebounce(\n                setTimeout(() => {\n                  handleOnSearch({ search, page: 1, range: 'all' })\n                }, 500)\n              )\n            }}\n            placeholder='Search'\n          />\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      active={exclusionList.orderBy === headCell.sortField}\n                      direction={exclusionList.order ? 'asc' : 'desc'}\n                      onClick={event => handleOnSort({ orderBy: headCell.sortField, order: !exclusionList.order })}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && (\n                      <TextField\n                        id={`${headCell.sortField}-input`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={e => {\n                          const search = e.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearch({ search, page: 1, range: headCell.sortField })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={\n              rows.length ? (\n                rows.map((row, index) => (\n                  <TableRow id={`exlusions-tab-row-${index}`} key={`ex-${index}`}>\n                    <TableCell id={`exlusions-tab-row-item-${index}-type`}>{row.type}</TableCell>\n                    <TableCell id={`exlusions-tab-row-item-${index}-name`}>{row.item_name}</TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell className={classes.handling} colSpan={2}>\n                    No data found\n                  </TableCell>\n                </TableRow>\n              )\n            }\n            pagination\n            count={exclusionList.count}\n            page={exclusionList.page}\n            limit={exclusionList.limit}\n            rowsPerPageOptions={exclusionList.rowsPerPageOptions}\n            onChange={args => handleOnPaginate(args)}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const onQuery = args => {\n  const { filter, search, data } = args\n  let mutable_data = []\n\n  if (search.all) {\n    const _search = search.all.toLowerCase()\n    mutable_data = data.filter(\n      i => i.item_name.toLowerCase().includes(_search) || i.type.toLowerCase().includes(_search)\n    )\n  } else {\n    mutable_data = data\n  }\n\n  if (Object.keys(filter).length > 0) {\n    const fields = Object.keys(filter)\n    fields.forEach((field, index) => {\n      const search = filter[field].toLowerCase()\n\n      if (index === 0) {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      } else {\n        mutable_data = mutable_data.filter(item => item[field].toLowerCase().includes(search))\n      }\n    })\n  }\n\n  return mutable_data\n}\n","import lodash from 'lodash'\n\nexport const setPaginate = ({ args, exc }) => {\n  const { page, limit } = args\n\n  if (args && limit && page) return { page, limit, data: lodash.take(exc.data, limit) }\n\n  return { page, limit: exc.limit, data: lodash.chunk(exc.data, exc.limit)[page - 1] }\n}\n","import lodash from 'lodash'\n\nexport const sort = args => {\n  return { data: lodash.orderBy(args.data, [args.field], [args.direction ? 'asc' : 'desc']) }\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'id', search: true },\n  { name: 'Name', sortField: 'name', search: true },\n  { name: 'Location', sortField: 'address', search: true },\n  // { name: 'Type', sortField: 'type', search: true },\n  // { name: 'Groupings', sortField: 'groups', search: true },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true },\n  { name: 'Doctor Name', sortField: 'name', search: true },\n  { name: 'Specialization', sortField: 'specialization', search: true },\n  { name: 'Schedule', sortField: 'schedule', search: true },\n  { name: 'Remarks', sortField: 'remarks', search: false }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  const [partnerId, setPartnerId] = React.useState('')\n  const [partnerName, setPartnerName] = React.useState('')\n  const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    data: [],\n    filtered: [],\n    filters: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [anySearch, setAnySearch] = React.useState('')\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchAll = () => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' }\n    }).then(res => {\n      const { data } = res.data\n      setPartners(state => ({\n        ...state,\n        data: data.results,\n        count: data.count,\n        page: 1,\n        orderBy: 'name',\n        order: true\n      }))\n    })\n  }\n\n  const fetchDoctors = ({ facility_id, filters }) => {\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' },\n      facility_id,\n      filters\n    }).then(res => {\n      const { data } = res.data\n      setDoctors(state => ({\n        ...state,\n        ...data,\n        show: true,\n        facility_id,\n        data: data.results,\n        filtered: data.results,\n        filters\n      }))\n    })\n  }\n\n  const lodash = require('lodash')\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchAll()\n  }, [memberAccountNumber])\n\n  React.useEffect(() => {\n    let filtered = doctors.data\n    for (const filter in doctors.filters) {\n      filtered = filtered.filter(item => {\n        if (typeof item[filter] !== 'object') {\n          return includesAny(item[filter], doctors.filters[filter])\n        } else {\n          for (const field in item[filter]) {\n            if (includesAny(item[filter][field], doctors.filters[filter])) return true\n          }\n        }\n      })\n    }\n    filtered = lodash.sortBy(filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    setDoctors(state => ({ ...state, filtered }))\n  }, [doctors.filters])\n\n  const queryColumn = (collection, { search, field }) => {\n    setPartners(state => ({ ...state, search, category: field }))\n    if (collection === 'partners') {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          let searchObj = search\n          let category = field\n          if (field === 'id') {\n            setPartnerId(search)\n            if (partnerName || partnerLocation) {\n              searchObj = {\n                id: search,\n                name: partnerName,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'name') {\n            setPartnerName(search)\n            if (partnerId || partnerLocation || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: search,\n                address: partnerLocation,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'address') {\n            setPartnerLocation(search)\n            if (partnerId || partnerName || anySearch) {\n              searchObj = {\n                id: partnerId,\n                name: partnerName,\n                address: search,\n                any: anySearch\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'any') {\n            // Workaround for adding support for \"inclusive any\"\n\n            setAnySearch(search)\n\n            let obj = {\n              id: partnerId,\n              name: partnerName,\n              address: partnerLocation\n            }\n\n            let flag = false\n            // Check if the other fields have values and include them in the search\n            Object.entries(obj).forEach(value => {\n              if (value[1] && value[1].length > 1) {\n                if (flag === false) {\n                  searchObj = {\n                    any: search\n                  }\n                  category = 'and'\n                  flag = true\n                }\n                searchObj[value[0]] = value[1]\n              }\n            })\n          }\n          if (search.length >= 3 || (!search && category === 'and')) {\n            setPartners(state => ({ ...state, search: searchObj }))\n            partnerService({\n              member_account_no: memberAccountNumber,\n              params: {\n                limit: partners.limit,\n                page: partners.page,\n                sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n                search: searchObj,\n                category: category\n              }\n            }).then(res => {\n              const { data } = res.data\n              setPartners(state => ({\n                ...state,\n                data: data.results,\n                count: data.count,\n                page: 1,\n                orderBy: 'name',\n                order: true\n              }))\n            })\n          } else fetchAll()\n        }, 500)\n      )\n    } else {\n      setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    if (collection === 'partners') {\n      let _partners = () => {\n        let _partners = partners\n        delete _partners.data\n        return _partners\n      }\n\n      let _params = {\n        ..._partners(),\n        orderBy,\n        order: !partners.order,\n        sort: `${orderBy}|${partners.order ? 'asc' : 'desc'}`\n        // category: orderBy\n      }\n\n      if (typeof partners.search !== 'string') {\n        _params = {\n          ..._params,\n          category: 'and'\n        }\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n      const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n      setDoctors(state => ({ ...state, filtered: sorted }))\n    }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        category: partners.category,\n        limit: partners.limit,\n        page: partners.page,\n        search: partners.search,\n        sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n        ...params\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort('partners', headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      id={`pn-${headCell.sortField}-input`}\n                      className={`${classes.search}`}\n                      onChange={event =>\n                        queryColumn('partners', { search: event.target.value, field: headCell.sortField })\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow id={`pn-row-${index}`} key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.id}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    {[\n                      row.address.unit_no,\n                      row.address.floor,\n                      row.address.building_no,\n                      row.address.building_name,\n                      row.address.street,\n                      row.address.barangay,\n                      row.address.district,\n                      row.address.city,\n                      row.address.region,\n                      row.address.zip_code\n                    ]\n                      .filter(Boolean)\n                      .join(' ')}\n                  </span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      id={`pn-view-link-${index}-control`}\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => {\n                        fetchDoctors({ facility_id: row.id, filters: [] })\n                      }}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort('doctors', cell.sortField)}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event =>\n                            queryColumn('doctors', { search: event.target.value, field: cell.sortField })\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.filtered.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.filtered.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{[row.name.first, row.name.middle, row.name.last].join(' ')}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {[\n                              row.specialization.main,\n                              row.specialization.major,\n                              row.specialization.sub,\n                              row.specialization.other\n                            ]\n                              .filter(Boolean)\n                              .join(', ')}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport { PdfView2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { NameFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { getMemberContract, getClientContract } = props\n  // Variables\n  const { isMember, member, client } = props\n\n  const [fileName, setFileName] = React.useState('')\n  const [title, setTitle] = React.useState('')\n  const [service, setService] = React.useState(null)\n\n  React.useEffect(() => {\n    if (isMember) {\n      if (!member) return\n      const mct_id = member.benefit_tree.MCT.details._id\n      setService(getMemberContract({ mct_id }))\n      setFileName(`${NameFormatter(member.info).format2} Contract`)\n      setTitle('Member Contract')\n    } else {\n      if (!client) return\n      const mct_id = client.benefit_tree.MCT.details._id\n      setService(getClientContract({ mct_id }))\n      setFileName(`${client.info.brand_name} Contract`)\n      setTitle('Client Contract')\n    }\n  }, [isMember, member, client])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes.pdf}>\n          <PdfView2Component\n            name={title}\n            fileName={fileName}\n            initialPageNumber={1}\n            initialScale={1}\n            service={service}\n            enabled\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Styles\nimport classes from './RightPanelTabs.module.scss'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate, onReturnInquire = () => {} } = props\n  // Variables\n  const { claim, permissions, isMember, member, memberFetchStatus, client, clientFetchStatus, utilizationLoa } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors, getMemberContract, getClientContract } = props\n\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benefits-tab' label='BENEFITS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Benefits isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='exclusions-tab' label='EXCLUSIONS'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Exclusions isMember={isMember} member={member} client={client} />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number || '-'}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            isMember={isMember}\n            member={member}\n            client={client}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'communication', 'read']) && (\n        <CustomTab id='communication-tab' label='COMMUNICATION'>\n          <ChatBox\n            messages={inquiries.messages}\n            title='Communication Logs'\n            onSubmitComment={comment => onReturnInquire({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.communication}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          {(memberFetchStatus === 'fetching' || clientFetchStatus === 'fetching') && (\n            <div className={classes.center}>\n              <CircularProgress size={50} />\n            </div>\n          )}\n          {memberFetchStatus === '404' && (\n            <div className={classes.center}>\n              <Typography>{`${isMember ? 'Member' : 'Client'} Not Found`}</Typography>\n            </div>\n          )}\n          {memberFetchStatus === '500' && (\n            <div className={classes.center}>\n              <Typography>\n                {\n                  'Unable to load the Benefits, Exclusions, and Contract of this member/client. Please contact your System Administrator.'\n                }\n              </Typography>\n            </div>\n          )}\n          {(memberFetchStatus === 'success' || clientFetchStatus === 'success') && (\n            <Contract\n              isMember={isMember}\n              member={member}\n              client={client}\n              getMemberContract={getMemberContract}\n              getClientContract={getClientContract}\n            />\n          )}\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data, permissions, onChange } = props\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          readOnly={permissions}\n          onChange={onChange}\n        />\n      </div>\n    </Paper>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Name')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      contract_plan_type: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n  console.log('inpatient', error)\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Date Admitted'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Date Discharged'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          loa_notes: data.loa_notes,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showCompany\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    required,\n    // disableControls = false,\n    onChange = () => {},\n    readOnly = false,\n    hasDiscrepancy = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes.label}>\n          <Typography variant='subtitle2'>{`${!readOnly && required ? '* ' : ''}Contract Year:`}</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant={hasDiscrepancy ? 'subtitle2' : 'subtitle1'}>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {!readOnly && focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <path\n          className={classes.crown}\n          d='M256.5,66.8c0,0,13.6,48.5,11.2,91.9c-2.5,43.4-8.7,93.1-11.2,103c-2.5,9.9-14.9,33.5-11.2,40.9s1.2,24.8,5,34.7c3.7,9.9,0,37.9,0,46.2s-6.2,24.5-12.4,24.5c-6.2,0-21.8-1.2-28.5,0c-6.7,1.2-29.8-2.5-39.7,0c-9.9,2.5-40.9,12.4-38.5-5s-6.2-22.3,5-47.2c11.2-24.8,26.1-54.6,29.8-59.6c3.7-5,12.4-2.5,17.4-19.9c5-17.4,12.6-67,19.3-80.7c6.7-13.6,21.6-62,24.1-72c2.5-9.9,11.2-42.2,14.9-47.2C245.3,71.9,254.9,60.9,256.5,66.8z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -98.753174, -57.20928955078125)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M245.3,302.7c-3.7-7.4,8.7-31,11.2-40.9c2.5-9.9,8.7-59.6,11.2-103c2.5-43.4-11.2-91.9-11.2-91.9c-1.5-5.9-11.2,5.1-14.9,10c-3.7,5-12.4,37.2-14.9,47.2c-2.5,9.9-17.4,58.3-24.1,72c-6.7,13.6-14.4,63.3-19.3,80.7c-5,17.4-13.6,14.9-17.4,19.9c-1.7,2.2-5.5,9.4-10.3,18.8c10.9,2.2,80.1,15.2,95.6,25.7c-0.2-1.3-0.5-2.5-0.9-3.5C246.5,327.5,249,310.1,245.3,302.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <path\n          className={classes.crown}\n          d='M297.4,405.6c0,0-19.9-6.2-7.4-31c12.4-24.8,21.1-40.9,27.3-57.1c6.2-16.1,3.7-37.2,12.4-50.9c8.7-13.6,27.3-65.8,29.8-85.6c2.5-19.9,14.9-91.8,22.3-96.8c7.4-5,16.1,9.9,17.4,17.4c1.2,7.4,1.2,69.5,0,75.7c-1.2,6.2-5,67-6.2,79.4c-1.2,12.4-9.9,39.7-9.9,49.6c0,9.9,1.2,33.5,1.2,45.9c0,12.4-1.2,39.7-8.7,45.9c-7.4,6.2-10.6,7.4-32.6,7.4C321,405.6,297.4,405.6,297.4,405.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -241.712036, -52.80860900878906)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M393,256.7c1.2-12.4,5-73.2,6.2-79.4c1.2-6.2,1.2-68.2,0-75.7c-1.2-7.4-9.9-22.3-17.4-17.4c-7.4,5-19.9,76.9-22.3,96.8c-2.5,19.9-21.1,72-29.8,85.6c-8.7,13.6-6.2,34.7-12.4,50.9c-3.4,8.9-7.6,17.9-12.8,28.3c7.1-6.1,14.5-11.8,22.8-16.1c15.5-7.8,36.3-9,48.5,3.3c3.1,3.1,5.7,7.1,8.3,10.9c-0.3-12.7-1.1-29.6-1.1-37.6C383,296.4,391.7,269.1,393,256.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor3 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.1712341308594)'>\n        <path\n          className={classes.crown}\n          d='M239.7,459c4.1,11.8,5.9,37.2,5.9,43.1c0,5.9,1.8,29,0,35.5c-1.8,6.5-8.3,15.4-7.1,21.3c1.2,5.9,3,30.9,2.4,32.6c-0.6,1.7,0,20.6,1.2,25.3c1.2,4.7,8.3,50.2,10,55.6c1.8,5.3,8.3,34.9,8.3,36.6c0,1.8-2.4,8.3-8.9,7.1c-6.5-1.2-17.7-11.8-18.6-16c-0.9-4.1-18-38.4-21-45.5c-3-7.1-8.3-24.2-12.4-40.2c-4.1-16-11.2-42-11.2-43.7c0-1.8,2.4-13.6-5.9-27.2c-8.3-13.6-16.5-37.2-17.1-39.6c-0.6-2.4-3.5-26-3.5-33.7c0-7.7-2.4-17,5.9-18C175.8,451.3,235.5,447.2,239.7,459z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -108.091278, 806.2712097167969)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M188.2,570.7c0,1.8,7.1,27.8,11.2,43.7c4.1,16,9.5,33.1,12.4,40.2c3,7.1,20.1,41.4,21,45.5c0.9,4.1,12.1,14.8,18.6,16c6.5,1.2,8.9-5.3,8.9-7.1s-6.5-31.3-8.3-36.6c-1.8-5.3-8.9-50.8-10-55.6c-1.2-4.7-1.8-23.6-1.2-25.3c0.6-1.7-1.2-26.7-2.4-32.6c-1.1-5.5,4.4-13.5,6.6-19.8c-16.2,9.5-37.6,9.9-54,0.6c-4.9-2.8-10-6.5-15.2-8.3c2,4.4,4.2,8.7,6.4,12.2C190.6,557.1,188.2,569,188.2,570.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Incisor4 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 -25 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.1224517822266)'>\n        <path\n          className={classes.crown}\n          d='M279.9,455.5c-0.6,5.3-4.7,6.5-3.5,16.5c1.2,10,3,33.1,6.5,38.4c3.5,5.3,8.8,23.6,13.6,40.2c4.7,16.5,13,41.4,15.4,56.2c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c3.5-2.4,7.1-19.5,7.1-29.6s-1.8-39.6-2.4-42c-0.6-2.4-1.2-18.3-7.7-18.3C343.7,454.9,280.5,450.2,279.9,455.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -220.271545, 809.2224884033203)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M311.8,606.8c2.4,14.8,9.5,42,10.6,45.5c1.2,3.5,10.6,37.2,10.6,37.2s7.1,25.4,17.1,27.8c10,2.4,16.5,1.8,14.8-3.5c-1.8-5.3,2.4-27.8,0.3-30.7c-2.1-3-7.4-28.4-7.4-36.6c0-8.3-3.5-65.6-4.1-69.7c-0.6-4.1-4.1-29.6-0.6-31.9c1.9-1.3,3.8-6.7,5.1-12.9c-5.7,7.2-11.9,13.7-20.1,15.3c-20,3.8-33.6-23.8-51.9-29.2c3.1,8.2,6.8,21,10.2,32.8C301.1,567.2,309.4,592,311.8,606.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <path\n          className={classes.crown}\n          d='M455,426.7c-2.5-3.7-22.3-25-31-37.3s2.5-50.8,8.7-60.7c6.2-9.9,19.9-22.3,22.3-31c2.5-8.7,6.2-39.7,8.7-44.7c2.5-5,7.4-37,7.4-46.4c0-9.4,6.2-72.7,16.1-87.6c9.9-14.9,21.1-29.7,23.6-40.9c2.5-11.3,6.2-32.3,12.4-27.3c6.2,5,12.4,3.5,12.4,16s-1.2,33.6,0,49.7c1.2,16.1,0,67,0,73.2s2.3,35,0.6,54.7c-1.8,19.7-9.2,32.1-9.2,44.5s-6.2,27.3,0,39.7c6.2,12.4,9.9,39.7,9.9,50.9c0,11.2-3.7,14.9-11.2,19.9c-7.4,5-16.1,0-22.3,6.2c-6.2,6.2-27.3,17.4-29.8,21.1C471.1,430.5,455,426.7,455,426.7z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -392.134262, -41.07334899902344)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M527,289c0-12.4,7.4-24.8,9.2-44.5c1.8-19.7-0.6-48.5-0.6-54.7s1.2-57.1,0-73.2c-1.2-16.1,0-37.2,0-49.7c0-12.5-6.2-11.1-12.4-16c-6.2-5-9.9,16-12.4,27.3c-2.5,11.3-13.6,26.1-23.6,40.9c-9.9,14.9-16.1,78.2-16.1,87.6c0,9.4-5,41.4-7.4,46.4c-2.5,5-6.2,36-8.7,44.7c-2.4,8.3-14.9,19.9-21.4,29.6c11.8-15,29.5-25.3,48.5-28c9.2-1.3,19.2-0.7,26.6,4.9c12.2,9.3,13.2,28.8,23.3,39.4c-1.4-5.8-3.1-11-5-14.9C520.8,316.3,527,301.4,527,289z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Canine2 (props) {\n  // const {  state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.4396057128906)'>\n        <path\n          className={classes.crown}\n          d='M446,430.6c0,0,7.9,14.3,14.3,17.8c6.4,3.5,24.7,12.4,27.7,20.7c3,8.3,1.8,34.3,0,46.7c-1.8,12.4-11.2,31.3-12.4,39c-1.2,7.7-6.5,57.9,0,70.9c6.5,13,6.5,31.3,8.3,49.1c1.8,17.7,8.3,69.4,5.9,72.1c-2.4,2.7-14.8,14.3-21.6,2.7c-6.8-11.6-14.5-45.3-18-50.6c-3.5-5.3-24.8-46.1-26-53.2c-1.2-7.1-16.5-95.2-20.7-99.3c-4.1-4.1-11.8-33.7-13.6-52.6c-1.8-18.9-1.2-29.6,4.7-35.5c5.9-5.9,26-21.3,27.8-23.6c1.8-2.4,15.7-5.6,15.7-5.6S443.6,426.6,446,430.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -353.862335, 816.5395812988281)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M424.1,645.8c1.2,7.1,22.5,47.9,26,53.2c3.5,5.3,11.2,39,18,50.6c6.8,11.6,19.2,0,21.6-2.7c2.4-2.7-4.2-54.4-5.9-72.1c-1.8-17.7-1.8-36.1-8.3-49.1c-6.5-13-1.2-63.2,0-70.9c1-6.6,8.2-21.6,11.3-33.5c-3.8,3.2-7,7.3-10.9,10.6c-21,17.6-53.5,4.3-73.9-14c-3-2.7-6.1-5.6-9.7-7.3c3.1,16.2,8.1,32.9,11.1,36C407.5,550.6,422.9,638.7,424.1,645.8z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.0228881835938)'>\n        <path\n          className={classes.crown}\n          d='M700.7,708.5c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c5.6-2.4,14.5-16,14.5-29c0-13-5.9-41.4-13-46.1c-7.1-4.7-30.1-3.5-37.2,0c-7.1,3.5-11.2,8.9-19.5,4.1c-8.3-4.7-17.1-20.8-34.3-17.5c-17.1,3.3-17.1,5.1-23.1,9.8c-5.9,4.7-14.2,8.9-21.3,9.5c-7.1,0.6-26.6,0-27.2,4.1c-0.6,4.1-3,7.7-3,18.9c0,11.2-1.2,18.9,0,27.2c1.2,8.3,5.9,27.2,10,31.9c4.1,4.7,11.2,13,11.2,20.7c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7s13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7C685.9,710.8,698.9,714.5,700.7,708.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -533.9918823242188, 827.1229248046875)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M559.4,561.3c0,7.7-1.2,31.9-3,41.4c-1.8,9.5-0.6,26.6-2.4,33.7c-1.8,7.1-0.2,28.8,0.6,35.5c4.4,35.7,6.5,77.7,16,77.7c9.5,0,13.7,0.9,14-5c0.2-5.9-3.8-14.2,0-39c3.8-24.8,6.4-53.1,9.7-66.2c13.5-53.5,40.9-59.1,48.5-49.1c7.6,10,19.4,32.5,22.4,42.6c3,10,10.6,27.2,13.6,42.6c3,15.4,4.7,26,5.9,30.7c1.2,4.7,14.2,8.4,16,2.4c0.5-1.8,10.6-32.5,7.7-66.8c-3-34.3-13-63.8-13-74.5c0-10.6,1.1-37.2,6.8-39.6c3.2-1.3,7.3-6.2,10.4-12.5c-17.3-1-31.9,11.9-46.7,21c-38.6,23.8-80.4,14.6-117.8-10.9c-2.1-1.4-4.6-2.8-7.2-4c2,7.9,4.8,16.4,7.4,19.3C552.3,545.3,559.4,553.6,559.4,561.3z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Premolar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 814.9726867675781)'>\n        <path\n          className={classes.crown}\n          d='M832.9,453.6c0,0-7.1-13.6-17.7-9.5c-10.6,4.1-23.6,2.8-27.8,4.3c-4.1,1.6-14.8,4.5-14.2,12.2c0.6,7.7-4.2,23.6,0,35.5c4.2,11.8,11.3,34.9,18.3,40.8c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c7.1-5.3,21.4-24.2,19.9-46.7c-1.6-22.5-3.3-41.4-7.5-45.5c-4.1-4.1-17.1-3-20.1,0c-3,3-14.8,7.1-16,4.1c-1.2-3-20.1-18.3-25.4-15.4c-5.3,3-21.3,3.5-28.4,8.9C851.2,442.9,832.9,453.6,832.9,453.6z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, -1, -768.6585083007814, 815.0726623535156)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M791.5,536.9c7.1,5.9,8.3,7.1,6.5,15.4c-1.8,8.3-13.6,48.5-14.8,53.8c-1.2,5.3-7.1,26-5.3,31.3c1.8,5.3,7.1,24.2,7.7,29.6c0.6,5.3,2.4,37.2,6.5,41.4c4.1,4.1,13,16.5,16.6,0c3.5-16.6,9.5-57.3,11.8-66.2c2.4-8.9,18.9-37.8,23.1-42c4.1-4.1,17.1-27.9,29.6-20.1c12.4,7.7,22.5,17.2,30.1,31.4c7.7,14.2,15.4,22.5,18.9,32.5c3.5,10,8.9,43.7,10.6,54.4c1.8,10.6,13.6,20.1,18.3,16c4.7-4.1,4.7-8.9,3.5-22.5c-1.2-13.6-1.1-44.3,0.7-55c1.7-10.6-4.2-41.4-6.6-47.9c-2.4-6.5-20.7-38.4-20.1-43.7c0.6-5.3,0-7.7,7.1-13c3.3-2.5,8.2-7.9,12.3-15.3c-7.5-0.5-15.3,0.3-22.8,1.1c-42.2,4.5-84.4,9.1-126.6,13.6c-6.7,0.7-9.8-0.1-12.2-1.7C788.1,533,789.8,535.5,791.5,536.9z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar1 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <path\n          className={classes.crown}\n          d='M667.2,244.5c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4s22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-6.2,6.2-16.1,27.3-17.4,34.7c-1.2,7.4-11.4,42.9-6.3,51.2c5.1,8.3,11.3,10.8,21.2,17c9.9,6.2,23.6,17.6,29.8,12.5c6.2-5.1,37.2-18.7,43.4-17.5c6.2,1.2,24.8,5,28.5,9.9c3.7,5,14.9,5,24.8,0c9.9-5,16.1-6.8,17.4-22c1.2-15.2,3.7-47.5,0-54.9c-3.7-7.4-18.6-22.3-14.9-31c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7c0-18.6-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64C678.3,210.8,671.1,249.8,667.2,244.5z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -586.72412109375, -33.668106)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M742.9,297.7c3.7-8.7,16.3-53.4,16.9-69.5c0.5-16.1-4.2-65.8,0-69.5c4.2-3.7,5.8-40.5,0-37.6c-5.7,2.9-16.9,20.3-16.9,26.5s-8.7,26.1-11.2,37.2c-2.5,11.2-12.4,58.3-12.4,39.7s-8.7-63.3-8.7-63.3s0-47.1-7.4-40.3c-7.4,6.8-17.4,5.5-17.4,21.7c0,16.1-9.4,59.8-8.4,64c1,4.2-6.3,43.1-10.2,37.8c0,0-13.6-17.6-19.9-31.8c-6.2-14.2-26.1-55.1-23.6-62.6c2.5-7.4-2.5-38.5-9.9-26.1c-7.4,12.4-19.9,24.8-18.6,37.2c1.2,12.4-6.4,37.3-0.1,48.4c6.3,11.1,22.4,47.1,24.9,59.5c2.5,12.4,2.5,22.3-3.7,28.5c-2.4,2.4-5.3,7-8.1,12.1c17.6-9.8,38.4-14,58.6-12.6c26.6,1.8,52.2,12.7,73.9,28.3c6,4.3,11.9,9,18.8,11.7c-0.3-3.8-0.8-6.8-1.7-8.5C754,321.3,739.1,306.4,742.9,297.7z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './../style.module.scss'\n\nexport default function Molar2 (props) {\n  // const { state } = props\n\n  return (\n    <svg viewBox='0 0 192 391'>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <path\n          className={classes.crown}\n          d='M863.6,231.4c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-6.6,8.3-21.5,33.6-21,43.6c0.6,9.9-6.1,35.3,0,39.7c6.1,4.4,12.7,4.4,17.7,5c5,0.6,8.3,5,11,5c2.8,0,43.6-22.6,48.5-22.1c5,0.6,18.2,10.5,25.4,12.1c7.2,1.7,27.6,5,37.5,0c9.9-5,14.9-11,16-33.1c1.1-22.1-4.4-48.5-8.3-51.8c-3.9-3.3-7.7-3.3-11-14.9c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2s-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5C869.1,223.2,865,236.5,863.6,231.4z'\n        />\n      </g>\n      <g transform='matrix(1, 0, 0, 1, -799.4635620117188, -20.53668212890625)'>\n        <g>\n          <path\n            className={classes.gums}\n            d='M946.3,292.1c-3.3-11.6-2.2-39.7,3.9-49.1c6.1-9.4,15.2-45.8,15.6-53.5c0.4-7.7-5.1-46.3-9.5-50.2c-4.4-3.9-11.6-9.9-13.2-1.7c-1.7,8.3-6.6,28.1-8.3,38.6c-1.7,10.5-17.1,56.8-17.6,48c-0.6-8.8-5.5-23.7-5-34.2c0.6-10.5,0-43.6-2.8-52.4c-2.8-8.8-9.4-20.2-13.2-12.8c-3.9,7.3-10.2,15.6-9.8,23.9c0.4,8.3-5.1,24.3-6.8,37c-1.7,12.7-7.2,27.6-8.8,32.5c-1.7,5-5.7,18.4-7.2,13.2c0,0-9.9-34.2-8.8-43.6c1.1-9.4,0.6-57.4-7.7-61.2c-8.3-3.9-12.7-1.1-13.2,3.9c-0.6,5-4.4,34.7-6.6,38.1c-2.2,3.3-13.2,38-11.6,41.1c1.7,3.1,2.8,39.5,6.6,47.2c3.9,7.7,13.2,29.8,11.6,37.5c-1.7,7.7,3.3,6.1-3.3,14.3c-1.9,2.3-4.4,6-7,10.3c5.1-2.9,10.2-5.7,15.3-8c20-9,42.5-10.4,64.3-11.6c19.1-1.1,40.2-1.5,55.5,9.4c-0.4-0.8-0.8-1.4-1.2-1.8C953.5,303.7,949.6,303.7,946.3,292.1z'\n            fill='rgb(241, 86, 82)'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport Incisor1 from './Incisor/1'\nimport Incisor2 from './Incisor/2'\nimport Incisor3 from './Incisor/3'\nimport Incisor4 from './Incisor/4'\nimport Canine1 from './Canine/1'\nimport Canine2 from './Canine/2'\nimport Premolar1 from './Premolar/1'\nimport Premolar2 from './Premolar/2'\nimport Molar1 from './Molar/1'\nimport Molar2 from './Molar/2'\n\nimport classes from './style.module.scss'\n\nexport default function TeethFactory (props) {\n  const { type, index, transform = {}, state = [] } = props\n\n  return (\n    <div className={classes.root}>\n      {transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <div className={classes.circle} />\n            <span>{index + 1}</span>\n          </div>\n        </React.Fragment>\n      )}\n\n      <div\n        className={`${classes.teeth} ${classes[state]}  ${transform.flipX && classes['flip-x']} ${transform.flipY &&\n          classes['flip-y']}`}\n      >\n        <React.Fragment>\n          {type === 'Incisor1' && <Incisor1 state={state} />}\n          {type === 'Incisor2' && <Incisor2 state={state} />}\n          {type === 'Incisor3' && <Incisor3 state={state} />}\n          {type === 'Incisor4' && <Incisor4 state={state} />}\n\n          {type === 'Canine1' && <Canine1 state={state} />}\n          {type === 'Canine2' && <Canine2 state={state} />}\n\n          {type === 'Premolar1' && <Premolar1 state={state} />}\n          {type === 'Premolar2' && <Premolar2 state={state} />}\n\n          {type === 'Molar1' && <Molar1 state={state} />}\n          {type === 'Molar2' && <Molar2 state={state} />}\n        </React.Fragment>\n      </div>\n      {!transform.flipY && (\n        <React.Fragment>\n          <div className={classes['other-details']}>\n            <span>{index + 1}</span>\n            <div className={classes.circle} />\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport TeethFactory from './Teeth/TeethFactory'\n\nexport default function TeethGroup (props) {\n  const { number, teeth, states = {} } = props\n\n  const [details, setDetails] = React.useState()\n\n  React.useEffect(() => {\n    let _details = {}\n\n    switch (number) {\n      case 1:\n        _details = {\n          startAt: 0,\n          transform: {\n            flipX: 1\n          }\n        }\n        break\n\n      case 2:\n        _details = {\n          startAt: 8\n        }\n        break\n\n      case 3:\n        _details = {\n          startAt: 31,\n          reverse: true,\n          transform: {\n            flipX: 1,\n            flipY: 1\n          }\n        }\n        break\n\n      case 4:\n        _details = {\n          startAt: 23,\n          reverse: true,\n          transform: {\n            flipY: 1\n          }\n        }\n        break\n\n      default:\n        break\n    }\n\n    setDetails(_details)\n  }, [number])\n\n  return (\n    <React.Fragment>\n      {details && (\n        <React.Fragment>\n          {teeth.map((type, index) => {\n            const _index = !details.reverse ? details.startAt + index : details.startAt - index\n            return (\n              <TeethFactory\n                key={_index}\n                transform={details.transform}\n                type={type}\n                index={_index}\n                state={states[_index]}\n              />\n            )\n          })}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport TeethGroup from './TeethGroup'\n\n// Styles\nimport classes from './DentalChart.module.scss'\n\nconst teeth = {\n  uppper: {\n    left: ['Molar2', 'Molar1', 'Premolar1', 'Canine2', 'Canine1', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Canine1', 'Canine2', 'Premolar1', 'Molar1', 'Molar2']\n  },\n  lower: {\n    left: ['Molar2', 'Premolar2', 'Premolar1', 'Canine1', 'Incisor4', 'Incisor3', 'Incisor2', 'Incisor1'],\n    right: ['Incisor1', 'Incisor2', 'Incisor3', 'Incisor4', 'Canine1', 'Premolar1', 'Premolar2', 'Molar2']\n  }\n}\n\n// props\n// states Object {\n//  enum: 'filled, extracted, default\n// }\n\nexport default function DentalChart (props) {\n  const { states } = props\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='h6'>Dental Examination Chart</Typography>\n      </div>\n      <div className={classes.container}>\n        <div className={classes.chart}>\n          <div className={classes.upper}>\n            <TeethGroup number={1} teeth={teeth.uppper.left} states={states} />\n            <TeethGroup number={2} teeth={teeth.uppper.right} reverse states={states} />\n          </div>\n\n          <div className={classes.lower}>\n            <TeethGroup number={3} teeth={teeth.lower.left} states={states} />\n            <TeethGroup number={4} teeth={teeth.lower.right} states={states} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalChart from '../../../DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangeDoctor } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.chart}`}>\n                <DentalChart states={constructDentalStates(claim.procedures)} />\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                  showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility, onChangePro } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          claim_sub_type: data.claim_sub.type,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                // showContractRange\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO/ECU Specialist ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO/ECU Specialist Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      required\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      required\n                      readOnly={!permissions.base.update}\n                      hasDiscrepancy={!!discrepancy.contract_year_from}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          claim_source: data.claim_source,\n          medicine_category: data.medicine_category,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                showClaimSource\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medicine-category'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.medicine_category\n                    }}\n                  >\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      required\n                      error={error.medicine_category}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions, onReturn } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_name: '',\n      client_account_number: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packagers: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          // customer_account_number: data.customer_account_number,\n          // company_name: data.company_name,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          ppe_packages: data.ppe_packages || [],\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                showMemberAccountNumber={false}\n                showCompany\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-from'\n                      required\n                      label='Date of Service (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.startOf('day').toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service-to'\n                      required\n                      label='Date of Service (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['packages']}`}>\n                  <Typography>PPE Package/s:</Typography>\n                  <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                    <List>\n                      {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                        <ListItem key={index}>\n                          <ListItemText primary={`Package ${index + 1}`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Paper>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  showPhilhealthField={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  showPhilhealthRemarks={false}\n                  showAmountPaidByMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .allow('', null),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .allow('', null),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={date => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    getReason()\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_name: '',\n      client_account_number: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          contract_plan_type: data.contract_plan_type,\n          client_account_name: data.client.account_name,\n          client_account_number: data.client.account_number,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || [],\n          claim_remarks: data.claim_remarks\n        })\n      )\n    })\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                isCM\n              />\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date\n                              .toISOString()\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  // showPhilhealthField={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  // showAmountPaidByMember={false}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  // showAmountNotCovered={false}\n                  // showAmountDueFromMember={false}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doReject={onReject}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const {\n    show,\n    canPrintNotice = true,\n    setShowModal,\n    handleOnSave,\n    doReject,\n    doViewClaimNotice = () => {},\n    service,\n    lookup\n  } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info_analysts: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    if (showAdd) {\n      service\n        .lookups({\n          on: 'dropdown',\n          params: { field: lookup }\n        })\n        .then(res => {\n          const { data } = res.data\n          setReasonDropdown(\n            data.map(item => ({\n              value: item.reason,\n              text: item.reason\n            }))\n          )\n        })\n    }\n  }, [showAdd])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          {canPrintNotice && (\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => doViewClaimNotice({ goBack: false })}\n            >\n              Print Notice\n            </Button>\n          )}\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={date => handleOnChange({ field: 'prepared_by', value: date.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfo from '../ReimbursementInfo/ReimbursementInfo'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\nimport AdditionalFields from './AdditionalFields'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\n\n// Libraries\nimport moment from 'moment'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const { onViewClaimNotice, onChangeDoctor = () => {}, onReject, onChangeFacility } = props\n  // Variables\n  const { claim, permissions, _type, grandTotal } = props\n  // Services\n  const { getClaimDetails, onChangePro, getReason } = props\n  // Validation\n  const { doValidateAll, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsAnalysis: state }) => state.dropDown)\n  const discrepancy = useSelector(({ ClaimsAnalysis: state }) => state.discrepancy)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const recon = useSelector(({ ClaimsAnalysis: state }) => state.recon)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        contract_plan_type: data.contract_plan_type,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        date_to: data.date.to,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        reimbursement_info_analysts: data.reimbursement_info_analysts || [],\n        claim_remarks: data.claim_remarks\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type)\n      })\n\n      setBatchNumber(data.batch_number)\n    })\n  }, [])\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n\n    if (value === 'InPatient') {\n      const _claim = Object.assign({}, claim)\n      delete _claim.doctor_id\n      delete _claim.doctor_name\n      delete _claim.department\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.startOf('day').toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={date =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: date.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-department'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.department\n                      }}\n                    >\n                      <TextField\n                        id='department'\n                        label='Department'\n                        value={claim.department}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'department'\n                            })\n                          )\n                        }\n                        error={error.pro_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        required\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.medicine_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-reimbursement-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.reimbursement_category\n                      }}\n                    >\n                      <TextField\n                        id='reimbursement-category'\n                        label='Reimbursement Category'\n                        value={claim.reimbursement_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'reimbursement_category'\n                            })\n                          )\n                        }\n                        readOnly={!permissions.base.update}\n                        error={error.reimbursement_category}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-official-receipt-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.official_receipt_number\n                  }}\n                >\n                  <TextField\n                    id='official-receipt-number'\n                    label='Official Receipt Number'\n                    value={claim.official_receipt_number}\n                    required\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'official_receipt_number'\n                        })\n                      )\n                    }\n                    readOnly={!permissions.base.update}\n                    error={error.official_receipt_number}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                  diagnosis={claim.diagnosis}\n                />\n              )}\n              <ClaimsRemarks\n                data={claim.claim_remarks}\n                permissions={!permissions.base.update}\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'claim_remarks'\n                    })\n                  )\n                }\n              />\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs inquiries={inquiries} escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n          <ClaimFooter\n            {...props}\n            // userManagementService={userManagementService}\n            // getUsers={getUsers}\n            // doValidate={doValidateAll}\n            // doEscalate={onEscalate}\n            // doReassign={onReassign}\n            // doViewAnalysisSheet={onViewAnalysisSheet}\n            // doViewLetterOfAdvice={onViewLetterOfAdvice}\n            // doViewClaimNotice={onViewClaimNotice}\n            // doApprove={onApprove}\n            // doSave={onSave}\n            // doCancel={onCancel}\n            // doRemove={onRemove}\n            // doReturn={onReturn}\n            onReject={({ goBack }) => setShowReimbursementModal(true)}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, field: allowedFields })\n              return valid\n            }}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            isReimbursement\n            reimbursement_info={claim.reimbursement_info}\n          />\n          <ReimbursementInfo\n            claim={{\n              ...claim,\n              batch_number: batchNumber\n            }}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={ClaimsAdjudicationServices}\n            permission={permissions.reimbursement_info}\n            canPrintNotice={false}\n            doViewClaimNotice={onViewClaimNotice}\n            handleOnSave={data =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: data,\n                  field: 'reimbursement_info_analysts'\n                })\n              )\n            }\n            doReject={() => onReject({ goBack: true })}\n            lookup={'reject-reason'}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type } = _props\n  const props = _props\n\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\nimport Total from 'Utilities/Total'\n\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsAnalysis as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  resetClaim,\n  setClaimType,\n  setDropDown,\n  initDropDowns,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  setEscalationMessages,\n  setInquiryMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes,\n  setRejectStatus\n} = actions\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsAnalysis: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsAnalysis: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsAnalysis: state }) => state.suggestions)\n  const escalations = useSelector(({ ClaimsAnalysis: state }) => state.escalations)\n  const inquiries = useSelector(({ ClaimsAnalysis: state }) => state.inquiries)\n  const reassign = useSelector(({ ClaimsAnalysis: state }) => state.reassign)\n  const c_return = useSelector(({ ClaimsAnalysis: state }) => state.return)\n  const error = useSelector(({ ClaimsAnalysis: state }) => state.error)\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const [isMember, setIsMember] = React.useState(true)\n\n  const [member, setMember] = React.useState(null)\n  const [memberFetchStatus, setMemberFetchStatus] = React.useState('')\n  const [client, setClient] = React.useState(null)\n  const [clientFetchStatus, setClientFetchStatus] = React.useState('')\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { ApiService, breadCrumbsList, isManager = false } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n  const NOTICE = 4\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getInquiryLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    setGrandTotal(grand)\n    dispatch(setRejectStatus(!(grand === 0)))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      const diagnosis = data.diagnosis || []\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member && data.member.account_number) {\n        const member_account_no = data.member.account_number\n        const client_account_number = data.member.customer_account_number\n        if (isMember) {\n          getMember({ member_account_no })\n        } else {\n          getClient({ client_account_number })\n        }\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = ({ member_account_no }) => {\n    CustomerCareServices.getMemberUtilizationLoa({ account_number: member_account_no }).then(res => {\n      const { data } = res.data\n      setUtilizationLoa(data)\n    })\n    setMemberFetchStatus('fetching')\n    CustomerCareServices.getMember({ account_number: member_account_no })\n      .then(res => {\n        const { data } = res.data\n        setMemberFetchStatus('success')\n        setMember(data)\n      })\n      .catch(err => {\n        console.log(err)\n        const { data } = err.response\n        // status === 404\n        setMemberFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getClient = ({ client_account_number }) => {\n    setClientFetchStatus('fetching')\n    CustomerCareServices.getClient({ account_number: client_account_number })\n      .then(res => {\n        const { data } = res.data\n        setClientFetchStatus('success')\n        setClient(data)\n      })\n      .catch(err => {\n        const { data } = err.response\n        // status === 404\n        setClientFetchStatus(`${data.status}`)\n      })\n  }\n\n  const getMemberContract = args => CustomerCareServices.getMemberContract(args)\n\n  const getClientContract = args => CustomerCareServices.getClientContract(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getInquiryLogs = ({ claim_number }) => {\n    ApiService.getInquiries({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setInquiryMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n\n        case NOTICE:\n          pdf = {\n            name: 'Claims Notice',\n            fileName: 'claim_notice',\n            service: ApiService.getLetterNotice({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  const getReason = () => {\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason' } }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ApiService.lookups({ on: 'dropdown', params: { field: 'reason-charging' } }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const getRooms = ({ value, by = 'id' }) => {\n    ApiService.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n            text: item.type,\n            value: item.type,\n            rate: item.rate\n          }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReturn = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.returnClaim({\n      claim_number: claimNumber,\n      data: { note: c_return.note }\n    }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnInquire = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = inquiries.assignee\n      ApiService.inquire({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: inquiries.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnViewClaimNotice = ({ goBack = false }) => {\n    getReport(NOTICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack && !isManager) props.history.push('/')\n    else {\n      const { bundle_number, batch_number } = props.match.params\n      props.history.push(`/payment-request/${bundle_number}/submitted/${batch_number}`)\n    }\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnReturnInquire = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.inquire({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnRemove = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.removeClaim({ claim_number: claimNumber }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined }) => {\n    dispatch(resetError())\n    console.log('zzz', validator)\n    const base_errors = doValidateBase({ claim, validator: validator, field })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        const error = doValidateProcedure({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          procedure = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProcedure({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    const { error = {} } = validator(Object.keys(field || claim))({ ...data })\n\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      data\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n  console.log('error2', error)\n  return (\n    <React.Fragment>\n      {claim_type && !fetching && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          isMember={isMember}\n          member={member}\n          memberFetchStatus={memberFetchStatus}\n          client={client}\n          clientFetchStatus={clientFetchStatus}\n          utilizationLoa={utilizationLoa}\n          grandTotal={grandTotal}\n          //  #endregion\n          // #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          getMember={getMember}\n          getClient={getClient}\n          getMemberContract={getMemberContract}\n          getClientContract={getClientContract}\n          getReason={getReason}\n          getRooms={getRooms}\n          //  #endregion\n          // #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onReturnInquire={handleOnReturnInquire}\n          onEscalate={handleOnEscalate}\n          onInquire={handleOnInquire}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onViewClaimNotice={handleOnViewClaimNotice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          onRemove={handleOnRemove}\n          onReturn={handleOnReturn}\n          //  #endregion\n          // #region SERVICES\n          userManagementService={UserManagementServices}\n          // #endregion\n          // #region VALIDATION\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n          // #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    description: Joi.string()\n      .trim()\n      .label('Description')\n      .required(),\n    code: Joi.string()\n      .trim()\n      .label('Code')\n      .required(),\n    tooth_number: Joi.string()\n      .label('Tooth Number')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    flag: Joi.boolean().default(false)\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    name: Joi.string()\n      .trim()\n      .label('Item Name')\n      .required(),\n    item_code: Joi.string()\n      .trim()\n      .label('Item Code')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nexport default function ({ data }) {\n  const available_fields = {\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Doctor Name')\n      .required(),\n    specialization: Joi.string()\n      .trim()\n      .label('Specialization')\n      .required(),\n    gross_amount: Joi.number()\n      .label('Gross Amount')\n      .required(),\n    vat_amount: Joi.number()\n      .label('Vat Amount')\n      .max(Joi.ref('gross_amount'))\n      .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n      .required(),\n    amount_paid_by_member: Joi.number()\n      .label('Amount Paid By Member')\n      .required(),\n    philhealth_amount_paid: Joi.number()\n      .label('PhilHealth Amount Paid')\n      .required(),\n    philhealth_remarks: Joi.string()\n      .trim()\n      .label('PhilHealth Remarks')\n      .allow('', null),\n    amount_not_covered: Joi.number()\n      .label('Amount Not Covered')\n      .required(),\n    reason: Joi.string()\n      .trim()\n      .label('Reason')\n      .when('amount_not_covered', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_member: Joi.number()\n      .label('Amount Due from Member')\n      .required(),\n    reason_for_charging_member: Joi.string()\n      .trim()\n      .label('Reason For Charging Member')\n      .when('amount_due_from_member', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    amount_due_from_client: Joi.number()\n      .label('Amount Due from Client')\n      .required(),\n    reason_for_charging_client: Joi.string()\n      .trim()\n      .label('Reason For Charging Client')\n      .when('amount_due_from_client', {\n        not: 0,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      })\n  }\n\n  const result = {}\n  const _data = {}\n  for (const field of Object.keys(data)) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n      _data[field] = data[field]\n    }\n  }\n  const schema = Joi.object(result).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(_data))\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\nimport NewBundlePage from './../Components/BatchEncoder/NewBundlePage/NewBundlePage'\nimport UploadSoaPage from './../Components/BatchEncoder/UploadSoaPage/UploadSoaPage'\n\n// Pages of Batch Encoder Supervisor\nimport Dashboard from './../Components/BatchEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  uploadSoa: {\n    text: 'Upload SOA',\n    to: ''\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n        <Route\n          path='/bundles/upload-soa'\n          exact\n          render={props => <UploadSoaPage {...props} ApiService={ClaimsReconServices} />}\n        />\n        <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n        <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n\n        {/* REPORTS */}\n        {generateRoutes(userRole)}\n      </Switch>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst OpenBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches({ data: openBatches, count: openBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'open'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnEncode = batch_number => {\n    services.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'open'\n    setViewList({ ...initialValue, show: true, title: `Open Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'open',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='open-batches'\n        sizes={sizes}\n        count={{ color: 3, value: batches.count, id: 'open-batches-count' }}\n        title='Open Batches'\n        viewList={\n          <Typography id='ob-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`op-${item.id}`} id={`op-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Typography\n                    id={`encode-batch-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnEncode(item.batch_number)}\n                  >\n                    Encode\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='open-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => handleOnEncode(item.batch_number)}\n                >\n                  Encode\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOpenBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default OpenBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst MyBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    //* My Batches\n    Promise.all([\n      services.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches({ data: myBatches, count: myBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'my'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'my'\n    setViewList({ ...initialValue, show: true, title: `My Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'my',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-batches'\n        sizes={sizes}\n        count={{ color: 8, value: batches.count, id: 'my-batches-count' }}\n        title='My Batches'\n        viewList={\n          <Typography id='mb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`mb-${item.id}`} id={`mb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                      Update\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='my-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-batch-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default MyBatchesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility_name', match: 'any' }\n]\n\nconst CompletedBatchesTile = props => {\n  const { services, sizes } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      services.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches({ data: completedBatches, count: completedBatchCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'completed'\n    services.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'completed'\n    setViewList({ ...initialValue, show: true, title: `Completed Batches`, category })\n    services.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'completed',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='completed-batches'\n        sizes={sizes}\n        count={{ color: 5, value: batches.count, id: 'completed-batches-count' }}\n        title='Completed Batches'\n        viewList={\n          <Typography id='cb-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cb-${item.id}`} id={`cb-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={item.batch_number}>\n                <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/${item.batch_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n      <ViewList\n        id='completed-batches'\n        columns={columns}\n        searchTextPlaceHolder='Search for batch number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{item.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`encode-batch-${index}`}>\n                <Link to={`/batches/${item.batch_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-batch-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nCompletedBatchesTile.displayName = 'DashboardTileComponent'\n\nexport default CompletedBatchesTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <OpenBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncodingServices} sizes={{ xs: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList\n                count={openTickets.count}\n                title='Open Tickets'\n                viewAllLink={{ to: '/batches', caption: 'View all' }}\n              >\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {openTickets.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details, reassign_notes = true }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n        {reassign_notes && (\n          <div className={classes['input']}>\n            <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n          </div>\n        )}\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const {\n    onClickAdd,\n    onClickProviderSchedule,\n    count,\n    status,\n    type = '',\n    inputChange = null,\n    disabled = false,\n    isManager = false\n  } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims</Typography>\n        <Typography id={'claim-count'} variant='subtitle2'>{`(${count})`}</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && !isManager && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\nconst cmHeadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'client-account-number', numeric: false, disablePadding: false, label: 'Client Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst prManagerheadCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'client-account-name', numeric: false, disablePadding: false, label: 'Client Account Name' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  // forDeletion,\n  actionItems,\n  setActionItems,\n  // setForDeletion,\n  submittedBatch,\n  setSelected,\n  pagination,\n  setPagination,\n  isManager = false,\n  selectStatus = true\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setActionItems({ claim_numbers: [] })\n    setSelected([])\n  }, [items, selectStatus])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setActionItems({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={type === 'Clinic Management' ? cmHeadCells : !isManager ? headCells : prManagerheadCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n        selectStatus={selectStatus}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n              >\n                {selectStatus ? (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      disabled={submittedBatch}\n                      checked={row.selected}\n                      color='default'\n                      onClick={event => handleClick({ index, claims })}\n                    />\n                  </TableCell>\n                ) : null}\n\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number || ''}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number || ''}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code || ''}\n                </TableCell>\n                <TableCell id={`member-name-${index}`} onClick={() => handleItemClick(index)}>{`${\n                  row.member ? row.member.first_name : ''\n                } ${row.member ? row.member.last_name : ''}`}</TableCell>\n                {type === 'Clinic Management' || type === 'PPE' ? (\n                  <React.Fragment>\n                    {type === 'Clinic Management' && (\n                      <TableCell id={`client-account-name-${index}`} onClick={() => handleItemClick(index)}>\n                        {row.client.account_name}\n                      </TableCell>\n                    )}\n                    <TableCell id={`client-account-number-${index}`} onClick={() => handleItemClick(index)}>\n                      {row.client.account_number}\n                    </TableCell>\n                  </React.Fragment>\n                ) : !isManager ? (\n                  <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.member.account_number}\n                  </TableCell>\n                ) : (\n                  <TableCell id={`account-name-${index}`} onClick={() => handleItemClick(index)}>\n                    {row.client.account_name}\n                  </TableCell>\n                )}\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n                {isManager && (\n                  <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                    <Link\n                      to={`/payment-request/${row.bundle_number}/submitted/${row.batch_number}/claim/${row.claim_number}`}\n                    >\n                      <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                        View Claim\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      {!isManager ? (\n        <Alert\n          open={openDialog}\n          message={getMessage(actionItems)}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={onCancel}\n          onOk={onConfirm}\n        />\n      ) : null}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\nimport ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const { apiService } = props\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n  const [cancelDialog, setCancelDialog] = React.useState({})\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        // getClaimsAndCount({ batch_number: batchNumber, search })\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number }, test) => {\n    apiService\n      .getClaims({\n        batch_number,\n        params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n      })\n      .then(res => {\n        const { results, count, page, limit } = res.data.data\n        setClaims(results)\n        setClaimCount(count)\n        setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n      })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n      LoadingService.loading(false)\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n    })\n    getClaimsAndCount({ batch_number: _batchNumber })\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    apiService.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    console.log(forDeletion)\n    apiService\n      .deleteMultipleClaim({\n        batch_number: batchNumber,\n        data: forDeletion\n      })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            pagination={pagination}\n            setPagination={setPagination}\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            actionItems={forDeletion}\n            setActionItems={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n            selectStatus\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() =>\n                      setCancelDialog({\n                        open: true,\n                        message: 'Are you sure you want to cancel?',\n                        okLabel: 'Yes',\n                        cancelLabel: 'No',\n                        onCancel: () => setCancelDialog(state => ({ ...state, open: false })),\n                        onOk: () => props.history.push('/')\n                      })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n      <Alert\n        open={!!cancelDialog.open}\n        message={cancelDialog.message}\n        cancelLabel={cancelDialog.cancelLabel}\n        okLabel={cancelDialog.okLabel}\n        onOk={cancelDialog.onOk}\n        onCancel={cancelDialog.onCancel}\n      />\n    </div>\n  )\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  const room_type = loa.room ? loa.room[0].room_type : ''\n  const room_rate = loa.room ? loa.room[0].total_amount : ''\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => {\n        if (item.type.localeCompare(room_type, 'en', { sensitivity: 'base' }) === 0) {\n          dispatch(setClaimBaseDetails({ field: 'room_type', value: room_type.toUpperCase() }))\n          dispatch(setClaimBaseDetails({ field: 'room_rate', value: room_rate }))\n        }\n        return {\n          text: item.type,\n          value: item.type.toUpperCase(),\n          rate: item.rate\n        }\n      })\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n  console.log('zzz', procedures)\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  if (diagnosis.length === 0) {\n    diagnosis.push({\n      description: primary_diagnosis,\n      code: primary_icd10_code,\n      primary: true\n    })\n  } else {\n    diagnosis.map((diag, i) => {\n      let primary = false\n      if (diag.icd10_code === primary_icd10_code) primary = true\n      diagnosis[i].primary = primary\n      diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n      diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n    })\n  }\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } = actions\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    pro_id: '',\n    pro_name: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } = actions\n\nexport default function Reimbursment ({ common, loa, dispatch, claim }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date : Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date : Date.now(),\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n  if (claim.reimbursement_type === 'InPatient') {\n    details = {\n      ...details,\n      room_type: loa.room ? loa.room[0].room_type : '',\n      room_rate: loa.room ? loa.room[0].total_amount : 0,\n      pro_id: '',\n      pro_name: ''\n    }\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n\n  // Set Rooms List\n  if (facility_id || facility_name) {\n    const value = facility_id || facility_name\n    const by = facility_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\n\nconst { setClaimBaseDetails, setClaimFacility } = actions\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].diagnosis_given_diagnosis = ''\n    procedures[i].diagnosis_description = ''\n    procedures[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n    professional_fees[i].diagnosis_given_diagnosis = ''\n    professional_fees[i].diagnosis_description = ''\n    professional_fees[i].diagnosis_code = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n    hospital_items[i].diagnosis_given_diagnosis = ''\n    hospital_items[i].diagnosis_description = ''\n    hospital_items[i].diagnosis_code = ''\n  })\n\n  let details = {\n    ...common,\n    claim_source: '',\n    medicine_category: '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst { setClaimBaseDetails, setClaimFacility, setClaimDoctor } = actions\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n    procedures[i].tooth_number = procedures[i].tooth_numbers[0] || '' // Check if this should be an array :/\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_issued_date ? loa.date_issued_date : Date.now(),\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || [],\n    claim_remarks: loa.remarks || ''\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\nimport MedicalSupplies from './MedicalSupplies'\nimport Pharmacy from './Pharmacy'\nimport Dental from './Dental'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type, claim }) => {\n  const type = ClaimTypes[claim_type].other_name\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch, claim })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n    case 'MedicalSupplies':\n      MedicalSupplies({ common, loa, dispatch })\n      break\n    case 'Pharmacy':\n      Pharmacy({ common, loa, dispatch })\n      break\n    case 'Dental':\n      Dental({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClientMemberModal from 'SharedComponents/ClientMemberLookup/ClientMemberModal'\nimport LoadingIndicator from 'SharedComponents/LoadingIndicator/LoadingIndicator'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../AutoFill'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from 'Pages/Protected/Claims/Constant/ClaimTypes'\n\n// Libraries\n\nconst { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } = actions\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    // showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    reqApprovalCode = false,\n    showLoaNumber = true,\n    reqLoaNumber = false,\n    isDental = false,\n    showMemberAccountNumber = true,\n    isCM = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const [contractPlanTypeLoading, setContractPlanTypeLoading] = React.useState(false)\n\n  const [memberModal, setMemberModal] = React.useState(false)\n  const [clientModal, setClientModal] = React.useState(false)\n\n  const handleOnClickMemberLookup = () => {\n    setMemberModal(true)\n  }\n\n  const handleOnClickClientLookup = () => {\n    setClientModal(true)\n  }\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value) {\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type,\n            claim\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleSetMember = member => {\n    const { member_id, first_name, middle_name, last_name } = member\n    onChange({\n      field: 'member_account_number',\n      value: member_id\n    })\n    onChange({\n      field: 'member_first_name',\n      value: first_name\n    })\n    onChange({ field: 'member_last_name', value: last_name })\n    onChange({ field: 'member_middle_name', value: middle_name })\n    handleFetchContracts(member_id)\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getMemberContractPlanType({ account_number: member_id })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleSetClient = client => {\n    const { corporate_account_no, registered_name } = client\n    onChange({ field: 'client_account_number', value: corporate_account_no })\n    onChange({ field: 'client_account_name', value: registered_name })\n\n    setContractPlanTypeLoading(true)\n    CustomerCareServices.getClientrContractPlanType({ account_number: corporate_account_no })\n      .then(res => {\n        const { data } = res.data\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: data.contract_plan_type }))\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(setClaimBaseDetails({ field: 'contract_plan_type', value: '' }))\n      })\n      .finally(res => {\n        setContractPlanTypeLoading(false)\n      })\n  }\n\n  const handleFetchContracts = accountNumber => {\n    if (!handleMemberAccountNumber) return\n\n    if (accountNumber === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(accountNumber)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!accountNumber) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: accountNumber }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {!isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes.input}>\n                <TextField\n                  id='approval-code'\n                  label='Approval Code'\n                  required={reqApprovalCode}\n                  value={claim.approval_code}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                  onBlur={handleLoaDetails}\n                  error={errors.approval_code}\n                />\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='loa-number'\n                  label='LOA No.'\n                  required={reqLoaNumber}\n                  value={claim.loa_number}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                  error={errors.loa_number}\n                />\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  readOnly\n                />\n              </LoadingIndicator>\n            </div>\n\n            {showClaimSource && (\n              <div className={classes.input}>\n                <TextField\n                  id='claim-source'\n                  label='Claim Source'\n                  required\n                  value={claim.claim_source}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'claim_source', value: event.target.value })}\n                  error={errors.claim_source}\n                />\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes.input}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                />\n              </div>\n            )}\n          </div>\n\n          {showCompany && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextField\n                  id='company-account-number'\n                  label='Customer Account Number'\n                  value={claim.client_account_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event => onChange({ field: 'client_account_number', value: event.target.value })}\n                  error={errors.client_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='client-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickClientLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n              <div className={classes.input}>\n                <TextField\n                  id='company-name'\n                  label='Company Name'\n                  required\n                  value={claim.client_account_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'client_account_name', value: event.target.value })}\n                  error={errors.client_account_name}\n                />\n              </div>\n            </div>\n          )}\n\n          <div className={classes.groups}>\n            {showMemberAccountNumber && (\n              <div className={classes.input}>\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_account_number}\n                />\n                <div className={classes.search}>\n                  <Button\n                    id='member-account-number-search'\n                    variant='outlined'\n                    className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                    onClick={handleOnClickMemberLookup}\n                  >\n                    <SearchIcon />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={classes.input}>\n              <TextField\n                id='member-last-name'\n                required\n                label='Member Last Name'\n                value={claim.member_last_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                error={errors.member_last_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-first-name'\n                required\n                label='Member First Name'\n                value={claim.member_first_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_first_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_first_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                id='member-middle-name'\n                label='Member Middle Name'\n                required={!!isDental}\n                value={claim.member_middle_name}\n                disabled={disableControls}\n                onChange={event =>\n                  onChange({\n                    field: 'member_middle_name',\n                    value: event.target.value\n                  })\n                }\n                error={errors.member_middle_name}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isCM && (\n        <div className={classes.wrapper}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-number'\n                label='Client Account Number'\n                value={claim.client_account_number}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_number'\n                    })\n                  )\n                }\n                error={errors.client_account_number}\n              />\n              <div className={classes.search}>\n                <Button\n                  id='client-account-number-search'\n                  variant='outlined'\n                  className={`${classes['box-search-button']} ${classes['no-pad']}`}\n                  onClick={handleOnClickClientLookup}\n                >\n                  <SearchIcon />\n                </Button>\n              </div>\n            </div>\n            <div className={classes.input}>\n              <TextField\n                id='client-account-name'\n                label='Client Account Name'\n                value={claim.client_account_name}\n                disabled={disableControls}\n                required\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'client_account_name'\n                    })\n                  )\n                }\n                error={errors.client_account_name}\n              />\n            </div>\n            <div className={classes.input}>\n              <LoadingIndicator loading={contractPlanTypeLoading}>\n                <TextField\n                  id='contract-plan-type'\n                  label='Contract Plan Type'\n                  value={claim.contract_plan_type}\n                  disabled\n                />\n              </LoadingIndicator>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <AutoFillInitializer />\n\n      <ClientMemberModal\n        show={memberModal}\n        mode={'members'}\n        title={'Member Search'}\n        allSearchText={'Member Account No., Account Name, Member Name'}\n        allSearch={claim.member_account_number}\n        columns={[\n          { id: 'member_id', label: 'Account Number', value: data => data.member_id },\n          { id: 'last_name', label: 'Last Name', value: data => data.last_name },\n          { id: 'first_name', label: 'First Name', value: data => data.first_name },\n          { id: 'middle_name', label: 'Middle Name', value: data => data.middle_name },\n          { id: 'registered_name', label: 'Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'member_id', match: 'like' },\n          { id: 'last_name', match: 'like' },\n          { id: 'first_name', match: 'like' },\n          { id: 'middle_name', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getMembers}\n        onRecordSet={member => {\n          if (!member) return\n          setMemberModal(false)\n          handleSetMember(member)\n        }}\n        onClose={() => setMemberModal(false)}\n      />\n\n      <ClientMemberModal\n        show={clientModal}\n        mode={'clients'}\n        title={'Account Search'}\n        allSearchText={'Client Account No., Account Name'}\n        allSearch={claim.client_account_number}\n        columns={[\n          { id: 'corporate_account_no', label: 'Client Account Number', value: data => data.corporate_account_no },\n          { id: 'registered_name', label: 'Client Account Name', value: data => data.registered_name },\n          {\n            id: 'contract',\n            label: 'Contract Period',\n            value: data => data.contract,\n            match: 'like'\n          }\n        ]}\n        allSearchFields={[\n          { id: 'corporate_account_no', match: 'like' },\n          { id: 'registered_name', match: 'like' }\n        ]}\n        service={CustomerCareServices.getClients}\n        onRecordSet={client => {\n          if (!client) return\n          setClientModal(false)\n          handleSetClient(client)\n        }}\n        onClose={() => setClientModal(false)}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        {/* <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography> */}\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    givenDiag = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeGivenDiag,\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            Given Diagnosis *\n          </Typography>\n        </div>\n        <div className={classes['given-diagnosis']}>\n          <AutoComplete\n            id={`given-${id}`}\n            value={givenDiag}\n            suggestions={suggestions.given_diagnosis}\n            onChange={(value, isSuggestionClick) => onChangeGivenDiag({ value, isSuggestionClick })}\n            error={errors.given_diagnosis}\n          />\n        </div>\n        <div className={classes.header}>\n          <div className={classes.actions} />\n          <Typography variant='subtitle2' className={classes.description}>\n            ICD10 Description *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.code}>\n            ICD10 Code *\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.primary}>\n            Primary\n          </Typography>\n        </div>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} = actions\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n          if (field === 'given_diagnosis') {\n            getIcd10Suggestions({ value, by: field, index, synonym: true })\n          }\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index, synonym = false }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          if (by === 'given_diagnosis') {\n            ClaimsEncodingServices.getICDSynonyms({ query: value }).then(res => {\n              const {data} = res.data\n              let _items = []\n              let _by = by\n              if (synonym) _by = 'description'\n              for (let d of data) _items.push(d[_by])\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by: _by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          } else {\n            IcdCptStorageServices.lookups({\n              on: 'icd-10',\n              params: { query: value, by }\n            }).then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionOnArray({\n                  field: 'icd10',\n                  index,\n                  by,\n                  suggestion: _items,\n                  data\n                })\n              )\n            })\n          }\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                givenDiag={item.given_diagnosis}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeGivenDiag={args => handleOnChangeIcd10({ field: 'given_diagnosis', index, ...args })}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function ProcedureForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthField = true, showPhilhealthRemarks = true, diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(({ ClaimsEncoding: state }) => state.procedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  // const [errorss, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      // setErrors({})\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = procedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: procedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    procedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={procedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={procedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={procedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={procedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={procedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={procedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={procedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(procedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(procedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setError\n} = actions\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true, diagnosis, errors, doValidate } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(({ ClaimsEncoding: state }) => state.hospitalItem)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = hospitalItem.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setHospitalItem({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    const _errors = doValidate({ data: hospitalItem.details })\n    dispatch(\n      setError({\n        hospital_item: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(setError({ hospital_item: { index: null, details: {} } }))\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    hospitalItem.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={hospitalItem.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={hospitalItem.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={hospitalItem.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <HospitalItemTextFields>\n            <HospitalItemTextField\n              id='hospital-item-name'\n              codeId={`hospital-item-code`}\n              name={hospitalItem.details.name || ''}\n              item_code={hospitalItem.details.item_code || ''}\n              suggestions={suggestions.hospitalItem}\n              onChangeName={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n              }\n              onChangeCode={(value, isSuggestionClick) =>\n                handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n              }\n              errors={errors}\n            />\n          </HospitalItemTextFields>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-gross-amount'\n                label='Gross Amount'\n                value={hospitalItem.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='hospital-item-vat-amount'\n                label='VAT Amount'\n                value={hospitalItem.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='hospital-item-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={hospitalItem.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={hospitalItem.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeHospitalForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={hospitalItem.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveHospitalItem}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='hospital-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setHospitalItem({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {hospitalItem.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='hospital-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='hospital-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this hospital item?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setError\n} = actions\n\nexport default function ProfessionalFeeForm (props) {\n  const { diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(({ ClaimsEncoding: state }) => state.professionalFee)\n  const pfSuggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      dispatch(setError({ procedure: { index: null, details: {} } }))\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = professionalFee.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Specialization\n  const handleOnChangeSpecialization = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.specialization.data) {\n        if (value === i.description) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                specialization: i.description\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'specialization' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'specialization' }))\n      getSpecializationSuggestions({ value, by: 'description' })\n    }\n  }\n\n  const getSpecializationSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          CustomerCareServices.getDoctorSpecilizations({ data: value }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'specialization',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setProfessionalFee({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const _errors = doValidate({ data: professionalFee.details })\n    dispatch(\n      setError({\n        professional_fee: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    professionalFee.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={professionalFee.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={professionalFee.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={professionalFee.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={`${classes.groups} `}>\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-medical-partner-id'\n                required\n                label='Medical Partner ID'\n                value={professionalFee.details.doctor_id || ''}\n                suggestions={pfSuggestions.pfDoctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                }\n                error={errors.doctor_id}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-doctor-name'\n                required\n                label='Doctor Name'\n                value={professionalFee.details.doctor_name || ''}\n                suggestions={pfSuggestions.pfDoctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                }\n                error={errors.doctor_name}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <AutoComplete\n                id='professional-fee-specialization'\n                required\n                label='Specialization'\n                value={professionalFee.details.specialization || ''}\n                suggestions={pfSuggestions.specialization.description}\n                onChange={(value, isSuggestionClick) =>\n                  handleOnChangeSpecialization({ field: 'specialization', value, isSuggestionClick })\n                }\n                error={errors.specialization}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-gross-amount'\n                label='Gross Amount'\n                value={professionalFee.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-vat-amount'\n                label='VAT Amount'\n                value={professionalFee.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='professional-fee-amount-paid-by-member'\n                label='Amount Paid by Member'\n                value={professionalFee.details.amount_paid_by_member}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'amount_paid_by_member',\n                    value: event.target.value\n                  })\n                }\n                error={errors.amount_paid_by_member}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='philhealth-amount-paid'\n                label='PhilHealth Amount Paid'\n                value={professionalFee.details.philhealth_amount_paid}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_amount_paid',\n                    value: event.target.value\n                  })\n                }\n                error={errors.philhealth_amount_paid}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextField\n                multiline\n                rows={3}\n                id='philhealth-remarks'\n                label='PhilHealth Remarks'\n                value={professionalFee.details.philhealth_remarks}\n                onChange={event =>\n                  handleOnChangeProfessionalFeeForm({\n                    field: 'philhealth_remarks',\n                    value: event.target.value\n                  })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProfessionalFee}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='professional-fee-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n\n            {professionalFee.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='professional-fee-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='professional-fee-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this professional fee?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProcedure, setProfessionalFee, setHospitalItem, resetSuggestionObject, setDentalProcedure } = actions\n\nexport default function ProcedureList (props) {\n  const { data, isDental = false } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`procedure-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`procedure-row-description-${index}`}>{i.description}</td>\n                <td id={`procedure-row-code-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.code}\n                </td>\n                <td id={`procedure-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setHospitalItem, setProcedure, setDentalProcedure, setProfessionalFee, resetSuggestionObject } = actions\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`hospital-item-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`hospital-item-row-name-${index}`}>{i.name}</td>\n                <td id={`hospital-item-row-code${index}`} className={`${classes.align} ${classes.center}`}>\n                  {i.item_code}\n                </td>\n                <td id={`hospital-item-row-amount${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setProfessionalFee, setHospitalItem, setProcedure, setDentalProcedure, resetSuggestionObject } = actions\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  // const generateKey = i =>\n  //   `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  const generateKey = i =>\n    `${Object.keys(i)\n      .map(val => i[val])\n      .join(' ')}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                id={`professional-fee-row-${index}`}\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td id={`professional-fee-row-doctor-${index}`}>{i.doctor_name}</td>\n                <td id={`professional-fee-row-specialization-${index}`}>{i.specialization}</td>\n                <td id={`professional-fee-row-amount-${index}`} className={`${classes.align} ${classes.right}`}>\n                  {CurrencyFormatter(Total.Item(i))}\n                </td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(Total.List(data))}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsRemarks.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimBaseDetails } = actions\n\nexport default function ClaimsRemarks (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes['header']}>\n        <Typography variant='subtitle2' className={classes['header-text']}>\n          Claims Remarks\n        </Typography>\n      </div>\n      <div className={classes['input']}>\n        <TextField\n          multiline\n          rows={8}\n          id='claim-remarks'\n          value={data || ''}\n          onChange={event =>\n            dispatch(\n              setClaimBaseDetails({\n                value: event.target.value,\n                field: 'claim_remarks'\n              })\n            )\n          }\n        />\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, doValidate, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n\n  const doValidateMiddleware = () => {\n    if (doValidate()) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='save-for-now'\n          className='button-positive'\n          onClick={() => !doValidateMiddleware() && setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        className='button-positive'\n        onClick={() => !doValidateMiddleware() && handleOnSave(false)}>\n        Save and Close\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .allow('', null),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    if (available_fields[field]) {\n      result[field] = available_fields[field]\n    }\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// This if for claim types that have `Approval Code` and `Loa No.` as required fields.\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .messages({ 'string.empty': `\"Approval Code\" is required.` })\n      .required(),\n    contract_plan_type: Joi.string()\n      .trim()\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .messages({ 'string.empty': `\"LOA No.\" is required.` })\n      .required(),\n    claim_source: Joi.string()\n      .label('Claim Source')\n      .required(),\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n    client_account_number: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    client_account_name: Joi.string()\n      .label('Client Account Number')\n      .required(),\n    customer_account_number: Joi.string()\n      .label('Customer Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    date_to: Joi.date()\n      .label('Service Date')\n      .required()\n      .messages({ 'string.empty': `\"Service Date\" is required.` }),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now')\n      .messages({\n        'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n      }),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    claim_remarks: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n  return result\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\nimport getValidators2 from './getValidators2'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => (data, type = false) => {\n  let schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  // FOR Claim Types that have `Approval Code` and `LOA No.` as required fields.\n  if (type) schema = Joi.object(getValidators2(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangePro,\n    apiService,\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateHospitalItem,\n    doValidateProfessionalFee\n  } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Date Admitted'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Date Discharged'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  required\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n\n  const {\n    doValidateAll,\n    onSave,\n    doValidateProcedure,\n    doValidateProfessionalFee\n  } = props\n\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const {\n    doValidateAll,\n    onSave,\n    doValidateProfessionalFee\n  } = props\n\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: (date).toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: (date).toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm diagnosis={claim.diagnosis} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm diagnosis={claim.diagnosis} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm diagnosis={claim.diagnosis} errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\nimport DiagnosisValidator from './DiagnosisValidator'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setDentalProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} = actions\n\nexport default function DentalProcedureForm (props) {  \n  const { showAmountPaidByMember = true, showPhilhealthField = true, showPhilhealthRemarks = true, diagnosis, doValidate, errors } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(({ ClaimsEncoding: state }) => state.dentalProcedure)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  React.useEffect(() => {\n    if (diagnosis) {\n      const { diagnosis_code, diagnosis_description } = dentalProcedure.details\n      if (!diagnosis.find(item => item.code === diagnosis_code && item.description === diagnosis_description)) {\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n    }\n  }, [diagnosis])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeDiagnosis = ({ value, field }) => {\n    const fieldArr = field.split('_')\n    const _field = fieldArr.length === 2 ? fieldArr[1] : `${fieldArr[1]}_${fieldArr[2]}`\n    const diagnosi = diagnosis.find(d => d[_field] === value)\n    dispatch(\n      setDentalProcedure({\n        details: {\n          diagnosis_code: diagnosi.code,\n          diagnosis_description: diagnosi.description,\n          diagnosis_given_diagnosis: diagnosi.given_diagnosis\n        }\n      })\n    )\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setDentalProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnSaveProcedure = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const _errors = doValidate({ data: dentalProcedure.details })\n    dispatch(\n      setError({\n        procedure: { index, ..._errors }\n      })\n    )\n    if (Object.keys(_errors).length) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n    setOpenDialog(false)\n  }\n\n  return (\n    dentalProcedure.show && (\n      <React.Fragment>\n        <Paper className={classes.root}>\n          {diagnosis && (\n            <React.Fragment>\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='given-diagnosis'\n                    label='Given Diagnosis'\n                    required\n                    items={diagnosis.map(({ given_diagnosis }) => ({\n                      text: given_diagnosis,\n                      value: given_diagnosis\n                    }))}\n                    value={dentalProcedure.details.diagnosis_given_diagnosis}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_given_diagnosis',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_given_diagnosis}\n                  />\n                </div>\n              </div>\n\n              <div className={`${classes.groups} ${classes.limit}`}>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-description'\n                    required\n                    label='ICD10 Description'\n                    items={diagnosis.map(({ description }) => ({ text: description, value: description }))}\n                    value={dentalProcedure.details.diagnosis_description}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_description',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_description}\n                  />\n                </div>\n                <div className={classes.input}>\n                  <DropDown\n                    id='icd10-code'\n                    required\n                    label='ICD10 Code'\n                    items={diagnosis.map(({ code }) => ({ text: code, value: code }))}\n                    value={dentalProcedure.details.diagnosis_code}\n                    onChange={event =>\n                      handleOnChangeDiagnosis({\n                        field: 'diagnosis_code',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.diagnosis_code}\n                  />\n                </div>\n              </div>\n            </React.Fragment>\n          )}\n          <div className={classes.groups}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-gross-amount'\n                label='Gross Amount'\n                value={dentalProcedure.details.gross_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'gross_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.gross_amount}\n              />\n            </div>\n\n            <div className={classes.input}>\n              <TextFieldCurrency\n                id='procedure-vat-amount'\n                label='VAT Amount'\n                value={dentalProcedure.details.vat_amount}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'vat_amount',\n                    value: event.target.value\n                  })\n                }\n                error={errors.vat_amount}\n              />\n            </div>\n            {showAmountPaidByMember && (\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            )}\n          </div>\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={dentalProcedure.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes.input}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={dentalProcedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {dentalProcedure.mode === 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-save-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={handleOnSaveProcedure}\n                >\n                  Save\n                </Button>\n                <Button\n                  id='procedure-cancel-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                >\n                  Cancel\n                </Button>\n              </React.Fragment>\n            )}\n            {dentalProcedure.mode !== 'add' && (\n              <React.Fragment>\n                <Button\n                  id='procedure-update-button'\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                >\n                  Update\n                </Button>\n                <Button\n                  id='procedure-delete-button'\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => setOpenDialog(true)}\n                >\n                  Delete\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Paper>\n        <Alert\n          open={openDialog}\n          message='Are you sure you want to delete this procedure?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setOpenDialog(false)}\n          onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n        />\n      </React.Fragment>\n    )\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport DentalChart from 'Pages/Protected/Claims/Components/DentalChart/DentalChart'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const { doValidateAll, onSave, doValidateDentalProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const constructDentalStates = procedures => {\n    const data = {}\n    for (const [index, value] of procedures.entries()) {\n      try {\n        data[value.tooth_number - 1] = 'extracted'\n      } catch (ex) {}\n    }\n    return data\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.chart}`}>\n              <DentalChart states={constructDentalStates(claim.procedures)} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm\n                    errors={errors.procedure}\n                    doValidate={doValidateDentalProcedure}\n                    showPhilhealthField={false}\n                  />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator, flag: true })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      // customer_account_number: '',\n      // company_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              reqLoaNumber\n              reqApprovalCode\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails, onChangePro, apiService } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      contract_year_from: '',\n      contract_year_to: '',\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            claim_sub_type: data.claim_sub.type,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.startOf('day').toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO/ECU Specialist ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO/ECU Specialist Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  required\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initSuggestions } = actions\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      client_account_number: '',\n      client_account_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      ppe_packages: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            ppe_packages: data.ppe_packages || [],\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees,\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              showMemberAccountNumber={false}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-from'\n                  required\n                  label='Date of Service (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service-to'\n                  required\n                  label='Date of Service (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initSuggestions } = actions\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      claim_source: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            claim_source: data.claim_source,\n            medicine_category: data.medicine_category,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.to,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(date)\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category *'\n                  value={claim.medicine_category}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthField={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .messages({ 'string.empty': `\"Approval Code\" is required.` })\n    .required(),\n  contract_plan_type: Joi.string()\n    .trim()\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .messages({ 'string.empty': `\"LOA No.\" is required.` })\n    .required(),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_to: Joi.date()\n    .label('Service Date')\n    .required()\n    .messages({ 'string.empty': `\"Service Date\" is required.` }),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now')\n    .messages({\n      'date.max': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  // Used initial for Dental, added here to bypass validation\n  flag: Joi.boolean().default(false),\n\n  claim_remarks: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = fields => (data, type = false) => {\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport MainValidator from './ClaimMedicalSuppliesValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, setClaimRoom, setDropDown, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            contract_plan_type: data.contract_plan_type,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              reqApprovalCode\n              reqLoaNumber\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthField={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions } = actions\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n\n  const { claim, getClaimDetails } = props\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      contract_plan_type: '',\n      client_account_number: '',\n      client_account_name: '',\n      date_from: moment().toISOString(),\n      date_to: moment().toISOString(),\n      claim_remarks: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            contract_plan_type: data.contract_plan_type,\n            client_account_number: data.client.account_number,\n            client_account_name: data.client.account_name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            procedures: data.procedures || [],\n            hospital_items: data.hospital_items || [],\n            professional_fees: data.professional_fees || [],\n            claim_remarks: data.claim_remarks\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              isCM\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={date =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: date.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} errors={errors.procedure} doValidate={doValidateProcedure} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} errors={errors.hospital_item} doValidate={doValidateHospitalItem} />\n                  <ProfessionalFeeForm errors={errors.professional_fee} doValidate={doValidateProfessionalFee} />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfo.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfo (props) {\n  const { show, setShowModal, handleOnSave, doReject, doViewClaimNotice = () => {}, service, lookup } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [isModified, setIsModified] = React.useState(false)\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [showSaveAlert, setShowSaveAlert] = React.useState(false)\n  const [items, setItems] = React.useState([])\n  const [reasonDropdown, setReasonDropdown] = React.useState([])\n\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  React.useEffect(() => {\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n      })\n  }, [])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n      handleOnItemSave(_items)\n      return _items\n    })\n    setIsModified(true)\n  }\n\n  const handleOnClose = () => {\n    setShowModal(false)\n    setItems(items => {\n      return items.map((item, _index) => {\n        item.show = false\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          item.showCell = false\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  const handleOnClickPrintNotice = () => {\n    if (!isModified && items.length > 0) doViewClaimNotice({ goBack: false })\n    else setShowSaveAlert(true)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      reasonDropdown={reasonDropdown}\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                      service={service}\n                      lookup={lookup}\n                      setReasonDropdown={setReasonDropdown}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  reasonDropdown={reasonDropdown}\n                  item={{}}\n                  handleOnClickCancel={handleOnClickCancel}\n                  handleOnClickSave={handleOnClickSave}\n                  service={service}\n                  lookup={lookup}\n                  setReasonDropdown={setReasonDropdown}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button variant='contained' color='primary' className='button-positive' onClick={handleOnClickPrintNotice}>\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n\n      <Alert\n        open={showSaveAlert}\n        message='These records have been updated. Please save this Claim before proceeding with \"Print Notice\".'\n        okLabel='Yes'\n        onOk={() => {\n          setShowSaveAlert(false)\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly, reasonDropdown, service, lookup, setReasonDropdown } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    handleOnLookup({ save: false, update: false })\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) {\n          item[field] = value\n          item.error = ''\n        }\n        return item\n      })\n    }))\n  }\n\n  const handleOnLookup = args => {\n    const { save = false, update = false } = args\n    service\n      .lookups({\n        on: 'dropdown',\n        params: { field: lookup }\n      })\n      .then(res => {\n        const { data } = res.data\n        setReasonDropdown(\n          data.map(item => ({\n            value: item.reason,\n            text: item.reason\n          }))\n        )\n        if (save || update) {\n          let hasError = false\n          const reasons = item.reasons\n          const tempReasons = []\n          reasons.map(reason => {\n            const existing = data.filter(i => i.reason === reason.value)\n            if (existing.length === 0) {\n              tempReasons.push({ ...reason, value: '', error: 'Please Input a Valid Reason' })\n              hasError = true\n            } else tempReasons.push(reason)\n          })\n          setItem({ ...item, reasons: tempReasons })\n          if (hasError) {\n            return false\n          }\n          if (save) handleOnClickSave({ index, item })\n          if (update) handleOnClickUpdate({ index, item })\n        }\n      })\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnLookup({ update: true })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnLookup({ save: true })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={date => handleOnChange({ field: 'date_created', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={date => handleOnChange({ field: 'date_encoded', value: date.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={date => handleOnChange({ field: 'date_released', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  disableComponents\n                  onChange={date => handleOnChange({ field: 'date_return', value: date.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <DropDown\n                      items={reasonDropdown}\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                      error={item.error}\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ minWidth: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              {!readOnly && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    id='cancel'\n                    className='button-negative'\n                    onClick={() => handleOnClickCancel(index)}\n                  >\n                    Cancel\n                  </Button>\n                  {index === 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickSave}\n                      >\n                        Save\n                      </Button>\n                    </React.Fragment>\n                  )}\n                  {index !== 'add' && (\n                    <React.Fragment>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        id='save-for-now'\n                        className='button-positive'\n                        onClick={_handleOnClickUpdate}\n                      >\n                        Update\n                      </Button>\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'date_from', 'department']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n  let additional_fields = []\n\n  switch (type) {\n    case 'InPatient':\n      additional_fields = InPatient\n      break\n    case 'Dental':\n      additional_fields = Dental\n      break\n    default:\n      additional_fields = other_fields\n      break\n  }\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfo from './../../../../ReimbursementInfo/ReimbursementInfo'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\nimport ClaimsRemarks from '../ClaimsRemarks/ClaimsRemarks'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators'\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nconst {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} = actions\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const {\n    claim,\n    onChangeFacility,\n    getClaimDetails,\n    onChangeDoctor,\n    onChangePro,\n    apiService,\n    doViewClaimNotice = () => {}\n  } = props\n  const { doValidateAll, onSave, doValidateProcedure, doValidateHospitalItem, doValidateProfessionalFee } = props\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const dropDown = useSelector(({ ClaimsEncoding: state }) => state.dropDown)\n  const grandTotal = useSelector(({ ClaimsEncoding: state }) => state.grandTotal)\n  const errors = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      contract_plan_type: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: moment().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: [],\n      claim_remarks: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = {\n        ..._allowedFields,\n        ...AdditionalFields(props.isAdd ? 'InPatient' : undefined),\n        ..._lineItemFields\n      }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields({ ...initial_values }))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        apiService\n          .lookups({\n            on: 'medical-partner',\n            params: { query: data.facility.id, by: 'id' }\n          })\n          .then(res => {\n            const { data } = res.data\n            const rooms = (data[0].rooms || []).map(room => ({\n              text: room.type,\n              value: room.type,\n              rate: room.rate\n            }))\n            dispatch(setDropDown({ rooms }))\n          })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          contract_plan_type: data.contract_plan_type,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          claim_remarks: data.claim_remarks\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(data.reimbursement_details.type)\n        })\n      })\n    }\n    setType(_allowedFields.reimbursement_type)\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n    const _claim = Object.assign({}, claim)\n    if (value !== 'InPatient') {\n      console.log('not in patient', _claim)\n      delete _claim.pro_id\n      delete _claim.pro_name\n      delete _claim.room_rate\n      delete _claim.date_to\n      dispatch(setClaimFields(_claim))\n    }\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          date_to: moment().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ..._claim,\n          reimbursement_type: 'Dental',\n          date_from: moment().toISOString(),\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              // handleMemberAccountNumber={type === 'Dental'}\n              // isDental={type === 'Dental'}\n            />\n\n            <div className={classes.wrap}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-id'\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(date)\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={date =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: date.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && !(type === 'InPatient') && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={date => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: date.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.department}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro.id}\n                    disabled={disableControls}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro.name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n              <ClaimsRemarks data={claim.claim_remarks} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <ProcedureForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.procedure}\n                    doValidate={doValidateProcedure}\n                  />\n                  <HospitalItemForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.hospital_item}\n                    doValidate={doValidateHospitalItem}\n                  />\n                  <ProfessionalFeeForm\n                    diagnosis={claim.diagnosis}\n                    errors={errors.professional_fee}\n                    doValidate={doValidateProfessionalFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP </Typography>\n            <Typography id={'grand-total'} variant='subtitle2'>\n              {CurrencyFormatter(grandTotal)}\n            </Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={goBack => onSave({ allowedFields, lineItemFields, goBack })}\n            doValidate={() => {\n              const valid = doValidateAll({ validator: MainValidator })\n              return valid\n            }}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfo\n            claim={claim}\n            isAdd={props.isAdd}\n            doViewClaimNotice={doViewClaimNotice}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            service={apiService}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n            lookup={'return-reason'}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from './Components/ClaimECU/ClaimECU'\nimport ClaimPPE from './Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from '../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  given_diagnosis: Joi.string().trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description, given_diagnosis: d.given_diagnosis }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code || i.description || i.given_diagnosis) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    // .less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  diagnosis_description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    }),\n  diagnosis_code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  diagnosis_given_diagnosis: Joi.string()\n    .trim()\n    .label('Given Diagnosis')\n    .required()\n    .messages({\n      'string.empty': `\"Given Diagnosis\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\n// Utilities\nimport Total from 'Utilities/Total'\n\n// Libraries\nimport moment from 'moment'\n// Validators\nimport DiagnosisListValidator from './Components/DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from './Components/HospitalItemForm/HospitalItemFormValidator'\nimport ProfessionalFeeValidator from './Components/ProfessionalFeeForm/ProfessionalFeeFormValidator'\nimport ProcedureValidator from './Components/ProcedureForm/ProcedureFormValidator'\nimport DentalProcedureValidator from './Components/DentalProcedureForm/DentalProcedureFormValidator'\nimport DentalProcedureDiagnosisValidator from './Components/DentalProcedureForm/DiagnosisValidator'\nimport ProcedureDiagnosisValidator from './Components/ProcedureForm/DiagnosisValidator'\nimport HospitalItemDiagnosisValidator from './Components/HospitalItemForm/DiagnosisValidator'\nimport ProfessionalFeeDiagnosisValidator from './Components/ProfessionalFeeForm/DiagnosisValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from './Components/BaseDetails/SoftValidator'\n\nconst {\n  resetClaim,\n  setGrandTotal,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  setProcedure,\n  setDentalProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  setError,\n  resetError,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} = actions\n\nexport default function ClaimPage (props) {\n  const { apiService } = props\n  const dispatch = useDispatch()\n  const claim = useSelector(({ ClaimsEncoding: state }) => state.claim)\n  const claim_type = useSelector(({ ClaimsEncoding: state }) => state.claimType)\n  const suggestions = useSelector(({ ClaimsEncoding: state }) => state.suggestions)\n  const error = useSelector(({ ClaimsEncoding: state }) => state.error)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    apiService.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(resetError())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Update Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  React.useEffect(() => {\n    const grand = Total.Grand(claim)\n    dispatch(setGrandTotal(grand))\n  }, [claim])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    apiService\n      .getClaim({\n        batch_number: _batchNumber,\n        claim_number: _claimNumber\n      })\n      .then(res => {\n        const { data } = res.data\n        // Set Diagnosis Suggestions\n        const { diagnosis = [] } = data\n        diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n        callback(data)\n      })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'medical-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'facility',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'doctor',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          apiService\n            .lookups({\n              on: 'doctor-partner',\n              params: { query: value, by }\n            })\n            .then(res => {\n              const { data } = res.data\n              let _items = []\n              for (let d of data) _items.push(d[by])\n              dispatch(\n                setSuggestionObject({\n                  field: 'anesthesiologist',\n                  suggestion: { [by]: _items, data }\n                })\n              )\n            })\n        }\n      }, 500)\n    }))\n  }\n\n  // Report: Claim Notice\n  const handleOnViewClaimNotice = mode => {\n    LoadingService.loading(true)\n    const { _claimNumber } = props.match.params\n    const pdf = {\n      name: 'Claims Notice',\n      fileName: 'claim_notice',\n      service: apiService.getLetterNotice({ claim_number: _claimNumber })\n    }\n    PdfViewer2Service({ ...pdf, open: true })\n    LoadingService.loading(false)\n  }\n\n  // Validation\n  const doValidateAll = ({ validator, field = undefined, flag = false }) => {\n    dispatch(resetError())\n    const base_errors = doValidateBase({ claim, validator: validator, field, flag })\n    let diagnosis = {}\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n    if (claim.diagnosis) {\n      diagnosis = doValidateDiagnosis({ diagnosis: claim.diagnosis })\n    }\n\n    if (claim.procedures) {\n      for (const [index, value] of claim.procedures.entries()) {\n        if (flag) {\n          const error = doValidateDentalProcedure({ data: value, index, flag })\n          if (Object.keys(error).length > 0) {\n            procedure = { index, ...error }\n            // AUTO OPEN CLAIM\n            dispatch(\n              setDentalProcedure({\n                show: true,\n                mode: 'edit',\n                index,\n                details: value\n              })\n            )\n            break\n          }\n        } else {\n          const error = doValidateProcedure({ data: value, index })\n          if (Object.keys(error).length > 0) {\n            procedure = { index, ...error }\n            // AUTO OPEN CLAIM\n            dispatch(\n              setProcedure({\n                show: true,\n                mode: 'edit',\n                index,\n                details: value\n              })\n            )\n            break\n          }\n        }\n      }\n    }\n    if (claim.hospital_items) {\n      for (const [index, value] of claim.hospital_items.entries()) {\n        const error = doValidateHospitalItem({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          hospital_item = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setHospitalItem({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n    if (claim.professional_fees) {\n      for (const [index, value] of claim.professional_fees.entries()) {\n        const error = doValidateProfessionalFee({ data: value, index })\n        if (Object.keys(error).length > 0) {\n          professional_fee = { index, ...error }\n          // AUTO OPEN CLAIM\n          dispatch(\n            setProfessionalFee({\n              show: true,\n              mode: 'edit',\n              index,\n              details: value\n            })\n          )\n          break\n        }\n      }\n    }\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      Object.keys(procedure).length > 0 ||\n      Object.keys(hospital_item).length > 0 ||\n      Object.keys(professional_fee).length > 0 ||\n      diagnosis.error\n\n    return invalid\n  }\n\n  const doValidateBase = ({ claim, validator, field, flag }) => {\n    const data = {}\n    const {\n      diagnosis,\n      procedures,\n      hospital_items,\n      professional_fees,\n      reimbursement_info,\n      reimbursement_info_analysts,\n      ppe_packages,\n      ...rest\n    } = claim\n    for (let f in rest) data[f] = claim[f]\n    let _fields = {}\n    if (field) _fields = { ...field, flag }\n    else _fields = { ...claim, flag }\n    const { error = {} } = validator(Object.keys(_fields))({ ...data, flag })\n    dispatch(\n      setError({\n        ...error\n      })\n    )\n    return error\n  }\n\n  const doValidateDiagnosis = ({ diagnosis }) => {\n    const error = DiagnosisListValidator(diagnosis)\n    dispatch(\n      setError({\n        diagnosis: error\n      })\n    )\n    return error\n  }\n\n  const doValidateDentalProcedure = ({ data, index }) => {\n    const { error } = DentalProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid,\n      tooth_number: data.tooth_number\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setDentalProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = DentalProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProcedure = ({ data, index }) => {\n    const { error } = ProcedureValidator({\n      description: data.description,\n      code: data.code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProcedure({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProcedureDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        procedure: { index, ...error, ...diagnosisError.error }\n      })\n    )\n\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateHospitalItem = ({ data, index }) => {\n    const { error } = HospitalItemValidator({\n      name: data.name,\n      item_code: data.item_code.toString(),\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setHospitalItem({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = HospitalItemDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n\n    dispatch(\n      setError({\n        hospital_item: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const doValidateProfessionalFee = ({ data, index }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name,\n      specialization: data.specialization,\n      gross_amount: data.gross_amount,\n      vat_amount: data.vat_amount,\n      amount_paid_by_member: data.amount_paid_by_member,\n      philhealth_amount_paid: data.philhealth_amount_paid\n    })\n    let diagnosisError = {}\n    if (claim.diagnosis) {\n      let exists = true\n      if (\n        !claim.diagnosis.find(\n          item => item.code === data.diagnosis_code && item.description === data.diagnosis_description\n        )\n      ) {\n        exists = false\n        dispatch(setProfessionalFee({ details: { diagnosis_code: '', diagnosis_description: '' } }))\n      }\n      diagnosisError = ProfessionalFeeDiagnosisValidator({\n        diagnosis_description: exists ? data.diagnosis_description : '',\n        diagnosis_code: exists ? data.diagnosis_code : '',\n        diagnosis_given_diagnosis: exists ? data.diagnosis_given_diagnosis : ''\n      })\n    }\n    dispatch(\n      setError({\n        professional_fee: { index, ...error, ...diagnosisError.error }\n      })\n    )\n    return { ...error, ...diagnosisError.error }\n  }\n\n  const handleOnSave = async ({ lineItemFields, allowedFields, goBack = true }) => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    const claimFields = Object.keys(allowedFields)\n\n    if (claimFields.includes('approval_code') && claimFields.includes('loa_number')) {\n      const proceed = await SoftValidatorService({\n        fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n      })\n      if (!proceed) return\n    }\n\n    LoadingService.loading(true)\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (!data.date_to) data.date_to = moment().toISOString()\n\n    if (props.isAdd) {\n      apiService.addClaim({ batch_number: _batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      apiService.updateClaim({ batch_number: _batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${_batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  React.useEffect(() => {\n    if (error) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [error])\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onSave={handleOnSave}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          doViewClaimNotice={handleOnViewClaimNotice}\n          doValidateAll={doValidateAll}\n          doValidateDiagnosis={doValidateDiagnosis}\n          doValidateProcedure={doValidateProcedure}\n          doValidateDentalProcedure={doValidateDentalProcedure}\n          doValidateHospitalItem={doValidateHospitalItem}\n          doValidateProfessionalFee={doValidateProfessionalFee}\n        />\n      )}\n      <SoftValidatorAlertComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './../Components/ClaimsDetailsEncoder/Dashboard/Dashboard'\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncodingServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncodingServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 's-encoder-name', name: ' Encoder Name', sortField: 'username', match: 'any' },\n  { id: 's-total-batches', name: ' Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'any' }\n]\nconst ClaimsEncoderTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [batches, setBatches] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'name',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    getEncoders()\n  }, [])\n\n  const getEncoders = () => {\n    services\n      .getEncodersBatches({ limit: 10, sort: 'name|asc' })\n      .then(res => {\n        const { results, total_count } = res.data.data\n        setBatches(state => ({ ...state, count: total_count, data: results }))\n      })\n      .catch(err => {\n        console.error(err)\n        setBatches(state => ({ ...state, count: 0, data: [] }))\n      })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    services.getEncodersBatches({ page: 1, limit: 10, sort: 'name|asc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    services.getEncodersBatches({ ..._params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-encoder'\n        count={{ color: 3, value: batches.count, id: 'claims-encoder-count' }}\n        isFilterShown={false}\n        title='Claims Encoder'\n        sizes={sizes}\n        viewList={\n          <Typography\n            id='ob-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('claim-encoder')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={() => {}}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`ces-${item.id}`} id={`ces-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {batches.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`ces-encoder-name-${index}`}>{item.username}</TableCell>\n                <TableCell id={`ces-total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell id={`ces-total-rcs-${index}`}>{item.total_rcs}</TableCell>\n                <TableCell>\n                  <Link to={`/batches/assigned/${item.id}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-encoder'\n        columns={columns}\n        searchTextPlaceHolder='Search for Encoder Name, Total Bundles or Total Batches'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.id}>\n              <TableCell id={`batch-number-${index}`}>{item.username}</TableCell>\n              <TableCell id={`date-received-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`due-date-${index}`}>{item.total_rcs}</TableCell>\n              <TableCell id={`view-encoder-${index}`}>\n                <Link to={`/batches/assigned/${item.id}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-encoder-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsEncoderTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsEncoderTile\n","import instance from '../instance'\n// import ClaimsEncodingServices from '../ClaimsEncodingServices'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ces')\n\nexport default class ClaimsEncoderSupervisorServices {\n  static getEncodersBatches (params) {\n    return axios({\n      url: `/batches/encoders`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatches (params) {\n    return axios({\n      url: `/batches/encoders/assigned`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderBatch (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEncoderClaims (params, batch_number) {\n    return axios({\n      url: `/batches/encoders/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign (params) {\n    return axios({\n      url: `/batches/encoders/reassign`,\n      method: 'POST',\n      params\n    })\n  }\n\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport OpenBatchesTile from './../../../Components/Tiles/OpenBatchesTile'\nimport MyBatchesTile from './../../../Components/Tiles/MyBatchesTile'\nimport CompletedBatchesTile from './../../../Components/Tiles/CompletedBatchesTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n// import ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Claims Encoding'>\n            <OpenBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <MyBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <CompletedBatchesTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n\n          <Grid item className={classes['task-tray-monitor']}>\n            <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n              <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            </TaskTray>\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                      <TableCell id='cvs-date'>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                        <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nconst { setReassignAssignee, setReassignNotes } = actions\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n  const dispatch = useDispatch()\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => dispatch(setReassignNotes(event.target.value))}\n                // onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.assignee.id}\n                  // onChange={event =>\n                  //   dispatch(\n                  //     setEscalationAssignee({\n                  //       id: event.target.value,\n                  //       name: event.target.value\n                  //     })\n                  //   )\n                  // }\n                  onChange={event => {\n                    dispatch(\n                      setReassignAssignee({\n                        id: event.target.value,\n                        name: event.target.value\n                      })\n                    )\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n          {/*\n          <DialogActions>\n            <Button\n              onClick={() => setDialog(false)}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-negative'\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {}}\n              variant='contained'\n              color='primary'\n              id='save-for-now'\n              className='button-positive'\n            >\n              Submit\n            </Button>\n          </DialogActions> */}\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign SOA to Claim Encoder</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the SOA to the selected Claim Encoder?\n              </Typography>\n              <Typography variant='body1'>\n                This SOA will be sent to the assigned Claim Encoder for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign()\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport { ClaimsEncoding as actions } from 'Pages/Protected/Claims/Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\n// Component\nimport AssignDialog from '../AssignDialog/AssignDialog'\n\nconst { resetReassign, setReassignNotes } = actions\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmitReassign = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    UserManagementServices = () => {},\n    count,\n    _id = ''\n  } = props\n\n  const dispatch = useDispatch()\n  // const [count, setCount] = React.useState(0)\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  // const reassign = useSelector(({ClaimsEncoding: state}) =>  state.reassign)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  const initDropdownUsers = async ({ roles }) => {\n    UserManagementServices.getUsersByRole(roles).then(({ data = [] }) => {\n      let users = data\n        .map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n        .filter(i => i.value !== _id)\n\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // const handleOnsubmitReassign = (batches, user_id) => {\n  //   console.log(batches)\n  //   console.log(user_id)\n  // }\n\n  const handleOnOpenDialog = () => {\n    if (count === 0) return\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: 'CLAIMS_DETAILS_ENCODER' })\n    // setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignNotes(''))\n    // setReassignModal(state => ({ ...state, dialog: true }))\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography variant='subtitle2'>Total Batches Selected: {count} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                disabled={count < 1}\n                color='primary'\n                id='btn-assign'\n                className='button-positive'\n                onClick={() => handleOnOpenDialog()}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='btn-cancel'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitReassign}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\n// Store\nimport { useSelector } from 'react-redux'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\n\n// Styles\nimport classes from './CreatedBatchesPage.module.scss'\n\nexport default function CreatedBatchesPage (props) {\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const [headcell, setHeadCell] = React.useState([\n    { id: 's-batch-number', name: ' Batch Number', sortField: 'batch_number', match: 'start' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-total-rcs', name: ' Total No. of RCS', sortField: 'total_rcs', match: 'number' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    // data: [],\n    filter: {},\n    orderBy: 'batch_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  }\n\n  // const [viewList, setViewList] = React.useState(initialValue)\n\n  const [batch, setBatch] = React.useState({})\n  const [batches, setBatches] = React.useState(initialValue)\n  const [id, setId] = React.useState(null)\n  const [selected, setSelected] = React.useState({ batch_numbers: [] })\n  const reassign = useSelector(({ ClaimsEncoding: state }) => state.reassign)\n  const [debounce, setDebounce] = React.useState(null)\n\n  React.useEffect(() => {\n    PageTitleService('Created Batches')\n    BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${props.match.params._id}`])\n    LoadingService.loading(true)\n\n    const _id = props.match.params._id\n    getBatches(batches)\n    setId(_id)\n  }, [props.match.params.id])\n\n  const getBatches = params => {\n    ClaimsEncoderSupervisorServices.getEncoderBatches({\n      id: props.match.params._id,\n      search: params.search,\n      sort: `${params.orderBy}|${params.order ? 'asc' : 'desc'}`,\n      page: params.page,\n      filter: params.filter,\n      limit: params.limit\n    })\n      .then(res => {\n        const { results = [], count, limit, page } = res.data.data\n        setBatches(state => ({ ...state, count, limit, page }))\n\n        const data = results.map(batch => ({ ...batch, checked: false }))\n\n        // if (data) setSelectStatus(false)\n        setSelected({ batch_numbers: [] })\n        setBatch({\n          data: data,\n          loading: false,\n          indeterminate: undefined,\n          checked: undefined\n        })\n        LoadingService.loading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleSelectAll = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.checked = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleItemSelect = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.checked = !i.checked\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.checked) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setSelected({ batch_numbers: batchNumbers })\n  }\n\n  const handleOnCancel = () => {\n    let _data = batch.data.map(i => ({ ...i, checked: false }))\n\n    setBatch(state => ({ ...state, data: _data, checked: false, indeterminate: undefined }))\n    setSelectStatus(false)\n    setSelected({ batch_numbers: [] })\n  }\n\n  const handleOnSubmitReassign = () => {\n    LoadingService.loading(true)\n    ClaimsEncoderSupervisorServices.reassign({\n      selected: selected.batch_numbers,\n      id: reassign.assignee.id,\n      notes: reassign.note,\n      prev_user: id\n    }).then(() => {\n      setSelected({ batch_numbers: [] })\n      getBatches(batches)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnSearchAllChange = args => {\n    getBatches({ ...batches, ...args })\n  }\n\n  const handleOnSearch = args => {\n    const _params = {\n      limit: batches.limit,\n      page: batches.page,\n      search: batches.search,\n      sort: `${batches.orderBy}|${batches.order ? 'desc' : 'asc'}`,\n      filter: batches.filter,\n      ...args\n    }\n    getBatches(_params)\n  }\n\n  const handleOnPaginate = args => {\n    const params = {\n      ...batches,\n      ...args\n    }\n    setBatches(state => ({ ...state, ...args }))\n    getBatches(params)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox\n                color='default'\n                indeterminate={!!batch.indeterminate}\n                checked={!!batch.checked}\n                onClick={event => handleSelectAll()}\n              />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={batches.orderBy === headCell.sortField}\n                direction={batches.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !batches.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              <TextField\n                id={`column-filter-${headCell.id}`}\n                // className={`${classes.search}`}\n                TextFieldStyle={{ margin: 0 }}\n                fullWidth\n                onChange={event => {\n                  const search = event.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      setBatches(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                      handleOnSearch({ filter: { ...batches.filter, [headCell.sortField]: { value: search, match: headCell.match } }, page: 1 })\n                    }, 500)\n                  )\n                }}\n              />\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return batch.data\n        ? batch.data.map((row, index) => (\n          <TableRow key={index}>\n            {selectStatus ? (\n              <TableCell padding='checkbox'>\n                <Checkbox\n                  checked={row.checked}\n                  color='default'\n                  onClick={event => handleItemSelect({ index, batch })}\n                />\n              </TableCell>\n            ) : null}\n            <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n            <TableCell id={`date-received-${index}`}>{DateFormatter(row.date_received)}</TableCell>\n            <TableCell id={`due-date-${index}`}>{DateFormatter(row.date_due)}</TableCell>\n            <TableCell align='center' id={`total-rcs-${index}`}>\n              {row.total_rcs}\n            </TableCell>\n            <TableCell id={`facility-name-${index}`}>{row.facility_name}</TableCell>\n            <TableCell id={`view-encoder-${index}`}>\n              <Typography\n                variant='caption'\n                className='text-link underline'\n                onClick={() => props.history.push(`/batches/assigned/${id}/${row.batch_number}`)}\n              >\n                  View\n              </Typography>\n            </TableCell>\n          </TableRow>\n        ))\n        : null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                id='reassign-btn'\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => {\n                  const search = e.target.value\n                  clearTimeout(debounce)\n                  setDebounce(\n                    setTimeout(() => {\n                      handleOnSearchAllChange({ search, page: 1 })\n                      setBatches(state => ({ ...state, search }))\n                    }, 500)\n                  )\n                }}\n                placeholder='Search for batch number, date or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={batches.count}\n              page={batches.page}\n              limit={batches.limit}\n              pagination\n              rowsPerPageOptions={batches.rowsPerPageOptions}\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            count={selected.batch_numbers.length ? selected.batch_numbers.length : 0}\n            handleOnSubmitReassign={handleOnSubmitReassign}\n            UserManagementServices={UserManagementServices}\n            handleOnCancel={() => handleOnCancel()}\n            handleOnClose={() => props.history.push(`/`)}\n            _id={id}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails (props) {\n  const { details = {} } = props\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Comments/Notes' readOnly value={details.notes} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='reassign-notes' label='Reassign Notes' readOnly value={details.reassign_notes || ''} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { count, inputChange = null } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n]\n\nconst rows = []\n\nexport default function ClaimList ({ items, type, pagination, setPagination }) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [claims, setClaims] = React.useState([])\n\n  React.useEffect(() => {\n    setClaims({\n      data: items\n    })\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleItemClick = index => {}\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        pagination={pagination}\n        rowsLength={rows.length}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow tabIndex={-1} key={row.claim_number}>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from './Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from './Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from './Components/ClaimList/ClaimList'\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n// import ProviderSchedule from '../../../ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [debounce, setDebounce] = React.useState(null)\n  const [id, setId] = React.useState()\n  const [pagination, setPagination] = React.useState({\n    search: '',\n    count: 0,\n    rowsPerPage: 5,\n    page: 0,\n    rowsPerPageOptions: [5, 10, 15],\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: parseInt(event.target.value, 10), page: 0 }))\n    }\n  })\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        setPagination(state => ({ ...state, search }))\n      }, 500)\n    )\n  }\n\n  React.useEffect(() => {\n    getClaimsAndCount({ batch_number: props.match.params._batchNumber })\n  }, [pagination.search, pagination.rowsPerPage, pagination.page])\n\n  const getClaimsAndCount = ({ batch_number }) => {\n    ClaimsEncoderSupervisorServices.getClaims({\n      batch_number,\n      params: { search: pagination.search, limit: pagination.rowsPerPage, page: pagination.page + 1 }\n    }).then(res => {\n      const { results, count, page, limit } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      setPagination(state => ({ ...state, count, limit, page: page - 1 }))\n    })\n  }\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const batch_number = props.match.params._batchNumber\n    const _id = props.match.params._id\n    setId(_id)\n    setBatchNumber(batch_number)\n\n    ClaimsEncoderSupervisorServices.getEncoderBatch({ id: _id }, batch_number).then(res => {\n      const { data } = res.data\n\n      setDetails(data)\n      LoadingService.loading(false)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', `assigned:${_id}`, `specificBatch:${batch_number}`])\n\n      PageTitleService(`Batch No. ${batch_number}`, {\n        text: 'In Progress',\n        color: 'blue'\n      })\n\n      getClaimsAndCount({ batch_number: batch_number })\n    })\n  }, [props.match.params._batchNumber, props.match.params._id])\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader inputChange={handleSearchChange} count={claimCount} />\n          <ClaimList pagination={pagination} setPagination={setPagination} items={claims} type={details.claim.type} />\n\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              <Button\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                onClick={() => props.history.push(`/batches/assigned/${id}`)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder Supervisor\nimport Dashboard from './../Components/ClaimsDetailsEncoderSupervisor/Dashboard/Dashboard'\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Details Encoder\nimport BatchesPage from './../Components/ClaimsDetailsEncoder/BatchesPage/BatchesPage'\nimport BatchPage from './../Components/ClaimsDetailsEncoder/BatchPage/BatchPage'\nimport ClaimPage from './../Components/ClaimsDetailsEncoder/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batches' exact component={BatchesPage} />\n      <Route\n        path='/batches/:_batchNumber'\n        exact\n        render={props => <BatchPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route\n        path='/batches/:_batchNumber/claims/add'\n        exact\n        render={props => <ClaimPage {...props} isAdd apiService={ClaimsEncoderSupervisorServices} />}\n      />\n      <Route\n        path='/batches/:_batchNumber/claims/:_claimNumber'\n        exact\n        render={props => <ClaimPage {...props} apiService={ClaimsEncoderSupervisorServices} />}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        id='for-adjudication'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`analyze-cell-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  id={`analyze-claim-${index}`}\n                  onClick={() => {\n                    handleOnAnalyze(item.claim_number)\n                  }}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList2 from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due', match: 'date' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name', match: 'any' }\n]\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList2\n        id='my-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claim Number, Due Date or Facility Name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`update-cell-${index}`}>\n                <Link to={`/claims/${item.claim_number}/analyze`}>\n                  <Typography variant='caption' className='text-link underline' id={`update-claim-${index}`}>\n                    Update\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ id, viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                    ? `update-claim-${index}`\n                    : category === 'submitted'\n                    ? `print-${index}`\n                    : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n\n      case 'notice':\n        pdf = {\n          name: 'Claim Notice',\n          service: services.getLetterNotice({ claimNo: claim_number })\n        }\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: claimType === 'Reimbursement' ? 280 : 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-claims'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Returned Escalated Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='re-claim-no'>Claim No.</TableCell>\n              <TableCell id='re-due-date'>Due Date</TableCell>\n              <TableCell id='re-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`re-update-claim-${index}`}>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='returned-escalated'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from '../../Tiles/ForAdjudicationTile'\nimport MyClaimsTile from '../../Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from '../../Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from '../../Tiles/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\n\nconst ClaimsInputBase = props => {\n  const {\n    error,\n    value,\n    InputRef,\n    setOpen,\n    handleOnFocus,\n    handleDateChange,\n    noMargin,\n    id,\n    handleOnBlur,\n    focus,\n    disableComponents,\n    ...other\n  } = props\n  return (\n    <React.Fragment>\n      <Paper\n        className={`${classes['text-field']} ${noMargin ? classes['no-margin'] : ''}  ${\n          error ? classes['has-error'] : focus && classes.focus\n        } box-shadow-field ${disableComponents && classes.disabled}`}\n        onBlur={handleOnBlur}\n      >\n        <InputBase\n          id={id}\n          inputProps={{ ref: InputRef }}\n          className={classes.input}\n          format='MM/DD/YYYY'\n          value={value}\n          onChange={event => handleDateChange(moment(event.target.value))}\n          onFocus={handleOnFocus}\n          disabled={disableComponents}\n          {...other}\n        />\n\n        <div className={classes['date-button']}>\n          <IconButton\n            id={`${id}-date-button`}\n            className={classes.button}\n            disabled={disableComponents}\n            size='small'\n            onClick={() => setOpen(true)}\n          >\n            <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n          </IconButton>\n        </div>\n      </Paper>\n      {error && <span className={classes.error}>{error}</span>}\n    </React.Fragment>\n  )\n}\n\nexport default function DatePicker (props) {\n  const { id, label, required, value, format, readOnly, onChange, error, tabindex, ...other } = props\n  const [open, setOpen] = React.useState(false)\n  // const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  // React.useEffect(() => {\n  //   setSelectedDate(new Date(value))\n  // }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    // setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p =>\n                ClaimsInputBase({\n                  ...p,\n                  focus,\n                  setOpen,\n                  handleDateChange,\n                  InputRef,\n                  handleOnFocus,\n                  id,\n                  handleOnBlur,\n                  ...other\n                })\n              }\n              value={value}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              allowKeyboardControl\n              format='MM/DD/YYYY'\n              clearable\n              showTodayButton\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  date_from: Joi.date()\n    .label('Date From')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport TextField from '@material-ui/core/TextField'\nimport MomentUtils from '@date-io/moment'\nimport Button from '@material-ui/core/Button'\n\nimport ClearIcon from '@material-ui/icons/Clear'\nimport { IconButton } from '@material-ui/core'\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\n\n// Components\n\nimport DatePicker from './Components/DatePicker/DatePicker.js'\nimport DatePickerCurrent from 'SharedComponents/DatePicker/DatePicker.js'\n\n// Utility\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Validators\nimport DateValidator from './Validations/DateValidator'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nimport classes from './Test.module.scss'\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 }\n]\n\n// https://github.com/mui-org/material-ui-pickers/issues/1388\nconst WrappedTextField = props => <ClaimsInputBase {...props} />\n\nconst ClaimsInputBase = props => {\n  const { error, ...others } = props\n  return (\n    <React.Fragment>\n      <Paper className={`${classes['text-field']}   ${error ? classes['has-error'] : ''} box-shadow-field `}>\n        <InputBase\n          // id={id}\n          // inputProps={{ ref: InputRef }}\n          format='MM/DD/YYYY'\n          className={classes.input}\n          {...others}\n          // value={p.value !== p.masking && !isNaN(p.masking) ? p.masking : p.value}\n          // onChange={event => handleDateChange(moment(event.target.value))}\n          // onFocus={handleOnFocus}\n        />\n\n        {/* <div className={classes['date-button']}>\n          <IconButton\n            // id={`${id}-date-button`}\n            className={classes.button}\n            // disabled={disableComponents}\n            size='small'\n            // onClick={() => setOpen(true)}\n          >\n            <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n          </IconButton>\n        </div> */}\n      </Paper>\n      {error && <span className={classes.error}>{error}</span>}\n    </React.Fragment>\n  )\n}\n\nexport default function Test (props) {\n  const [storage, setStorage] = React.useState({\n    facility_id: '',\n    facility_name: '',\n    date_from: null\n  })\n\n  const [errors, setErrors] = React.useState({ date_from: '' })\n\n  const [suggestion, setSuggestion] = React.useState({\n    facilities: []\n  })\n\n  const [loading, setLoading] = React.useState(false)\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Test')\n    BreadcrumbsService.setSelectedItems(['test'])\n  }, [])\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    // if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          setLoading(true)\n          ClaimsAdjudicationServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by: by.split('_')[1] }\n          }).then(res => {\n            setLoading(false)\n            const { data } = res.data\n            setSuggestion(state => ({ ...state, facilities: data }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const onChange = ({ value, field }) => {\n    console.log('onChaneg', value)\n    setStorage(state => ({ ...state, [field]: value }))\n  }\n\n  const onChangeFacility = ({ id = '', name = '' }) => {\n    setStorage(state => ({ ...state, facility_id: id, facility_name: name }))\n  }\n\n  const dateValidate = () => {\n    const { error } = DateValidator({ date_from: storage.date_from })\n    setErrors(error || {})\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Sample Documentation Using TextField'}\n              </Typography>\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    id='combo-box-demo'\n                    options={top100Films}\n                    getOptionLabel={option => option.title}\n                    style={{ width: 300 }}\n                    renderInput={params => <TextField {...params} label='Combo box' variant='outlined' />}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner ID using TextField'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.id}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => <TextField {...params} label='Combo box' variant='outlined' />}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_id' })\n                      onChange({ value, field: 'facility_id' })\n                    }}\n                    // value={storage.facility_id}\n                    inputValue={storage.facility_id}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner (Facility) Name TextField'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.name}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => <TextField {...params} label='Combo box' variant='outlined' />}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_name' })\n                      onChange({ value, field: 'facility_name' })\n                    }}\n                    // value={storage.facility_name}\n                    inputValue={storage.facility_name}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner ID using InputBase'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.id}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => (\n                      <InputBase {...params} ref={params.InputProps.ref} className={classes.input} />\n                    )}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_id' })\n                      onChange({ value, field: 'facility_id' })\n                    }}\n                    // value={storage.facility_id}\n                    inputValue={storage.facility_id}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.input}>\n          <div className={classes['proto-auto-complete']}>\n            <div className={classes.root}>\n              <Typography variant='subtitle2' className={classes.label}>\n                {'Medical Partner (Facility) Name InputBase'}\n              </Typography>\n\n              <div className={classes.wrapper}>\n                <Paper>\n                  <Autocomplete\n                    style={{ width: 300 }}\n                    options={suggestion.facilities}\n                    getOptionLabel={option => option.name}\n                    freeSolo\n                    loading={loading}\n                    renderInput={params => (\n                      <InputBase {...params} ref={params.InputProps.ref} className={classes.input} />\n                    )}\n                    onClose={() => setSuggestion(state => ({ ...state, facilities: [] }))}\n                    onChange={(event, value) => onChangeFacility(value || [])}\n                    onInputChange={(event, value = '') => {\n                      getFacilitySuggestions({ value, by: 'facility_name' })\n                      onChange({ value, field: 'facility_name' })\n                    }}\n                    // value={storage.facility_name}\n                    inputValue={storage.facility_name}\n                  />\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={classes.row}>\n        <div className={classes.input}>\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              label={'Stock'}\n              value={storage.date_from}\n              onChange={date => onChange({ value: date, field: 'date_from' })}\n              InputProps={{\n                endAdornment: (\n                  <IconButton onClick={() => onChange({ value: null, field: 'date_from' })}>\n                    <ClearIcon />\n                  </IconButton>\n                )\n              }}\n              InputAdornmentProps={{\n                position: 'start'\n              }}\n              format='MM/DD/YYYY'\n              clearable\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n\n        <div className={classes.input}>\n          'Stock + InputBase\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              label={'Stock + InputBase'}\n              value={storage.date_from}\n              onChange={date => onChange({ value: date, field: 'date_from' })}\n              TextFieldComponent={ClaimsInputBase}\n              // InputProps={{\n              //   inputComponent: ClaimsInputBase\n              // }}\n              format='MM/DD/YYYY'\n              allowKeyboardControl\n              clearable\n              showTodayButton\n            />\n          </MuiPickersUtilsProvider>\n        </div>\n\n        <div className={classes.input}>\n          <DatePickerCurrent\n            label='Current'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: new Date(date), field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n        <div className={classes.input}>\n          <DatePicker\n            label='New'\n            value={storage.date_from}\n            onChange={date => {\n              onChange({ value: date, field: 'date_from' })\n            }}\n            error={errors.date_from}\n          />\n        </div>\n\n        <div className={classes.input}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={`${classes.save} button-positive`}\n            onClick={dateValidate}\n            id='save'\n          >\n            Validate\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Analyst\nimport Dashboard from './../Components/ClaimsAnalyst/Dashboard/Dashboard'\nimport Test from './../Components/ClaimsAnalyst/Test/Test'\n\n// Components\nimport ClaimsViewer from './../Components/ClaimsViewer'\nimport ClaimsUtilLedgerReport from '../Components/Reports/ClaimsUtilLedgerReport/ClaimsUtilLedgerReport'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  test: {\n    text: 'Test',\n    to: data => `/test`\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  reimbursement_info: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    return_advice: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/utilization-ledger' exact render={() => <ClaimsUtilLedgerReport />} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsAdjudicationServices}\n          />\n        )}\n      />\n      <Route path='/test' exact component={Test} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number', match: 'start' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa.number', match: 'or' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name', match: 'any' }\n]\n\nconst ForPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'For Payment Request'\n    const category = 'payment-request'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'payment-request'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'payment-request',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      filter: viewList.filter,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-payment-request'\n        count={{ color: 3, value: claims.count, id: 'for-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'For Payment Request' : mTitle}\n        viewList={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`for-pr-${item.id}`} id={`for-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='for-payment-request'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nForPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default ForPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst SubmittedPaymentRequestTile = props => {\n  const { services, sizes, mTitle } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'submitted'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'submitted',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-pr-count' }}\n        sizes={sizes}\n        title={!mTitle ? 'Submitted PR' : mTitle}\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`submitted-pr-${item.id}`} id={`submitted-pr-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for bundle number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`submitted-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`submitted-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`submitted-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}/submitted`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPaymentRequestTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPaymentRequestTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'soa-no', name: 'Bundle/SOA No.', sortField: 'claim.soa_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nconst OverrideClaimTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'override',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      services.getClaimCount({ category: 'override' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims({ data: paymentRequestClaims, count: paymentRequestClaimCount })\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Override Claim'\n    const category = 'override'\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = value => {\n    const category = 'override'\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(state => ({ ...state, data: data.results }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'override',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='override-claim'\n        count={{ color: 5, value: claims.count, id: 'override-claim-count' }}\n        sizes={sizes}\n        title='Override Claim'\n        viewAllLink={\n          <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList} id='for-pr-view-list'>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`oc-${item.id}`} id={`oc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell>{item.claim_number}</TableCell>\n                <TableCell>{item.soa.number || item.bundle_number}</TableCell>\n                <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell>{item.facility.name}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-request/${item.bundle_number}`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`view-pr-${index}`}>\n                      Request Payment\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='override-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`oc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`oc-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n              <TableCell id={`oc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`oc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${item.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                    Request Payment\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nOverrideClaimTile.displayName = 'DashboardTileComponent'\n\nexport default OverrideClaimTile\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPaymentRequestTile from './../../../Components/Tiles/SubmittedPaymentRequestTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'pending-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  {\n    id: 'submitted-discount-amount',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: 'Hospital Discount Amount'\n  }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        // message: 'Please select a batch for submission to Treasury Department.',\n        message: 'User must select first a batch for submission.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount:\n                <span id='total-approved-amount'>{`PHP ${CurrencyFormatter(\n                  batches.pending.header.approved_amount\n                )}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.pending.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n              selectStatus\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`pending-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discoun_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`submitted-discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestPage.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' }\n]\n\nconst prManagerheadCells = [\n  { id: 'batch-no', numeric: false, center: true, disablePadding: false, label: 'Batch No.' },\n  { id: 'claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' },\n  { id: 'discount-amount', numeric: true, center: false, disablePadding: false, label: 'Hospital Discount Amount' },\n  { id: 'view-link', numeric: false, disablePadding: false, label: '' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const { supervisor, isManager } = props\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n\n  const [batches, setBatches] = React.useState({\n    submitted: { data: [], header: {} }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n    PageTitleService(`Submitted PR: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = data.length\n    const total_rcs = data.reduce((acc, batch) => acc + batch.claims.length, 0)\n\n    data = data.map(i => ({\n      ...i,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          pr_amount: approved_amount\n        }\n      }\n    }))\n  }\n  const approved_by_uid = bundle ? bundle.approved_by_uid : ''\n\n  return (\n    <div className={classes.root}>\n      {bundle && approved_by_uid ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header} align='center'>\n                Total Batches: {batches.submitted.header.total_batches}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total RCS: {batches.submitted.header.total_rcs}\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total PR Amount:\n                <span id='total-pr-amount'>{`PHP ${CurrencyFormatter(batches.submitted.header.pr_amount)}`}</span>\n              </Typography>\n              <Typography className={classes.header} align='center'>\n                Total Discount Amount:\n                <span id='total-discount-amount'>{`PHP ${CurrencyFormatter(0)}`}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable className={classes.table} headCells={!isManager ? headCells : prManagerheadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell align='center' id={`batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell align='center' id={`total-rcs-${index}`}>\n                        {batch.claims.length}\n                      </TableCell>\n                      <TableCell align='right' id={`billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                      <TableCell align='right' id={`discount-amount-${index}`}>\n                        {/* {CurrencyFormatter(batch.discount_amount)} */}\n                        0.00\n                      </TableCell>\n                      {isManager && (\n                        <TableCell align='right' id={`discount-amount-${index}`}>\n                          <Link\n                            // to={`/payment-requests/${item.id}/list`}\n                            to={`/payment-request/${bundle_number}/submitted/${batch.batch_number}`}\n                          >\n                            <Typography\n                              variant='caption'\n                              className={`text-link underline`}\n                              id={`submmited-pr-${index}`}\n                            >\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={() =>\n                supervisor || isManager\n                  ? props.history.push(`/payment-requests/${approved_by_uid}/list`)\n                  : props.history.push('/')\n              }\n              id='cancel'\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './../Components/PaymentRequest/Dashboard/Dashboard'\nimport PaymentRequestPage from './../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route path='/payment-request/:bundle_number/submitted' exact component={SubmittedPaymentRequestPage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'approved-by', name: 'PR Processor', sortField: 'approved_by', match: 'any' },\n  { id: 'total-bundles', name: 'Total Bundle/SOA', sortField: 'total_bundles', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' }\n]\n\nconst SubmittedPrSupervisorTile = props => {\n  const { services, sizes } = props\n\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    filter: {},\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([services.getSubmittedPaymentRequest({ limit: 10, sort: '' }), services.getBundleCount()]).then(\n      values => {\n        const bundleResponse = values\n        const submittedRequestClaims = bundleResponse[0].data.data.results\n        const submittedRequestClaimCount = bundleResponse[1].data.data\n        setClaims({ data: submittedRequestClaims, count: submittedRequestClaimCount })\n      }\n    )\n  }, [])\n\n  const handleOnShowViewList = () => {\n    const title = 'Submitted PR'\n    const category = 'submitted'\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getSubmittedPaymentRequest({ limit: 10, sort: '' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getSubmittedPaymentRequest(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page, category: 'submitted' }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-pr'\n        count={{ color: 3, value: claims.count, id: 'submitted-claim-count' }}\n        sizes={sizes}\n        title='Submitted PR'\n        viewList={\n          <Typography\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList}\n            id='submitted-pr-view-list'\n          >\n            View List\n          </Typography>\n        }\n        isFilterShown={false}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>PR Processor</TableCell>\n              <TableCell>Total Bundle/SOA</TableCell>\n              <TableCell>Total Batches</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n                <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n                <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell>\n                  <Link to={`/payment-requests/${item.id}/list`}>\n                    <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='submitted-pr'\n        columns={columns}\n        searchTextPlaceHolder='Search for PR Processor'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`approved-by-${index}`}>{item.verifierName}</TableCell>\n              <TableCell id={`total-bundles-${index}`}>{item.total_bundles}</TableCell>\n              <TableCell id={`total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell>\n                <Link to={`/payment-requests/${item.id}/list`}>\n                  <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedPrSupervisorTile.displayName = 'DashboardTileComponent'\n\nexport default SubmittedPrSupervisorTile\n","import instance from './instance'\nconst axios = instance('/c/prs')\n\nexport default class PaymentRequestServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequestBundles ({ processor_id }, params) {\n    return axios({\n      url: `/payment-requests/${processor_id}/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport OverrideClaimTile from './../../../Components/Tiles/OverrideClaimTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ sm: 12 }}>\n            <ForPaymentRequestTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n            <SubmittedPrSupervisorTile services={PaymentRequestSupervisorServices} sizes={{ sm: 12 }} {...props} />\n            <OverrideClaimTile services={PaymentRequestServices} sizes={{ sm: 12 }} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={8} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestSupervisorServices from 'Services/Api/PaymentRequestSupervisorServices'\n\n// CSS\nimport classes from './SubmittedPaymentRequestList.module.scss'\n\n// UTIL\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: 'Bundle/SOA No.', sortField: 'bundle_number', match: 'any' },\n  { id: 'date-received', name: 'Date Received', sortField: 'date.received', match: 'date' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date.due', match: 'date' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n]\n\nexport default function PaymentRequestPage (props) {\n  const processor_id = props.match.params.pr_officer\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'date.due',\n    order: true,\n    sort: 'date.due|desc'\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Submitted PR')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'submittedPaymentRequest'])\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, initialValue).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }, [])\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    handleOnViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    PaymentRequestSupervisorServices.getPaymentRequestBundles({ processor_id }, _params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        handleOnViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSearchColumn = args => {\n    const { field, value, match } = args\n    setViewList(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnViewListChange({ filter: { ...viewList.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  return (\n    <div className={classes.root}>\n      {viewList.data ? (\n        <React.Fragment>\n          <div className={classes.search}>\n            <SearchTextComponent\n              id='search'\n              onChange={handleSearchChange}\n              placeholder='Search for Bundle Number, Date or Facility Name'\n            />\n          </div>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map(headCell => (\n                    <TableCell key={headCell.sortField} id={headCell.id}>\n                      <TableSortLabel\n                        active={viewList.orderBy === headCell.sortField}\n                        direction={viewList.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort(headCell.sortField)}\n                      >\n                        {headCell.name}\n                      </TableSortLabel>\n                      <TextField\n                        id={`column-filter-${headCell.id}`}\n                        // className={`${classes.search}`}\n                        TextFieldStyle={{ margin: 0 }}\n                        fullWidth\n                        onChange={event => {\n                          const search = event.target.value\n                          clearTimeout(debounce)\n                          setDebounce(\n                            setTimeout(() => {\n                              handleOnSearchColumn({\n                                field: headCell.sortField,\n                                value: search,\n                                match: headCell.match\n                              })\n                            }, 500)\n                          )\n                        }}\n                      />\n                    </TableCell>\n                  ))}\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <React.Fragment>\n                  {viewList.data.map((row, index) => (\n                    <TableRow key={`${row.claim_number}-${index}`}>\n                      <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n                      <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n                      <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n                      <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${row.bundle_number}/submitted`}>\n                          <Typography variant='caption' className={`text-link underline`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </React.Fragment>\n              }\n              count={viewList.count}\n              page={viewList.page}\n              limit={viewList.limit}\n              rowsPerPageOptions={[10, 15, 20]}\n              onChange={handleOnViewListChange}\n            />\n          </div>\n          <div align='right' className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              id='cancel'\n              onClick={() => props.history.push(`/`)}\n            >\n              Close\n            </Button>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// Pages of Payment Request Officer Supervisor\nimport Dashboard from './../Components/PaymentRequestSupervisor/Dashboard/Dashboard'\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage supervisor {...props} />}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ id, viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      id={id}\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent id={`${id}-body`} dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          id={`${id}-table`}\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow id={`${id}-header`}>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow id={`for-review-claim-${index}`} key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography id={`review-claim-${index}`} variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography\n                  id='mc-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('for-review')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`review-claim-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {claims.ticket.data.map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        id='for-review'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/MedicalConsultant/Dashboard/Dashboard'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    communication: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n            {...props}\n            permissions={permissions}\n            ApiService={MedicalConsultantServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForReconciliationClaimsTile services={ClaimsReconServices} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './../Components/ClaimsReconciliation/Dashboard/Dashboard'\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    remove: { visible: true }\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Services\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nexport default function AssignDialog (props) {\n  const { dialog, handleOnSubmit = () => {}, setDialog } = props\n\n  const [reassignData, setReassignData] = React.useState({\n    user_id: '',\n    message: ''\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    UserManagementServices.getClaimsAnalyst()\n      .then(res => {\n        const _data = res.data\n        const data = _data.map(user => {\n          return { value: user._id, text: `${user.first_name} ${user.last_name}` }\n        })\n        setDropDownUsers(prevState => [...prevState, ...data])\n      })\n      .catch(err => console.error('Failed fetching Claims Verifiers: ', err))\n  }, [])\n\n  const onDropDownChanged = params => {\n    setReassignData(prevState => ({ ...prevState, user_id: params }))\n  }\n\n  const onTextFieldChanged = params => {\n    setReassignData(prevState => ({ ...prevState, message: params }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='reassign-notes'\n                value={reassignData.message}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Message'\n                onChange={e => onTextFieldChanged(e.target.value)}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassignData.user_id}\n                  onChange={e => onDropDownChanged(e.target.value)}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  id='reassign-cancel'\n                  onClick={() => setDialog(state => ({ ...state, assign: false }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  id='reassign-submit'\n                  onClick={() => setDialog(state => ({ ...state, alert: true }))}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claim Verifier</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claim Analyst?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claim Analyst for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmit(reassignData)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                }}\n                variant='contained'\n                color='primary'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ButtonFooter.module.scss'\n\n// Component\nimport AssignDialog from './../AssignDialog/AssignDialog'\n\nexport default function ClaimFooter (props) {\n  const {\n    handleOnSubmit = () => {},\n    handleOnCancel = () => {},\n    handleOnClose = () => {},\n    selectStatus,\n    claimsCount = 0\n  } = props\n\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['counter']}>\n        {selectStatus ? <Typography>Total Claims Selected: {claimsCount} </Typography> : ''}\n      </div>\n      <div className={classes['buttons']}>\n        {!selectStatus ? (\n          <React.Fragment>\n            <Button\n              variant='contained'\n              color='primary'\n              id='btn-close'\n              className='button-negative'\n              onClick={() => handleOnClose()}\n            >\n              Close\n            </Button>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <div>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-positive'\n                onClick={() => setDialog(state => ({ ...state, assign: true }))}\n              >\n                Assign\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                id='save-for-now'\n                className='button-negative'\n                onClick={() => handleOnCancel()}\n              >\n                Cancel\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n      <AssignDialog dialog={dialog} setDialog={setDialog} handleOnSubmit={handleOnSubmit} />\n    </div>\n  )\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getLetterNotice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/notice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getInquiries ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/inquiries`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from '../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsReimbursementServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/medical-collectibles/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/medical-collectibles/count`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport MedicalCollectiblesServices from './MedicalCollectiblesServices'\nconst axios = instance('/c/cvs')\n\nclass index extends ClaimsAdjudicationServices {\n  // MOCK ENDPOINT\n  static getClaims (params) {\n    return axios({\n      url: '/claims/all',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/all/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItems (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getClaimsBySubbordinateCount (params) {\n    console.log(params)\n    return axios({\n      url: '/subordinate/claims/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static totalSubordinatesClaims (params) {\n    return axios({\n      url: '/claims/subordinates/count',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getSubordinates (params) {\n    return axios({\n      url: '/claims/subordinates',\n      method: 'GET',\n      params\n    })\n  }\n\n  static returnClaim ({claim_number, data}) {\n    console.log(data)\n    return axios({\n      url: `/claims/${claim_number}/return`,\n      method: 'POST',\n      params: data\n    })\n  }\n}\n\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nindex.MedicalCollectiblesServices = MedicalCollectiblesServices\nexport default index\n","import Button from '@material-ui/core/Button'\nimport ButtonFooter from './Components/ButtonFooter/ButtonFooter'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\nimport moment from 'moment'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ClaimsList.module.scss'\n\nexport default function ClaimsPage (props) {\n  const userId = props.match.params.user_id\n  const [selectStatus, setSelectStatus] = React.useState(false)\n\n  const headcell = [\n    { id: 's-claim-number', name: ' Claim Number', sortField: 'claim_number', match: 'any' },\n    { id: 's-date-received', name: ' Date Received', sortField: 'date.received', match: 'date' },\n    { id: 's-due-date', name: ' Due Date', sortField: 'date.due', match: 'date' },\n    { id: 's-facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name', match: 'any' }\n  ]\n  const [claims, setClaims] = React.useState({\n    category: 'my',\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    filter: {},\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n  const [claimsCount, setClaimsCount] = React.useState(0)\n\n  React.useEffect(() => {\n    PageTitleService('For Adjudication')\n    BreadcrumbsService.setSelectedItems(['assigned'])\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getClaims()\n    LoadingService.loading(false)\n  }, [claims.search, claims.filter, claims.orderBy, claims.order, claims.limit, claims.page])\n\n  const getClaims = () => {\n    ClaimsVerifierSupervisorServices.getItems({\n      category: claims.category,\n      search: claims.search,\n      sort: `${claims.orderBy}|${claims.order ? 'asc' : 'desc'}`,\n      page: claims.page,\n      limit: claims.limit,\n      user_id: userId,\n      filter: claims.filter\n    })\n      .then(res => {\n        const { results, count, limit, page } = res.data.data\n        results.map(claim => (claim.checked = false))\n        setClaims(prevState => ({ ...prevState, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching records: ', err))\n  }\n\n  const handleItemSelect = (event, index) => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : -1\n    data[index] = { ...data[index], checked: event.target.checked }\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(prevState => prevState + count)\n  }\n\n  const handleOnSearch = args => {\n    const { field, value, match } = args\n    setClaims(state => ({ ...state, filter: { ...state.filter, [field]: { value, match } } }))\n  }\n\n  const handleOnSearchAll = (args = '') => {\n    setClaims(prevState => ({ ...prevState, search: args }))\n  }\n\n  const handleOnSubmit = params => {\n    LoadingService.loading(true)\n    const { user_id, message } = params\n    const reassign = async () => {\n      return Promise.all(\n        claims.data.map(async claim => {\n          if (claim.checked === true) {\n            await ClaimsVerifierSupervisorServices.reassign({\n              claim_number: claim.claim_number,\n              data: { receiver_id: user_id, message: message }\n            }).catch(err => console.error(err))\n          }\n        })\n      )\n    }\n    reassign()\n      .then(() => {\n        handleUnselectAll()\n        LoadingService.loading(false)\n        getClaims()\n      })\n      .catch(err => console.error(('Error Assigning Claims: ', err)))\n  }\n\n  const handleOnPaginate = args => {\n    setClaims(state => ({ ...state, ...args }))\n  }\n\n  const handleSelectAll = event => {\n    let data = [...claims.data]\n    const count = event.target.checked ? 1 : 0\n    data.map(claim => {\n      claim.checked = event.target.checked\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setClaimsCount(count > 0 ? data.length : 0)\n  }\n\n  const handleUnselectAll = () => {\n    let data = [...claims.data]\n    data.map(claim => {\n      claim.checked = false\n    })\n    setClaims(prevState => ({ ...prevState, data }))\n    setSelectStatus(false)\n    setClaimsCount(0)\n  }\n\n  const handleTableRenderer = type => {\n    if (type === 'headcell') {\n      return (\n        <TableRow>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox color='default' onClick={event => handleSelectAll(event)} />\n            </TableCell>\n          ) : null}\n          {headcell.map(headCell => (\n            <TableCell key={headCell.sortField} id={headCell.id}>\n              <TableSortLabel\n                active={claims.orderBy === headCell.sortField}\n                direction={claims.order ? 'asc' : 'desc'}\n                onClick={event => handleOnPaginate({ orderBy: headCell.sortField, order: !claims.order })}\n              >\n                {headCell.name}\n              </TableSortLabel>\n              {headCell.match === 'date' ? (\n                <DatePicker\n                  noMargin\n                  id={`column-filter-${headCell.id}`}\n                  onChange={date =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: date.toISOString(),\n                      match: headCell.match\n                    })\n                  }\n                  value={null}\n                />\n              ) : (\n                <TextField\n                  // className={`${classes.search}`}\n                  id={`column-filter-${headCell.id}`}\n                  TextFieldStyle={{ margin: 0 }}\n                  fullWidth\n                  onChange={event =>\n                    handleOnSearch({\n                      field: headCell.sortField,\n                      value: event.target.value,\n                      match: headCell.match\n                    })\n                  }\n                />\n              )}\n            </TableCell>\n          ))}\n\n          <TableCell align='center' />\n        </TableRow>\n      )\n    } else if (type === 'body') {\n      return claims.data.map((row, index) => (\n        <TableRow key={index}>\n          {selectStatus ? (\n            <TableCell padding='checkbox'>\n              <Checkbox checked={row.checked} color='default' onClick={event => handleItemSelect(event, index)} />\n            </TableCell>\n          ) : null}\n          <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n          <TableCell id={`date-received-${index}`}>{DateFormatter(row.date.received)}</TableCell>\n          <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n          <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n          <TableCell id={`view-claim-${index}`}>\n            <Link to={`/claims/view/${row.claim_number}`}>\n              <Typography id={`analyze-claim-${index}`} variant='caption' className='text-link underline'>\n                View\n              </Typography>\n            </Link>\n          </TableCell>\n        </TableRow>\n      ))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <React.Fragment>\n          <div className={classes['search-container']}>\n            <div className={classes['reassign']}>\n              <Button\n                disabled={selectStatus}\n                // style={{ height: '48px', marginBottom: '17px' }}\n                variant='contained'\n                color='primary'\n                className='button-neutral'\n                onClick={() => {\n                  setSelectStatus(true)\n                }}\n              >\n                Reassign\n              </Button>\n            </div>\n            <div className={classes['search']}>\n              <SearchTextComponent\n                id='search'\n                onChange={e => handleOnSearchAll(e.target.value)}\n                placeholder='Search for claim number or facility name'\n              />\n            </div>\n          </div>\n          <div className={classes['table-container']}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={handleTableRenderer('headcell')}\n              body={handleTableRenderer('body')}\n              count={claims.count}\n              page={claims.page}\n              limit={claims.limit}\n              rowsPerPageOptions={claims.rowsPerPageOptions}\n              pagination\n              onChange={args => handleOnPaginate(args)}\n              cesFooter\n            />\n          </div>\n\n          <ButtonFooter\n            selectStatus={selectStatus}\n            handleOnCancel={() => handleUnselectAll()}\n            handleOnClose={() => props.history.push(`/`)}\n            handleOnSubmit={handleOnSubmit}\n            claimsCount={claimsCount}\n          />\n        </React.Fragment>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst RejectedClaimsTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'rejected',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'REJECTED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'rejected'\n\n    services\n      .getItems({\n        category,\n        filter: viewList.filter,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/rejected/${claim_number}`)\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'rejected'\n    let title = `Rejected Claims`\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({ category, limit: 10, sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='rejected-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'rejected-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Rejected Claims'\n        viewList={\n          <Typography id='rc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='rejected-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nRejectedClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default RejectedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\nconst columns = [\n  { id: 'verifier-name', name: 'Verifier Name', sortField: 'username', match: 'any' },\n  { id: 'total-batches', name: 'Total Batches', sortField: 'total_batches', match: 'any' },\n  { id: 'total-claims', name: 'Total Claims', sortField: 'total_claims', match: 'any' }\n]\n\nconst ClaimsVerifierTile = props => {\n  const { services } = props\n\n  const [viewList, setViewList] = React.useState({\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    filter: {},\n    orderBy: 'latest.date.due',\n    order: true\n  })\n  const [verifiers, setVerifiers] = React.useState({ data: [], count: 0 })\n\n  React.useEffect(() => {\n    Promise.all([\n      services.totalSubordinatesClaims(),\n      // services.getClaimsBySubbordinateCount(),\n      services.getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n    ])\n      .then(res => {\n        const [usersCount, verifiers] = res\n        const { results, count } = verifiers.data.data.data\n\n        setViewList(prev => ({ ...prev, count: count }))\n        setVerifiers(p => ({ ...p, data: results, count: usersCount.data.data }))\n      })\n      .catch(err => console.error(err.message))\n  }, [])\n\n  const getSubordinates = params => {\n    services\n      .getSubordinates(params)\n      .then(res => {\n        const { results, count } = res.data.data.data\n        const { limit, page } = res.data.data\n\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n      .catch(err => console.error('Error fetching subordinates: ', err))\n  }\n\n  const handleOnReviewUser = (params = null) => () => {\n    if (!params) return false\n    props.history.push(`/list/${params}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims Verifier List'\n\n    setViewList(prev => ({ ...prev, show: true, title, data: [] }))\n    getSubordinates({ page: 1, limit: 10, sort: 'name|asc' })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n    // console.log(_params)\n    getSubordinates({ ..._params })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: verifiers.count, id: 'claims-verifier-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList()}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`cv-${item.id}`} id={`cv-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {verifiers.data &&\n              verifiers.data.map((item, index) => (\n                <TableRow key={`verifier-list-item-${index}`}>\n                  <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n                  <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                  <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                  <TableCell id={`cv-view-user-${index}`}>\n                    <Typography\n                      id={`view-user-${index}`}\n                      variant='caption'\n                      className={`text-link underline`}\n                      onClick={handleOnReviewUser(item.id)}\n                    >\n                      View\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-verifier'\n        columns={columns}\n        searchTextPlaceHolder='Search for Claims Analyst'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`verifier-list-item-${index}`}>\n              <TableCell id={`cv-verifier-name-${index}`}>{item.username}</TableCell>\n              <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n              <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n              <TableCell id={`cv-view-user-${index}`}>\n                <Typography\n                  id={`view-user-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={handleOnReviewUser(item.id)}\n                >\n                  View\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsVerifierTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsVerifierTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'recon',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'RECONCILED' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={`rc-${item.id}`} id={`rc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={`${item.claim_number}-${index}`}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='reconciled-claim'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`${item.claim_number}-${index}`}>\n              <TableCell id={`rc-claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`rc-view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => handleOnReview(item.claim_number)}\n                >\n                  Analyze\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date', sortField: 'date_due', match: 'date' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'facility_name', match: 'any' }\n]\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'for-approval',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ status: 'FOR APPROVAL' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = value => {\n    const category = 'for-approval'\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        filter: viewList.filter\n      })\n      .then(({ data: res }) => {\n        const { data } = res\n\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      })\n  }\n\n  const handleOnShowViewList = () => {\n    const category = 'for-approval'\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services\n      .getItems({\n        category,\n        limit: 10,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: 'for-approval',\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography id='fa-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange}\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`fa-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`fa-view-claim-${index}`}>\n                  <Link to={`/claims/for-approval/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='claims-for-approval'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{item.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Link to={`/claims/for-approval/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter, NameFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'latest.claim_number', match: 'start' },\n  { id: 'account-number', name: 'Account No.', sortField: 'latest.client.account_number', match: 'any' },\n  { id: 'account-name', name: 'Account Name', sortField: 'latest.client.account_name', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member_name', match: 'any' }\n]\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    filter: {},\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, data: allClaims, count: allClaimsCount }))\n    })\n  }, [])\n\n  const handleOnShowViewList = () => {\n    let title = 'Medical Collectibles'\n\n    setViewList({ ...initialValue, show: true, title })\n    services\n      .getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'all'\n      })\n      .then(({ data: res }) => {\n        const { results, count, limit, page } = res.data\n        setViewList(state => ({ ...state, data: results, count, limit, page }))\n      })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: claims.count, id: 'medical-collectibles-count' }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`mc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                {/* added cond on client to support old data */}\n                <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n                <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n                <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n                <TableCell id={`mc-view-claim-${index}`}>\n                  <Link to={`/claims/review/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='medical-collectibles'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={item.claim_number}>\n              <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              {/* added cond on client to support old data */}\n              <TableCell id={`mc-account-no-${index}`}>{item.client ? item.client.account_number : ''}</TableCell>\n              <TableCell id={`mc-account-name-${index}`}>{item.client ? item.client.account_name : ''}</TableCell>\n              <TableCell id={`mc-member-name-${index}`}>{item.member_name}</TableCell>\n              <TableCell id={`mc-view-claim-${index}`}>\n                <Link to={`/claims/review/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList2/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst columns = [\n  { id: 'claim-number', name: 'Claim No.', sortField: 'claim_number', match: 'any' },\n  { id: 'due-date', name: 'Due Date ', sortField: 'date.due', match: 'date' },\n  { id: 'account-name', name: 'Account No.', sortField: 'member.account_number', match: 'any' },\n  { id: 'member-name', name: 'Member Name', sortField: 'member.name', match: 'any' }\n]\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    count: 0,\n    data: []\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim_number',\n    order: true,\n    category: 'reimbursement',\n    filter: {}\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        category: viewList.category,\n        limit: viewList.limit,\n        sort: `${viewList.orderBy}|${viewList.order ? 'asc' : 'desc'}`,\n        range: 'this-week',\n        filter: viewList.filter\n      }),\n      services.getItemCount({ claim_type: 'Reimbursement' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const { results } = claimResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        data: results,\n        count: claimCountResponse.data.data\n      }))\n    })\n  }, [])\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      filter: viewList.filter,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnShowViewList = () => {\n    let title = 'Reimbursement Claim'\n    // const _params = {\n    //   category: viewList.category,\n    //   limit: viewList.limit,\n    //   page: viewList.page,\n    //   search: viewList.search,\n    //   sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`\n    // }\n    setViewList({ ...initialValue, show: true, title })\n    services.getItems({ category: viewList.category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n\n    setViewList({ ...initialValue, show: true, title })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: claims.count, id: 'reimbursement-claims-count' }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claim'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link' onClick={handleOnShowViewList}>\n            View List\n          </Typography>\n        }\n      >\n        <Table stickyHeader size='small'>\n          <TableHead>\n            <TableRow>\n              {columns.map(item => (\n                <TableCell key={item.id} id={`rmc-${item.id}`}>\n                  {item.name}\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={`rmc-claim-list-${index}`}>\n                <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n                <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name |\n                  ''} ${item.member.last_name}`}</TableCell>\n                <TableCell id={`rmc-view-claim-${index}`}>\n                  <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                    <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                      View\n                    </Typography>\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        id='reimbursement-claims'\n        columns={columns}\n        searchTextPlaceHolder='Search for claim number, date or facility name'\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        body={_data =>\n          _data.map((item, index) => (\n            <TableRow key={`rmc-claim-list-${index}`}>\n              <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n              <TableCell id={`rmc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n              <TableCell id={`rmc-account-no-${index}`}>{item.member.account_number}</TableCell>\n              <TableCell id={`rmc-member-name-${index}`}>{`${item.member.first_name} ${item.member.middle_name | ''} ${\n                item.member.last_name\n              }`}</TableCell>\n              <TableCell id={`rmc-view-claim-${index}`}>\n                <Link to={`/claims/reimbursement/${item.claim_number}`}>\n                  <Typography variant='caption' className='text-link underline' id={`view-claim-${index}`}>\n                    View\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/Tiles/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/Tiles/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/Tiles/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/Tiles/ReturnedEscalatedClaimsTile'\nimport RejectedClaimsTile from './../../../Components/Tiles/RejectedClaimsTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ReconciledClaimsTile from './../../../Components/Tiles/ReconciledClaimsTile'\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from './../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from './../../../Components/Tiles/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <RejectedClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ReconciledClaimsTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              {...props}\n            />\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[1, 2].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from './../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\nimport Dashboard from './../Components/ClaimsVerifierSupervisor/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Reports\nimport PaymentRequestReport from '../Components/Reports/PaymentRequestReport/PaymentRequestReport'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  assigned: {\n    text: 'For Adjudication'\n  },\n  view: {\n    text: 'View'\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    communication: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 100000000,\n          other_types: 100000000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_ANALYST'], validate: false },\n      message:\n        'Are you sure you want to submit the Claim to the selected Claim Analyst? This Claim will be sent to the assigned Claim Analyst for processing.'\n    }\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route\n        path='/claims/:claim_number/analyze'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n            {...props}\n            permissions={forAdjudicationPermissions}\n            ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n          />\n        )}\n      />\n\n      <Route path='/payment-request-report' exact render={() => <PaymentRequestReport />} />\n\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n\n      <Route\n        path='/claims/reconciled/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n            {...props}\n            permissions={forReconciledPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/rejected/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","import instance from './../instance'\nconst axios = instance('/c/cm')\n\nexport default class ClaimsManagerServices {\n  static getBundleCount () {\n    return axios({\n      url: `/payment-requests/submitted/count`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedPaymentRequest (params) {\n    return axios({\n      url: `/payment-requests/submitted`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClaims (params) {\n    const { bundle_number, batch_number } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims`,\n      method: 'GET'\n    })\n  }\n\n  static overrideClaims (params) {\n    const { bundle_number, batch_number, ...others } = params\n    return axios({\n      url: `/payment-requests/${bundle_number}/${batch_number}/claims/override`,\n      method: 'POST',\n      params: { others }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n// import Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport ClaimsForApprovalTile from './../../../Components/Tiles/ClaimsForApprovalTile'\nimport BatchAndEncoderTile from './../../../Components/Tiles/BatchAndEncoderTile'\nimport ForReconciliationClaimsTile from '../../../Components/Tiles/ForReconciliationClaimsTile'\nimport MedicalCollectiblesTile from '../../../Components/Tiles/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../../Components/Tiles/ReimbursementClaimTile'\nimport SubmittedPrSupervisorTile from './../../../Components/Tiles/SubmittedPrSupervisorTile'\nimport ClaimsEncoderTile from './../../../Components/Tiles/ClaimsEncoderTile'\nimport ClaimsVerifierTile from './../../../Components/Tiles/ClaimsVerifierTile'\nimport ForPaymentRequestTile from './../../../Components/Tiles/ForPaymentRequestTile'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingSupervisoryServices from 'Services/Api/BatchEncodingSupervisoryServices'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncoderSupervisorServices from 'Services/Api/ClaimsEncoderSupervisorServices/ClaimsEncoderSupervisorServices'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ lg: 12 }} title='Items to Monitor'>\n            <ClaimsForApprovalTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <ForPaymentRequestTile services={PaymentRequestServices} mTitle='Payment Request for Approval' {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.MedicalCollectiblesServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            <ForReconciliationClaimsTile services={ClaimsReconServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} showTitle={false}>\n            <ReimbursementClaimTile services={ClaimsVerifierSupervisorServices} {...props} />\n            <SubmittedPrSupervisorTile services={ClaimsManagerServices} {...props} />\n          </TaskTray>\n          <TaskTray sizes={{ lg: 12 }} title='Claims Processor'>\n            <BatchAndEncoderTile services={BatchEncodingSupervisoryServices} {...props} />\n            <ClaimsEncoderTile services={ClaimsEncoderSupervisorServices} {...props} />\n            <ClaimsVerifierTile services={ClaimsVerifierSupervisorServices} {...props} />\n          </TaskTray>\n        </Grid>\n        <Grid item className={classes['ticket-list']}>\n          <div className={classes.wrapper}>\n            <div className={classes.float}>\n              <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/batches?category=open', caption: '' }}>\n                <Table size='small'>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticket #</TableCell>\n                      <TableCell>Date</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>2334324343</TableCell>\n                        <TableCell>08/12/2019</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TicketList>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  note: Joi.string()\n    .trim()\n    .label('Notes')\n    .messages({ 'string.empty': `Please enter Notes.` })\n    .required(),\n  assignee: Joi.string()\n    .trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// style\nimport classes from './AssignDialog.module.scss'\n\n// Validator\nimport ReassignValidator from './ReassignValidator'\n\nexport default function AssignDialog (props) {\n  const { dialog, setDialog, dropDownUsers = [], handleOnSubmitReassign } = props\n\n  const [reassign, setReassign] = React.useState({\n    user_id: '',\n    note: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    note: '',\n    assignee: ''\n  })\n\n  const validate = () => {\n    const { error } = ReassignValidator({\n      note: reassign.note,\n      assignee: reassign.user_id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  const handleOnSubmit = () => {\n    if (validate()) return\n    setDialog(state => ({ ...state, alert: true }))\n  }\n\n  const handleOnCancel = () => {\n    setReassignErrors({\n      note: '',\n      assignee: ''\n    })\n\n    setReassign({\n      note: '',\n      user_id: ''\n    })\n    setDialog(state => ({ ...state, assign: false }))\n  }\n\n  const handleOnChange = event => {\n    const value = event.target.value\n    setReassign(state => ({ ...state, note: value }))\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Dialog\n          open={dialog.assign}\n          onClose={() => setDialog(state => ({ ...state, assign: false }))}\n          PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          className={classes['reassign']}\n          fullWidth\n          maxWidth='md'\n          aria-labelledby='customized-dialog-title'\n        >\n          <DialogTitle disableTypography className={classes['header-container']}>\n            <div className={classes.header}>\n              <Typography variant='h6' className={classes.title}>\n                Notes\n              </Typography>\n              <IconButton\n                aria-label='close'\n                className={classes.button}\n                onClick={() => setDialog(state => ({ ...state, assign: false }))}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </DialogTitle>\n\n          <DialogContent dividers className={classes['content']}>\n            <div className={classes.input}>\n              <TextField\n                className={classes.comment}\n                multiline\n                rows={5}\n                id='assign-note'\n                value={reassign.note}\n                autoFocus\n                fullWidth\n                placeholder='Compose a Note'\n                onChange={event => handleOnChange(event)}\n                error={reassignErrors.note}\n              />\n            </div>\n            <div className={classes.footer}>\n              <div className={classes.assign}>\n                <Typography variant='subtitle2' className={classes.to}>\n                  {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                </Typography>\n                <DropDown\n                  id='reassign-to'\n                  items={dropDownUsers}\n                  value={reassign.user_id}\n                  onChange={event => {\n                    setReassign(state => ({ ...state, user_id: event.target.value }))\n                  }}\n                  error={reassignErrors.assignee}\n                  disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                />\n              </div>\n\n              <div className={classes.action}>\n                <Button\n                  onClick={() => handleOnCancel()}\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  id='dialog-cancel'\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={() => handleOnSubmit()}\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  id='dialog-submit'\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={dialog.alert}\n          onClose={() => setDialog(state => ({ ...state, alert: false }))}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n          maxWidth='xs'\n        >\n          <DialogTitle className={classes['alert-title']}>\n            <Typography variant='inherit'>Assign Claim to Claims Analyst/Verifier Supervisor:</Typography>\n          </DialogTitle>\n\n          <DialogContent className={classes['message-content']}>\n            <div className={classes['message']}>\n              <Typography className={classes['message-child']} variant='body1'>\n                Are you sure you want to submit the Claim to the selected Claims Analyst/Verifier Supervisor?\n              </Typography>\n              <Typography variant='body1'>\n                This Claim will be sent to the assigned Claims Analyst/Verifier Supervisor for processing.\n              </Typography>\n            </div>\n          </DialogContent>\n\n          <DialogActions className={classes['footer-action']}>\n            <React.Fragment>\n              <Button\n                onClick={() => setDialog(state => ({ ...state, alert: false }))}\n                variant='contained'\n                color='primary'\n                className='button-negative'\n                id='alert-btn-cancel'\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  handleOnSubmitReassign(reassign)\n                  setDialog(state => ({ ...state, alert: false, assign: false }))\n                  setReassign({\n                    note: '',\n                    user_id: ''\n                  })\n                }}\n                variant='contained'\n                color='primary'\n                id='alert-btn-submit'\n                className='button-positive'\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../ClaimsDetailsEncoder/BatchPage/Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../ClaimsDetailsEncoder/BatchPage/Components/ClaimList/ClaimList'\n// import AssignDialiog from './../'\nimport AssignDialog from './Components/AssignDialog/AssignDialog'\n// import ProviderSchedule from './Components/ProviderSchedule/ProviderSchedule'\n\n// import Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchDetailsPage.module.scss'\n\nexport default function BatchDetailsPage (props) {\n  const { ApiService, UserManagementApi } = props\n  const [details, setDetails] = React.useState()\n  const [batch_number, setBatchNumber] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [claims, setClaim] = React.useState([])\n  const [forOverride, setForOverride] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [selectStatus, setSelectStatus] = React.useState(false)\n  const [dialog, setDialog] = React.useState({\n    assign: false,\n    alert: false\n  })\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    const { batch_number, bundle_number } = props.match.params\n    setBatchNumber(batch_number)\n    setBundleNumber(bundle_number)\n\n    PageTitleService(`Batch No. ${batch_number}`)\n    BreadcrumbsService.setSelectedItems([\n      'dashboard',\n      'submittedPaymentRequest',\n      `submittedSpecificPaymentRequest:${bundle_number}`,\n      `specificBatch:${batch_number}`\n    ])\n    getBatchAndClaims({ batch_number, bundle_number })\n  }, [props.match.params.batch_number, props.match.params.bundle_number])\n\n  const getBatchAndClaims = args => {\n    const { batch_number, bundle_number } = args\n    Promise.all([\n      ApiService.getBatch({ bundle_number, batch_number }),\n      ApiService.getApprovedClaims({ bundle_number, batch_number })\n    ]).then(res => {\n      const [batchRes, claimsRes] = res\n\n      const { data: batch } = batchRes.data\n      const { result: claims } = claimsRes.data.data\n\n      setClaimCount(claims.length)\n      setClaim(claims)\n      setDetails(batch)\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleClickOverride = () => {\n    initDropdownUsers()\n    setDialog(state => ({ ...state, assign: true }))\n  }\n\n  const initDropdownUsers = () => {\n    Promise.all([UserManagementApi.getClaimsAnalyst(), UserManagementApi.getClaimsVerifierSupervisors()]).then(res => {\n      const [analystRes, supervisorRes] = res\n      const data = [...analystRes.data, ...supervisorRes.data]\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n\n      setDropDownUsers(users)\n    })\n  }\n\n  const handleOnSubmitOverride = args => {\n    LoadingService.loading(true)\n    const { user_id, note } = args\n    ApiService.overrideClaims({\n      bundle_number,\n      batch_number,\n      claims: forOverride.claim_numbers,\n      _id: user_id,\n      note\n    }).then(res => {\n      getBatchAndClaims({ batch_number, bundle_number })\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} reassign_notes={false} />\n          <ClaimListHeader isManager count={claimCount} />\n          <ClaimList\n            isManager\n            items={claims}\n            onItemClick={args => {}}\n            actionItems={forOverride}\n            setActionItems={setForOverride}\n            setSelected={setSelected}\n            selectStatus={selectStatus}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {!selectStatus ? (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => setSelectStatus(true)}\n                  >\n                    Override Claim\n                  </Button>\n                  <Button\n                    id='close'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push(`/payment-request/${bundle_number}/submitted`)}\n                  >\n                    Close\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Button\n                    id='override-claim'\n                    variant='contained'\n                    color='primary'\n                    className='button-neutral'\n                    onClick={() => handleClickOverride()}\n                    disabled={forOverride.claim_numbers.length < 1}\n                  >\n                    Override\n                  </Button>\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => {\n                      setSelectStatus(false)\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AssignDialog\n        handleOnSubmitReassign={handleOnSubmitOverride}\n        dropDownUsers={dropDownUsers}\n        dialog={dialog}\n        setDialog={setDialog}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Radio from '@material-ui/core/Radio'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Services\nimport ClaimsMaintainerServices from 'Services/Api/ClaimsMaintainerServices'\n\n// Styles\nimport classes from './MaintenancePage.module.scss'\n\n// Constants\nconst lookups = {\n  hospital_items: { on: 'hospital-item-list', field: 'hospital-item-list' },\n  reason_covered: { on: 'maintenance', field: 'covered-reason' },\n  reason_charging: { on: 'maintenance', field: 'charging-reason' },\n  reason_return: { on: 'maintenance', field: 'return-reason' },\n  reason_reject: { on: 'maintenance', field: 'reject-reason' },\n  claims_source: { on: 'maintenance', field: 'claims-source' },\n  claim_sub_type: { on: 'maintenance', field: 'claims-sub-type' },\n  claim_sub_sub_type: { on: 'maintenance', field: 'claims-sub-sub-type' }\n}\nconst initialValue = {\n  show: false,\n  title: '',\n  count: 0,\n  search: '',\n  limit: 10,\n  page: 1,\n  data: [],\n  orderBy: '',\n  order: true,\n  header: 'Hospital Item List',\n  filter: {description: {value: ''}, status: {value: ''}}\n}\nconst initialItem = {\n  description: '',\n  status: 'Active',\n  code: '',\n  active: true,\n  deactivate: false\n}\nlet columns = [\n  { name: 'Description', sortField: 'description', id: 'description', match: 'any' },\n  { name: 'Status', sortField: 'status', id: 'status', match: 'start' }\n]\nexport default function MaintenancePage (props) {\n  const [data, setData] = React.useState(initialValue)\n  const [lookup, setLookup] = React.useState(lookups.hospital_items)\n  const [debounce, setDebounce] = React.useState(null)\n  const [item, setItem] = React.useState(initialItem)\n  const [showAddItem, setShowAddItem] = React.useState({\n    show: false,\n    mode: 'add'\n  })\n  const [showAlert, setShowAlert] = React.useState({\n    open: false,\n    message: '',\n    onOk: '',\n    okLabel: 'Okay',\n    cancelLabel: ''\n  })\n\n  React.useEffect(() => {\n    PageTitleService('Claims Maintenance')\n    BreadcrumbsService.setSelectedItems(['maintenance'])\n  }, [])\n\n  React.useEffect(() => {\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: {...data, field: lookup.field} }).then(({ data: res }) => {\n      const { results, count } = res.data\n      setData(state => ({...state, data: results, count}))\n    })\n  }, [lookup])\n\n  const handleOnChange = params => {\n    const _params = {\n      limit: data.limit,\n      page: data.page,\n      search: data.search,\n      sort: `${data.orderBy}|${data.order ? 'desc' : 'asc'}`,\n      filter: data.filter,\n      field: lookup.field,\n      ...params\n    }\n\n    ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setData(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const isActive = args => {\n    return (lookup && lookup.field && args === lookup.field ? 'active' : '')\n  }\n\n  const onClickHospitalItem = () => {\n    setLookup(lookups.hospital_items)\n    setData({...data, header: 'Hospital Item List', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n  const onClickNotCoveredReason = () => {\n    setLookup(lookups.reason_covered)\n    setData({...data, header: 'Not Covered Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickChargingReason = () => {\n    setLookup(lookups.reason_charging)\n    setData({...data, header: 'Reasons For Charging Member', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSource = () => {\n    setLookup(lookups.claims_source)\n    setData({...data, header: 'Claim Source', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickReturnReason = () => {\n    setLookup(lookups.reason_return)\n    setData({...data, header: 'Reimbursement Return Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickRejectReason = () => {\n    setLookup(lookups.reason_reject)\n    setData({...data, header: 'Reimbursement Reject Reasons', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubType = () => {\n    setLookup(lookups.claim_sub_type)\n    setData({...data, header: 'Claim Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const onClickClaimSubSubType = () => {\n    setLookup(lookups.claim_sub_sub_type)\n    setData({...data, header: 'Claim Sub Sub-Type', filter: {description: {value: ''}, status: {value: ''}}})\n  }\n\n  const handleOnSort = orderBy => e => {\n    setData(p => ({ ...p, orderBy, order: !data.order }))\n    handleOnChange({ sort: `${orderBy}|${data.order ? 'asc' : 'desc'}` })\n  }\n  const handleColumnFiltering = args => {\n    const { field, value, match } = args\n    setData(p => ({ ...p, filter: { ...p.filter, [field]: { value, match } } }))\n    handleOnChange({ filter: { ...data.filter, [field]: { value, match } }, page: 1 })\n  }\n\n  const handleOnSaveItem = () => {\n    LoadingService.loading(true)\n    const initialLookup = lookup\n    const _params = {\n      limit: 1,\n      page: 1,\n      search: {\n        description: item.description,\n        code: item.code\n      },\n      field: lookup.field\n    }\n    const handleOnOk = () => {\n      setShowAlert(state => ({ ...state, open: false }))\n    }\n\n    if (!item.description.trim()) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Description details is empty. Please input the description details.',\n          onOk: handleOnOk,\n          okLabel: 'Okay',\n          cancelLabel: ''\n        }))\n      LoadingService.loading(false)\n    } else {\n      ClaimsMaintainerServices.lookups({ on: lookup.on, params: _params }).then(({ data: res }) => {\n        const { results } = res.data\n        if (results.length > 0) {\n          setShowAlert(state =>\n            ({\n              ...state,\n              open: true,\n              message: 'Description details already exists. Please change the description details encoded.',\n              onOk: handleOnOk,\n              okLabel: 'Okay',\n              cancelLabel: ''\n            }))\n        } else {\n          if (showAddItem.mode === 'add') {\n            ClaimsMaintainerServices.storeLookups({ on: lookup.on, data: item, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          } else if (showAddItem.mode === 'edit') {\n            ClaimsMaintainerServices.updateLookups({ on: lookup.on, data: item, code: item.code, params: { field: lookup.field } }).then(res => {\n              setItem(initialItem)\n              setLookup(false)\n              setLookup(initialLookup)\n              setShowAddItem({...showAddItem, show: false})\n              LoadingService.loading(false)\n            })\n          }\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnEditItem = item => {\n    setShowAddItem({...showAddItem, show: true, mode: 'edit'})\n    setItem({\n      description: item.description,\n      code: item.code,\n      status: item.status,\n      active: item.status === 'Active',\n      deactivate: item.status === 'Inactive'\n    })\n  }\n\n  const handleOnCancelItem = () => {\n    if (item.description) {\n      setShowAlert(state =>\n        ({\n          ...state,\n          open: true,\n          message: 'Are you sure you want to discard your changes?',\n          onOk: () => {\n            setShowAlert(alert => ({...alert, open: false}))\n            setShowAddItem(show => ({...show, show: false}))\n            setItem(item => ({...item, description: ''}))\n          },\n          okLabel: 'Yes',\n          cancelLabel: 'No'\n        }))\n    } else {\n      setShowAddItem({...showAddItem, show: false})\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='hospital-item-list' className={`button-positive ${classes[isActive('hospital-item-list')]}`} onClick={onClickHospitalItem} >\n          Hospital Item List\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='not-covered-reason' className={`button-positive ${classes[isActive('covered-reason')]}`} onClick={onClickNotCoveredReason} >\n          Not Covered Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reason-for-charging' className={`button-positive ${classes[isActive('charging-reason')]}`} onClick={onClickChargingReason} >\n          Reason for Charging Member\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-source' className={`button-positive ${classes[isActive('claims-source')]}`} onClick={onClickClaimSource} >\n          Claim Source\n        </Button>\n      </div>\n\n      <div className={classes['button-parent']}>\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-return-reason' className={`button-positive ${classes[isActive('return-reason')]}`} onClick={onClickReturnReason} >\n          Reimbursement Return Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='reimbursement-reject-reason' className={`button-positive ${classes[isActive('reject-reason')]}`} onClick={onClickRejectReason} >\n          Reimbursement Reject Reason\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-type' className={`button-positive ${classes[isActive('claims-sub-type')]}`} onClick={onClickClaimSubType} >\n          Claim Sub-Type\n        </Button>\n\n        <Button disabled={showAddItem.show} variant='contained' color='primary' id='claim-sub-sub-type' className={`button-positive ${classes[isActive('claims-sub-sub-type')]}`} onClick={onClickClaimSubSubType} >\n          Claim Sub Sub-Type\n        </Button>\n      </div>\n\n      <div className={classes.header}>\n        <div className={classes['header-wrapper']}>\n          <span className={classes['header-text']}> {data.header} </span>\n          <Button disabled={showAddItem.show} variant='contained' color='primary' id='add-item' className='button-positive' onClick={() => setShowAddItem({...showAddItem, show: true, mode: 'add'})} >\n           + Add\n          </Button>\n        </div>\n      </div>\n\n      {showAddItem.show && <div className={classes['add-item-root']}>\n        <div className={classes.wrapper}>\n          <span className={classes['header-text']}>\n            Description:\n          </span>\n          <div className={classes['text-wrapper']}>\n            <TextField\n              id={'description-field'}\n              value={item.description}\n              onChange={event => { setItem({...item, description: event.target.value}) }}\n            />\n          </div>\n          <div className={classes['radio-buttons']}>\n            <div className={classes.activate}>\n              Active:\n              <Radio\n                color='primary'\n                id={'activate'}\n                checked={item.active}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Active',\n                      active: true,\n                      deactivate: false})} />\n            </div>\n            <div className={classes.deactivate}>\n              Deactivate:\n              <Radio\n                color='primary'\n                id={'deactivate'}\n                checked={item.deactivate}\n                onClick={() =>\n                  setItem(\n                    {...item,\n                      status: 'Inactive',\n                      active: false,\n                      deactivate: true})} />\n            </div>\n          </div>\n          <div className={classes['button-wrapper']}>\n            <Button variant='contained' color='primary' id='add-item' className='button-positive' onClick={handleOnSaveItem} >\n              Save\n            </Button>\n            <Button variant='contained' color='primary' id='add-item' className='button-negative' onClick={handleOnCancelItem} >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>}\n\n      {!showAddItem.show && <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <React.Fragment>\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField} id={`sort-${headCell.id}`}>\n                    <TableSortLabel\n                      active={data.orderBy === headCell.sortField}\n                      direction={data.order ? 'asc' : 'desc'}\n                      onClick={handleOnSort(headCell.sortField)}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    <TextField\n                      value={data.filter[headCell.sortField].value || ''}\n                      onChange={event => {\n                        const search = event.target.value\n                        setData(p => ({ ...p, filter: { ...p.filter, [headCell.sortField]: { value: search, match: headCell.match } } }))\n                        clearTimeout(debounce)\n                        setDebounce(\n                          setTimeout(() => {\n                            handleColumnFiltering({\n                              field: headCell.sortField,\n                              value: search,\n                              match: headCell.match\n                            })\n                          }, 500)\n                        )\n                      }}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell key={'action'} id={`sort-action`} />\n              </TableRow>\n            </React.Fragment>\n\n          }\n          body={data && data.data.map((item, index) => (\n            <TableRow key={index}>\n              <TableCell id={`item-description-${index}`}>{item.description}</TableCell>\n              <TableCell id={`item-status-${index}`}>{item.status}</TableCell>\n              <TableCell align={'center'}>\n                <Typography variant='caption' className={`text-link underline`} id={`submmited-pr-${index}`} onClick={() => handleOnEditItem(item)} >\n                  Edit\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={data && data.count}\n          page={data && data.page}\n          limit={data && data.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={handleOnChange}\n        />\n      </div>}\n      <Alert\n        open={showAlert.open}\n        message={showAlert.message}\n        okLabel={showAlert.okLabel}\n        cancelLabel={showAlert.cancelLabel}\n        onCancel={() => setShowAlert(alert => ({...alert, open: false}))}\n        onOk={showAlert.onOk}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Batch Encoder\nimport BundlePage from './../Components/BatchEncoder/BundlePage/BundlePage'\n\n// Pages of Batch Encoder Supervisor\nimport CreatedBundlesPage from './../Components/BatchEncoderSupervisor/CreatedBundlesPage/CreatedBundlesPage'\n\n// Pages of Recon User\nimport ClaimsViewer from './../Components/ClaimsViewer'\n\n// Pages of Claims Details Encoder Supervisor\nimport CreatedBatchesPage from './../Components/ClaimsDetailsEncoderSupervisor/CreatedBatchesPage/CreatedBatchesPage'\nimport BatchePage from './../Components/ClaimsDetailsEncoderSupervisor/BatchPage/BatchPage'\n\n// Pages of Claims Verifier Supervisor\nimport ClaimsList from '../Components/ClaimsVerifierSupervisor/ClaimsList/ClaimsList'\n\n// Pages of PR Supervisor\nimport SubmittedPaymentRequestPage from './../Components/PaymentRequest/SubmittedPaymentRequestPage/SubmittedPaymentRequestPage'\nimport SubmittedPaymentRequestList from './../Components/PaymentRequestSupervisor/SubmittedPaymentRequestList/SubmittedPaymentRequestList'\n\n// Pages of Claim Manager\nimport Dashboard from '../Components/ClaimsManager/Dashboard/Dashboard'\n\n// Pages of Payment Request Officer\nimport PaymentRequestPage from '../Components/PaymentRequest/PaymentRequestPage/PaymentRequestPage'\n\n// ClaimsManager\nimport BatchDetailsPage from '../Components/ClaimsManager/BatchDetailsPage/BatchDetailsPage'\n\n// Maintenance Page\nimport MaintenancePage from '../Components/ClaimsManager/MaintenancePage/MaintenancePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { generateSideBar, generateBreadCrumbs, generateRoutes } from './Reports'\n\n// API Services\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport ClaimsManagerServices from 'Services/Api/ClaimsManagerServices/ClaimsManagerServices'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Maintenance',\n    icon: 'tools',\n    to: '/claims/maintenance'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => `Bundle No. ${data}`,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  },\n  createdBundles: {\n    text: data => `Created Bundles by Batch Encoder ${data}`,\n    to: data => `/batch-encoder-work/${data}`\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  },\n  reimbursement: {\n    text: 'Reimbursement'\n  },\n  assigned: {\n    text: data => 'Created Batches',\n    to: data => `/batches/assigned/${data}`\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  },\n  submittedPaymentRequest: {\n    text: 'Submitted Payment Request',\n    to: `/payment-requests/list`\n  },\n  maintenance: {\n    text: 'Claims Maintenance',\n    to: '/claims/maintenance'\n  },\n  submittedSpecificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}/submitted`\n  },\n  view: {\n    text: 'View'\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'], validate: false }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst prManagerPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    close: true\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst reviewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: {\n      visible: true,\n      enabled: true\n    },\n    letter_of_advice: {\n      visible: true,\n      enabled: true\n    }\n  }\n}\n\nconst rejectedPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} },\n    close: true\n  }\n}\n\nconst viewPermission = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nexport default ({ userRole }) => {\n  SideBarService.setItems([...sideBarItems, generateSideBar(userRole)])\n  BreadcrumbsService.setItems({ ...breadcrumbs, ...generateBreadCrumbs(userRole) })\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/batch-encoder-work/:user_id' exact component={CreatedBundlesPage} />\n      <Route path='/batch-encoder-work/:user_id/bundles/:bundle_number' exact component={BundlePage} />\n      <Route path='/batches/assigned/:_id' exact component={CreatedBatchesPage} />\n      <Route path='/batches/assigned/:_id/:_batchNumber' exact component={BatchePage} />\n      <Route path='/list/:user_id' exact component={ClaimsList} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n\n      {/* PR Supervisor Pages */}\n      <Route\n        path='/payment-request/:bundle_number/submitted'\n        exact\n        render={props => <SubmittedPaymentRequestPage isManager {...props} />}\n      />\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number'\n        exact\n        render={props => (\n          <BatchDetailsPage ApiService={ClaimsManagerServices} UserManagementApi={UserManagementServices} {...props} />\n        )}\n      />\n      <Route path='/payment-requests/:pr_officer/list' exact component={SubmittedPaymentRequestList} />\n\n      {/* Routes for Claim Viewer */}\n      <Route\n        path='/payment-request/:bundle_number/submitted/:batch_number/claim/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={[\n              'dashboard',\n              'submittedPaymentRequest',\n              `submittedSpecificPaymentRequest:${props.match.params.bundle_number}`,\n              `specificBatch:${props.match.params.batch_number}`,\n              'claims',\n              `specificClaim:${props.match.params.claim_number}`\n            ]}\n            {...props}\n            isManager\n            permissions={prManagerPermissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/for-approval/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n            {...props}\n            permissions={forApprovalPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/reimbursement/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reimbursement']}\n            {...props}\n            permissions={rejectedPermissions}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/recon/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n            {...props}\n            permissions={permissions}\n            ApiService={ClaimsReconServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/review/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={reviewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n\n      <Route\n        path='/claims/view/:claim_number'\n        exact\n        render={props => (\n          <ClaimsViewer\n            breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'view']}\n            {...props}\n            permissions={viewPermission}\n            ApiService={ClaimsVerifierSupervisorServices}\n          />\n        )}\n      />\n      {/* End of Routes for Claim Viewer  */}\n\n      <Route path='/claims/maintenance' exact component={MaintenancePage} />\n\n      {/* REPORTS */}\n      {generateRoutes(userRole)}\n    </Switch>\n  )\n}\n","const roles = {\n  BATCH_ENCODER: ['BATCH_ENCODER'],\n  BATCH_ENCODER_SUPERVISOR: ['BATCH_ENCODER_SUPERVISOR'],\n  CLAIMS_DETAILS_ENCODER: ['CLAIMS_ENCODER', 'CLAIMS_DETAILS_ENCODER'],\n  CLAIMS_DETAILS_ENCODER_SUPERVISOR: ['CLAIMS_DETAILS_ENCODER_SUPERVISOR'],\n  CLAIMS_ANALYST: ['CLAIMS_ANALYST', 'CLAIMS_VERIFIER'],\n  PR_OFFICER: ['PR_OFFICER'],\n  PR_OFFICER_SUPERVISOR: ['PR_OFFICER_SUPERVISOR'],\n  MEDICAL_CONSULTANT: ['MEDICAL_CONSULTANT'],\n  CLAIMS_RECON: ['CLAIMS_RECON'],\n  CLAIMS_VERIFIER_SUPERVISOR: ['CLAIMS_VERIFIER_SUPERVISOR', 'CLAIMS_SUPERVISOR'],\n  CLAIMS_MANAGER: ['CLAIMS_MANAGER']\n}\n\nconst mapRoles = role => {\n  for (const r in roles) {\n    if (roles[r].includes(role)) return r\n  }\n}\n\nexport { mapRoles, roles }\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  client: {\n    registered_name: [],\n    corporate_account_no: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  // value of suggestion first render without calling action (temp) reason: action.for is undefined on first render if there's a selector on component\n  // tried to solved by useEffect but failed since useEffect will render after component's rendered\n  if (!action.for) return initialState\n  // value of suggestion calling action (temp) if not equal to BATCH_ENCODING (when calling an action)\n  else if (action.for !== constants.for.BATCH_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { combineReducers } from 'redux'\n\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nexport default combineReducers({\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  specialization: {\n    description: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  given_diagnosis: [],\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst grandTotalReducer = (state = 0, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  notes: [],\n  assignee: { id: '', name: '' },\n  note: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_NOTES':\n      return initialValue\n\n    case 'SET_REASSIGN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ENCODING) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\nimport reassignReducer from './reassignReducer'\nimport errorReducer from './errorReducer'\n\nexport default combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  error: errorReducer,\n  dentalProcedure: dentalProcedureReducer,\n  reassign: reassignReducer\n})\n","import constants from './../../contants'\n\nconst claimReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","import constants from './../../contants'\n\nconst claimTypeReducer = (state = '', action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","import constants from './../../contants'\n\nconst initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  specialization: {\n    description: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  given_diagnosis: [],\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import constants from './../../contants'\n\nconst dropDownReducer = (state = {}, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    diagnosis_description: '',\n    diagnosis_code: '',\n    diagnosis_given_diagnosis: '',\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: '',\n    amount_due_from_client: 0,\n    reason_for_charging_client: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst inquiryReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_INQUIRY_MESSAGES':\n      return initialValue\n\n    case 'ADD_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_INQUIRY_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_INQUIRY_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default inquiryReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","import constants from './../../contants'\n\nconst initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","import constants from './../../contants'\n\nconst initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import constants from './../../contants'\n\nconst initialValue = {\n  note: ''\n}\n\nconst returnReducer = (state = initialValue, action) => {\n  if (action.for !== constants.for.CLAIMS_ANALYSIS) return state\n\n  switch (action.type) {\n    case 'RESET_RETURN_NOTES':\n      return initialValue\n\n    case 'SET_RETURN_NOTES':\n      return (() => {\n        return {\n          ...state,\n          note: action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default returnReducer\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport inquiryReducer from './inquiryReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\nimport returnReducer from './returnReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  inquiries: inquiryReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer,\n  return: returnReducer\n})\n\nexport default reducers\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport BatchEncoding from './BatchEncoding'\nimport ClaimsEncoding from './ClaimsEncoding'\nimport ClaimsAnalysis from './ClaimsAnalysis'\n\nconst reducers = combineReducers({\n  BatchEncoding,\n  ClaimsEncoding,\n  ClaimsAnalysis\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './Routes/BatchEncoder'\nimport BatchEncoderSupervisorRoutes from './Routes/BatchEncoderSupervisor'\nimport ClaimsDetailsEncoderRoutes from './Routes/ClaimsDetailsEncoder'\nimport ClaimsDetailsEncoderSupervisorRoutes from './Routes/ClaimsDetailsEncoderSupervisor'\nimport ClaimsAnalystRoutes from './Routes/ClaimsAnalyst'\nimport PaymentRequestRoutes from './Routes/PaymentRequest'\nimport PaymentRequestSupervisorRoutes from './Routes/PaymentRequestSupervisor'\nimport MedicalConsultantRoutes from './Routes/MedicalConsultant'\nimport ClaimsReconRoutes from './Routes/ClaimsRecon'\nimport ClaimsVerifierSupervisorRoutes from './Routes/ClaimsVerifierSupervisor'\nimport ClaimsManagerRoutes from './Routes/ClaimsManager'\n\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Constants\nimport { mapRoles } from './Constant/ClaimUsers'\n\n// Store\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(mapRoles(role))\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = props => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' render={() => BatchEncoderRoutes(props)} />\n  }\n\n  return (\n    <Provider store={Store}>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic({ userRole })}\n          {userRole === 'BATCH_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => BatchEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_DETAILS_ENCODER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsDetailsEncoderSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' render={() => ClaimsAnalystRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' render={() => PaymentRequestRoutes({ userRole })} />}\n\n          {userRole === 'PR_OFFICER_SUPERVISOR' && (\n            <Route path='/' render={() => PaymentRequestSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' render={() => MedicalConsultantRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' render={() => ClaimsReconRoutes({ userRole })} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && (\n            <Route path='/' render={() => ClaimsVerifierSupervisorRoutes({ userRole })} />\n          )}\n\n          {userRole === 'CLAIMS_MANAGER' && <Route path='/' render={() => ClaimsManagerRoutes({ userRole })} />}\n        </Switch>\n      )}\n    </Provider>\n  )\n}\n"],"sourceRoot":""}