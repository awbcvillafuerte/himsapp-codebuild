{"version":3,"sources":["Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacy.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Footer/Footer.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","SharedComponents/DropDown/DropDown.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ICDTextField/ICDTextField.module.scss","Pages/Protected/Claims/ClaimsVerifierSupervisor/Pages/Dashboard/Dashboard.module.scss","SharedComponents/AutoComplete/AutoComplete.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/BaseDetails/BaseDetails.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.module.scss","SharedComponents/TextField/CustomTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.module.scss","SharedComponents/TextFieldSubmit/TextFieldSubmit.module.scss","SharedComponents/TextFieldNumber/TextFieldNumber.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundlePage.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/CptTextField/CptTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemTextField/HospitalItemTextField.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DentalProcedureForm/DentalProcedureForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.module.scss","Pages/LoginPage/LoginPage.module.scss","Pages/Protected/Claims/BatchEncoder/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Exclusions/Exclusions.module.scss","Pages/Protected/Claims/PaymentRequest/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/MedicalConsultant/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsReconciliation/Components/ViewList/ViewList.module.scss","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ViewList/ViewList.module.scss","SharedComponents/404/Error.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisList.module.scss","SharedComponents/DashboardRedirect/Error.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimListHeader/ClaimListHeader.module.scss","SharedComponents/CustomTable/CustomTable.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Benefits.module.scss","Constant/images/images.js","SharedComponents/HeaderComponent/HeaderComponent.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchPage/BatchPage.module.scss","Pages/Protected/Claims/ClaimsAnalyst/Pages/Dashboard/Dashboard.module.scss","SharedComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/Claims/PaymentRequest/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/MedicalConsultant/Pages/Dashboard/Dashboard.module.scss","Pages/Protected/Claims/ClaimsReconciliation/Pages/Dashboard/Dashboard.module.scss","../node_modules/react-pdf/node_modules/pdfjs-dist/build sync","SharedComponents/IcdCptStatus/IcdCptStatus.module.scss","SharedComponents/LoadingComponent/LoadingComponent.module.scss","SharedComponents/PageTitleComponent/PageTitleComponent.module.scss","SharedComponents/TaskTrayComponent/TaskTrayComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/TableFooterComponent/TableFooterComponent.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.module.scss","Pages/Protected/Claims/Components/ReimbursementInfoComponent/ReimbursementInfoComponent.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Header/Header.module.scss","Pages/Protected/Protected.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/Utilization.module.scss","SharedComponents/SnackbarComponent/SnackbarComponent.module.scss","SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimList/ClaimList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ToothNumber/ToothNumber.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/LimitTable/LimitTable.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BundleDetails/BundleDetails.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BatchList/BatchList.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureList/ProcedureList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ClaimFooter.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/PaymentRequest/Pages/PaymentRequestPage/PaymentRequestPage.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimInPatient/ClaimInPatient.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.module.scss","SharedComponents/PdfViewer2/PdfViewer2.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemList/HospitalItemList.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimEmergency/ClaimEmergency.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/ChatBox.module.scss","FontAwesomeLibrary.js","SharedComponents/TextField/CustomTextField.js","SharedComponents/IcdCptStatus/IcdCptStatus.js","Utilities/GenerateFormData.js","Pages/Protected/Store/actions/pageTitle.js","Pages/Protected/Store/actions/snackbar.js","Pages/Protected/Store/actions/pdf.js","SharedComponents/SnackbarComponent/SnackbarComponent.js","SharedComponents/LoadingComponent/LoadingComponent.js","Pages/Protected/Store/actions/pageLoading.js","SharedComponents/404/404.js","Services/ErrorHandler/exclude.js","Services/ErrorHandler/index.js","Services/Api/instance.js","Services/Api/CommonServices.js","Utilities/IndexedDb2.js","Services/Api/CPT_ICDServices.js","Controllers/ConfigController2.js","Pages/LoginPage/LoginPage.js","SharedComponents/HeaderComponent/HeaderComponent.js","SharedComponents/SideBarComponent/SideBarComponent.js","Pages/Protected/Store/actions/sidebar.js","SharedComponents/PageTitleComponent/PageTitleComponent.js","SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent.js","Pages/Protected/Store/actions/breadcrumbs.js","SharedComponents/PdfViewer2/PdfViewer2.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/TaskTrayComponent/TaskTrayComponent.js","SharedComponents/TicketListComponent/TicketListComponent.js","SharedComponents/Table/Table.js","SharedComponents/SearchTextComponent.js","Utilities/TextFormatter.js","Pages/Protected/Claims/BatchEncoder/Components/ViewList/ViewList.js","Services/Api/BatchEncodingServices.js","Pages/Protected/Claims/BatchEncoder/Pages/Dashboard/Dashboard.js","SharedComponents/AutoComplete/AutoComplete.js","SharedComponents/DatePicker/DatePicker.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/TextFieldNumber/TextFieldNumber.js","Pages/Protected/Claims/BatchEncoder/Components/BundleDetails/BundleDetails.js","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/Alert/Alert.js","Pages/Protected/Claims/BatchEncoder/Components/BatchList/BatchList.js","SharedComponents/DropDown/DropDown.js","Constant/claimTypes.js","Services/ExtractValidationResult.js","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchFormValidator.js","Pages/Protected/Claims/BatchEncoder/Store/actions/batch.js","Pages/Protected/Claims/BatchEncoder/Store/actions/suggestion.js","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchForm.js","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundleValidator.js","Pages/Protected/Claims/BatchEncoder/Pages/BundlePage/BundlePage.js","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundleValidator.js","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundlePage.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/pageTitleReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/bundlesReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/batchReducer.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/BatchEncoder/Store/index.js","Pages/Protected/Claims/BatchEncoder/Store/reducers/index.js","Pages/Protected/Claims/BatchEncoder/Routes.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ViewList/ViewList.js","Services/Api/ClaimsEncodingServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchesPage/BatchesPage.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BatchDetails/BatchDetails.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimListHeader/ClaimListHeader.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimList/ClaimList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/BatchPage/BatchPage.js","Services/Api/CustomerCareServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/claim.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/claimType.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/dropdown.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/suggestion.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/procedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/hospitalItem.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/professionalFee.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/grandTotal.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/actions/dentalProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ContractRange/ContractRange.js","Services/Api/CustomerCareService.js","Utilities/RenameProperty.js","Pages/Protected/Claims/Constant/ClaimTypes.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/InPatient.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/OutPatientProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/OutPatientConsultation.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/Emergency.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/Reimbursement.js","Pages/Protected/Claims/ClaimsDetailsEncoder/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ICDTextField/ICDTextField.js","Utilities/IndexedDbHelper.js","Services/Storage/IcdCptStorageServices.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/CptTextField/CptTextField.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemTextField/HospitalItemTextField.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","SharedComponents/CustomTable/CustomTable.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeList/ProfessionalFeeList.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Validators/Claim/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Validators/Claim/getValidators.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/SoftValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimEmergency/ClaimEmergency.js","SharedComponents/ContractRange/ContractRange.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DentalProcedureForm/DentalProcedureFormValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/DentalProcedureForm/DentalProcedureForm.js","Constant/media.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BaseDetails/BaseDetailsValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECUValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECU.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPEValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPE.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacyValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPharmacy/ClaimPharmacy.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSuppliesValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimMedicalSupplies/ClaimMedicalSupplies.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagementValidator.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagement.js","Pages/Protected/Claims/Components/ReimbursementInfoComponent/ReimbursementInfoComponent.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimReimbursement/ClaimReimbursement.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/ClaimPage/GetClaimComponent.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Pages/ClaimPage/ClaimPage.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/claimReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/claimTypeReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/dropDownReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/procedureReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/hospitalItemReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/professionalFeeReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/grandTotalReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/dentalProcedureReducer.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Store/reducers/index.js","Pages/Protected/Claims/ClaimsDetailsEncoder/Routes.js","Pages/Protected/Claims/Components/ViewList/ViewList.js","Pages/Protected/Claims/Components/ForAdjudicationTile/ForAdjudicationTile.js","Pages/Protected/Claims/Components/MyClaimsTile/MyClaimsTile.js","Pages/Protected/Claims/Components/SubmittedClaimsTile/SubmittedClaimsTile.js","Pages/Protected/Claims/Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile.js","Services/Api/ClaimsAdjudicationServices.js","Pages/Protected/Claims/ClaimsAnalyst/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/claim.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/claimType.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/dropdown.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/suggestion.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/procedure.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/hospitalItem.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/professionalFee.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/error.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/escalation.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/reassign.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/reject.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/utilization.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/index.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/InPatient.js","Pages/Protected/Claims/ClaimsViewer/AutoFill/MedicineAllowance.js","Pages/Protected/Claims/ClaimsViewer/Components/BaseDetails/BaseDetails.js","Pages/Protected/Claims/ClaimsViewer/Components/ICDTextField/ICDTextField.js","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisList.js","Pages/Protected/Claims/ClaimsViewer/Components/ToothNumber/ToothNumber.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureForm.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureList/ProcedureList.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemForm.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemList/HospitalItemList.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeForm.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeList/ProfessionalFeeList.js","Utilities/SafeAccess.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/EscalateValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ReconValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimFooter/ClaimFooter.js","Pages/Protected/Claims/ClaimsViewer/Components/DisapprovedLabel/DisapprovedLabel.js","SharedComponents/TextFieldSubmit/TextFieldSubmit.js","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/EscalateValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ChatBox/ChatBox.js","SharedComponents/CustomTabs/CustomTabs.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/SideBar/SideBar.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Utilities/FieldFormatter.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/LimitTable/LimitTable.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/ValueField/ValueField.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Header/Header.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Components/Footer/Footer.js","Utilities/ArrayCompare.js","Utilities/BenefitNode2.js","Pages/Protected/Claims/ClaimsViewer/Components/Benefits/Benefits.js","Pages/Protected/Claims/ClaimsViewer/Components/Exclusions/Exclusions.js","Pages/Protected/Claims/ClaimsViewer/Components/PartnerNetwork/PartnerNetwork.js","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/helper.js","Pages/Protected/Claims/ClaimsViewer/Components/Utilization/Utilization.js","SharedComponents/PdfViewer/PdfViewer.js","Pages/Protected/Claims/ClaimsViewer/Components/Contract/Contract.js","Pages/Protected/Claims/ClaimsViewer/Components/RightPanelTabs/RightPanelTabs.js","Pages/Protected/Claims/ClaimsViewer/Validators/Claim/index.js","Pages/Protected/Claims/ClaimsViewer/Validators/Claim/getValidators.js","Pages/Protected/Claims/ClaimsViewer/Components/DiagnosisList/DiagnosisListValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/HospitalItemForm/HospitalItemValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ProfessionalFeeForm/ProfessionalFeeValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ProcedureForm/ProcedureValidator.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimInPatient/ClaimInPatient.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimEmergency/ClaimEmergency.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimDental/ClaimDental.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimAPE/ClaimAPE.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/AdditionalFields.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimReimbursement/ClaimReimbursement.js","SharedComponents/DashboardRedirect/DashboardRedirect.js","Pages/Protected/Claims/ClaimsViewer/GetClaimComponent.js","Services/Api/MedicalConsultantServices.js","Services/Api/UserManagementServices.js","Pages/Protected/Claims/ClaimsViewer/index.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/discrepancy.js","Pages/Protected/Claims/ClaimsViewer/Store/actions/recon.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/claimReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/claimTypeReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/suggestionsReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/dropDownReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/procedureReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/hospitalItemReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/professionalFeeReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/discrepancyReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/errorReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/escalationReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/reassignReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/rejectReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/reconReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/utilizationReducer.js","Pages/Protected/Claims/ClaimsViewer/Store/index.js","Pages/Protected/Claims/ClaimsViewer/Store/reducers/index.js","Pages/Protected/Claims/ClaimsAnalyst/Routes.js","Pages/Protected/Claims/PaymentRequest/Components/ViewList/ViewList.js","Services/Api/PaymentRequestServices.js","Pages/Protected/Claims/PaymentRequest/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/PaymentRequest/Pages/PaymentRequestPage/PaymentRequestPage.js","Pages/Protected/Claims/PaymentRequest/Routes.js","Pages/Protected/Claims/MedicalConsultant/Components/ViewList/ViewList.js","Pages/Protected/Claims/MedicalConsultant/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/MedicalConsultant/Routes.js","Pages/Protected/Claims/ClaimsReconciliation/Components/ViewList/ViewList.js","Services/Api/ClaimsReconServices.js","Pages/Protected/Claims/ClaimsReconciliation/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsReconciliation/Routes.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ViewList/ViewList.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ReconciledClaimsTile/ReconciledClaimsTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ClaimsVerifierTile/ClaimsVerifierTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ClaimsForApprovalTile/ClaimsForApprovalTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/MedicalCollectiblesTile/MedicalCollectiblesTile.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Components/ReimbursementClaimTile/ReimbursementClaimTile.js","Services/Api/ClaimsVerifierSupervisorServices/ClaimsAdjudicationServices.js","Services/Api/ClaimsVerifierSupervisorServices/ReconciledServices.js","Services/Api/ClaimsVerifierSupervisorServices/ForApprovalServices.js","Services/Api/ClaimsVerifierSupervisorServices/index.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Pages/Dashboard/Dashboard.js","Pages/Protected/Claims/ClaimsVerifierSupervisor/Routes.js","Pages/Protected/Claims/index.js","Pages/Protected/Store/reducers/sidebarReducer.js","Pages/Protected/Store/reducers/pageTitleReducer.js","Pages/Protected/Store/reducers/breadcrumbsReducer.js","Pages/Protected/Store/reducers/pageLoadingReducer.js","Pages/Protected/Store/reducers/snackbarReducer.js","Pages/Protected/Store/reducers/pdfReducer.js","Pages/Protected/Store/index.js","Pages/Protected/Store/reducers/index.js","Services/ProtectedPageScrollEvent.js","Pages/Protected/Protected.js","App.js","serviceWorker.js","index.js","Pages/Protected/Claims/ClaimsViewer/Components/ClaimDental/ClaimDental.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/BatchDetails/BatchDetails.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimECU/ClaimECU.module.scss","SharedComponents/PdfViewer/PdfViewer.module.scss","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","Pages/Protected/Claims/BatchEncoder/Pages/NewBundlePage/NewBundlePage.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimPPE/ClaimPPE.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProfessionalFeeForm/ProfessionalFeeForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimAPE/ClaimAPE.module.scss","Pages/Protected/Claims/BatchEncoder/Components/BatchForm/BatchForm.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ProviderSchedule/ProviderSchedule.module.scss","SharedComponents/ContractRange/ContractRange.module.scss","Pages/Protected/Claims/ClaimsDetailsEncoder/Components/ClaimClinicManagement/ClaimClinicManagement.module.scss","Pages/Protected/Claims/ClaimsViewer/Components/ClaimMedicineAllowance/ClaimMedicineAllowance.module.scss","SharedComponents/SideBarComponent/SideBarComponent.module.scss","SharedComponents/TicketListComponent/TicketListComponent.module.scss","SharedComponents/DatePicker/DatePicker.module.scss"],"names":["module","exports","Object","freeze","logo","avatar","pokeball","webpackEmptyContext","req","e","Error","code","keys","resolve","id","FontAwesomeLibrary","init","library","add","faHome","faBoxOpen","faBookOpen","faTools","faFileAlt","faExclamationCircle","faBalanceScale","faEdit","faTrash","faSave","faPrint","faSearchPlus","faSearchMinus","faArrowAltCircleRight","faArrowAltCircleLeft","faCalendarDay","CustomTextField","props","label","required","readOnly","constainerStyle","error","onChange","type","other","value","React","useState","focus","setFocus","_error","setError","useEffect","trim","className","classes","root","style","Typography","variant","wrapper","Fragment","Paper","onBlur","InputBase","input","onFocus","autoComplete","reset","set","IcdCptStatusComponent","data","setData","values","p","success","_success","cpt_fetched","cpt_total","icd10_fetched","icd10_total","setTimeout","show","fetch","IcdCptStatusSet","GenerateFormData","formData","FormData","map","item","index","Array","isArray","_item","JSON","stringify","append","setPageTitle","payload","setSnackbar","setPdf","dispatch","SnackbarComponent","snackbar","useSelector","state","useDispatch","handleClose","event","reason","open","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","elevation","severity","action","IconButton","aria-label","icon","onClick","fontSize","AlertTitle","message","SnackbarService","args","LoadingComponent","onScrollContainer","containerNode","containerStyle","setContainerStyle","getBoundingClientRect","top","left","loading","pageLoading","onWheel","overlay","CircularProgress","size","LoadingService","history","ErrorPage","counter","setCounter","_counter","interval","setInterval","clearInterval","push","title","Button","color","ErrorPageInit","useHistory","ErrorPageService","ExcludeErrorConstants","all","exclude","headers","status","handler","response","fail","config","Promise","reject","addToken","hasOwnProperty","isAuthorized","createInstance","url","instance","axios","create","baseURL","interceptors","request","use","window","localStorage","partnerUrl","process","clientUrl","replace","getItem","ErrorHandler","axiosClient","CommonServices","method","skip_generate_form_data","IndexedDb2","dbName","stores","version","indexedDB","onupgradeneeded","db","target","result","store","objectStoreNames","contains","name","createObjectStore","keyPath","onsuccess","onerror","console","log","key","storeName","mode","transaction","objectStore","put","mappings","item_success_insert","_add","length","manipulateItem","clear","additional_data","mapping","from","to","Date","now","getAll","CPT_ICDServices","limit","skip","ConfigController2","connect","getData","user_data","i","update","cpt","icd10","stored_cpt","stored_icd10","this","setCPT_ICD","cpt_count","count","icd10_count","data_limit","REACT_APP_LIMIT_ICD_CPT","parseInt","already_fetched","fetchMore","a","collectrion_name","getMany","then","remaining","_limit","LoginPage","disableControls","setDisableControls","username","password","user","setUser","loginError","setLoginError","document","submit","preventDefault","login","err","res","ex","setUserManagementData","updateCPT_ICD","setItem","Grid","container","xs","direction","justify","alignItems","src","images","alt","hidden","form","disabled","Link","href","note","HeaderComponent","logout","anchorEl","setAnchorEl","styles","Avatar","aria-controls","aria-haspopup","currentTarget","Menu","Boolean","keepMounted","MenuItem","SideBarComponent","items","sidebar","menu","circle","text","SideBarService","PageTitleComponent","pageTitle","borderColor","PageTitleService","BreadcrumbsComponent","breadcrumbs","selected","Breadcrumbs","BreadcrumbsService","pdfjs","GlobalWorkerOptions","workerSrc","Transition","forwardRef","ref","Slide","PdfViewer2Component","pdf","fileName","initialPageNumber","initialScale","service","enabled","file","setFile","numPages","setNumPages","scale","setScale","pageNumber","setPageNumber","_blob","Blob","handleOnClose","print","require","ipcRenderer","blobToBase64","send","on","reader","FileReader","readAsDataURL","onloadend","printable","split","printJS","base64","blob","onload","Dialog","fullScreen","TransitionComponent","AppBar","position","Toolbar","edge","DialogContent","padding","controls","align","Tooltip","control","URL","createObjectURL","link","createElement","setAttribute","body","appendChild","click","onLoadSuccess","PdfViewer2Service","options","DashboardTileComponent","children","header","viewList","actionHeader","onFilterChange","isFilterShown","filter","setFilter","FormControl","Select","list","Children","child","displayName","TaskTrayComponent","sizes","showTitle","toArray","cloneElement","_sizes","sm","lg","spacing","itemSize","s","TicketListComponent","viewAllLink","content","caption","useStyles1","makeStyles","theme","flexShrink","marginLeft","TablePaginationActions","useTheme","page","rowsPerPage","onChangePage","Math","ceil","max","CustomTable","TableContainerProps","TableProps","head","pagination","rowsPerPageOptions","TableContainer","component","table","TableHead","footer","TablePagination","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","ActionsComponent","useStyles","display","minWidth","flex","iconButton","divider","width","height","margin","SearchTextComponent","placeholder","CurrencyFormatter","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","moment","headCells","sortField","CustomizedDialogs","setViewList","onViewListChange","category","debounce","setDebounce","fullWidth","maxWidth","aria-labelledby","PaperProps","DialogTitle","disableTypography","button","dividers","search","clearTimeout","overflow","stickyHeader","headCell","TableCell","TableSortLabel","active","orderBy","order","sort","row","bundle_number","date","due","facility","BatchEncodingServices","params","batch_number","Dashboard","created","submitted","bundles","setBundles","initialValue","getBundles","range","getBundleCount","batchResponse","batchCountResponse","createdBundles","results","createdBundleCount","prevState","submittedBundles","submittedBundleCount","handleFilterChange","handleOnShowViewList","startCase","tiles","createBundle","_params","AutoComplete","suggestions","relatedTarget","square","suggestion","handleItemClick","DatePicker","tabindex","setOpen","selectedDate","setSelectedDate","InputRef","useRef","handleOnFocus","current","handleOnBlur","utils","MomentUtils","TextFieldComponent","TextFieldCurrency","currency","customInput","isNumericString","displayType","thousandSeparator","decimalScale","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","TextFieldNumber","formattedValue","BundleDetails","details","errors","isReadOnly","medicalPartner","doctorPartner","setSuggestions","getMedicalPartnerSuggestions","by","lookups","query","_items","d","getDoctorPartnerSuggestions","handleOnChangeAutosuggest","field","fieldName","fieldValue","handleOnChangeMedicalPartner","isSuggestionClick","selectedIndex","term","earliest_term","isNaN","newDate","date_received","full_name","md","total_rcs","due_date","soa_number","total_soa_amt","facility_id","facility_name","doctor_id","doctor_name","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","primary","dark","spacer","actions","marginTop","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","border","clip","EnhancedTable","handleRequestSort","handleSelectAllClick","checkAll","sorter","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","Checkbox","center","numeric","disablePadding","sortDirection","defaultFunction","cancelLabel","okLabel","onOk","onCancel","aria-describedby","DialogActions","autoFocus","BatchList","batches","onDelete","openDialog","deleteStatus","onOpen","openError","onEdit","setForDeletion","forDeletion","isBundleCompleted","batch","setBatch","undefined","batch_numbers","changeSelectAllState","_batches","selected_count","batchNumbers","b","_index","handleClick","claim","buttonWrapper","deleteMessage","getMessage","DropDown","disableComponents","select","types","prefix","Reimbursement","Emergency","Dental","APE","ECU","Pharmacy","PPE","extract","_errors","path","schema","Joi","object","claim_type","string","claim_source","number","integer","min","amount_billed","less","notes","allow","when","is","otherwise","messages","abortEarly","validate","ExtractValidationResult","setSelectedBatch","setBatchAction","setShowBatchForm","setSaveBatchControl","resetSuggestionObject","claim_types","ClaimTypes","claim_sources","BatchForm","close","onSave","bundle","onChangeDoctor","saveControl","confirmAction","setConfirmAction","setErrors","doctor","multiline","rows","BatchFormValidator","greater","BundlePage","originalState","setOriginalState","setBundle","setBatches","setIsReadOnly","setOpenDialog","openBundleDialog","setOpenBundleDialog","setOpenError","submitStatus","setsubmitStatus","match","setDisableComponents","disabledSubmit","setDisabledSubmit","getBundleDetails","getBundle","_status","received","soa","amount","getBatches","handleOnSubmit","submitBundle","getDoctorSuggestions","handleOnDeleteBatch","BundleValidator","newBatch","updateBatch","f","createBatch","updateBundle","handleOnOk","deleteMultipleBatch","catch","source","NewBundlePage","due_date_adjustment","newBundle","setNewBundle","inputs","save","toISOString","NewBundleValidator","pageTitleReducer","initialState","bundlesReducer","batchNumber","batchReducer","suggestionsReducer","combineReducers","createStore","sideBarItems","dashboard","specificBundle","BatchEncoderRoutes","Store","exact","onItemClick","ClaimsEncodingServices","claim_number","my","completed","openTickets","getBatchCount","openBatches","openBatchCount","myBatches","myBatchCount","completedBatches","completedBatchCount","handleOnEncode","assignBatch","BatchesPage","BatchDetails","groups","date_from","date_to","ClaimListHeader","onClickAdd","onClickProviderSchedule","inputChange","toLowerCase","ClaimList","selectedClaimNumber","onConfirm","submittedBatch","setSelected","setOrder","setOrderBy","setPagination","claims","setClaims","claim_numbers","_claims","claimNumbers","c","property","rowsLength","role","tabIndex","loa_number","approval_code","member","first_name","last_name","account_number","ProviderSchedule","dialog","setDialog","header1","hover","colSpan","cell","textAlign","fontStyle","partition","maxHeight","List","random","ListItem","ListItemText","BatchPage","setBatchNumber","setSelectedClaimNumber","setDetails","claimCount","setClaimCount","openDeleteDialog","setOpenDeleteDialog","showProviderSchedule","setShowProviderSchedule","getClaimsAndCount","getClaims","_batchNumber","getBatch","submitBatch","deleteMultipleClaim","CustomerCareServices","member_account_no","member_account_number","member_oid","contract_oid","tree_oid","is_exact","setClaimFields","setClaimBaseDetails","setClaimFacility","setClaimPro","setClaimDoctor","setClaimRoom","setClaimDiagnosis","addClaimProcedure","updateClaimProcedure","removeClaimProcedure","setClaimType","initDropDowns","setDropDown","initSuggestions","setSuggestionObject","addSuggestionToArray","setProcedure","setHospitalItem","setProfessionalFee","setGrandTotal","setDentalProcedure","ContractRange","cursor","contract_year_from","contract_year_to","CustomerCareService","renameProp","oldProp","newProp","old","others","other_name","subType","AutoFillInitializer","AutoFill","loa","member_info","member_name","first_middle","given_name","middle_name","join","pop","common","loa_no","member_id","member_last_name","member_first_name","member_middle_name","procedures","professional_fees","hospital_items","diagnosis","diagnoses","primary_icd10_code","primary_diagnosis","proc","vat_amount","amount_paid_by_member","philhealth_amount_paid","philhealth_remarks","prof","diag","icd10_code","date_admitted_date","date_discharged_date","room_type","room","room_rate","total_amount","pro_id","pro_name","claim_sub_type","claim_sub_sub_type","with_corporate_guarantee","loa_notes","medical_partner_id","partner_id","medical_partner_name","partner_name","rooms","rate","InPatient","department","anesthesiologist_id","anesthesiologist_name","partner_doctor_id","partner_doctor_name","OutPatientProcedure","pshilhealth_amount_paid","recommendation","OutPatientConsultation","customer_account_number","client_id","company_name","client_name","MedicineAllowance","BaseDetails","onChangeReimbursementType","handleMemberAccountNumber","showReimbursement","showCompany","showContractRange","showClaimSource","showApprovalCode","showLoaNumber","isDental","claimType","approvalCode","setApprovalCode","memberAccountNumber","setMemberAccountNumber","getLoaDetails","reimbursement_type","getContractList","latest_contract","custom_metadata","coverage_start_date","coverage_end_date","years","ICDTextFields","description","ICDTextField","codeId","onChangeDescription","onChangeCode","onChangePrimary","onDeleteDiagnosis","tooltipOpen","setTooltipOpen","Radio","IndexedDbHelper","deleteDb","callback","deleteDatabase","openDb","onUprade","onSuccess","onError","createStoreOnDb","onComplete","oncomplete","createIndexOnStore","isUnique","unique","openDbAndSave","entries","onSaveComplete","onLoopEnd","saveToStore","forEach","entry","IcdCptStorageServices","DB_NAME","OBJECT_STORE_NAME_CPT","OBJECT_STORE_NAME_ICD","records","readStorageEntries","loadEntries","filterKey","includes","full_description","full_code","LOOKUP_LIMIT","DiagnosisList","handleOnClickAddDiagnosis","handleOnChangeIcd10","getIcd10Suggestions","removeSuggestionToArray","handleOnRemoveDiagnosis","CptTextFields","CptTextField","gross_amount","ProcedureForm","showAmountPaidByMember","showPhilhealthField","procedure","unsubscribe","subscribe","handleOnChangeProcedureForm","handleOnChangeCpt","toString","getCptSuggestions","ProcedureFormValidator","buttons","HospitalItemTextFields","HospitalItemTextField","item_code","onChangeName","HospitalItemForm","showPhilhealthRemarks","hospitalItem","handleOnChangeHospitalItem","getHospitalItemSuggestions","handleOnChangeHospitalForm","HospitalItemFormValidator","specialization","ProfessionalFeeForm","professionalFee","pfSuggestions","pfDoctor","handleOnChangeDoctor","major","handleOnChangeProfessionalFeeForm","ProfessionalFeeFormValidator","Table","_children","TableHeader","TableBody","TableRow","expanded","expandable","setExpandable","cells","setCells","TableRowExpandable","ProcedureList","totalAmount","setTotalAmount","amountPerItem","parseFloat","showProcedureForm","generateKey","right","HospitalItemList","showHospitalItemForm","ProfessionalFeeList","showProfessionalFeeForm","ClaimFooter","handleOnSave","setShowReimbursementModal","fields","selected_fields","available_fields","flag","boolean","default","medicine_category","reimbursement_category","official_receipt_number","getValidators","_setDialog","_resolve","SoftValidatorAlertComponent","t","SoftValidatorService","_fields","hasPrimary","itemError","ClaimInPatient","onChangeFacility","getClaimDetails","onChangePro","dropDown","grandTotal","isAdd","setIsAdd","allowedFields","setAllowedFields","lineItemFields","setlineItemFields","_allowedFields","_lineItemFields","pro","claim_sub","sub_type","currentValue","sum","reduce","handleOnChangeFacility","doValidateAll","base_errors","MainValidator","doValidateBase","DiagnosisListValidator","goBack","addClaim","_claimNumber","updateClaim","startOf","ClaimOutPatientProcedure","onChangeAnaesthesiologist","anesthesiologist","ClaimOutPatientConsultation","ClaimEmergency","handleOnItemClick","tooth_number","ToothNumber","DentalProcedureForm","dentalProcedure","DentalProcedureFormValidator","media","dentalChart","ClaimDental","contract_year","dental_procedures","contract","Media","ClaimMedicineAllowance","ClaimAPE","ClaimECU","ClaimPPE","ClaimPharmacy","ClaimMedicalSupplies","ClaimClinicManagement","ReimbursementInfoComponent","setShowModal","doReject","reimbursement_info","showAdd","setShowAdd","rejectModal","setRejectModal","setItems","showCell","handleOnClickCancel","handleOnClickUpdate","handleOnItemSave","date_created","prepared_by","date_encoded","released_to","date_released","date_return","remarks","reasons","handleOnClickSave","scrollTo","scrollHeight","behavior","ItemForm","today","handleOnChange","handleOnChangeReason","delete","other_details","__index","other_fields","AdditionalFields","additional_fields","exist","ClaimReimbursement","initialAllowedFields","setInitialAllowedFields","showReimbursementModal","setType","initial_values","reimbursement_details","_claim","GetClaimComponent","_props","_type","SelectecClaimType","ClaimPage","breadCrumbs","getBatchDetails","getFacilitySuggestions","getProSuggestions","proUsersLookup","elem","getAnaesthesiologistSuggestions","anaesthesiologist","getClaim","employee_id","claimReducer","claimTypeReducer","dropDownReducer","procedureReducer","amount_not_covered","amount_due_from_member","reason_for_charging_member","hospitalItemReducer","professionalFeeReducer","grandTotalReducer","dentalProcedureReducer","initSubscriber","specificBatch","ClaimsDetailsEncoderRoutes","render","ForAdjudicationTile","services","getClaimCount","handleOnAnalyze","assignClaim","MyClaimsTile","SubmittedClaimsTile","claimNumber","setClaimNumber","disableLoaButton","setDisableLoaButton","handleClickSubmitted","has_amount_concerns","handleOnShowPdf","getLetterOfAdvice","claimNo","getAnalysisSheet","zIndex","ITEM_HEIGHT","ReturnedEscalatedClaimsTile","escalated","ClaimsAdjudicationServices","responseType","Accept","getClaimResponse","analyzeRespone","analysis_results","icd_code","filters","DiscrepancyBase","discrepancy","iconStyle","retainSpace","noMargin","setMessage","flat","Infinity","m","spreadResult","Popover","transformOrigin","whiteSpace","resetError","setEscalationMessage","setReassignMessage","setRejectStatus","setLimitType","loa_details","has_corp_guarantee","permissions","requiredFields","read","defaultBehaviour","lastEntry","handleOnConfirmDelete","doValidate","showAmountNotCovered","showAmountDueFromMember","prop","reason_charging","failed","handleOnUpdate","handleOnRemoveConfirm","handleOnRemove","handleClickLineDiscrepancy","Set","expand","hospital_item","handleOCancel","professional_fee","SafeAccess","def","obj","assignee","doViewAnalysisSheet","doViewLetterOfAdvice","doReassign","doSave","doEscalate","doApprove","doCancel","isReimbursement","userManagementService","escalations","reassign","rejectStatus","confirm","escalateModal","setEscalateModal","reassignModal","setReassignModal","approveModal","setApproveModal","saveModal","setSaveModal","cancelModal","setCancelModal","dropDownUsers","setDropDownUsers","escalationErrors","setEscalationErrors","reassignErrors","setReassignErrors","initDropdownUsers","roles","getUsersByRole","users","_id","sortBy","visible","analysis_sheet","letter_of_advice","escalate","handleEscalateDialog","return","approve","AuthorityMatrix","modalProps","other_types","selected_amount","handleOnShowModal","handleReassignDialog","comment","assign","EscalateValidator","doValidateEscalation","ReconValidator","doValidateReassign","DisapprovedLabel","disapproved","substring","generateMessage","TextFieldSubmit","onSubmit","ChatBox","confirmMessage","onSubmitComment","lastDate","confirmSubmitDialog","setConfirmSubmitDialog","setComment","isMe","user_id","timestamp","sdate","doDateSplit","balloon","sender","me","receive","mheader","time","mbody","ExcalateValidator","TabPanel","CustomTabs","defaultIndex","containerSyles","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","CustomTab","SideBar","contractId","coverageList","planTypeList","categoryNode","roomAndBoardList","riderList","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","node","nodeId","planPackage","benefitCategory","included","idx","tree_id","UnitLimit","unit","columns","RBC","EM","IP","OP","PV","SD","MT","OM","CC","DNT","SH","LimitTable","benefitType","elemRows","setElemRows","elemColumns","setElemColumns","generateColumns","limits","limit_unit","parent_name","generateRows","Header","contractType","elemFields","setElemFields","showAll","timebased","metadata","PECIndex","timebasedindex","findIndex","paddingBottom","htmlFor","col","annual","semiannual","quarterly","monthly","populateClient","populateMember","Footer","billingArrangement","amountLimit","gutterBottom","premium","fixed_rate_rider","fixed_rate_personnel","soa_rate","soa_actual_cost","rider_fee","imputed_in_premiums","billback","billback_net","amt_limit","max_session","max_amount","percent_mbl","percent_abl","no_visits","voluntaryValue","includesAny","s1","s2","BenefitNode2","nodes","treePath","levelLimit","reverse","shift","level","find","nodesParam","loadExisting","nodeIDMap","tree_path","node1","node2","sort_index","oldID","itemPlanType","newID","padStart","IDSet","newIncludedFacilities","newPartner","included_facilities","newExcludedFacilities","partnerNetworkList","excluded_facilties","found","exResult","exTree","getNodeTree","parentNodes","childNodes","parent","foundChild","childNode","newParent","newChildNodes","benefitCategoryNodes","planType","newItem","baseNode","baseItem","exclusionList","benefitTypeNodes","mainBenefitNodes","subBenefitNodes","selectedPlanType","selectedPlanPackage","selectedBenefitCategory","exclusionArray","exclusion","categoryNodes","typeNodes","combineNodes2","benefitNodes","subNodes","child_nodes","combineNodes","contractNodes","planPackageNodes","planTypeNodes","coverageCategories","riderCategories","combinedNodes","benefit","baseNodes","tmp_data","basePlanType","planNodes","planTypeID","properties","contract_plan_type","requested_rate","admin_fee","naf","rsd","indicative_principals","indicative_dependents","original_children","original_id","newPartnerNetworkList","partner","addFlag","planTypeNode","generatePlanNodes","newNode","foundNode","node_path","baseIndex","getMatchByPlanCode","eligiblityNodes","parentLevel","parentCode","parentIndex","newChildren","planCode","Benefits","client","setSelectedPlanType","setSelectedPlanPackage","setSelectedBenefitCategory","benefitRows","setBenefitRows","setExclusionList","setContractNodes","setPlanTypeNodes","setPlanPackageNodes","setBenefitCategoryNodes","setBenefitTypeNodes","setMainBenefitNodes","setSubBenefitNodes","setContractId","base","benefits","convertNodeData","combineBaseBenefitNodes","eList","createExclusionList","getFilteredNodes","info","contracts","getRows","getContractNode","getCategoryNode","getPlanTypeList","getRoomAndBoardList","getSidebarList","getCoverageList","getRiderList","contractNode","selectedPlan","setSelectedPlan","planTypes","setPlantTypes","setRows","getExclusions","tree","benefitsExclusion","element","childExclusions","childId","subBenefit","is_excluded","parent_code","plan_type","plan","headCellsDoctors","PartnerNetwork","partnerService","doctorService","partnerId","setPartnerId","partnerName","setPartnerName","partnerLocation","setPartnerLocation","partners","setPartners","filtered","doctors","setDoctors","fetchAll","lodash","queryColumn","collection","searchObj","address","handleOnSort","sorted","handleOnPaginate","unit_no","floor","building_no","building_name","street","barangay","district","city","region","zip_code","fetchDoctors","first","middle","last","sub","schedule","extractLoa","__type","ticket_type","grand_total","date_admitted","date_issued","claim_no","session","newDoctor","_doctors","randomRange","Utilization","fetchService","memberBenefitLimit","utilizationLoa","alter","setList","setFilters","allFilters","setAllFilters","filteredRows","setFilteredRows","utilized","ibnr","total","graph","setGraph","_utilizationLoa","concat","icd","category_code","startsWith","allFilter","columnFilter","chunk","take","handleSearchChange","compare","comparer","some","provider","background","procedure_name","cpt_code","renderRows","PdfViewer","download","Contract","RightPanelTabs","onReturnEscalate","getUtilizations","getPartners","getDoctors","recon","benefit_limit","tabs","comments","not","onEscalate","onViewAnalysisSheet","onViewLetterOfAdvice","onReject","onReassign","onApprove","getUsers","hasError","setHasError","getReason","getRooms","getDropdown","doValidateProcedure","ProcedureValidator","doValidateHospitalItem","HospitalItemValidator","doValidateProfessionalFee","ProfessionalFeeValidator","group","groupEnd","invalid","ConfigController","getUserManagementData","endOf","DashboardRedirect","MedicalConsultantServices","UserManagementServices","role_name","ClaimAnalysis","fetching","setFetching","setMember","setClient","setUtilizationLoa","ApiService","breadCrumbsList","resetRecon","_claim_type","getDiscrepancy","getClaimType","getEscalationLogs","getReconNotes","adjudicationResults","fieldIndex","item_type","item_id","getComments","getNotes","getReport","getReports","getMemberUtilizationLoa","getMember","getBaseBenefitPlan","getBenefitPlanTree","getMemberBenefitLimit","receiver_id","discrepancyReducer","errorReducer","escalationReducer","reassignReducer","rejectReducer","reconReducer","utilizationReducer","specificClaim","analyze","exclusions","utilization","contact","ClaimsAnalystRoutes","PaymentRequestServices","paymentRequests","override","paymentRequestClaims","paymentRequestClaimCount","_category","soa_no","pendingHeadCells","submittedHeadCells","PaymentRequestPage","setBundleNumber","pending","getPaymentRequest","getPaymentRequestBatches","resetBatches","total_batches","total_batch","acc","approved_amount","utilization_amount","pr_amount","selectedBatches","_batch","getSelectedPending","requestBatch","should_include","paymentRequest","specificPaymentRequest","PaymentRequestRoutes","for_review","ticket","claimResponse","claimCountResponse","allClaims","allClaimsCount","handleOnReview","review","MedicalConsultantRoutes","ClaimsReconServices","for_recon","ClaimsReconcilationRoutes","ReconTIle","getItems","getItemCount","ClaimsForApprovalTile","verifier_name","total_claims","claimsCount","MedicalCollectiblesTile","ReimbursementClaimTile","account_no","account_name","ReconciledServices","ForApprovalServices","ClaimsVerifierSupervisorServices","ClaimsVerifierTile","ReconciledClaimsTile","reconciled","forApproval","forAdjudicationPermissions","forApprovalPermissions","checkThreshold","forReconciledPermissions","ClaimsSupervisorRoutes","ClaimsModule","userRole","setUserRole","isLoading","setIsLoading","removeItem","batchEncoderLogic","ClaimsReconciliationRoutes","ClaimsVerifierSupervisorRoutes","sidebarReducer","breadcrumbsReducer","snackbarReducer","pdfReducer","pageLoadingReducer","subscribers","ProtectedPageScrollEvent","cb","Protected","selectedModule","setSelectedModule","isAauthorized","setIsAuthorized","setContainerNode","getMe","resetToLogin","access_token","main_module","main_role","clearUserManagementData","location","protocol","origin","scrollContainer","scrollTop","deltaY","accessToken","statusCode","onScroll","publish","Claims","routesForModule","initializeBaseUrls","App","CssBaseline","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db571a9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__X-NCv\",\"table\":\"ProcedureList_table__LtkxW\",\"table-header\":\"ProcedureList_table-header__3Ac8E\",\"table-description\":\"ProcedureList_table-description__3_4Wa\",\"add-link\":\"ProcedureList_add-link__1UWwS\",\"row\":\"ProcedureList_row__3RlUn\",\"align\":\"ProcedureList_align__2L_cc\",\"center\":\"ProcedureList_center__32rls\",\"right\":\"ProcedureList_right__1pxhH\",\"table-total\":\"ProcedureList_table-total__11hza\",\"caption\":\"ProcedureList_caption__1cvHz\",\"amount\":\"ProcedureList_amount__l-4L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__1gaxi\",\"table\":\"HospitalItemList_table__1T4Ou\",\"table-header\":\"HospitalItemList_table-header__pil4o\",\"table-description\":\"HospitalItemList_table-description__3hcWS\",\"add-link\":\"HospitalItemList_add-link__1fF5-\",\"row\":\"HospitalItemList_row__2sr0L\",\"align\":\"HospitalItemList_align__2w1Hz\",\"center\":\"HospitalItemList_center__9YkBq\",\"right\":\"HospitalItemList_right__1g1-y\",\"table-total\":\"HospitalItemList_table-total__1eIuf\",\"caption\":\"HospitalItemList_caption__2UHjy\",\"amount\":\"HospitalItemList_amount__2_b-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__36scC\",\"first-container\":\"ClaimMedicineAllowance_first-container__3LG3r\",\"groups\":\"ClaimMedicineAllowance_groups__2iXhU\",\"input\":\"ClaimMedicineAllowance_input__2G2Zd\",\"child-container\":\"ClaimMedicineAllowance_child-container__2srkt\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__2l5oQ\",\"left-side\":\"ClaimMedicineAllowance_left-side__qFPtB\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__3Iz7T\",\"table\":\"ClaimMedicineAllowance_table__1qrlu\",\"table-header\":\"ClaimMedicineAllowance_table-header__12Kkz\",\"table-description\":\"ClaimMedicineAllowance_table-description__1hTo6\",\"add-link\":\"ClaimMedicineAllowance_add-link__3qxKy\",\"row\":\"ClaimMedicineAllowance_row__3Umzu\",\"align\":\"ClaimMedicineAllowance_align__1BVJf\",\"center\":\"ClaimMedicineAllowance_center__1tZAi\",\"right\":\"ClaimMedicineAllowance_right__2u6Im\",\"table-total\":\"ClaimMedicineAllowance_table-total__nAcH3\",\"caption\":\"ClaimMedicineAllowance_caption__2Xvx_\",\"amount\":\"ClaimMedicineAllowance_amount__3kOYn\",\"right-side\":\"ClaimMedicineAllowance_right-side__3z21t\",\"sticky\":\"ClaimMedicineAllowance_sticky__2612D\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__3KhN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPharmacy_root__Mmcg0\",\"first-container\":\"ClaimPharmacy_first-container__2dLu3\",\"groups\":\"ClaimPharmacy_groups__3VQ0N\",\"input\":\"ClaimPharmacy_input__VDs0R\",\"child-container\":\"ClaimPharmacy_child-container__6sWfh\",\"tables-container\":\"ClaimPharmacy_tables-container__2NiO8\",\"left-side\":\"ClaimPharmacy_left-side__2WMcE\",\"wrapper\":\"ClaimPharmacy_wrapper__sT41S\",\"table\":\"ClaimPharmacy_table__19xAd\",\"table-header\":\"ClaimPharmacy_table-header__2ujsV\",\"table-description\":\"ClaimPharmacy_table-description__34Rj9\",\"add-link\":\"ClaimPharmacy_add-link__2Zv4z\",\"row\":\"ClaimPharmacy_row__1HEfZ\",\"align\":\"ClaimPharmacy_align__4xQmL\",\"center\":\"ClaimPharmacy_center__prewS\",\"right\":\"ClaimPharmacy_right__31r9B\",\"table-total\":\"ClaimPharmacy_table-total__1-XM-\",\"caption\":\"ClaimPharmacy_caption__3OHnP\",\"amount\":\"ClaimPharmacy_amount__2eKIA\",\"right-side\":\"ClaimPharmacy_right-side__6LVvr\",\"sticky\":\"ClaimPharmacy_sticky__1fLJm\",\"grand-total\":\"ClaimPharmacy_grand-total__m7uSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__3v-Lv\",\"wrapper\":\"Footer_wrapper__1zMki\",\"groups\":\"Footer_groups__2MoDL\",\"center\":\"Footer_center__3a6Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__1k5bx\",\"label\":\"DropDown_label__nY7ih\",\"wrapper\":\"DropDown_wrapper__3QKA8\",\"read-only-value\":\"DropDown_read-only-value__kiJtQ\",\"select-container\":\"DropDown_select-container__cdS_q\",\"select\":\"DropDown_select__3X8Jg\",\"input\":\"DropDown_input__2BzGr\",\"focus\":\"DropDown_focus__9njFf\",\"has-error\":\"DropDown_has-error__1knu_\",\"disabled\":\"DropDown_disabled__NMExl\",\"error\":\"DropDown_error__21XnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__1XZyg\",\"input\":\"BaseDetails_input__pHRqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__2fzNk\",\"header\":\"ICDTextField_header__pqXnc\",\"description\":\"ICDTextField_description___8gS9\",\"code\":\"ICDTextField_code__G5Fds\",\"primary\":\"ICDTextField_primary__2X9xl\",\"actions\":\"ICDTextField_actions__20aju\",\"wrapper\":\"ICDTextField_wrapper__2-mIJ\",\"sub-wrapper\":\"ICDTextField_sub-wrapper__1sn7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicalSupplies_root__3G1WP\",\"first-container\":\"ClaimMedicalSupplies_first-container__3VlM1\",\"groups\":\"ClaimMedicalSupplies_groups__1qSYd\",\"input\":\"ClaimMedicalSupplies_input__1ZmAK\",\"child-container\":\"ClaimMedicalSupplies_child-container__3FBi7\",\"tables-container\":\"ClaimMedicalSupplies_tables-container__1Fq0r\",\"left-side\":\"ClaimMedicalSupplies_left-side__3D2mB\",\"wrapper\":\"ClaimMedicalSupplies_wrapper__3WLRm\",\"table\":\"ClaimMedicalSupplies_table__258qm\",\"table-header\":\"ClaimMedicalSupplies_table-header__2_TTi\",\"table-description\":\"ClaimMedicalSupplies_table-description__1nujy\",\"add-link\":\"ClaimMedicalSupplies_add-link__2BUxt\",\"row\":\"ClaimMedicalSupplies_row__vGNBs\",\"align\":\"ClaimMedicalSupplies_align__33Doz\",\"center\":\"ClaimMedicalSupplies_center__2l45A\",\"right\":\"ClaimMedicalSupplies_right__1em68\",\"table-total\":\"ClaimMedicalSupplies_table-total__3JD-N\",\"caption\":\"ClaimMedicalSupplies_caption__1DdQa\",\"amount\":\"ClaimMedicalSupplies_amount__3Sav-\",\"right-side\":\"ClaimMedicalSupplies_right-side__2nXxw\",\"sticky\":\"ClaimMedicalSupplies_sticky__2F1nG\",\"grand-total\":\"ClaimMedicalSupplies_grand-total__3dgFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ICDTextField_root__1qifU\",\"header\":\"ICDTextField_header__3VGao\",\"delete\":\"ICDTextField_delete__3vB5d\",\"description\":\"ICDTextField_description__3eIpr\",\"code\":\"ICDTextField_code__2j0R8\",\"primary\":\"ICDTextField_primary__KNO67\",\"discrepancy\":\"ICDTextField_discrepancy__1UfWd\",\"wrapper\":\"ICDTextField_wrapper__3ixXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1Skt8\",\"tiles\":\"Dashboard_tiles__lpIoJ\",\"row\":\"Dashboard_row__3KnBg\",\"task-tray\":\"Dashboard_task-tray__2lCpR\",\"list-item\":\"Dashboard_list-item__1Ic9e\",\"details\":\"Dashboard_details__1rU-L\",\"detail-item\":\"Dashboard_detail-item__3KSnH\",\"label\":\"Dashboard_label__1K4-z\",\"content\":\"Dashboard_content__2Zqqy\",\"action\":\"Dashboard_action__1LooX\",\"ticket-list\":\"Dashboard_ticket-list__3x5rn\",\"completed_task\":\"Dashboard_completed_task__3-uA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AutoComplete_root__2814h\",\"label\":\"AutoComplete_label__3-iRy\",\"wrapper\":\"AutoComplete_wrapper__2kjw3\",\"read-only-value\":\"AutoComplete_read-only-value__6V5Rg\",\"autocomplete-field\":\"AutoComplete_autocomplete-field__DKxfc\",\"form-control\":\"AutoComplete_form-control__izw0T\",\"input\":\"AutoComplete_input__1okbY\",\"suggestions\":\"AutoComplete_suggestions__3l5Zj\",\"focus\":\"AutoComplete_focus__2WKYu\",\"has-error\":\"AutoComplete_has-error__1GzeK\",\"error\":\"AutoComplete_error__QM8Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__2JIh5\",\"table\":\"ProfessionalFeeList_table__2LQEU\",\"table-header\":\"ProfessionalFeeList_table-header__2OzH0\",\"table-description\":\"ProfessionalFeeList_table-description__28jUE\",\"add-link\":\"ProfessionalFeeList_add-link__35a_-\",\"row\":\"ProfessionalFeeList_row__2-_LK\",\"align\":\"ProfessionalFeeList_align__32hEA\",\"center\":\"ProfessionalFeeList_center__1SWoN\",\"right\":\"ProfessionalFeeList_right__1vR9f\",\"table-total\":\"ProfessionalFeeList_table-total__1lDQJ\",\"caption\":\"ProfessionalFeeList_caption__33xCy\",\"amount\":\"ProfessionalFeeList_amount__2dpID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"BaseDetails_groups__Y-B2-\",\"input\":\"BaseDetails_input__2Mx_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBar_root__JGJMu\",\"contract-id\":\"SideBar_contract-id__3nF6_\",\"id\":\"SideBar_id__3bO4v\",\"plan-types\":\"SideBar_plan-types__gAyTx\",\"node\":\"SideBar_node__3K3Dx\",\"benefit-label\":\"SideBar_benefit-label__1EcTO\",\"selected\":\"SideBar_selected__3Yeld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTextField_root__12dTT\",\"label\":\"CustomTextField_label__2aunG\",\"wrapper\":\"CustomTextField_wrapper__3YBGm\",\"read-only-value\":\"CustomTextField_read-only-value__26nQ7\",\"text-field\":\"CustomTextField_text-field__c2000\",\"form-control\":\"CustomTextField_form-control__2n1zh\",\"input\":\"CustomTextField_input__NKim1\",\"input-amount\":\"CustomTextField_input-amount__35U02\",\"end-adornment\":\"CustomTextField_end-adornment__2JrSO\",\"select\":\"CustomTextField_select__2C-TW\",\"focus\":\"CustomTextField_focus__S1_hl\",\"has-error\":\"CustomTextField_has-error__3dF7R\",\"error\":\"CustomTextField_error__1cHzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__42Rd3\",\"groups\":\"ProcedureForm_groups__2ZpFn\",\"input\":\"ProcedureForm_input__2L5en\",\"buttons\":\"ProcedureForm_buttons__rHNJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__mMTrP\",\"groups\":\"HospitalItemForm_groups__1fNtv\",\"first-item\":\"HospitalItemForm_first-item__15WZA\",\"input\":\"HospitalItemForm_input__1Wo8l\",\"buttons\":\"HospitalItemForm_buttons__3RCkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DiscrepancyBase_root__1HBs_\",\"input-wrapper\":\"DiscrepancyBase_input-wrapper__GUidY\",\"discrepancy\":\"DiscrepancyBase_discrepancy__3xf0j\",\"discrepancy-icon\":\"DiscrepancyBase_discrepancy-icon__UYnw8\",\"with-margin\":\"DiscrepancyBase_with-margin__3xajx\",\"icon\":\"DiscrepancyBase_icon__1N9rI\",\"display-hidden\":\"DiscrepancyBase_display-hidden__3qbGn\",\"display-none\":\"DiscrepancyBase_display-none__wXzuv\",\"message\":\"DiscrepancyBase_message__36Loi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldSubmit_root__31Odd\",\"label\":\"TextFieldSubmit_label__1hK2p\",\"wrapper\":\"TextFieldSubmit_wrapper__1VXm5\",\"read-only-value\":\"TextFieldSubmit_read-only-value__3vlhq\",\"text-field\":\"TextFieldSubmit_text-field__M9IqT\",\"submit\":\"TextFieldSubmit_submit__3gRq6\",\"has-error\":\"TextFieldSubmit_has-error__2RVyG\",\"error\":\"TextFieldSubmit_error__1IF87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldNumber_root__ZJK7b\",\"label\":\"TextFieldNumber_label__3x30X\",\"wrapper\":\"TextFieldNumber_wrapper__26xqZ\",\"read-only-value\":\"TextFieldNumber_read-only-value__37dIc\",\"text-field\":\"TextFieldNumber_text-field__2-te1\",\"input\":\"TextFieldNumber_input__2aj-i\",\"has-error\":\"TextFieldNumber_has-error__2Z7EW\",\"error\":\"TextFieldNumber_error__1YPiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BundlePage_header__3eq0p\",\"title\":\"BundlePage_title__3x58L\",\"root\":\"BundlePage_root__283i3\",\"list-header\":\"BundlePage_list-header__1GBCu\",\"actions\":\"BundlePage_actions__3H3cL\",\"bundle-details\":\"BundlePage_bundle-details__3EFVt\",\"batch-list\":\"BundlePage_batch-list__26oBP\",\"table-container\":\"BundlePage_table-container__1J8nf\",\"buttonWrapper\":\"BundlePage_buttonWrapper__1xA20\",\"delete-button\":\"BundlePage_delete-button__2HQIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CptTextField_root__2MQLQ\",\"header\":\"CptTextField_header__1_r1n\",\"description\":\"CptTextField_description__2gowQ\",\"code\":\"CptTextField_code__1X5xt\",\"wrapper\":\"CptTextField_wrapper__FUZKz\",\"sub-wrapper\":\"CptTextField_sub-wrapper__1kK97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemTextField_root__2P-u0\",\"header\":\"HospitalItemTextField_header__3RDWG\",\"description\":\"HospitalItemTextField_description__GCnjW\",\"code\":\"HospitalItemTextField_code__17rmf\",\"wrapper\":\"HospitalItemTextField_wrapper__pOk2y\",\"sub-wrapper\":\"HospitalItemTextField_sub-wrapper__3CoSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DentalProcedureForm_root__2nDq_\",\"groups\":\"DentalProcedureForm_groups__5_KFi\",\"input\":\"DentalProcedureForm_input__2zhFS\",\"buttons\":\"DentalProcedureForm_buttons__2RrEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DisapprovedLabel_root__ZLfuZ\",\"input-wrapper\":\"DisapprovedLabel_input-wrapper__2TA8h\",\"disapproved\":\"DisapprovedLabel_disapproved__1QF0_\",\"icon-container\":\"DisapprovedLabel_icon-container__1inxJ\",\"message\":\"DisapprovedLabel_message__3Vqzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginPage_container__20AOh\",\"error\":\"LoginPage_error__XJ7jz\",\"hidden\":\"LoginPage_hidden__1MHLH\",\"form\":\"LoginPage_form__-BU2g\",\"forgot-password\":\"LoginPage_forgot-password__uijLo\",\"logo\":\"LoginPage_logo__2L8u9\",\"note\":\"LoginPage_note__2phGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__31XgN\",\"header-container\":\"ViewList_header-container__1VZFJ\",\"header\":\"ViewList_header__3IJWI\",\"title\":\"ViewList_title__153PR\",\"content\":\"ViewList_content__3EBp-\",\"search\":\"ViewList_search__2T4Ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__fOI8L\",\"header-container\":\"ViewList_header-container__15b2V\",\"header\":\"ViewList_header__2yDtP\",\"title\":\"ViewList_title__6qHH5\",\"content\":\"ViewList_content__2wIcJ\",\"search\":\"ViewList_search__q7CsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__311ud\",\"header-container\":\"ViewList_header-container__1eor8\",\"header\":\"ViewList_header__15HTz\",\"title\":\"ViewList_title__d_bSk\",\"content\":\"ViewList_content__2LOiZ\",\"search\":\"ViewList_search__2hJ0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Exclusions_root__1c-fP\",\"header\":\"Exclusions_header__OkiLT\",\"body\":\"Exclusions_body__1TznK\",\"plan-types\":\"Exclusions_plan-types__3nG3V\",\"type\":\"Exclusions_type__1Sf42\",\"table\":\"Exclusions_table__3R1PL\",\"hidden\":\"Exclusions_hidden__3njgG\",\"search\":\"Exclusions_search__11bGt\",\"cell\":\"Exclusions_cell__1Xs8u\",\"center\":\"Exclusions_center__38xwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__RSkYA\",\"header-container\":\"ViewList_header-container__w5NIm\",\"header\":\"ViewList_header__3IQsQ\",\"title\":\"ViewList_title__35fAO\",\"content\":\"ViewList_content__Qwry5\",\"search\":\"ViewList_search__Wyc_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__2_z8r\",\"header-container\":\"ViewList_header-container__3WWag\",\"header\":\"ViewList_header__2HSe-\",\"title\":\"ViewList_title__2UVK4\",\"content\":\"ViewList_content__3eP6Y\",\"search\":\"ViewList_search__zJncR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__1Rq6u\",\"header-container\":\"ViewList_header-container__2Eafb\",\"header\":\"ViewList_header__NF-fk\",\"title\":\"ViewList_title__2u8uB\",\"content\":\"ViewList_content__1yUtF\",\"search\":\"ViewList_search__23Ay-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__1wvHu\",\"header-container\":\"ViewList_header-container__12mEX\",\"header\":\"ViewList_header__3OBrG\",\"title\":\"ViewList_title__33FCj\",\"content\":\"ViewList_content__11fI4\",\"search\":\"ViewList_search__32xl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__2H6Pb\",\"title\":\"Error_title__3ihbU\",\"message\":\"Error_message__3I8g1\",\"action-messages\":\"Error_action-messages__1rqtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__2NmED\",\"title\":\"ContractRange_title__E_hT6\",\"input\":\"ContractRange_input__3ff6N\",\"label\":\"ContractRange_label__1ekKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__47GqK\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__1ojI4\",\"has-error\":\"DiagnosisList_has-error__22b9S\",\"title\":\"DiagnosisList_title__3pos_\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__TpP98\",\"error\":\"DiagnosisList_error__21k61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"DiagnosisList_groups__2bnaD\",\"diagnosis-list\":\"DiagnosisList_diagnosis-list__3xFhl\",\"has-error\":\"DiagnosisList_has-error__1uomu\",\"title\":\"DiagnosisList_title__kXt5P\",\"add-diagnosis-button\":\"DiagnosisList_add-diagnosis-button__2PTFb\",\"error\":\"DiagnosisList_error__35W7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Error_root__3MOwq\",\"title\":\"Error_title__2zyaE\",\"message\":\"Error_message__3Qoxb\",\"action-messages\":\"Error_action-messages__1Y6y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimListHeader_root__3fun1\",\"title\":\"ClaimListHeader_title__WJLB-\",\"wrapper\":\"ClaimListHeader_wrapper__1F29R\",\"button\":\"ClaimListHeader_button__1wjAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandable\":\"CustomTable_expandable__1imJS\",\"container\":\"CustomTable_container__3quUk\",\"content\":\"CustomTable_content__258N4\",\"open\":\"CustomTable_open__2q7AF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Benefits_root__1QyJD\",\"wrapper\":\"Benefits_wrapper__2jR0h\",\"left-side\":\"Benefits_left-side__3MVYf\",\"title\":\"Benefits_title__RhMcW\",\"right-side\":\"Benefits_right-side__3VGXh\",\"center\":\"Benefits_center__2tHRK\"};","module.exports = Object.freeze({\n  logo: 'https://intellicare.net.ph/wp-content/uploads/Intellicare_green-play.png',\n  avatar: 'https://avatars.sched.co/a/c0/7249803/avatar.jpg?479',\n  pokeball: 'https://upload.wikimedia.org/wikipedia/en/3/39/Pokeball.PNG'\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HeaderComponent_root__1P3pT\",\"left-container\":\"HeaderComponent_left-container__3Dcw_\",\"right-container\":\"HeaderComponent_right-container__1OYZu\",\"avatar\":\"HeaderComponent_avatar__7kjfG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__134XU\",\"tiles\":\"Dashboard_tiles__3-cNn\",\"task-tray\":\"Dashboard_task-tray__1XF4s\",\"list-item\":\"Dashboard_list-item__3qy0B\",\"details\":\"Dashboard_details__15s7s\",\"detail-item\":\"Dashboard_detail-item__3IHwo\",\"label\":\"Dashboard_label__1DKDf\",\"content\":\"Dashboard_content__2wA9x\",\"action\":\"Dashboard_action__2y9Fa\",\"ticket-list\":\"Dashboard_ticket-list__DOG3i\",\"completed_task\":\"Dashboard_completed_task__3owpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2sYb8\",\"tiles\":\"Dashboard_tiles__E_4-O\",\"task-tray\":\"Dashboard_task-tray__2VDQD\",\"list-item\":\"Dashboard_list-item__ppY3e\",\"details\":\"Dashboard_details__332wx\",\"detail-item\":\"Dashboard_detail-item__umKEs\",\"label\":\"Dashboard_label__2cGs-\",\"content\":\"Dashboard_content__2-Sut\",\"action\":\"Dashboard_action__h_HAI\",\"ticket-list\":\"Dashboard_ticket-list__1QobE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchPage_root__255TG\",\"claims-container\":\"BatchPage_claims-container__3h3TE\",\"footer\":\"BatchPage_footer__1Jf_V\",\"actions\":\"BatchPage_actions__11khZ\",\"delete-button\":\"BatchPage_delete-button__1Qc1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1uEiL\",\"tiles\":\"Dashboard_tiles__1p7ax\",\"task-tray\":\"Dashboard_task-tray__12TWB\",\"list-item\":\"Dashboard_list-item__2SveG\",\"details\":\"Dashboard_details__2WxhK\",\"detail-item\":\"Dashboard_detail-item__30PKn\",\"label\":\"Dashboard_label__3e3j4\",\"content\":\"Dashboard_content__2lI50\",\"action\":\"Dashboard_action__3Q66h\",\"ticket-list\":\"Dashboard_ticket-list__3VZn-\",\"completed_task\":\"Dashboard_completed_task__2KLLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__2VH--\",\"header\":\"CustomTabs_header__3jmhR\",\"item\":\"CustomTabs_item__rKqcK\",\"active\":\"CustomTabs_active__3MzuP\",\"panels\":\"CustomTabs_panels__MhL8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__108O5\",\"tiles\":\"Dashboard_tiles__1UqHd\",\"task-tray\":\"Dashboard_task-tray__13jCx\",\"list-item\":\"Dashboard_list-item__1POQ4\",\"details\":\"Dashboard_details__2IkLS\",\"detail-item\":\"Dashboard_detail-item__3Y59v\",\"label\":\"Dashboard_label__2rLfF\",\"content\":\"Dashboard_content__2l1Kt\",\"action\":\"Dashboard_action__xbn6T\",\"ticket-list\":\"Dashboard_ticket-list__iE5Ur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__23ayB\",\"tiles\":\"Dashboard_tiles__33s9X\",\"task-tray\":\"Dashboard_task-tray__1uBpo\",\"list-item\":\"Dashboard_list-item__26TQ6\",\"details\":\"Dashboard_details__17s4J\",\"detail-item\":\"Dashboard_detail-item__3sS05\",\"label\":\"Dashboard_label__2pLvS\",\"content\":\"Dashboard_content__37CXM\",\"action\":\"Dashboard_action__Qvz0B\",\"ticket-list\":\"Dashboard_ticket-list__2d55k\",\"completed_task\":\"Dashboard_completed_task__Uz_lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__2RzYz\",\"tiles\":\"Dashboard_tiles__1cs7I\",\"task-tray\":\"Dashboard_task-tray__2A2Ey\",\"list-item\":\"Dashboard_list-item__2fnpW\",\"details\":\"Dashboard_details__1Wp_8\",\"detail-item\":\"Dashboard_detail-item__30oox\",\"label\":\"Dashboard_label__15Y3V\",\"content\":\"Dashboard_content__fE3g4\",\"action\":\"Dashboard_action__5pEKU\",\"ticket-list\":\"Dashboard_ticket-list__klX7O\",\"completed_task\":\"Dashboard_completed_task__VoHmg\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 229;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"IcdCptStatus_root__VpDPD\",\"fetch\":\"IcdCptStatus_fetch__39I55\",\"success\":\"IcdCptStatus_success__1mWTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingComponent_root__2UfOh\",\"overlay\":\"LoadingComponent_overlay__21www\",\"loading\":\"LoadingComponent_loading__3PDNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageTitleComponent_root__3xaWu\",\"title\":\"PageTitleComponent_title__1Br2u\",\"status\":\"PageTitleComponent_status__2N8C5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TaskTrayComponent_root__31ufL\",\"title\":\"TaskTrayComponent_title__2hrpU\",\"wrapper\":\"TaskTrayComponent_wrapper__1iTYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TableFooterComponent_root__FICsV\",\"text\":\"TableFooterComponent_text__3VtIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"ValueField_field__3EGEH\",\"label\":\"ValueField_label__2SDLZ\",\"value\":\"ValueField_value__if9Zt\",\"center\":\"ValueField_center__37s1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ReimbursementInfoComponent_root__3X0PJ\",\"header-container\":\"ReimbursementInfoComponent_header-container__2iqQ1\",\"header\":\"ReimbursementInfoComponent_header__wqfRq\",\"title\":\"ReimbursementInfoComponent_title__1KnEr\",\"content\":\"ReimbursementInfoComponent_content__13H5N\",\"basic-info\":\"ReimbursementInfoComponent_basic-info__2zrkK\",\"label\":\"ReimbursementInfoComponent_label__-5nVw\",\"collapsible-cell\":\"ReimbursementInfoComponent_collapsible-cell__wHNez\",\"container\":\"ReimbursementInfoComponent_container__2qC9R\",\"show-cell\":\"ReimbursementInfoComponent_show-cell__3yzF_\",\"cell\":\"ReimbursementInfoComponent_cell__1WCQD\",\"groups\":\"ReimbursementInfoComponent_groups__354nf\",\"input\":\"ReimbursementInfoComponent_input__2ORst\",\"reasons-container\":\"ReimbursementInfoComponent_reasons-container__336Zh\",\"delete\":\"ReimbursementInfoComponent_delete__2FSlo\",\"reasons\":\"ReimbursementInfoComponent_reasons__VdATs\",\"add-link\":\"ReimbursementInfoComponent_add-link__3uk2C\",\"empty-reasons\":\"ReimbursementInfoComponent_empty-reasons__OMf7M\",\"footer\":\"ReimbursementInfoComponent_footer__1lxo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__3d9Cb\",\"wrapper\":\"Header_wrapper__11cP0\",\"groups\":\"Header_groups__1XNBo\",\"center\":\"Header_center__21GKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"Protected_main-container__26YI3\",\"sub-container\":\"Protected_sub-container__3hCgJ\",\"content\":\"Protected_content__1ikZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Utilization_root__7mMYd\",\"header\":\"Utilization_header__3-DmX\",\"graph\":\"Utilization_graph__jS7Y3\",\"anual-benefit\":\"Utilization_anual-benefit__PiGUz\",\"line-graph\":\"Utilization_line-graph__2pYxS\",\"container\":\"Utilization_container__2_WFM\",\"line-container\":\"Utilization_line-container__2ZwHO\",\"item\":\"Utilization_item__2nbS9\",\"line-details\":\"Utilization_line-details__3ShmM\",\"label\":\"Utilization_label__mglW7\",\"color\":\"Utilization_color__3-ICH\",\"search\":\"Utilization_search__Abs3z\",\"table\":\"Utilization_table__1HuJw\",\"cell\":\"Utilization_cell__uCofH\",\"icon\":\"Utilization_icon__3jhC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SnackbarComponent_root___7Fjo\",\"icon\":\"SnackbarComponent_icon__3G7pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BreadcrumbsComponent_root__tgbvN\",\"item\":\"BreadcrumbsComponent_item__U7DgC\",\"active\":\"BreadcrumbsComponent_active__2PIYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"ClaimList_selected__3Rn65\",\"default-override\":\"ClaimList_default-override__1IClS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__fL0nk\",\"label\":\"ToothNumber_label__2QAUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ToothNumber_root__QsneL\",\"label\":\"ToothNumber_label__2Ge1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__21XST\",\"first-container\":\"ClaimReimbursement_first-container__2yvyO\",\"groups\":\"ClaimReimbursement_groups__3nZvd\",\"input\":\"ClaimReimbursement_input__1NZdS\",\"child-container\":\"ClaimReimbursement_child-container__3yEse\",\"tables-container\":\"ClaimReimbursement_tables-container__2uzwJ\",\"left-side\":\"ClaimReimbursement_left-side__3wgYg\",\"wrapper\":\"ClaimReimbursement_wrapper__3iC8w\",\"table\":\"ClaimReimbursement_table__2wVgm\",\"table-header\":\"ClaimReimbursement_table-header__2slfB\",\"table-description\":\"ClaimReimbursement_table-description__3LfKE\",\"add-link\":\"ClaimReimbursement_add-link__2JoUD\",\"row\":\"ClaimReimbursement_row__1UAk9\",\"align\":\"ClaimReimbursement_align__1Kdzp\",\"center\":\"ClaimReimbursement_center__216eV\",\"right\":\"ClaimReimbursement_right__2S_Vn\",\"table-total\":\"ClaimReimbursement_table-total__3nxWO\",\"caption\":\"ClaimReimbursement_caption__2CsGK\",\"amount\":\"ClaimReimbursement_amount__3ImWL\",\"right-side\":\"ClaimReimbursement_right-side__17tpL\",\"sticky\":\"ClaimReimbursement_sticky__105xy\",\"grand-total\":\"ClaimReimbursement_grand-total__2eO_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LimitTable_root__1DBjU\",\"header\":\"LimitTable_header__3wAD9\",\"groups\":\"LimitTable_groups__aoDPg\",\"field\":\"LimitTable_field__14Ts8\",\"label\":\"LimitTable_label__2e3n3\",\"value\":\"LimitTable_value__1kdIS\",\"table\":\"LimitTable_table__2yrPv\",\"hidden\":\"LimitTable_hidden__38TGg\",\"search\":\"LimitTable_search__YDrZQ\",\"cell\":\"LimitTable_cell__2qLyf\",\"footer\":\"LimitTable_footer__15g6g\",\"center\":\"LimitTable_center__69LSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimReimbursement_root__1sbBo\",\"first-container\":\"ClaimReimbursement_first-container__32uSx\",\"groups\":\"ClaimReimbursement_groups__241R5\",\"input\":\"ClaimReimbursement_input___OMPJ\",\"child-container\":\"ClaimReimbursement_child-container__2wtdp\",\"left-side\":\"ClaimReimbursement_left-side__1goqX\",\"right-side\":\"ClaimReimbursement_right-side__38MYX\",\"tables-container\":\"ClaimReimbursement_tables-container__249Qz\",\"wrapper\":\"ClaimReimbursement_wrapper__383Ih\",\"table\":\"ClaimReimbursement_table__1nj02\",\"table-header\":\"ClaimReimbursement_table-header__cQQ21\",\"table-description\":\"ClaimReimbursement_table-description__Pq9Hn\",\"add-link\":\"ClaimReimbursement_add-link__2dL38\",\"row\":\"ClaimReimbursement_row__2HCe3\",\"align\":\"ClaimReimbursement_align__j6IS3\",\"center\":\"ClaimReimbursement_center__S4RER\",\"right\":\"ClaimReimbursement_right__XeAFi\",\"table-total\":\"ClaimReimbursement_table-total__1pp3m\",\"caption\":\"ClaimReimbursement_caption__3TBP1\",\"amount\":\"ClaimReimbursement_amount__rKTYK\",\"sticky\":\"ClaimReimbursement_sticky__3BK9k\",\"grand-total\":\"ClaimReimbursement_grand-total__2N-VA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BundleDetails_root__19BwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchList_root__GmVH1\",\"buttonWrapper\":\"BatchList_buttonWrapper__2sLPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__2m6gY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureList_root__3O8b6\",\"table\":\"ProcedureList_table__34qBa\",\"table-header\":\"ProcedureList_table-header__3QCTp\",\"table-description\":\"ProcedureList_table-description__3UuvP\",\"add-link\":\"ProcedureList_add-link__2AoGx\",\"row\":\"ProcedureList_row__2Ve69\",\"align\":\"ProcedureList_align__2tPN_\",\"center\":\"ProcedureList_center__1VjsQ\",\"right\":\"ProcedureList_right__3XCbT\",\"discrepancy\":\"ProcedureList_discrepancy__1e3X1\",\"icon-container\":\"ProcedureList_icon-container__oKXTC\",\"table-total\":\"ProcedureList_table-total__2mgqx\",\"caption\":\"ProcedureList_caption__1J0kr\",\"amount\":\"ProcedureList_amount__2l3h5\",\"groups\":\"ProcedureList_groups__3EVV6\",\"input\":\"ProcedureList_input__2KG3R\",\"buttons\":\"ProcedureList_buttons__3CyFH\",\"table-grid\":\"ProcedureList_table-grid__2A8iX\",\"message\":\"ProcedureList_message__9EJOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProcedureForm_root__J7-_W\",\"groups\":\"ProcedureForm_groups__1wdPR\",\"input\":\"ProcedureForm_input__3f_i3\",\"description\":\"ProcedureForm_description__EMxJT\",\"code\":\"ProcedureForm_code__3gj_c\",\"buttons\":\"ProcedureForm_buttons__23tX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeList_root__1nFYH\",\"table\":\"ProfessionalFeeList_table__2CEPY\",\"specialization\":\"ProfessionalFeeList_specialization__2Kfae\",\"table-header\":\"ProfessionalFeeList_table-header__1wYMV\",\"table-description\":\"ProfessionalFeeList_table-description__g9VS-\",\"add-link\":\"ProfessionalFeeList_add-link__3nrbv\",\"row\":\"ProfessionalFeeList_row__2xo9x\",\"align\":\"ProfessionalFeeList_align__30_8y\",\"center\":\"ProfessionalFeeList_center__UtGci\",\"right\":\"ProfessionalFeeList_right__2SABv\",\"discrepancy\":\"ProfessionalFeeList_discrepancy__1Z6g6\",\"icon-container\":\"ProfessionalFeeList_icon-container__4l6V-\",\"table-total\":\"ProfessionalFeeList_table-total__HUwbc\",\"caption\":\"ProfessionalFeeList_caption__2cbLV\",\"amount\":\"ProfessionalFeeList_amount__2kNXu\",\"groups\":\"ProfessionalFeeList_groups__1176s\",\"input\":\"ProfessionalFeeList_input__2yu47\",\"buttons\":\"ProfessionalFeeList_buttons__1VX4P\",\"table-grid\":\"ProfessionalFeeList_table-grid__2DNz5\",\"message\":\"ProfessionalFeeList_message__h8DGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimFooter_root__1CI_E\",\"escalate\":\"ClaimFooter_escalate__30D6D\",\"header-container\":\"ClaimFooter_header-container__1Btp5\",\"header\":\"ClaimFooter_header__1i337\",\"title\":\"ClaimFooter_title__1NAHG\",\"content\":\"ClaimFooter_content__2GZa0\",\"input\":\"ClaimFooter_input__1hfjc\",\"footer\":\"ClaimFooter_footer__2gbHe\",\"assign\":\"ClaimFooter_assign__3kn3z\",\"to\":\"ClaimFooter_to__nvPCx\",\"action\":\"ClaimFooter_action__mLFex\",\"reassign\":\"ClaimFooter_reassign__1xqIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__33sf3\",\"first-container\":\"ClaimInPatient_first-container__2gCZq\",\"groups\":\"ClaimInPatient_groups__1Cz9S\",\"input\":\"ClaimInPatient_input__3PUnj\",\"child-container\":\"ClaimInPatient_child-container__3OX0C\",\"left-side\":\"ClaimInPatient_left-side__3g4Tb\",\"right-side\":\"ClaimInPatient_right-side__1KzGH\",\"tables-container\":\"ClaimInPatient_tables-container__2Tsqm\",\"wrapper\":\"ClaimInPatient_wrapper__2mNR8\",\"table\":\"ClaimInPatient_table__2gn3O\",\"table-header\":\"ClaimInPatient_table-header__2Sx2G\",\"table-description\":\"ClaimInPatient_table-description__29Zrj\",\"add-link\":\"ClaimInPatient_add-link__1lGRd\",\"row\":\"ClaimInPatient_row__1D4Qo\",\"align\":\"ClaimInPatient_align__2Ulsn\",\"center\":\"ClaimInPatient_center__3RFf5\",\"right\":\"ClaimInPatient_right__VwgTV\",\"table-total\":\"ClaimInPatient_table-total__t7p16\",\"caption\":\"ClaimInPatient_caption__3GCDs\",\"amount\":\"ClaimInPatient_amount__3VBfV\",\"sticky\":\"ClaimInPatient_sticky__WMaZ7\",\"grand-total\":\"ClaimInPatient_grand-total__36ZNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__gOq60\",\"first-container\":\"ClaimOutPatientProcedure_first-container__3wjKw\",\"groups\":\"ClaimOutPatientProcedure_groups__24jrj\",\"input\":\"ClaimOutPatientProcedure_input__32TiB\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2DP7G\",\"left-side\":\"ClaimOutPatientProcedure_left-side__2PMEQ\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2iRHp\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__1ppZU\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__1yzW0\",\"table\":\"ClaimOutPatientProcedure_table__1UC1e\",\"table-header\":\"ClaimOutPatientProcedure_table-header__3pQqV\",\"table-description\":\"ClaimOutPatientProcedure_table-description__1_UsW\",\"add-link\":\"ClaimOutPatientProcedure_add-link__3N6Uy\",\"row\":\"ClaimOutPatientProcedure_row__qUjSD\",\"align\":\"ClaimOutPatientProcedure_align__sHOF6\",\"center\":\"ClaimOutPatientProcedure_center__1xZu6\",\"right\":\"ClaimOutPatientProcedure_right__3tzvA\",\"table-total\":\"ClaimOutPatientProcedure_table-total__VEE5p\",\"caption\":\"ClaimOutPatientProcedure_caption__qSby4\",\"amount\":\"ClaimOutPatientProcedure_amount__1zvzk\",\"sticky\":\"ClaimOutPatientProcedure_sticky__2Xd7-\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__3bQu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__1I6mc\",\"first-container\":\"ClaimOutPatientConsultation_first-container__5h6py\",\"groups\":\"ClaimOutPatientConsultation_groups__NQTI_\",\"input\":\"ClaimOutPatientConsultation_input__2R2_m\",\"child-container\":\"ClaimOutPatientConsultation_child-container__3eWe5\",\"left-side\":\"ClaimOutPatientConsultation_left-side__184gF\",\"right-side\":\"ClaimOutPatientConsultation_right-side__3o07W\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__3iJbh\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__2ajzz\",\"table\":\"ClaimOutPatientConsultation_table__4pv54\",\"table-header\":\"ClaimOutPatientConsultation_table-header__3P4Jp\",\"table-description\":\"ClaimOutPatientConsultation_table-description__2e6Hm\",\"add-link\":\"ClaimOutPatientConsultation_add-link__1Ticr\",\"row\":\"ClaimOutPatientConsultation_row__1JvqS\",\"align\":\"ClaimOutPatientConsultation_align__makXE\",\"center\":\"ClaimOutPatientConsultation_center__3Ie9L\",\"right\":\"ClaimOutPatientConsultation_right__gTeyd\",\"table-total\":\"ClaimOutPatientConsultation_table-total__3D0no\",\"caption\":\"ClaimOutPatientConsultation_caption__2MBir\",\"amount\":\"ClaimOutPatientConsultation_amount__3pIys\",\"sticky\":\"ClaimOutPatientConsultation_sticky__1DAFY\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__1-tgH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaymentRequestPage_root__3lESZ\",\"text-fields\":\"PaymentRequestPage_text-fields__2HVGB\",\"sub-container\":\"PaymentRequestPage_sub-container__3pZtL\",\"input-container\":\"PaymentRequestPage_input-container__1YBoN\",\"ellipsis-container\":\"PaymentRequestPage_ellipsis-container__SVU-e\",\"table-container\":\"PaymentRequestPage_table-container__13AOW\",\"headers\":\"PaymentRequestPage_headers__3Uo50\",\"header\":\"PaymentRequestPage_header__1bcNZ\",\"submit-header\":\"PaymentRequestPage_submit-header__1W0nt\",\"dialog-container\":\"PaymentRequestPage_dialog-container__3Iork\",\"buttonWrapper\":\"PaymentRequestPage_buttonWrapper__37_w4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__1uzvq\",\"groups\":\"ProfessionalFeeForm_groups__1znzB\",\"input\":\"ProfessionalFeeForm_input__1qWi3\",\"buttons\":\"ProfessionalFeeForm_buttons__3iX1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PartnerNetwork_root__28nD-\",\"header\":\"PartnerNetwork_header__2ivra\",\"search\":\"PartnerNetwork_search__2t7aN\",\"table\":\"PartnerNetwork_table__220LN\",\"hidden\":\"PartnerNetwork_hidden__tCf0J\",\"cell\":\"PartnerNetwork_cell__2Mv5F\",\"doctors\":\"PartnerNetwork_doctors__1POnD\",\"header-container\":\"PartnerNetwork_header-container__2qsSV\",\"title\":\"PartnerNetwork_title__2-tcg\",\"content\":\"PartnerNetwork_content__3UWZv\",\"center\":\"PartnerNetwork_center__wFHaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimInPatient_root__2v-Iq\",\"first-container\":\"ClaimInPatient_first-container__OXZr8\",\"groups\":\"ClaimInPatient_groups__lcOua\",\"input\":\"ClaimInPatient_input__3jdIQ\",\"child-container\":\"ClaimInPatient_child-container__QIIuT\",\"tables-container\":\"ClaimInPatient_tables-container__LqKij\",\"left-side\":\"ClaimInPatient_left-side__Tq7gv\",\"wrapper\":\"ClaimInPatient_wrapper__ZH-92\",\"table\":\"ClaimInPatient_table__dew6o\",\"table-header\":\"ClaimInPatient_table-header__FsuTv\",\"table-description\":\"ClaimInPatient_table-description__1Fe9U\",\"add-link\":\"ClaimInPatient_add-link__346Cy\",\"row\":\"ClaimInPatient_row__2KCab\",\"align\":\"ClaimInPatient_align__1955S\",\"center\":\"ClaimInPatient_center__VQv4W\",\"right\":\"ClaimInPatient_right__3L7S3\",\"table-total\":\"ClaimInPatient_table-total__jZtXf\",\"caption\":\"ClaimInPatient_caption__1E9EL\",\"amount\":\"ClaimInPatient_amount__2KocC\",\"right-side\":\"ClaimInPatient_right-side__3ajwn\",\"sticky\":\"ClaimInPatient_sticky__2ebbG\",\"grand-total\":\"ClaimInPatient_grand-total__xFw4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientProcedure_root__37MO9\",\"first-container\":\"ClaimOutPatientProcedure_first-container__13vV3\",\"groups\":\"ClaimOutPatientProcedure_groups__2gG1u\",\"input\":\"ClaimOutPatientProcedure_input__3AC30\",\"child-container\":\"ClaimOutPatientProcedure_child-container__2u8xk\",\"tables-container\":\"ClaimOutPatientProcedure_tables-container__eGzg4\",\"left-side\":\"ClaimOutPatientProcedure_left-side__3C9TS\",\"wrapper\":\"ClaimOutPatientProcedure_wrapper__16Yv8\",\"table\":\"ClaimOutPatientProcedure_table__12U0M\",\"table-header\":\"ClaimOutPatientProcedure_table-header__1JvHk\",\"table-description\":\"ClaimOutPatientProcedure_table-description__oSDoe\",\"add-link\":\"ClaimOutPatientProcedure_add-link__bxevU\",\"row\":\"ClaimOutPatientProcedure_row__2AgNm\",\"align\":\"ClaimOutPatientProcedure_align__2_YV2\",\"center\":\"ClaimOutPatientProcedure_center__D37q1\",\"right\":\"ClaimOutPatientProcedure_right__1XohB\",\"table-total\":\"ClaimOutPatientProcedure_table-total__1JfT3\",\"caption\":\"ClaimOutPatientProcedure_caption__zHxB5\",\"amount\":\"ClaimOutPatientProcedure_amount__2-LZR\",\"right-side\":\"ClaimOutPatientProcedure_right-side__2fKwq\",\"sticky\":\"ClaimOutPatientProcedure_sticky__24mpW\",\"grand-total\":\"ClaimOutPatientProcedure_grand-total__1r2s9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimOutPatientConsultation_root__27aGh\",\"first-container\":\"ClaimOutPatientConsultation_first-container__2jxrr\",\"groups\":\"ClaimOutPatientConsultation_groups__3XWG-\",\"input\":\"ClaimOutPatientConsultation_input__62Yw0\",\"child-container\":\"ClaimOutPatientConsultation_child-container__1FM9P\",\"tables-container\":\"ClaimOutPatientConsultation_tables-container__kpByP\",\"left-side\":\"ClaimOutPatientConsultation_left-side__2Fi3P\",\"wrapper\":\"ClaimOutPatientConsultation_wrapper__2-nz3\",\"table\":\"ClaimOutPatientConsultation_table__3IuV2\",\"table-header\":\"ClaimOutPatientConsultation_table-header__BF9Bp\",\"table-description\":\"ClaimOutPatientConsultation_table-description__1ZXuv\",\"add-link\":\"ClaimOutPatientConsultation_add-link__2Qq6L\",\"row\":\"ClaimOutPatientConsultation_row__fXDHe\",\"align\":\"ClaimOutPatientConsultation_align__2_uM2\",\"center\":\"ClaimOutPatientConsultation_center__3k5RP\",\"right\":\"ClaimOutPatientConsultation_right__2-rsT\",\"table-total\":\"ClaimOutPatientConsultation_table-total__1MwcL\",\"caption\":\"ClaimOutPatientConsultation_caption__37p4X\",\"amount\":\"ClaimOutPatientConsultation_amount__2b19u\",\"right-side\":\"ClaimOutPatientConsultation_right-side__O3yFh\",\"sticky\":\"ClaimOutPatientConsultation_sticky__ToHiR\",\"grand-total\":\"ClaimOutPatientConsultation_grand-total__13Qul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemForm_root__2wVSO\",\"groups\":\"HospitalItemForm_groups__1Fg5M\",\"input\":\"HospitalItemForm_input__1mYF_\",\"description\":\"HospitalItemForm_description__14Kba\",\"code\":\"HospitalItemForm_code__2jYri\",\"buttons\":\"HospitalItemForm_buttons__37mLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer2_app-bar__3VPur\",\"root\":\"PdfViewer2_root__29H9D\",\"controls\":\"PdfViewer2_controls__2l3Du\",\"control\":\"PdfViewer2_control__3VcZS\",\"disabled\":\"PdfViewer2_disabled__bNT53\",\"pdf\":\"PdfViewer2_pdf__2PQdd\",\"page-number\":\"PdfViewer2_page-number__HnONp\",\"file-name\":\"PdfViewer2_file-name__1ruAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HospitalItemList_root__15jC2\",\"table\":\"HospitalItemList_table__3yh5r\",\"table-header\":\"HospitalItemList_table-header__3RZl4\",\"table-description\":\"HospitalItemList_table-description__364M7\",\"add-link\":\"HospitalItemList_add-link__Xdz4i\",\"row\":\"HospitalItemList_row__1If2d\",\"align\":\"HospitalItemList_align__3ghha\",\"center\":\"HospitalItemList_center__3LdSG\",\"right\":\"HospitalItemList_right__2swK1\",\"discrepancy\":\"HospitalItemList_discrepancy__3KCEE\",\"icon-container\":\"HospitalItemList_icon-container__2YuKZ\",\"table-total\":\"HospitalItemList_table-total__zx-JI\",\"caption\":\"HospitalItemList_caption__37q7e\",\"amount\":\"HospitalItemList_amount__1uGS2\",\"groups\":\"HospitalItemList_groups__B6ozB\",\"input\":\"HospitalItemList_input__1lx7g\",\"buttons\":\"HospitalItemList_buttons__1PYeO\",\"table-grid\":\"HospitalItemList_table-grid__3rmkl\",\"message\":\"HospitalItemList_message__1XsB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__2RjZ-\",\"first-container\":\"ClaimEmergency_first-container__3U3WQ\",\"groups\":\"ClaimEmergency_groups__2XAPr\",\"input\":\"ClaimEmergency_input__gRc92\",\"child-container\":\"ClaimEmergency_child-container__NS33H\",\"left-side\":\"ClaimEmergency_left-side__NaeJ8\",\"right-side\":\"ClaimEmergency_right-side__1-rH1\",\"tables-container\":\"ClaimEmergency_tables-container__Udvra\",\"wrapper\":\"ClaimEmergency_wrapper__3AdEy\",\"table\":\"ClaimEmergency_table__zDVzz\",\"table-header\":\"ClaimEmergency_table-header__3OOKd\",\"table-description\":\"ClaimEmergency_table-description__JeGzv\",\"add-link\":\"ClaimEmergency_add-link__2cF2u\",\"row\":\"ClaimEmergency_row__1UVHF\",\"align\":\"ClaimEmergency_align__3Lhvw\",\"center\":\"ClaimEmergency_center__2fNnf\",\"right\":\"ClaimEmergency_right__2GSG2\",\"table-total\":\"ClaimEmergency_table-total__3Ryh1\",\"caption\":\"ClaimEmergency_caption__WVnQP\",\"amount\":\"ClaimEmergency_amount__YNnko\",\"sticky\":\"ClaimEmergency_sticky__2Kh0X\",\"grand-total\":\"ClaimEmergency_grand-total__2qSI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimEmergency_root__3DdFv\",\"first-container\":\"ClaimEmergency_first-container__2ExBv\",\"groups\":\"ClaimEmergency_groups___-BUP\",\"input\":\"ClaimEmergency_input__26-7y\",\"child-container\":\"ClaimEmergency_child-container__RkcSX\",\"tables-container\":\"ClaimEmergency_tables-container__2NU11\",\"left-side\":\"ClaimEmergency_left-side__3Ejv9\",\"wrapper\":\"ClaimEmergency_wrapper__2KVY3\",\"table\":\"ClaimEmergency_table__3b9Gx\",\"table-header\":\"ClaimEmergency_table-header__1VXvx\",\"table-description\":\"ClaimEmergency_table-description__Z5jRp\",\"add-link\":\"ClaimEmergency_add-link__g5KU5\",\"row\":\"ClaimEmergency_row__1WDes\",\"align\":\"ClaimEmergency_align__2TR6m\",\"center\":\"ClaimEmergency_center__1W0ME\",\"right\":\"ClaimEmergency_right__1XxHA\",\"table-total\":\"ClaimEmergency_table-total__1Gg-W\",\"caption\":\"ClaimEmergency_caption__1uZX4\",\"amount\":\"ClaimEmergency_amount__3lbzz\",\"right-side\":\"ClaimEmergency_right-side__2ecDG\",\"sticky\":\"ClaimEmergency_sticky__2QKl_\",\"grand-total\":\"ClaimEmergency_grand-total__SbpYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__282Ca\",\"first-container\":\"ClaimDental_first-container__3A9Fg\",\"groups\":\"ClaimDental_groups__10CFm\",\"input\":\"ClaimDental_input__aw-6O\",\"contract-range\":\"ClaimDental_contract-range__2VpO3\",\"chart\":\"ClaimDental_chart__2XPGT\",\"child-container\":\"ClaimDental_child-container__2XUY4\",\"tables-container\":\"ClaimDental_tables-container__Phg4z\",\"left-side\":\"ClaimDental_left-side__Njxq7\",\"wrapper\":\"ClaimDental_wrapper__2HG5j\",\"table\":\"ClaimDental_table__1pFMs\",\"table-header\":\"ClaimDental_table-header__mG3uP\",\"table-description\":\"ClaimDental_table-description__15-bq\",\"add-link\":\"ClaimDental_add-link__3goyc\",\"row\":\"ClaimDental_row___VONI\",\"align\":\"ClaimDental_align__xnj4s\",\"center\":\"ClaimDental_center__3hdRa\",\"right\":\"ClaimDental_right__1ETNp\",\"table-total\":\"ClaimDental_table-total__2X8Sh\",\"caption\":\"ClaimDental_caption__anFy9\",\"amount\":\"ClaimDental_amount__3eARb\",\"right-side\":\"ClaimDental_right-side__260cv\",\"sticky\":\"ClaimDental_sticky__27LBb\",\"grand-total\":\"ClaimDental_grand-total__3b_SY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChatBox_root__jSz04\",\"wrapper\":\"ChatBox_wrapper__8Ky8P\",\"header\":\"ChatBox_header__2Jxo1\",\"title\":\"ChatBox_title__2o9Pe\",\"body\":\"ChatBox_body__3mZqA\",\"messages\":\"ChatBox_messages__3qxpg\",\"split\":\"ChatBox_split__3mlzt\",\"balloon\":\"ChatBox_balloon__3gLgq\",\"mheader\":\"ChatBox_mheader__180Pj\",\"sender\":\"ChatBox_sender__18Tx1\",\"time\":\"ChatBox_time__1ZHnb\",\"mbody\":\"ChatBox_mbody__17auY\",\"content\":\"ChatBox_content__m09Ig\",\"receive\":\"ChatBox_receive__1At1g\",\"me\":\"ChatBox_me__1pGgD\",\"placeholder\":\"ChatBox_placeholder__2If2H\"};","import { library } from '@fortawesome/fontawesome-svg-core'\n\n// ist of font that will use\nimport {\n  faHome,\n  faBoxOpen,\n  faBookOpen,\n  faTools,\n  faFileAlt,\n  faExclamationCircle,\n  faBalanceScale,\n  faEdit,\n  faTrash,\n  faSave,\n  faPrint,\n  faSearchPlus,\n  faSearchMinus,\n  faArrowAltCircleRight,\n  faArrowAltCircleLeft,\n  faCalendarDay\n} from '@fortawesome/free-solid-svg-icons'\n\nconst FontAwesomeLibrary = {\n  init: () => {\n    library.add(\n      faHome,\n      faBoxOpen,\n      faBookOpen,\n      faTools,\n      faFileAlt,\n      faExclamationCircle,\n      faBalanceScale,\n      faEdit,\n      faTrash,\n      faSave,\n      faPrint,\n      faSearchPlus,\n      faSearchMinus,\n      faArrowAltCircleRight,\n      faArrowAltCircleLeft,\n      faCalendarDay\n    )\n  }\n}\n\nexport default FontAwesomeLibrary\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\n\nimport classes from './CustomTextField.module.scss'\nexport default function CustomTextField (props) {\n  const { label = '', required, readOnly, constainerStyle = {}, error, onChange, type, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n    if (typeof value === 'number') {\n      if (value <= 0) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = e => {\n    setError()\n    if (typeof onChange === 'function') onChange(e)\n  }\n\n  return (\n    <div className={classes.root} style={constainerStyle}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={() => setFocus(false)}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                type={type}\n                {...other}\n                onFocus={() => setFocus(true)}\n                autoComplete='off'\n              />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './IcdCptStatus.module.scss'\n\nlet reset = null\nlet set = null\nconst IcdCptStatusComponent = () => {\n  const [data, setData] = React.useState({})\n\n  React.useEffect(() => {\n    reset = () => setData({})\n    set = values => {\n      if (typeof values === 'function') setData(values)\n      else setData(p => ({ ...p, ...values }))\n    }\n  }, [])\n\n  const success = () => {\n    const _success = data.cpt_fetched === data.cpt_total && data.icd10_fetched === data.icd10_total\n\n    if (_success) setTimeout(() => setData({}), 2000)\n\n    return _success\n  }\n\n  return (\n    <React.Fragment>\n      {data.show && (\n        <div className={classes.root}>\n          <p className={`${classes.fetch} ${success() && classes.success}`}>\n            <span>Status: </span>\n            {success() ? 'Success' : 'Fetching'}\n          </p>\n\n          <p>\n            <span>CPT: </span>\n            {data.cpt_fetched}/{data.cpt_total}\n          </p>\n          <p>\n            <span>ICD: </span>\n            {data.icd10_fetched}/{data.icd10_total}\n          </p>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst IcdCptStatusReset = () => {\n  reset()\n}\n\nconst IcdCptStatusSet = values => {\n  set(values)\n}\n\nexport { IcdCptStatusComponent, IcdCptStatusReset, IcdCptStatusSet }\n","export default function GenerateFormData (data) {\n  const formData = new FormData()\n  Object.keys(data).map((item, index) => {\n    if (Array.isArray(data[item])) {\n      data[item].map(_item => {\n        const value = typeof _item === 'object' ? JSON.stringify(_item) : _item\n        formData.append(`${item}[]`, value)\n      })\n    } else {\n      const value = typeof data[item] === 'object' ? JSON.stringify(data[item]) : data[item]\n      formData.append(item, value)\n    }\n  })\n\n  return formData\n}\n","export const setPageTitle = payload => {\n  return {\n    type: 'SET_DASHBOARD_PAGE_TITLE',\n    payload\n  }\n}\n","export const setSnackbar = payload => {\n  return {\n    type: 'SET_SNACKBAR',\n    payload\n  }\n}\n","export const setPdf = payload => {\n  return {\n    type: 'SET_PDF',\n    payload\n  }\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport AlertTitle from '@material-ui/lab/AlertTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSnackbar } from 'Pages/Protected/Store/actions'\n\n// Style\nimport classes from './SnackbarComponent.module.scss'\n\nlet dispatch = null\n\nconst SnackbarComponent = () => {\n  const snackbar = useSelector(state => state.snackbar)\n  dispatch = useDispatch()\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return\n\n    dispatch(setSnackbar({ open: false }))\n  }\n\n  return (\n    <Snackbar\n      className={classes.root}\n      open={snackbar.open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n    >\n      <div>\n        <Alert\n          elevation={6}\n          variant='filled'\n          severity={snackbar.severity}\n          action={\n            <IconButton aria-label='delete' className={classes.icon} onClick={handleClose}>\n              <CloseIcon fontSize='small' />\n            </IconButton>\n          }\n        >\n          <AlertTitle>Error</AlertTitle>\n          {snackbar.message}\n        </Alert>\n      </div>\n    </Snackbar>\n  )\n}\n\nconst SnackbarService = {\n  set: args => dispatch(setSnackbar(args))\n}\n\nexport { SnackbarComponent, SnackbarService }\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setpageLoading } from 'Pages/Protected/Store/actions'\n\n// Style\nimport classes from './LoadingComponent.module.scss'\n\nlet dispatch = null\n\nconst LoadingComponent = ({ onScrollContainer, containerNode }) => {\n  const [containerStyle, setContainerStyle] = React.useState({})\n\n  React.useEffect(() => {\n    if (containerNode) {\n      const { top, left } = containerNode.getBoundingClientRect()\n      setContainerStyle({ top: `${top}px`, left: `${left}px` })\n    }\n  }, [containerNode])\n\n  dispatch = useDispatch()\n  const loading = useSelector(state => state.pageLoading)\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.root} style={containerStyle} onWheel={onScrollContainer}>\n          <div className={classes.overlay} />\n          <CircularProgress className={classes.loading} size={50} />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst LoadingService = {\n  loading: value => dispatch(setpageLoading(value))\n}\n\nexport { LoadingComponent, LoadingService }\n","export const setpageLoading = payload => {\n  return {\n    type: 'SET_PAGE_LOADING',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst ErrorPage = props => {\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        Page not found\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        We cant seem to find the page you're looking for.\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst ErrorPageInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst ErrorPageService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { ErrorPageInit, ErrorPage, ErrorPageService }\n","const ExcludeErrorConstants = {\n  '404': 'X-404',\n  all: 'X-All'\n}\nconst exclude = ({ headers, status }) => !!headers[ExcludeErrorConstants[status]]\n\nexport { exclude, ExcludeErrorConstants }\n","import { SnackbarService } from 'SharedComponents/SnackbarComponent/SnackbarComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { ErrorPageService } from 'SharedComponents/404/404'\n\nimport { exclude } from './exclude'\n\nconst handler = {\n  success: response => response,\n  fail: error => {\n    const { response, config } = error\n\n    if (!exclude({ headers: config.headers, status: 'all' })) {\n      if (response) {\n        const { status } = response\n\n        if (status >= 500 && status < 600) {\n          // Internal Server Error\n          SnackbarService.set({ open: true, message: 'Something went wrong!', severity: 'error' })\n        } else if (status === 404) {\n          // Resource not found\n          if (!exclude({ headers: response.config.headers, status })) {\n            ErrorPageService.redirect()\n          }\n        }\n      } else {\n        // No Internet\n        SnackbarService.set({ open: true, message: 'No internet connection!', severity: 'error' })\n      }\n    }\n\n    LoadingService.loading(false)\n\n    return Promise.reject(error)\n  }\n}\n\nexport default handler\n","import axios from 'axios'\nimport GenerateFormData from 'Utilities/GenerateFormData'\nimport ErrorHandler from 'Services/ErrorHandler'\n\nconst addToken = (data = {}) => !(data.hasOwnProperty('isAuthorized') && !data.isAuthorized)\n\nconst createInstance = (url = '') => {\n  let instance = axios.create()\n  let baseURL = null\n\n  instance.interceptors.request.use(request => {\n    // Do something before request is sent\n    if (!baseURL) {\n      baseURL = window.localStorage.partnerUrl\n        ? window.localStorage.partnerUrl + url\n        : `${process.env.REACT_APP_SERVER_API}${url}`\n\n      if (url === '/client' || url === '/icd') {\n        baseURL = window.localStorage.clientUrl || `${process.env.REACT_APP_CLIENT_API}/`\n        baseURL = baseURL.replace('/api/', '/')\n      }\n    }\n\n    request.baseURL = baseURL\n\n    const { data } = request\n\n    if (addToken(data)) request.headers['Authorization'] = `Bearer ${window.localStorage.getItem('token')}`\n\n    if (data) delete data.isAuthorized\n\n    if (data && !request.headers['skip_generate_form_data']) request.data = GenerateFormData(data)\n\n    // Check if login is made via hims-app and not awb-only app\n    // if (window.localStorage.getItem('hims_login') === 'true') {\n    //   request.headers['X-Hims-App'] = 'hims-app'\n    // }\n\n    return request\n  })\n\n  instance.interceptors.response.use(ErrorHandler.success, ErrorHandler.fail)\n\n  return instance\n}\n\nexport default createInstance\n","import instance from './instance'\nconst axios = instance()\nconst axiosClient = instance('/client')\nexport default class CommonServices {\n  // static login (data) {\n  //   return axios({\n  //     url: '/auth/login',\n  //     method: 'POST',\n  //     data: { ...data, isAuthorized: false }\n  //   })\n  // }\n\n  static login (data) {\n    return axiosClient({\n      url: '/api/login',\n      method: 'POST',\n      headers: { skip_generate_form_data: 1 },\n      data: { ...data, isAuthorized: false }\n    })\n  }\n\n  static logout (data) {\n    return axiosClient({\n      url: '/api/logout',\n      method: 'POST',\n      headers: { skip_generate_form_data: 1 },\n      data\n    })\n  }\n  static getMe (data) {\n    return axios({\n      url: '/me',\n      method: 'GET'\n    })\n  }\n}\n","export default class IndexedDb2 {\n  static async connect ({ dbName, stores = [], version = 1 }) {\n    return new Promise((resolve, reject) => {\n      let request = window.indexedDB.open(dbName /*, version */)\n\n      request.onupgradeneeded = function (event) {\n        const db = event.target.result\n\n        for (const store of stores) {\n          db.objectStoreNames.contains(store.name) || db.createObjectStore(store.name, { keyPath: store.keyPath })\n        }\n      }\n\n      request.onsuccess = function (event) {\n        const db = event.target.result\n        resolve(db)\n      }\n      request.onerror = function (event) {\n        console.log('[onerror]', request.error)\n        reject(request.error)\n      }\n    })\n  }\n\n  static async update ({ db, storeName, mode = 'readwrite', data }) {\n    const transaction = db.transaction(storeName, mode)\n    const objectStore = transaction.objectStore(storeName)\n    const { keyPath } = objectStore\n    for (let key in data) objectStore.put({ [keyPath]: key, value: data[key] })\n  }\n\n  static async add ({ db, storeName, mode = 'readwrite', data, mappings = null, item_success_insert }) {\n    let index = 0\n    const _add = () => {\n      if (index !== data.length) {\n        setTimeout(() => {\n          const transaction = db.transaction(storeName, mode)\n          const objectStore = transaction.objectStore(storeName)\n\n          const item = data[index]\n\n          if (item) {\n            const _item = mappings ? this.manipulateItem({ item, mappings }) : item\n            objectStore.add(_item)\n            if (item_success_insert) item_success_insert()\n          }\n\n          _add()\n          index++\n        }, 1)\n      }\n    }\n    _add()\n  }\n\n  static async clear ({ db, storeName, mode = 'readwrite' }) {\n    const transaction = db.transaction(storeName, mode)\n    const objectStore = transaction.objectStore(storeName)\n\n    return new Promise(resolve => {\n      objectStore.clear().onsuccess = event => {\n        resolve()\n      }\n    })\n  }\n\n  static manipulateItem ({ item, mappings }) {\n    const additional_data = {}\n    for (const mapping of mappings) {\n      const { from, to } = mapping\n\n      try {\n        additional_data[to] = item[from]\n      } catch (error) {\n        console.log(error)\n        console.log(item)\n        additional_data[to] = Date.now()\n      }\n    }\n    return { ...item, ...additional_data }\n  }\n\n  static async getData ({ db, storeName }) {\n    const transaction = db.transaction(storeName, 'readonly')\n    const objectStore = transaction.objectStore(storeName)\n\n    return new Promise(resolve => {\n      objectStore.getAll().onsuccess = function (event) {\n        resolve(event.target.result)\n      }\n    })\n  }\n}\n","import instance from './instance'\nconst axios = instance('/icd')\n\nexport default class CPT_ICDServices {\n  static getMany ({ type, limit, skip }) {\n    return axios({\n      url: `/api/${type}?filter={\"limit\":${limit}, \"skip\":${skip}}`,\n      method: 'GET'\n    })\n  }\n}\n","import IndexedDb2 from 'Utilities/IndexedDb2'\nimport CPT_ICDServices from 'Services/Api/CPT_ICDServices'\nconst dbName = 'himsDb'\nconst stores = [\n  { name: 'user_data', keyPath: ['key'] },\n  { name: 'config', keyPath: ['key'] },\n  { name: 'cpt', keyPath: ['key'] },\n  { name: 'cpt_list', keyPath: ['_id', 'label'] },\n  { name: 'icd10', keyPath: ['key'] },\n  { name: 'icd10_list', keyPath: ['_id', 'full_code', 'full_description'] }\n]\n\nexport default class ConfigController2 {\n  static async getUserManagementData () {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let result = await IndexedDb2.getData({ db, storeName: 'user_data' })\n\n    if (!result.length) return\n\n    let user_data = {}\n\n    for (let i of result) user_data[i.key] = i.value\n\n    return user_data\n  }\n\n  static async setUserManagementData (data) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    await IndexedDb2.update({ db, storeName: 'user_data', data })\n  }\n\n  static async clearUserManagementData (data) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    await IndexedDb2.clear({ db, storeName: 'user_data' })\n  }\n\n  static async initializeBaseUrls () {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let result = await IndexedDb2.getData({ db, storeName: 'config' })\n\n    if (!result.length) return\n\n    let config = {}\n\n    for (let i of result) config[i.key] = i.value\n\n    if (config['PARTNER_URL']) {\n      // window.localStorage.partnerUrl = config['PARTNER_URL']\n    }\n\n    if (config['CLIENT_URL']) {\n      // window.localStorage.clientUrl = config['CLIENT_URL']\n    }\n  }\n\n  static async updateCPT_ICD ({ cpt, icd10, IcdCptStatusSet }) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    if (!db) return\n\n    let stored_cpt = await IndexedDb2.getData({ db, storeName: 'cpt' })\n    let stored_icd10 = await IndexedDb2.getData({ db, storeName: 'icd10' })\n\n    if (!stored_cpt.length || !stored_icd10.length) {\n      await IndexedDb2.update({ db, storeName: 'cpt', data: cpt })\n      await IndexedDb2.update({ db, storeName: 'icd10', data: icd10 })\n      this.setCPT_ICD({ IcdCptStatusSet, cpt_count: cpt.count, icd10_count: icd10.count })\n    }\n  }\n\n  static async setCPT_ICD ({ IcdCptStatusSet, cpt_count, icd10_count }) {\n    const db = await IndexedDb2.connect({ dbName, stores })\n\n    const data_limit = process.env.REACT_APP_LIMIT_ICD_CPT ? parseInt(process.env.REACT_APP_LIMIT_ICD_CPT) : -1\n\n    if (!db) return\n\n    let already_fetched = {}\n\n    IcdCptStatusSet({\n      show: true,\n      cpt_fetched: 0,\n      cpt_total: data_limit > cpt_count || data_limit === -1 ? cpt_count : data_limit,\n      icd10_fetched: 0,\n      icd10_total: data_limit > icd10_count || data_limit === -1 ? icd10_count : data_limit\n    })\n\n    const fetchMore = async (args = {}) => {\n      let { type, collectrion_name, limit = 2000, skip = 0, mappings } = args\n\n      const item_success_insert = () => {\n        IcdCptStatusSet(p => {\n          const name = `${collectrion_name}_fetched`\n          return {\n            ...p,\n            [name]: p[name] + 1\n          }\n        })\n      }\n      CPT_ICDServices.getMany({ type, limit, skip }).then(async ({ data }) => {\n        await IndexedDb2.add({ db, storeName: `${collectrion_name}_list`, data, mappings, item_success_insert })\n\n        if (!already_fetched[type]) already_fetched[type] = 0\n\n        already_fetched[type] += data.length\n\n        if (data.length < limit) return\n\n        if (data_limit === -1) {\n          fetchMore({ ...args, skip: already_fetched[type] })\n        } else if (already_fetched[type] < data_limit) {\n          const remaining = data_limit - already_fetched[type]\n\n          const _limit = remaining > 2000 ? 2000 : remaining\n          fetchMore({ ...args, skip: already_fetched[type], limit: _limit })\n        }\n      })\n    }\n\n    const limit = data_limit > -1 && data_limit < 2000 ? data_limit : 2000\n\n    fetchMore({ type: 'icd10-codes', collectrion_name: 'icd10', limit })\n    fetchMore({ type: 'cpts', collectrion_name: 'cpt', mappings: [{ from: 'description', to: 'label' }], limit })\n  }\n}\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n// import TextField from '@material-ui/core/TextField'\n// import Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\n\nimport { IcdCptStatusComponent, IcdCptStatusReset, IcdCptStatusSet } from 'SharedComponents/IcdCptStatus/IcdCptStatus'\n\nimport { to } from 'await-to-js'\nimport CommonServices from 'Services/Api/CommonServices'\n\n// import { ConfigController } from 'Controllers/ConfigController'\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nimport classes from './LoginPage.module.scss'\nimport images from 'Constant/images/images'\n\nexport default function LoginPage ({ history }) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [user, setUser] = React.useState({ username: '', password: '' })\n  const [loginError, setLoginError] = React.useState({\n    show: false,\n    message: ''\n  })\n\n  React.useEffect(() => {\n    IcdCptStatusReset()\n    document.title = 'HIMS - Login'\n  }, [])\n\n  const submit = async event => {\n    event.preventDefault()\n    setDisableControls(true)\n\n    const [err, res] = await to(CommonServices.login(user))\n\n    if (err) {\n      setDisableControls(false)\n      let message = 'Login Failed!'\n      try {\n        message = err.response.data.message\n      } catch (ex) {}\n\n      setLoginError({ show: true, message: message })\n    } else {\n      const { login, icd10, cpt } = res.data\n\n      await ConfigController2.setUserManagementData(login)\n\n      ConfigController2.updateCPT_ICD({ icd10, cpt, IcdCptStatusSet })\n\n      window.localStorage.setItem('from_login', true)\n      history.push('/')\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {' '}\n      <Grid container>\n        <Grid item container xs={8} />\n        <Grid item container xs={3} direction='column' justify='center' alignItems='flex-start'>\n          <Grid item container className={classes.logo} alignItems='flex-end' justify='center'>\n            <img src={images.logo} alt='logo' />\n          </Grid>\n          <Grid item>\n            <Paper className={classes.container}>\n              <Typography variant='h5'>Intellicare HIMS</Typography>\n\n              <Typography variant='caption' className={`${classes.error} ${!loginError.show ? classes.hidden : ''}`}>\n                {loginError.message}\n              </Typography>\n\n              <form className={classes.form}>\n                <CustomTextField\n                  id='username'\n                  label='Username'\n                  disabled={disableControls}\n                  onChange={e => setUser({ ...user, username: e.target.value })}\n                />\n\n                <CustomTextField\n                  id='password'\n                  label='Password'\n                  type='password'\n                  disabled={disableControls}\n                  onChange={e => setUser({ ...user, password: e.target.value })}\n                />\n\n                <Button\n                  type='submit'\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  disabled={disableControls}\n                  onClick={submit}\n                >\n                  Login\n                </Button>\n\n                <div className={classes['forgot-password']}>\n                  <Link href='https://fb.com'>Forgot your password?</Link>\n                </div>\n              </form>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Typography className={classes.note}>\n              Problems logging in? Please <a href='./'>contact your IT Team</a> for assistance.\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/* Initialize CPT ICD Progress */}\n      <IcdCptStatusComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\n\n// Styles\nimport styles from './HeaderComponent.module.scss'\nimport images from 'Constant/images/images'\n\nexport default function HeaderComponent ({ logout }) {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  return (\n    <Grid item container className={styles.root}>\n      <Grid item className={styles['left-container']}>\n        <img src={images.logo} alt='logo' />\n      </Grid>\n      <Grid item className={styles['right-container']}>\n        <IconButton>\n          <NotificationsIcon />\n        </IconButton>\n\n        <Avatar alt='avatar' src={images.avatar} className={styles.avatar} />\n        <IconButton\n          aria-controls='simple-menu'\n          aria-haspopup='true'\n          onClick={event => setAnchorEl(event.currentTarget)}\n        >\n          <ArrowDropDown />\n        </IconButton>\n\n        <Menu\n          id='header-menu'\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          keepMounted\n          onClose={() => setAnchorEl(null)}\n        >\n          <MenuItem onClick={logout}>Logout</MenuItem>\n        </Menu>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSidebarItems } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './SideBarComponent.module.scss'\n\nlet dispatch = null\n\nconst SideBarComponent = () => {\n  dispatch = useDispatch()\n  const items = useSelector(state => state.sidebar)\n\n  return (\n    <div className={classes.root}>\n      <Scrollbars className={classes.menu}>\n        {items.map(item => (\n          <Link to={item.to} className={classes.item} key={item.to}>\n            <div className={classes.circle}>\n              <FontAwesomeIcon icon={item.icon} className={classes.icon} />\n            </div>\n            {item.label ? <span className={classes.text}>{item.label}</span> : ''}\n          </Link>\n        ))}\n\n        <Link to='/' className={classes.item}>\n          <div className={classes.circle}>\n            <FontAwesomeIcon icon='tools' className={classes.icon} />\n          </div>\n          <span className={classes.text}>Settings</span>\n        </Link>\n\n        <Link to='/' className={classes.item}>\n          <div className={classes.circle}>\n            <FontAwesomeIcon icon='book-open' className={classes.icon} />\n          </div>\n          {/* <span className={classes.text}>Settings</span> */}\n        </Link>\n      </Scrollbars>\n    </div>\n  )\n}\n\nconst SideBarService = {\n  setItems: items => {\n    dispatch(setSidebarItems(items))\n  }\n}\n\nexport { SideBarComponent, SideBarService }\n","export const setSidebarItems = payload => {\n  return {\n    type: 'SET_SIDEBAR_ITEMS',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageTitle } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './PageTitleComponent.module.scss'\n\nlet dispatch = null\n\nconst PageTitleComponent = () => {\n  dispatch = useDispatch()\n  const pageTitle = useSelector(state => state.pageTitle)\n  return (\n    <div className={classes.root}>\n      <Typography variant='h6' className={classes.title} id='dashboard-page-title'>\n        {pageTitle.text}\n      </Typography>\n\n      {pageTitle.status && (\n        <span\n          className={`${classes.status}`}\n          style={{ color: pageTitle.status.color, borderColor: pageTitle.status.color }}\n        >\n          {pageTitle.status.text}\n        </span>\n      )}\n    </div>\n  )\n}\n\nconst PageTitleService = (text, status = null) => {\n  dispatch(setPageTitle({ text, status }))\n}\n\nexport { PageTitleComponent, PageTitleService }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setBreadcrumbsItems, setSelectedBreadcrumbs } from 'Pages/Protected/Store/actions'\n\n// CSS Classes\nimport classes from './BreadcrumbsComponent.module.scss'\n\nlet dispatch = null\n\nconst BreadcrumbsComponent = () => {\n  dispatch = useDispatch()\n  const items = useSelector(state => state.breadcrumbs.selected)\n  return (\n    <Breadcrumbs aria-label='breadcrumb' className={classes.root}>\n      {items.map((item, index) => {\n        if (index !== items.length - 1) {\n          return (\n            <Link to={item.to} className={classes.item} key={index}>\n              <Typography variant='body2'>{item.text}</Typography>\n            </Link>\n          )\n        } else {\n          return (\n            <Typography color='textPrimary' variant='body2' key={index}>\n              {item.text}\n            </Typography>\n          )\n        }\n      })}\n    </Breadcrumbs>\n  )\n}\n\nconst BreadcrumbsService = {\n  setItems: items => dispatch(setBreadcrumbsItems(items)),\n  setSelectedItems: items => dispatch(setSelectedBreadcrumbs(items))\n}\n\nexport { BreadcrumbsComponent, BreadcrumbsService }\n","export const setBreadcrumbsItems = payload => {\n  return {\n    type: 'SET_BREADCRUMBS_ITEMS',\n    payload\n  }\n}\n\nexport const setSelectedBreadcrumbs = payload => {\n  return {\n    type: 'SET_SELECTED_BREADCRUMBS',\n    payload\n  }\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport printJS from 'print-js'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPdf } from 'Pages/Protected/Store/actions'\n\n// Styles\nimport classes from './PdfViewer2.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nlet dispatch = null\n\nconst PdfViewer2Component = () => {\n  dispatch = useDispatch()\n\n  const {\n    open = false,\n    name = '',\n    fileName = '',\n    initialPageNumber = 1,\n    initialScale = 1,\n    service,\n    onClose,\n    enabled\n  } = useSelector(state => state.pdf)\n\n  const [file, setFile] = React.useState()\n  const [numPages, setNumPages] = React.useState(0)\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n\n  React.useEffect(() => {\n    dispatch(setPdf({ enabled: true }))\n\n    if (service) {\n      service.then(response => {\n        const _blob = new Blob([response.data])\n        setFile(_blob)\n      })\n    }\n  }, [service])\n\n  const handleOnClose = () => {\n    if (!enabled) return\n\n    if (onClose) onClose()\n    dispatch(setPdf({ open: false, service: null, onClose: null }))\n    setFile()\n  }\n\n  const download = () => {\n    const url = URL.createObjectURL(new Blob([file]))\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', `${fileName}.pdf`)\n    document.body.appendChild(link)\n    link.click()\n  }\n\n  const print = async () => {\n    try {\n      const { ipcRenderer } = window.require('electron')\n      const data = await blobToBase64(file)\n      ipcRenderer.send('print-to-pdf', { data, fileName })\n\n      dispatch(setPdf({ enabled: false }))\n      ipcRenderer.on('print-to-pdf-close', event => {\n        dispatch(setPdf({ enabled: true }))\n      })\n    } catch (error) {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = function () {\n        const dataUrl = reader.result\n        const printable = dataUrl.split(',')[1]\n        printJS({ printable, type: 'pdf', base64: true })\n      }\n    }\n  }\n\n  const blobToBase64 = blob => {\n    return new Promise(resolve => {\n      const reader = new FileReader()\n      reader.onload = function () {\n        const dataUrl = reader.result\n        const base64 = dataUrl.split(',')[1]\n        resolve(base64)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  return (\n    <Dialog fullScreen open={open} onClose={handleOnClose} TransitionComponent={Transition}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton edge='start' color='inherit' onClick={handleOnClose} aria-label='close'>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            Preview Sheet\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent style={{ padding: '0px' }}>\n        <div className={classes.root}>\n          <div className={classes.controls}>\n            <Typography className={classes['file-name']} align='left'>\n              {name}\n            </Typography>\n            <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n            <Tooltip title='Previous Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n              <span>\n                <IconButton\n                  disabled={numPages <= 1}\n                  onClick={() => setPageNumber(pageNumber > 1 ? pageNumber - 1 : pageNumber)}\n                >\n                  <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Next Page' className={`${classes.control} ${numPages <= 1 ? classes.disabled : ''}`}>\n              <span>\n                <IconButton\n                  disabled={numPages <= 1}\n                  onClick={() => setPageNumber(pageNumber < numPages ? pageNumber + 1 : pageNumber)}\n                >\n                  <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Zoom in' className={classes.control}>\n              <span>\n                <IconButton onClick={() => setScale(scale + 0.2)}>\n                  <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Zoom out' className={classes.control}>\n              <span>\n                <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n                  <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Print' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n              <span>\n                <IconButton disabled={!enabled} onClick={print}>\n                  <FontAwesomeIcon icon='print' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n\n            <Tooltip title='Download' className={`${classes.control} ${!enabled ? classes.disabled : ''}`}>\n              <span>\n                <IconButton disabled={!enabled} onClick={download}>\n                  <FontAwesomeIcon icon='save' className={classes.icon} />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </div>\n\n          <div className={classes.pdf}>\n            <Document\n              file={file}\n              onLoadSuccess={document => {\n                setNumPages(document.numPages)\n              }}\n            >\n              <Page pageNumber={pageNumber} scale={scale} />\n            </Document>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst PdfViewer2Service = options => dispatch(setPdf(options))\n\nexport { PdfViewer2Component, PdfViewer2Service }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './TaskTrayComponent.module.scss'\n\nexport default function TaskTrayComponent ({ children, sizes, title = 'TASK TRAY', showTitle = true }) {\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    lg: 4\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        {showTitle && (\n          <Typography variant='subtitle1' className={classes.title}>\n            {title}\n          </Typography>\n        )}\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { Link } from 'react-router-dom'\n\n// CSS Classes\nimport classes from './TicketListComponent.module.scss'\n\n/**\n * Create ticket list component\n *\n * @param children child components \n * @param count count value to be displayed; keys: color, value\n * @param title title string\n * @param viewAllLink view all link\n * @param isFilterShown flag for showing filter\n */\nexport default function TicketListComponent ({ children, count, title, viewAllLink, isFilterShown = true }) {\n  const [filter, setFilter] = React.useState('all')\n  const handleChange = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Typography variant='subtitle1' className={classes.title}>\n        TICKET LIST\n      </Typography>\n      <Grid container className={classes.wrapper} spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.content}>\n            <div className={classes.wrapper}>\n              <div className={classes.header}>\n                <div className={classes.count}>\n                  <Typography variant='h5' className='color-7'>\n                    {count}\n                  </Typography>\n                </div>\n                { isFilterShown ? (\n                  <div className={classes.filter}>\n                    <span>\n                      <FormControl>\n                        <Select className={classes['select']} value={filter} onChange={handleChange}>\n                          <MenuItem value={'all'}>\n                            <Typography className={classes.input}>Assigned to All</Typography>\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </span>\n                  </div>\n                ) : '' }\n              </div>\n              <Typography variant='subtitle2' className={classes.title}>\n                {title}\n              </Typography>\n              <div className={classes.list}>{children}</div>\n              <div className={classes.action}>\n                <Link to={viewAllLink.to} className='text-link'>\n                  <Typography variant='caption' className='bold'>\n                    {viewAllLink.caption}\n                  </Typography>\n                </Link>\n              </div>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            {pagination && (\n              <TablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n                count={count}\n                rowsPerPage={limit}\n                page={page - 1}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        inputProps={{ 'aria-label': 'search google maps' }}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n      />\n    </Paper>\n  )\n}\n","import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nexport { CurrencyFormatter, DigitFormatter, UpperWord, DateFormatter, DateFormatterFromNow }\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'bundle-number', name: ' Bundle Number', sortField: 'bundle_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose} id='close'>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for bundle number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.bundle_number}>\n              <TableCell id={`bundle-number-${index}`}>{row.bundle_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`update-bundle-${index}`}>\n                <Link to={`/bundles/${row.bundle_number}`}>\n                  <Typography variant='caption' className='text-link underline'>\n                    {category === 'created' && 'Update'}\n                    {category === 'submitted' && 'View'}\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/be')\n\nexport default class BatchEncodingServices {\n  static getBundles (params) {\n    return axios({\n      url: '/bundles',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundleCount (params) {\n    return axios({\n      url: `/bundles/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static createBundle () {\n    return axios({\n      url: `/bundles`,\n      method: 'POST'\n    })\n  }\n\n  static updateBundle ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static submitBundle ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getBatches ({ bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'GET'\n    })\n  }\n\n  static updateBatch ({ bundle_number, batch_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static createBatch ({ data, bundle_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static deleteBatch ({ bundle_number, batch_number }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches/${batch_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleBatch ({ bundle_number, data }) {\n    return axios({\n      url: `/bundles/${bundle_number}/batches`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport moment from 'moment'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [bundles, setBundles] = React.useState({\n    created: { count: 0, data: [] },\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const generateBundleNumber = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* Created Bundles\n    Promise.all([\n      BatchEncodingServices.getBundles({ category: 'created', limit: 10, sort: 'date.due|desc', range: 'this-week' }),\n      BatchEncodingServices.getBundleCount({ category: 'created' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const createdBundles = batchResponse.data.data.results\n\n      const createdBundleCount = batchCountResponse.data.data\n      setBundles(prevState => ({ ...prevState, created: { data: createdBundles, count: createdBundleCount } }))\n    })\n\n    //* Submitted Bundles\n    Promise.all([\n      BatchEncodingServices.getBundles({ category: 'submitted', limit: 10, sort: 'date.due|desc', range: 'this-week' }),\n      BatchEncodingServices.getBundleCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const submittedBundles = batchResponse.data.data.results\n\n      const submittedBundleCount = batchCountResponse.data.data\n      setBundles(prevState => ({ ...prevState, submitted: { data: submittedBundles, count: submittedBundleCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    BatchEncodingServices.getBundles({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setBundles(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Bundles`), category })\n    BatchEncodingServices.getBundles({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    BatchEncodingServices.getBundles(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: bundles.created.count, id: 'created-count' }}\n              sizes={{ sm: 12 }}\n              title='Created Bundles'\n              id='created-bundles'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('created')}\n                  id='created-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              actionHeader={\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  onClick={generateBundleNumber}\n                  id='create-new-bundle'\n                >\n                  Create New Bundle\n                </Button>\n              }\n              onFilterChange={handleFilterChange('created')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='created-bundle-no'>Bundle No.</TableCell>\n                    <TableCell id='created-due-date'>Due Date</TableCell>\n                    <TableCell id='created-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {bundles.created.data.map((item, index) => (\n                    <TableRow key={item.bundle_number}>\n                      <TableCell id={`created-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                      <TableCell id={`created-due-date-${index}`}>\n                        {moment(item.date.due).format('MM/DD/YYYY')}\n                      </TableCell>\n                      <TableCell id={`created-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/bundles/${item.bundle_number}`}>\n                          <Typography variant='caption' className='text-link underline' id={`update-bundle-${index}`}>\n                            Update\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 3, value: bundles.submitted.count, id: 'submitted-count' }}\n              sizes={{ sm: 12 }}\n              title='Submitted Bundles'\n              id='submitted-bundles'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('submitted')}\n                  id='submitted-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('submitted')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='submitted-bundle-no'>Bundle No.</TableCell>\n                    <TableCell id='submitted-due-date'>Due Date</TableCell>\n                    <TableCell id='submitted-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {bundles.submitted.data.map((item, index) => (\n                    <TableRow key={item.bundle_number}>\n                      <TableCell id={`submitted-bundle-no-${index}`}>{item.bundle_number}</TableCell>\n                      <TableCell id={`submitted-due-date-${index}`}>\n                        {moment(item.date.due).format('MM/DD/YYYY')}\n                      </TableCell>\n                      <TableCell id={`submitted-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/bundles/${item.bundle_number}`}>\n                          <Typography variant='caption' className='text-link underline' id={`view-bundle-${index}`}>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList\n            count={0}\n            title='Open Tickets'\n            // viewAll={{ to: '/batches?category=open', caption: 'View List' }}\n            viewAllLink={{ to: '/batches?category=open', caption: '' }}\n          >\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n      <ViewList viewList={viewList} setViewList={setViewList} onViewListChange={handleOnViewListChange} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './AutoComplete.module.scss'\nexport default function AutoComplete (props) {\n  const { label = '', required, readOnly, suggestions = [], onChange, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event.target.value)\n  }\n\n  const handleItemClick = index => {\n    setError()\n    if (typeof onChange === 'function') onChange(suggestions[index], true, index)\n  }\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['autocomplete-field']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n              onBlur={handleBlur}\n            >\n              <InputBase\n                className={classes.input}\n                onChange={handleOnChange}\n                {...other}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n              />\n              {focus && (\n                <Paper className={classes.suggestions} square>\n                  {suggestions.map((suggestion, index) => (\n                    <MenuItem\n                      key={`${props.id}-suggestion-${index}`}\n                      onClick={() => {\n                        setFocus(true)\n                        handleItemClick(index)\n                      }}\n                    >\n                      {suggestion}\n                    </MenuItem>\n                  ))}\n                </Paper>\n              )}\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import 'date-fns'\nimport React from 'react'\nimport MomentUtils from '@date-io/moment'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './DatePicker.module.scss'\n\n/**\n * Props\n * id\n * label\n * required\n * value - should be date type\n * format\n * onChange\n *\n * other props\n * https://material-ui-pickers.dev/api/KeyboardDatePicker\n */\nexport default function DatePicker (props) {\n  const { id, label, required, value, format, readOnly, onChange, error, tabindex, ...other } = props\n  const [open, setOpen] = React.useState(false)\n  const [selectedDate, setSelectedDate] = React.useState()\n\n  const InputRef = React.useRef()\n  const [focus, setFocus] = React.useState()\n\n  React.useEffect(() => {\n    setSelectedDate(new Date(value))\n  }, [value])\n\n  const handleOnClose = () => {\n    setOpen(false)\n    handleOnFocus()\n  }\n  const handleDateChange = date => {\n    setOpen(false)\n    setSelectedDate(date)\n    if (typeof onChange === 'function') onChange(date)\n\n    handleOnFocus()\n  }\n\n  const handleOnFocus = () => {\n    setFocus(true)\n    setTimeout(() => InputRef.current.focus(), 1)\n  }\n\n  const handleOnBlur = e => {\n    if (e.currentTarget.contains(e.relatedTarget)) return\n    setFocus(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {label && (\n        <Typography variant='subtitle2' className={classes.label}>\n          {label}\n          {!readOnly && required ? ' *' : ''}\n        </Typography>\n      )}\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {DateFormatter(props.value)}\n          </Typography>\n        ) : (\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              TextFieldComponent={p => (\n                <React.Fragment>\n                  <Paper\n                    className={`${classes['text-field']} ${\n                      error ? classes['has-error'] : focus && classes.focus\n                    } box-shadow-field`}\n                    onBlur={handleOnBlur}\n                  >\n                    <InputBase\n                      id={id}\n                      inputProps={{ ref: InputRef }}\n                      className={classes.input}\n                      value={p.value}\n                      onFocus={handleOnFocus}\n                    />\n\n                    <div className={classes['date-button']}>\n                      <IconButton className={classes.button} size='small' onClick={() => setOpen(true)}>\n                        <FontAwesomeIcon icon='calendar-day' className={classes.icon} />\n                      </IconButton>\n                    </div>\n                  </Paper>\n                  {error && <span className={classes.error}>{error}</span>}\n                </React.Fragment>\n              )}\n              value={selectedDate}\n              format={'MM/DD/YYYY' || format}\n              open={open}\n              onClose={handleOnClose}\n              onChange={handleDateChange}\n              {...other}\n            />\n          </MuiPickersUtilsProvider>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldNumber.module.scss'\nexport default function TextFieldNumber (props) {\n  const { label = '', required, readOnly, error, onChange, ...other } = props\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {other.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { formattedValue, floatValue } = values\n                  return formattedValue === '' || floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                // {...other}\n              />\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n// import Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport moment from 'moment'\n\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nimport classes from './BundleDetails.module.scss'\n\nexport default function BundleDetails ({ details, errors, isReadOnly, onChange, disableControls }) {\n  // const [newBundle, setNewBundle] = React.useState({\n  //   bundle_number: '',\n  //   total_rcs: '',\n  //   soa_number: '',\n  //   facility_id: '',\n  //   facility_name: '',\n  //   doctor_id: '',\n  //   doctor_name: '',\n  //   date_received: moment(),\n  //   due_date: moment()\n  // })\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field } = args\n    // setNewBundle(state => ({ ...state, [field]: value }))\n\n    onChange({ fieldName: field, fieldValue: value })\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    // console.log(value, field)\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // setNewBundle(state => ({ ...state, facility_id: i.id, facility_name: i.name }))\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(details.date_received)\n              .add(term, 'days')\n              .format('MM/DD/YYYY')\n            onChange({ fieldName: 'facility_id', fieldValue: i.id })\n            onChange({ fieldName: 'facility_name', fieldValue: i.name })\n            onChange({ fieldName: 'due_date', fieldValue: newDate })\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            // setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n\n            // onChange({ fieldName: 'doctor_id', fieldValue: 'dasdsdasds' })\n            onChange({ fieldName: 'doctor_name', fieldValue: i.full_name })\n            onChange({ fieldName: 'doctor_id', fieldValue: i.id })\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <CustomTextField required readOnly='true' label='Bundle No.' id='bundle-no' value={details.bundle_number} />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldNumber\n            required\n            readOnly={isReadOnly}\n            id='total-rcs'\n            label='Total No. of RCS'\n            value={details.total_rcs}\n            onChange={e => onChange({ fieldName: 'total_rcs', fieldValue: e.target.value })}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            id='date-received'\n            label='Date Received'\n            readOnly={isReadOnly}\n            value={details.date_received}\n            onChange={e => onChange({ fieldName: 'date_received', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.date_received}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <DatePicker\n            required\n            readOnly={isReadOnly}\n            id='due-date'\n            label='Due Date'\n            value={details.due_date}\n            onChange={e => onChange({ fieldName: 'due_date', fieldValue: moment(e).format('MM/DD/YYYY') })}\n            error={errors.due_date}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <CustomTextField\n            readOnly={isReadOnly}\n            id='soa-no'\n            label='SOA No.'\n            value={details.soa_number}\n            onChange={e => onChange({ fieldName: 'soa_number', fieldValue: e.target.value })}\n            error={errors.soa_number}\n          />\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <TextFieldCurrency\n            required\n            readOnly={isReadOnly}\n            id='total-soa-amt'\n            label='Total SOA Amount'\n            value={details.total_soa_amt}\n            onChange={e => onChange({ fieldName: 'total_soa_amt', fieldValue: e.target.value })}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-id'\n            label='Medical Partner ID'\n            value={details.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            required\n            readOnly={isReadOnly}\n            id='facility-partner-name'\n            label='Medical Partner Name (Facility)'\n            value={details.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-partner-id'\n            label='Medical Partner ID'\n            value={details.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <AutoComplete\n            readOnly={isReadOnly}\n            id='doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={details.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {checkAll && (\n                  <TableCell padding='checkbox'>\n                    {allowCheck ? (\n                      <Checkbox\n                        disabled={allowCheckDisabled}\n                        indeterminate={indeterminate}\n                        checked={checked}\n                        onChange={handleSelectAllClick}\n                        color={checkboxColor}\n                      />\n                    ) : null}\n                  </TableCell>\n                )}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination rowsPerPageOptions={[5, 10, 25]} component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button onClick={onCancel} variant='contained' color='primary' className='button-negative'>\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button onClick={onOk} variant='contained' color='primary' className='button-positive' autoFocus>\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Components\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableFooterComponent from 'SharedComponents/TableFooterComponent/TableFooterComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Style\nimport classes from './BatchList.module.scss'\n\nconst headCells = [\n  { id: 'batch-no', numeric: false, disablePadding: false, label: 'Batch No' },\n  { id: 'batch-claim-type', numeric: false, disablePadding: false, label: 'Claim Type' },\n  { id: 'batch-total-rcs', numeric: false, disablePadding: false, label: 'Total No. of RCS' },\n  {}\n]\n\nexport default function BatchList (props) {\n  const {\n    batches,\n    onDelete,\n    openDialog,\n    onCancel,\n    onOpen,\n    deleteStatus,\n    openError,\n    onEdit,\n    setForDeletion,\n    forDeletion,\n    isBundleCompleted = false\n  } = props\n  const [batch, setBatch] = React.useState([])\n\n  const getMessage = batches => {\n    let deleteMessage = 'Are you sure you want to delete this batch?'\n    if (batches.batch_numbers.length > 1) {\n      deleteMessage = 'Are you sure you want to delete these batches?'\n    }\n    return deleteMessage\n  }\n\n  React.useEffect(() => {\n    const data = batches.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setBatch({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ batch_numbers: [] }) // Resets the batch list.\n  }, [batches])\n\n  const handleClick = ({ batch, index }) => {\n    const _batches = {\n      ...batch,\n      data: batch.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const handleSelectAllClick = event => {\n    let _batches = batch\n\n    if (_batches.data) {\n      _batches.data.map(i => {\n        i.selected = _batches.indeterminate ? true : !_batches.checked\n        return i\n      })\n    }\n\n    setBatch(_batches)\n    changeSelectAllState({ data: _batches })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _batches = data || batches\n    let selected_count = 0\n    let batchNumbers = []\n    if (_batches.data) {\n      for (let b of _batches.data) {\n        if (b.selected) {\n          selected_count++\n          batchNumbers.push(b.batch_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batches.data.length : false\n    let checked = selected_count ? selected_count === _batches.data.length : false\n    _batches = { ..._batches, indeterminate, checked }\n    setBatch(_batches)\n\n    setForDeletion({ batch_numbers: batchNumbers })\n  }\n\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        // handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        checkAll\n        indeterminate={!!batch.indeterminate}\n        checked={!!batch.checked}\n        allowCheck\n        allowCheckDisabled={Boolean(isBundleCompleted)}\n      >\n        <TableBody>\n          {batch.data &&\n            batch.data.map((i, index) => (\n              <TableRow key={i.batch_number}>\n                <TableCell id={`checkbox-${i}`} padding='checkbox'>\n                  <Checkbox\n                    color='default'\n                    disabled={Boolean(isBundleCompleted)}\n                    checked={i.selected}\n                    onClick={event => handleClick({ index, batch })}\n                  />\n                </TableCell>\n                <TableCell id={`batch-no-${i.batch_number}`}>{i.batch_number}</TableCell>\n                <TableCell id={`batch-claim-type-${i.claim.type}`}>{i.claim.type}</TableCell>\n                <TableCell id={`batch-total-rcs-${i.total_rcs}`}>{i.total_rcs}</TableCell>\n                {!deleteStatus && (\n                  <TableCell className={classes.buttonWrapper} align='right'>\n                    <Button variant='contained' color='primary' className='button-neutral' onClick={() => onEdit(i)}>\n                      Edit\n                    </Button>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onDelete}\n      />\n      <Alert\n        open={openError}\n        message='Delete Error: This batch has existing claim records'\n        cancelLabel='Ok'\n        onCancel={onCancel}\n      />\n    </React.Fragment>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const { id, label = '', required, items = [], readOnly, onChange, disableComponents = false, error, ...other } = props\n  const { value = '' } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    if (typeof onChange === 'function') onChange(event)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${\n                _error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field ${disableComponents && classes.disabled} box-shadow-field`}\n            >\n              <Select\n                id={id}\n                onChange={handleChange}\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                classes={{ root: classes.select }}\n                input={<InputBase className={classes.input} />}\n                {...other}\n                disabled={disableComponents}\n              >\n                {items.map((item, index) => (\n                  <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.value}>\n                    {item.text}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","const types = {\n  'In Patient': { prefix: 'IP' },\n  'Out Patient Procedure': { prefix: 'OP' },\n  'Out Patient Consultation': { prefix: 'PF' },\n  Reimbursement: { prefix: 'RM' },\n  Emergency: { prefix: 'ER' },\n  Dental: { prefix: 'DN' },\n  'Medicine Allowance': { prefix: 'MA' },\n  APE: { prefix: 'AP' },\n  ECU: { prefix: 'EC' },\n  Pharmacy: { prefix: 'PH' },\n  PPE: { prefix: 'PE' },\n  'Medical Supplies': { prefix: 'MS' },\n  'Clinic Management': { prefix: 'CM' }\n}\n\nconst dropdown = () => {\n  const list = []\n  for (const type in types) {\n    list.push({ text: type, value: type })\n  }\n  return list\n}\n\nexport default { types, dropdown }\n\n// 1. IP\n// 2. OP\n// 3. PF\n// 4. Reimbursement\n// 5. Emergency\n// 6. Dental\n// 7. Medicine Allowance\n// 8. APE\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  claim_type: Joi.string()\n    .trim()\n    .label('Claim Type')\n    .required(),\n  claim_source: Joi.string()\n    .trim()\n    .label('Claim Source')\n    .required(),\n  total_rcs: Joi.number()\n    .label('Total No. of RCS')\n    .integer()\n    .min(0),\n  amount_billed: Joi.number()\n    .label('Billed Amount')\n    .less(100000000),\n  notes: Joi.string()\n    .trim()\n    .label('Notes/Comments')\n    .allow('', null),\n  doctor_id: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` }),\n  doctor_name: Joi.string()\n    .when('claim_type', { is: 'Out Patient Consultation', then: Joi.required(), otherwise: Joi.allow('', null) })\n    .trim()\n    .label('Medical Partner (Doctor) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","export const setSelectedBatch = payload => {\n  return {\n    type: 'SET_SELECTED_BATCH',\n    payload\n  }\n}\n\nexport const setBatchAction = payload => {\n  return {\n    type: 'SET_BATCH_ACTION',\n    payload\n  }\n}\n\nexport const setShowBatchForm = payload => {\n  return {\n    type: 'SET_SHOW_BATCH_FORM',\n    payload\n  }\n}\n\nexport const setSaveBatchControl = payload => {\n  return {\n    type: 'SET_SAVE_BATCH_CONTROL',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n","import React from 'react'\n// import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport moment from 'moment'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Constant\nimport ClaimTypes from 'Constant/claimTypes'\n\n// Styles\nimport classes from './BatchForm.module.scss'\n\n// Validator\nimport BatchFormValidator from './BatchFormValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setShowBatchForm, setSelectedBatch } from '../../Store/actions'\n\nconst claim_types = ClaimTypes.dropdown()\n\nconst claim_sources = [\n  { value: 'Hospital', text: 'Hospital' },\n  { value: 'Clinic', text: 'Clinic' }\n]\n\nexport default function BatchForm ({\n  close,\n  open,\n  onSave,\n  bundle,\n  onChange,\n  disableControls,\n  onChangeDoctor,\n  disableComponents\n}) {\n  const dispatch = useDispatch()\n  const batch = useSelector(state => state.batch.selected)\n  const show = useSelector(state => state.batch.show)\n  const action = useSelector(state => state.batch.action)\n  const suggestions = useSelector(state => state.suggestions)\n  const saveControl = useSelector(state => state.batch.saveControl)\n\n  const [confirmAction, setConfirmAction] = React.useState({\n    show: false,\n    message: 'Are you sure you want to save this batch?'\n  })\n\n  const [errors, setErrors] = React.useState({})\n  React.useEffect(() => {\n    setErrors({})\n  }, [])\n\n  const validate = () => {\n    const { error } = BatchFormValidator({\n      claim_type: batch.claim_type,\n      claim_source: batch.claim_source,\n      total_rcs: batch.total_rcs,\n      amount_billed: batch.amount_billed,\n      notes: batch.notes,\n      doctor_id: batch.doctor_id,\n      doctor_name: batch.doctor_name\n    })\n    setErrors(error || {})\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog open={show}>\n        <DialogTitle>{action}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} className={classes.root}>\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Bundle No.' value={bundle.bundle_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='SOA No.' value={bundle.soa_number} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField\n                readOnly='true'\n                label='Date Received'\n                value={moment(bundle.date_received).format('MM/DD/YYYY')}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Due Date' value={moment(bundle.due_date).format('MM/DD/YYYY')} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner ID' value={bundle.facility_id} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <CustomTextField readOnly='true' label='Medical Partner Name (Facility)' value={bundle.facility_name} />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-id'\n                label='Medical Partner ID'\n                value={batch.doctor_id}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.id}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_id',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_id}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <AutoComplete\n                id='doctor-name'\n                label='Medical Partner Name (Doctor)'\n                value={batch.doctor_name}\n                disabled={disableControls}\n                suggestions={suggestions.doctor.full_name}\n                onChange={(value, isSuggestionClick) =>\n                  onChangeDoctor({\n                    field: 'doctor_name',\n                    value,\n                    isSuggestionClick\n                  })\n                }\n                error={errors.doctor_name}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-type'\n                label='Claim Type'\n                required\n                items={claim_types}\n                value={batch.claim_type || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_type: event.target.value }))}\n                error={errors.claim_type}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <DropDown\n                id='claim-source'\n                label='Claim Source'\n                required\n                items={claim_sources}\n                value={batch.claim_source || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ claim_source: event.target.value }))}\n                error={errors.claim_source}\n                disableComponents={disableComponents}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldNumber\n                id='total-rcs'\n                label={'Total No. of RCS'}\n                required\n                value={batch.total_rcs}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ total_rcs: event.target.value }))}\n                error={errors.total_rcs}\n              />\n            </Grid>\n\n            <Grid item sm={6} xs={12} className={classes.input}>\n              <TextFieldCurrency\n                id='billed-amount'\n                label='Billed Amount'\n                value={batch.amount_billed || 0}\n                disabled={disableControls}\n                // currency={false}\n                onChange={event => dispatch(setSelectedBatch({ amount_billed: event.target.value }))}\n                error={errors.amount_billed}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.input}>\n              <CustomTextField\n                id='notes-comments'\n                multiline\n                rows={6}\n                label='Notes/Comments'\n                value={batch.notes || ''}\n                disabled={disableControls}\n                onChange={event => dispatch(setSelectedBatch({ notes: event.target.value }))}\n                error={errors.notes}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id='cancel'\n            variant='contained'\n            color='primary'\n            className='button-negative'\n            onClick={() => {\n              dispatch(setShowBatchForm(false))\n              setErrors({})\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            id='save'\n            variant='contained'\n            color='primary'\n            className='button-positive'\n            disabled={saveControl}\n            onClick={() => !validate() && setConfirmAction(state => ({ ...state, show: true }))}\n          >\n            Save\n          </Button>\n          <Alert\n            open={confirmAction.show}\n            message={confirmAction.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setConfirmAction(state => ({ ...state, show: false }))}\n            onOk={() => {\n              setConfirmAction(state => ({ ...state, show: false }))\n              onSave(batch)\n            }}\n          />\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .required()\n      .integer()\n      .min(0),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `\"Due Date\" should have a maximum length of Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .less(100000000)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\n\n//  Components\nimport BundleDetails from '../../Components/BundleDetails/BundleDetails'\nimport BatchList from '../../Components/BatchList/BatchList'\nimport BatchForm from '../../Components/BatchForm/BatchForm'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './BundlePage.module.scss'\nimport Typography from '@material-ui/core/Typography'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setShowBatchForm,\n  setSelectedBatch,\n  setBatchAction,\n  initSuggestions,\n  resetSuggestionObject,\n  setSuggestionObject,\n  setSaveBatchControl\n} from '../../Store/actions'\n\n// Validator\nimport BundleValidator from './BundleValidator'\n\nexport default function BundlePage (props) {\n  const dispatch = useDispatch()\n\n  const suggestions = useSelector(state => state.suggestions)\n\n  const [originalState, setOriginalState] = React.useState({})\n  const [bundle, setBundle] = React.useState(null)\n  const [batches, setBatches] = React.useState([])\n  const [isReadOnly, setIsReadOnly] = React.useState(true)\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openBundleDialog, setOpenBundleDialog] = React.useState({})\n  const [openError, setOpenError] = React.useState(false)\n  const [submitStatus, setsubmitStatus] = React.useState(false)\n  const { bundle_number } = props.match.params\n  const [disableComponents, setDisableComponents] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [disableControls] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ batch_numbers: [] })\n  const [disabledSubmit, setDisabledSubmit] = React.useState(true)\n\n  React.useEffect(() => {\n    LoadingService.loading(true)\n    getBundleDetails(bundle_number)\n    dispatch(initSuggestions())\n  }, [props.match.params.bundle_number])\n\n  React.useEffect(() => {\n    setDisabledSubmit(batches.length <= 0)\n  }, [batches])\n\n  const getBundleDetails = bundle_number => {\n    BatchEncodingServices.getBundle({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Submitted',\n          color: 'green'\n        }\n        setsubmitStatus(true)\n      }\n\n      PageTitleService(`Bundle No. ${bundle_number}`, {\n        text: _status.text,\n        color: _status.color\n      })\n      BreadcrumbsService.setSelectedItems(['dashboard', `specificBundle:${bundle_number}`])\n\n      setBundle({\n        bundle_number,\n        total_rcs: data.total_rcs,\n        date_received: data.date.received,\n        due_date: data.date.due,\n        soa_number: data.soa.number,\n        total_soa_amt: data.soa.amount,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        doctor_id: data.doctor.id,\n        doctor_name: data.doctor.name,\n        status: data.status\n      })\n\n      getBatches(bundle_number)\n    })\n  }\n\n  const getBatches = bundle_number => {\n    BatchEncodingServices.getBatches({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBatches(data)\n      LoadingService.loading(false)\n    })\n  }\n\n  const createBundle = () => {\n    BatchEncodingServices.createBundle().then(res => {\n      const { data } = res.data\n      props.history.push(`/bundles/${data}/create`)\n    })\n  }\n\n  const cancelBundle = () => props.history.push(`/`)\n\n  const handleOnSubmit = () => {\n    LoadingService.loading(true)\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: false\n    }))\n\n    BatchEncodingServices.submitBundle({\n      bundle_number: bundle.bundle_number\n    }).then(({ data: res }) => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const [debounce, setDebounce] = React.useState({ doctor: null })\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setSelectedBatch({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setSelectedBatch({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnSaveBatch = newBatch => {\n    const { batch_number, ...data } = newBatch\n    dispatch(setSaveBatchControl(true))\n    if (batch_number) {\n      BatchEncodingServices.updateBatch({\n        bundle_number: bundle.bundle_number,\n        batch_number,\n        data\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state =>\n            state.map(i => {\n              if (i.batch_number === batch_number) {\n                for (let f in data) i[f] = data[f]\n                i.batch_number = data.batch_number\n              }\n              return i\n            })\n          )\n          dispatch(setSelectedBatch({}))\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    } else {\n      BatchEncodingServices.createBatch({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(\n        ({ data: res }) => {\n          const { data } = res\n          setBatches(state => [...state, data])\n          dispatch(setShowBatchForm(false))\n        },\n        () => dispatch(setSaveBatchControl(false))\n      )\n    }\n  }\n\n  const handleOnConfirmDeleteBatch = () => {\n    BatchEncodingServices.deleteMultipleBatch({\n      bundle_number: bundle_number,\n      data: forDeletion\n    })\n      .then(({ data: res }) => {\n        getBatches(bundle_number)\n        setOpenDialog(false)\n        setForDeletion({ batch_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDialog(false)\n        setOpenError(true)\n      })\n  }\n\n  const handleOnCancelDeleteBatch = () => {\n    setOpenDialog(false)\n    setOpenError(false)\n  }\n\n  const handleOnDeleteBatch = batch => {\n    setOpenDialog(true)\n  }\n\n  const handleOnEditBatch = batch => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(true)\n    dispatch(setBatchAction('Update Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: batch.batch_number,\n        doctor_id: batch.doctor.id,\n        doctor_name: batch.doctor.name,\n        claim_type: batch.claim.type,\n        claim_source: batch.claim.source,\n        total_rcs: batch.total_rcs,\n        amount_billed: batch.amount_billed,\n        notes: batch.notes\n      })\n    )\n  }\n\n  const handleOnchangeBundleDetails = ({ fieldName, fieldValue }) => {\n    setBundle(state => ({ ...state, [fieldName]: fieldValue }))\n  }\n\n  const handleOnSaveBundleDetails = () => {\n    let data = { ...bundle }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) return\n\n    const onOk = () => {\n      setOpenBundleDialog(state => ({\n        ...state,\n        show: false\n      }))\n\n      LoadingService.loading(true)\n\n      delete data.status\n      BatchEncodingServices.updateBundle({\n        data,\n        bundle_number: bundle.bundle_number\n      }).then(() => {\n        LoadingService.loading(false)\n        setIsReadOnly(true)\n      })\n    }\n\n    setOpenBundleDialog(state => ({\n      ...state,\n      show: true,\n      message: 'Are you sure you want to update?',\n      handleOnOk: onOk\n    }))\n  }\n\n  const handleOnCancelBundleDetails = () => {\n    setErrors({})\n    setBundle(originalState)\n    setIsReadOnly(true)\n  }\n\n  const handleOnNewBatch = () => {\n    dispatch(setSaveBatchControl(false))\n    dispatch(setShowBatchForm(true))\n    setDisableComponents(false)\n    dispatch(setBatchAction('New Batch'))\n    dispatch(\n      setSelectedBatch({\n        batch_number: null,\n        doctor_id: bundle.doctor_id,\n        doctor_name: bundle.doctor_name,\n        claim_type: '',\n        claim_source: '',\n        total_rcs: 0,\n        amount_billed: 0,\n        notes: ''\n      })\n    )\n  }\n\n  const validate = value => {\n    const { error } = BundleValidator(value)\n    setErrors(error || {})\n    console.log(error)\n    return !!error\n  }\n\n  return (\n    <React.Fragment>\n      {bundle && (\n        <div className={classes.root}>\n          <BatchForm\n            bundle={bundle}\n            disableControls={disableControls}\n            onSave={handleOnSaveBatch}\n            onChangeDoctor={handleOnChangeDoctor}\n            disableComponents={disableComponents}\n          />\n\n          <Paper className={classes['bundle-details']}>\n            <BundleDetails\n              details={bundle}\n              errors={errors}\n              isReadOnly={isReadOnly}\n              onChange={handleOnchangeBundleDetails}\n            />\n            {!submitStatus && (\n              <Grid item className={classes['actions']}>\n                {isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='add-new-bundle'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={createBundle}\n                    >\n                      Add New Bundle\n                    </Button>\n                    <Button\n                      id='update-details'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={() => {\n                        setOriginalState(bundle)\n                        setIsReadOnly(false)\n                      }}\n                    >\n                      Update Details\n                    </Button>\n                  </React.Fragment>\n                )}\n\n                {!isReadOnly && (\n                  <React.Fragment>\n                    <Button\n                      id='cancel-update'\n                      variant='contained'\n                      color='primary'\n                      className='button-negative'\n                      onClick={handleOnCancelBundleDetails}\n                    >\n                      Cancel\n                    </Button>\n\n                    <Button\n                      id='save'\n                      variant='contained'\n                      color='primary'\n                      className='button-neutral'\n                      onClick={handleOnSaveBundleDetails}\n                    >\n                      Save\n                    </Button>\n                  </React.Fragment>\n                )}\n              </Grid>\n            )}\n          </Paper>\n          <Typography className={classes['list-header']} variant='h6'>\n            Batches\n          </Typography>\n          <Paper className={classes['table-container']}>\n            <Grid item className={classes['actions']}>\n              <SearchTextComponent />\n              {bundle.status === 'IN_PROGRESS' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-neutral'\n                  id='add-new-batch'\n                  onClick={handleOnNewBatch}\n                >\n                  Add New Batch\n                </Button>\n              )}\n            </Grid>\n            <BatchList\n              batches={batches}\n              bundle_number={bundle_number}\n              onDelete={handleOnConfirmDeleteBatch}\n              openDialog={openDialog}\n              onCancel={handleOnCancelDeleteBatch}\n              onOpen={handleOnDeleteBatch}\n              openError={openError}\n              deleteStatus={submitStatus}\n              onEdit={handleOnEditBatch}\n              forDeletion={forDeletion}\n              setForDeletion={setForDeletion}\n              isBundleCompleted={bundle && bundle.status && bundle.status === 'SUBMITTED' ? 1 : false}\n            />\n          </Paper>\n          <div align='right' className={classes.buttonWrapper}>\n            {bundle && bundle.status && bundle.status !== 'SUBMITTED' && forDeletion.batch_numbers.length > 0 ? (\n              <Button\n                variant='contained'\n                color='primary'\n                className={`${'button-negative'} ${classes['delete-button']}`}\n                onClick={() => {\n                  handleOnDeleteBatch(true)\n                }}\n                id='cancel'\n              >\n                Delete\n              </Button>\n            ) : (\n              ''\n            )}\n            <Button variant='contained' color='primary' className='button-negative' id='cancel' onClick={cancelBundle}>\n              Cancel\n            </Button>\n\n            {bundle.status === 'IN_PROGRESS' && (\n              <Button\n                id='submit'\n                variant='contained'\n                color='primary'\n                className='button-positive'\n                disabled={disabledSubmit}\n                onClick={() =>\n                  setOpenBundleDialog(state => ({\n                    ...state,\n                    show: true,\n                    message: 'Are you sure you want to submit?',\n                    handleOnOk: handleOnSubmit\n                  }))\n                }\n              >\n                Submit\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n\n      <Alert\n        open={openBundleDialog.show}\n        message={openBundleDialog.message}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenBundleDialog(state => ({ ...state, show: false }))}\n        onOk={openBundleDialog.handleOnOk}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object()\n  .keys({\n    bundle_number: Joi.number()\n      .label('Bundle Number')\n      .integer()\n      .greater(0)\n      .required(),\n    total_rcs: Joi.number()\n      .label('Total No. of RCS')\n      .integer()\n      .min(0)\n      .required(),\n    date_received: Joi.date()\n      .label('Date Received')\n      .required()\n      .max('now'),\n    due_date: Joi.date()\n      .label('Due Date')\n      .required()\n      .min(Joi.ref('date_received'))\n      .messages({\n        'date.min': `The \"Due Date\" should be later than the Date Received`\n      }),\n    soa_number: Joi.string()\n      .trim()\n      .label('SOA No')\n      .allow('')\n      .required(),\n    total_soa_amt: Joi.number()\n      .label('Total SOA Amount')\n      .greater(0)\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Facility)')\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .allow('')\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner Name (Doctor)')\n      .allow('')\n      .required()\n  })\n  .options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\n// Style\nimport classes from './NewBundlePage.module.scss'\n\n// Validator\nimport NewBundleValidator from './NewBundleValidator'\nexport default function NewBundlePage (props) {\n  const [disableControls, setDisableControls] = React.useState(false)\n  const [newBundle, setNewBundle] = React.useState({\n    bundle_number: '',\n    total_rcs: 0,\n    soa_number: '',\n    facility_id: '',\n    facility_name: '',\n    total_soa_amt: 0,\n    doctor_id: '',\n    doctor_name: '',\n    date_received: moment(),\n    due_date_adjustment: 0,\n    due_date: moment().add(30, 'days')\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  const [suggestions, setSuggestions] = React.useState({\n    medicalPartner: {\n      id: [],\n      name: [],\n      data: []\n    },\n\n    doctorPartner: {\n      id: [],\n      name: [],\n      data: []\n    }\n  })\n\n  const [debounce, setDebounce] = React.useState({\n    medicalPartner: null,\n    doctorPartner: null\n  })\n\n  // Medical Partner (Facility) ////////////////////////////////////\n  const getMedicalPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.medicalPartner)\n    setDebounce(state => ({\n      ...state,\n      medicalPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'medical-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, medicalPartner: { ...state.medicalPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Medical Partner (Doctor) ////////////////////////////////////\n  const getDoctorPartnerSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctorPartner)\n    setDebounce(state => ({\n      ...state,\n      doctorPartner: setTimeout(() => {\n        if (value) {\n          BatchEncodingServices.lookups({ on: 'doctor-partner', params: { query: value, by } }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) {\n              _items.push(d[by])\n            }\n            setSuggestions(state => ({ ...state, doctorPartner: { ...state.doctorPartner, [by]: _items, data } }))\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeAutosuggest = args => {\n    const { value, field, selectedIndex } = args\n    console.log(args)\n    setNewBundle(state => ({ ...state, [field]: value }))\n\n    handleOnChangeMedicalPartner(args)\n  }\n\n  const handleOnChangeMedicalPartner = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    setSuggestions(state => ({\n      ...state,\n      medicalPartner: {\n        id: [],\n        name: [],\n        data: []\n      },\n      doctorPartner: {\n        id: [],\n        name: [],\n        data: []\n      }\n    }))\n\n    if (field === 'facility_id' || field === 'facility_name') {\n      if (isSuggestionClick) {\n        for (let i of suggestions.medicalPartner.data) {\n          if (value === i.id || value === i.name) {\n            // Compute due date based on date received and earliest term found\n            // Fallback term is 30 days\n            let term = 30\n            if (i.earliest_term) {\n              term = parseInt(i.earliest_term)\n              if (isNaN(term) || term < 0) {\n                term = 30\n              }\n            }\n            let newDate = moment(newBundle.date_received).add(term, 'days')\n\n            setNewBundle(state => ({\n              ...state,\n              facility_id: i.id,\n              facility_name: i.name,\n              due_date: newDate,\n              due_date_adjustment: term\n            }))\n          }\n        }\n      } else {\n        switch (field) {\n          case 'facility_id':\n            getMedicalPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'facility_name':\n            getMedicalPartnerSuggestions({ value, by: 'name' })\n            break\n\n          default:\n            break\n        }\n      }\n    } else if (field === 'doctor_id' || field === 'doctor_name') {\n      if (isSuggestionClick) {\n        if (!isNaN(selectedIndex)) {\n          try {\n            const i = suggestions.doctorPartner.data[selectedIndex]\n            setNewBundle(state => ({ ...state, doctor_id: i.id, doctor_name: i.full_name }))\n          } catch (ex) {}\n        }\n      } else {\n        switch (field) {\n          case 'doctor_id':\n            getDoctorPartnerSuggestions({ value, by: 'id' })\n            break\n\n          case 'doctor_name':\n            getDoctorPartnerSuggestions({ value, by: 'full_name' })\n            break\n\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    PageTitleService(`Create New Bundle`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'newBundle'])\n    setNewBundle(state => ({ ...state, bundle_number: props.match.params.bundle_number }))\n  }, [props.match.params.bundle_number])\n\n  const validate = value => {\n    const { error } = NewBundleValidator(value)\n    setErrors(error || {})\n    return !!error\n  }\n  const handleOnSave = () => {\n    setDisableControls(true)\n\n    const data = {\n      ...newBundle,\n      date_received: newBundle.date_received.toISOString(),\n      due_date: newBundle.due_date.toISOString()\n    }\n\n    const hasError = validate({\n      bundle_number: data.bundle_number,\n      total_rcs: data.total_rcs,\n      date_received: data.date_received,\n      due_date: data.due_date,\n      soa_number: data.soa_number,\n      total_soa_amt: data.total_soa_amt,\n      facility_id: data.facility_id,\n      facility_name: data.facility_name,\n      doctor_id: data.doctor_id,\n      doctor_name: data.doctor_name\n    })\n\n    if (hasError) {\n      setDisableControls(false)\n      return\n    }\n    // return validate({ total_rcs: data.total_rcs })\n\n    LoadingService.loading(true)\n\n    // Remove date due adjustment; it will cause an error on server\n    delete data.due_date_adjustment\n\n    BatchEncodingServices.updateBundle({\n      data,\n      bundle_number: newBundle.bundle_number\n    }).then(res => {\n      props.history.push(`/bundles/${newBundle.bundle_number}`)\n    })\n  }\n\n  const cancel = () => props.history.push(`/`)\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <CustomTextField\n            id='create-new-bundle-bundle-number'\n            label='Bundle No.'\n            value={newBundle.bundle_number}\n            fullWidth\n            disabled\n            error={errors.bundle_number}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <TextFieldNumber\n            id='create-new-bundle-total-rcs'\n            required\n            label='Total No. of RCS'\n            value={newBundle.total_rcs}\n            fullWidth\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, total_rcs: e.target.value }))}\n            error={errors.total_rcs}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <DatePicker\n            id='create-new-bundle-date-received'\n            label='Date Received'\n            value={newBundle.date_received}\n            disabled={disableControls}\n            onChange={date => {\n              // Adjust due date accordingly to date received and term adjustment\n              const due_date = moment(date).add(newBundle.due_date_adjustment, 'days')\n\n              setNewBundle(state => ({ ...state, date_received: date, due_date: due_date }))\n            }}\n            error={errors.date_received}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <DatePicker\n            id='create-new-bundle-due-date'\n            label='Due Date'\n            disabled={disableControls}\n            value={newBundle.due_date}\n            onChange={date => setNewBundle(state => ({ ...state, due_date: date }))}\n            error={errors.due_date}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <CustomTextField\n            id='create-new-bundle-soa-number'\n            label='SOA No.'\n            fullWidth\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, soa_number: e.target.value }))}\n            error={errors.soa_number}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <TextFieldCurrency\n            id='create-new-bundle-total-soa'\n            required\n            label='Total SOA Amount'\n            fullWidth\n            value={newBundle.total_soa_amt}\n            disabled={disableControls}\n            onChange={e => setNewBundle(state => ({ ...state, total_soa_amt: e.target.value }))}\n            error={errors.total_soa_amt}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} className={classes.inputs}>\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-facility-partner-id'\n            required\n            label='Medical Partner ID'\n            value={newBundle.facility_id}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.id}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_id', value, isSuggestionClick })\n            }\n            error={errors.facility_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-facility-partner-name'\n            required\n            label='Medical Partner Name (Facility)'\n            value={newBundle.facility_name}\n            disabled={disableControls}\n            suggestions={suggestions.medicalPartner.name}\n            onChange={(value, isSuggestionClick) =>\n              handleOnChangeAutosuggest({ field: 'facility_name', value, isSuggestionClick })\n            }\n            error={errors.facility_name}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-docotr-partner-id'\n            label='Medical Partner ID'\n            value={newBundle.doctor_id}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.id}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_id', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_id}\n          />\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12} className={classes.input}>\n          <AutoComplete\n            id='create-new-bundle-doctor-name'\n            label='Medical Partner Name (Doctor)'\n            value={newBundle.doctor_name}\n            disabled={disableControls}\n            suggestions={suggestions.doctorPartner.full_name}\n            onChange={(value, isSuggestionClick, selectedIndex) =>\n              handleOnChangeAutosuggest({ field: 'doctor_name', value, isSuggestionClick, selectedIndex })\n            }\n            error={errors.doctor_name}\n          />\n        </Grid>\n      </Grid>\n\n      <div className={classes.actions}>\n        <Button variant='contained' color='primary' className='button-negative' onClick={cancel} id='cancel'>\n          Cancel\n        </Button>\n\n        <Button\n          variant='contained'\n          color='primary'\n          className={`${classes.save} button-positive`}\n          onClick={handleOnSave}\n          disabled={disableControls}\n          id='save'\n        >\n          Save\n        </Button>\n      </div>\n    </Paper>\n  )\n}\n","\nconst pageTitleReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SET_DASHBOARD_PAGE_TITLE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageTitleReducer\n","const initialState = {\n  items: [],\n  selected: null\n}\nconst bundlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BUNDLE_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'ADD_BUNDLE':\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      }\n\n    case 'SET_SELECTED_BUNDLE':\n      return {\n        ...state,\n        selected: action.payload\n      }\n\n    case 'SET_BUNDLE_BATCHES':\n      return {\n        ...state,\n        selected: { ...state.selected, batches: action.payload }\n      }\n\n    case 'ADD_BATCH':\n      const { batches } = state.selected\n      const { items } = batches\n\n      return {\n        ...state,\n        selected: { ...state.selected, batches: { ...batches, items: [action.payload, ...items] } }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default bundlesReducer\n","const initialState = {\n  items: [],\n  selected: {},\n  batchNumber: '',\n  show: false,\n  action: '',\n  saveControl: false\n}\nconst batchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BATCH_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_BATCH_ACTION':\n      return {\n        ...state,\n        action: action.payload\n      }\n\n    case 'SET_SELECTED_BATCH':\n      return {\n        ...state,\n        selected: { ...state.selected, ...action.payload }\n      }\n\n    case 'SET_SHOW_BATCH_FORM':\n      return {\n        ...state,\n        show: action.payload\n      }\n\n    case 'SET_SAVE_BATCH_CONTROL':\n      return {\n        ...state,\n        saveControl: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default batchReducer\n","const initialState = {\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  }\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'BATCH_ENCODER') {\n  args.push(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport pageTitleReducer from './pageTitleReducer'\nimport bundlesReducer from './bundlesReducer'\nimport batchReducer from './batchReducer'\nimport suggestionsReducer from './suggestionsReducer'\n\nconst reducers = combineReducers({\n  pageTitle: pageTitleReducer,\n  bundles: bundlesReducer,\n  batch: batchReducer,\n  suggestions: suggestionsReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// Pages of Batch Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport BundlePage from './Pages/BundlePage/BundlePage'\nimport NewBundlePage from './Pages/NewBundlePage/NewBundlePage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Store\nimport Store from './Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  specificBundle: {\n    text: data => data,\n    to: data => `/bundles/${data}`\n  },\n  newBundle: {\n    text: 'Create new bundle',\n    to: '/bundles/create'\n  }\n}\nfunction BatchEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <React.Fragment>\n      <Provider store={Store}>\n        <Switch>\n          <Route path='/' exact component={Dashboard} />\n          <Route path='/bundles/:bundle_number/create' exact component={NewBundlePage} />\n          <Route path='/bundles/:bundle_number' exact component={BundlePage} />\n        </Switch>\n      </Provider>\n    </React.Fragment>\n  )\n}\n\nexport default BatchEncoderRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'batch-number', name: ' Batch Number', sortField: 'batch_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'facility.name' }\n]\n\nexport default function CustomizedDialogs({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for batch number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.batch_number}>\n              <TableCell id={`batch-number-${index}`}>{row.batch_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name=${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={category === 'open' ? `encode-batch-${index}` : category === 'my' ? `update-batch-${index}` : `view-batch-${index}`}>\n                <Typography\n                  variant='caption'\n                  className='text-link underline'\n                  onClick={() => onItemClick({ category, batch_number: row.batch_number })}\n                >\n                  {category === 'open' && 'Encode'}\n                  {category === 'my' && 'Update'}\n                  {category === 'completed' && 'View'}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ce')\n\nexport default class ClaimsEncodingServices {\n  static getBatches (params) {\n    return axios({\n      url: `/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatchCount (params) {\n    return axios({\n      url: `/batches/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assignBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static submitBatch ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/submit`,\n      method: 'PUT'\n    })\n  }\n\n  static getClaims ({ batch_number, params }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount ({ batch_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/count`,\n      method: 'GET'\n    })\n  }\n\n  static getClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static addClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static updateClaim ({ batch_number, claim_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static deleteClaim ({ batch_number, claim_number }) {\n    return axios({\n      url: `/batches/${batch_number}/claims/${claim_number}`,\n      method: 'DELETE'\n    })\n  }\n\n  static deleteMultipleClaim ({ batch_number, data }) {\n    return axios({\n      url: `/batches/${batch_number}/claims`,\n      method: 'DELETE',\n      data\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [batches, setBatches] = React.useState({\n    open: { count: 0, data: [] },\n    my: { count: 0, data: [] },\n    completed: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  const [openTickets] = React.useState({ count: 0, data: [] })\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* Open Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'open',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n\n    //* My Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'my',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const myBatches = batchResponse.data.data.results\n      const myBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, my: { data: myBatches, count: myBatchCount } }))\n    })\n\n    //* Completed Batches\n    Promise.all([\n      ClaimsEncodingServices.getBatches({\n        category: 'completed',\n        limit: 10,\n        sort: 'date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsEncodingServices.getBatchCount({ category: 'completed' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const completedBatches = batchResponse.data.data.results\n      const completedBatchCount = batchCountResponse.data.data\n      setBatches(prevState => ({ ...prevState, completed: { data: completedBatches, count: completedBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    ClaimsEncodingServices.getBatches({ category, range: value, limit: 10, sort: 'date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setBatches(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnEncode = batch_number => {\n    ClaimsEncodingServices.assignBatch({ batch_number }).then(({ data: res }) => {\n      props.history.push(`/batches/${batch_number}`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    setViewList({ ...initialValue, show: true, title: startCase(`${category} Batches`), category })\n    ClaimsEncodingServices.getBatches({ category, limit: 10, sort: 'date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    ClaimsEncodingServices.getBatches(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, batch_number }) => {\n    if (category === 'open') handleOnEncode(batch_number)\n    else if (category === 'my' || category === 'completed') props.history.push(`/batches/${batch_number}`)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              id='open-batches'\n              count={{ color: 3, value: batches.open.count, id: 'open-batches-count' }}\n              title='Open Batches'\n              viewList={\n                <Typography\n                  id='ob-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('open')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('open')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='ob-batch-no'>Batch No.</TableCell>\n                    <TableCell id='ob-due-date'>Due Date</TableCell>\n                    <TableCell id='ob-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.open.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`ob-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`ob-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`ob-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`encode-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnEncode(item.batch_number)}\n                        >\n                          Encode\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              id='my-batches'\n              count={{ color: 8, value: batches.my.count, id: 'my-batches-count' }}\n              title='My Batches'\n              viewList={\n                <Typography\n                  id='mb-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('my')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('my')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='mb-batch-no'>Batch No.</TableCell>\n                    <TableCell id='mb-due-date'>Due Date</TableCell>\n                    <TableCell id='mb-facility-name'>Facility Name</TableCell>\n                    <TableCell id='mb-status'>Status</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.my.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`mb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`mb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`mb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell id={`mb-status-${index}`}>In Progress</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`update-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => props.history.push(`/batches/${item.batch_number}`)}\n                        >\n                          Update\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              id='completed-batches'\n              count={{ color: 5, value: batches.completed.count, id: 'completed-batches-count' }}\n              title='Completed Batches'\n              viewList={\n                <Typography\n                  id='cb-view-list'\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('completed')}\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('completed')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='cb-batch-no'>Batch No.</TableCell>\n                    <TableCell id='cb-due-date'>Due Date</TableCell>\n                    <TableCell id='cb-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {batches.completed.data.map((item, index) => (\n                    <TableRow key={item.batch_number}>\n                      <TableCell id={`cb-batch-no-${index}`}>{item.batch_number}</TableCell>\n                      <TableCell id={`cb-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`cb-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          id={`view-batch-${index}`}\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => props.history.push(`/batches/${item.batch_number}`)}\n                        >\n                          View\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList\n            count={openTickets.count}\n            title='Open Tickets'\n            viewAllLink={{ to: '/batches', caption: 'View all' }}\n          >\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {openTickets.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Styles\nimport classes from './BatchesPage.module.scss'\n\nexport default function BatchesPage () {\n  PageTitleService('Batches')\n  BreadcrumbsService.setSelectedItems(['dashboard', 'batches'])\n\n  return (\n    <div className={classes.root}>\n      <span>My batches</span>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\n// Components\n\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './BatchDetails.module.scss'\n\nexport default function BatchDetails ({ details }) {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-received' label='Date Received' readOnly value={DateFormatter(details.date.received)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='due-date' label='Due Date' readOnly value={DateFormatter(details.date.due)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-type' label='Claim Type' readOnly value={details.claim.type} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='claim-source' label='Claim Source' readOnly value={details.claim.source} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-facility' label='Medical Partner ID' readOnly value={details.facility.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-facility'\n            label='Medical Partner Name (Facility)'\n            readOnly\n            value={details.facility.name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='medical-partner-id-doctor' label='Medical Partner ID' readOnly value={details.doctor.id} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='medical-partner-name-doctor'\n            label='Medical Partner Name (Doctor)'\n            readOnly\n            value={details.doctor.name}\n          />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField id='date-range-from' label='Date Range (From)' readOnly value={DateFormatter(details.date_from)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='date-range-to' label='Date Range (To)' readOnly value={DateFormatter(details.date_to)} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='soa-number' label='SOA No.' readOnly value={details.soa.number} />\n        </div>\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextFieldCurrency id='batch-amount' label='Batch Amount' readOnly value={details.amount_billed} />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField id='total-no-of-rcs' label='Total No. of RCS' readOnly value={details.total_rcs} />\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ClaimListHeader.module.scss'\n\nexport default function ClaimListHeader (props) {\n  const { onClickAdd, onClickProviderSchedule, count, status, type = '', inputChange = null, disabled = false } = props\n  const handleChange = event => {\n    if (typeof inputChange === 'function') {\n      inputChange(event.target.value)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography variant='subtitle2'>Claims ({count})</Typography>\n      </div>\n\n      <div className={classes.wrapper}>\n        <SearchTextComponent onChange={handleChange} />\n\n        {status !== 'Completed' && (\n          <React.Fragment>\n            {(type === 'APE' || type === 'ECU' || type === 'PPE') && (\n              <Button\n                id={`${type.toLowerCase()}-schedule`}\n                variant='contained'\n                color='primary'\n                className={`${classes.button} button-positive`}\n                onClick={onClickProviderSchedule}\n              >\n                Provider's {type} Schedule\n              </Button>\n            )}\n\n            <Button\n              id='add-claim'\n              variant='contained'\n              color='primary'\n              className={`${classes.button} button-positive`}\n              onClick={onClickAdd}\n              disabled={disabled}\n            >\n              Add Claim\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n// import IconButton from '@material-ui/core/IconButton'\n// import DeleteIcon from '@material-ui/icons/Delete'\n\n// Services\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimList.module.scss'\n\nconst headCells = [\n  { id: 'claim-number', numeric: false, disablePadding: false, label: 'Claim No.' },\n  { id: 'loa-number', numeric: false, disablePadding: false, label: 'LOA No.' },\n  { id: 'approval-number', numeric: false, disablePadding: false, label: 'Approval Code' },\n  { id: 'member-name', numeric: false, disablePadding: false, label: 'Member Name' },\n  { id: 'account-number', numeric: false, disablePadding: false, label: 'Account Number' },\n  { id: 'availment-date', numeric: false, disablePadding: false, label: 'Availment Date' }\n  // {}\n]\n\nconst rows = []\n\nexport default function ClaimList ({\n  items,\n  selectedClaimNumber,\n  onItemClick,\n  type,\n  onConfirm,\n  openDialog,\n  onCancel,\n  forDeletion,\n  setForDeletion,\n  submittedBatch,\n  setSelected\n}) {\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [pagination, setPagination] = React.useState({\n    count: 4,\n    rowsPerPage: 5,\n    page: 0,\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: +event.target.value }))\n    }\n  })\n  const [claims, setClaims] = React.useState([])\n\n  const getMessage = claims => {\n    let message = 'Are you sure you want to delete this claim?'\n    if (claims.claim_numbers.length > 1) {\n      message = 'Are you sure you want to delete these claims?'\n    }\n    return message\n  }\n\n  React.useEffect(() => {\n    const data = items.map(i => ({\n      ...i,\n      selected: false\n    }))\n    setClaims({\n      data: data,\n      loading: false,\n      indeterminate: undefined,\n      checked: undefined\n    })\n    setForDeletion({ claim_numbers: [] })\n    setSelected([])\n  }, [items])\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc'\n    setOrder(isDesc ? 'asc' : 'desc')\n    setOrderBy(property)\n  }\n\n  const handleClick = ({ claims, index }) => {\n    const _claims = {\n      ...claims,\n      data: claims.data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n  const handleSelectAllClick = event => {\n    let _claims = claims\n\n    if (_claims.data) {\n      _claims.data.map(i => {\n        i.selected = _claims.indeterminate ? true : !_claims.checked\n        return i\n      })\n    }\n\n    setClaims(_claims)\n    changeSelectAllState({ data: _claims })\n  }\n\n  const changeSelectAllState = ({ data }) => {\n    let _claims = data || claims\n    let selected_count = 0\n    let claimNumbers = []\n    if (_claims.data) {\n      for (let c of _claims.data) {\n        if (c.selected) {\n          selected_count++\n          claimNumbers.push(c.claim_number)\n        }\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _claims.data.length : false\n    let checked = selected_count ? selected_count === _claims.data.length : false\n    _claims = { ..._claims, indeterminate, checked }\n    setClaims(_claims)\n\n    setForDeletion({ claim_numbers: claimNumbers })\n    setSelected(state => [...claimNumbers])\n  }\n  const handleItemClick = index => onItemClick(index)\n  return (\n    <React.Fragment>\n      <EnhancedTable\n        headCells={headCells}\n        handleRequestSort={handleRequestSort}\n        handleSelectAllClick={handleSelectAllClick}\n        pagination={pagination}\n        rowsLength={rows.length}\n        checkAll\n        indeterminate={!!claims.indeterminate}\n        checked={!!claims.checked}\n        allowCheck\n        allowCheckDisabled={submittedBatch}\n      >\n        <TableBody>\n          {claims.data &&\n            claims.data.map((row, index) => (\n              <TableRow\n                className={`${\n                  selectedClaimNumber === row.claim_number ? classes.selected : classes['default-override']\n                }`}\n                selected={selectedClaimNumber === row.claim_number}\n                role='checkbox'\n                tabIndex={-1}\n                key={row.claim_number}\n              >\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    disabled={submittedBatch}\n                    checked={row.selected}\n                    color='default'\n                    onClick={event => handleClick({ index, claims })}\n                  />\n                </TableCell>\n                <TableCell id={`claim-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.claim_number}\n                </TableCell>\n                <TableCell id={`loa-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.loa_number}\n                </TableCell>\n                <TableCell id={`approval-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.approval_code}\n                </TableCell>\n                <TableCell\n                  id={`member-name-${index}`}\n                  onClick={() => handleItemClick(index)}\n                >{`${row.member.first_name} ${row.member.last_name}`}</TableCell>\n                <TableCell id={`account-number-${index}`} onClick={() => handleItemClick(index)}>\n                  {row.member.account_number}\n                </TableCell>\n\n                <TableCell id={`availment-date-${index}`} onClick={() => handleItemClick(index)}>\n                  {`${DateFormatter(row.date.from)}`}\n                  {type === 'In Patient' && ` - ${DateFormatter(row.date.to)}`}\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </EnhancedTable>\n      <Alert\n        open={openDialog}\n        message={getMessage(forDeletion)}\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={onCancel}\n        onOk={onConfirm}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ProviderSchedule.module.scss'\n\n// Validations\n\n// Store\n\nconst headCells = [\n  { id: '1', name: 'Reference No.', sortField: '' },\n  { id: '2', name: 'Inclusive Dates', sortField: '' },\n  { id: '3', name: 'Account Name', sortField: '' },\n  { id: '3', name: 'Prepared By', sortField: '' }\n]\n\nexport default function ProviderSchedule (props) {\n  // Events\n  const { type, facility, dialog, setDialog } = props\n  // Variables\n  // Services\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      onClose={() => setDialog(false)}\n      aria-labelledby='customized-dialog-title'\n      open={dialog}\n      className={classes.root}\n      PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header1}>\n          <Typography variant='h6' className={classes.title}>\n            {facility.name}\n          </Typography>\n          <div className={classes.search}>\n            <SearchTextComponent id='search' onChange={() => {}} placeholder='Search for ' />\n          </div>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.body}>\n        <div className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCells.map((headCell, index) => (\n                    <TableCell key={`${headCell.sortField} ${index}`} id={headCell.id}>\n                      <TableSortLabel active={false} direction={'asc'} onClick={() => {}}>\n                        {type} {headCell.name}\n                      </TableSortLabel>\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                  <TableCell id={`no-record`} colSpan={5}>\n                    <div\n                      className={`${classes.cell} ${classes.center}`}\n                      style={{\n                        textAlign: 'center',\n                        fontStyle: 'italic'\n                      }}\n                    >\n                      <span>No Records</span>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              }\n              pagination={false}\n            />\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.partition}>\n              <Typography>{type} Package/s:</Typography>\n              <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                <List>\n                  {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`Package ${index + 1}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </div>\n            <div className={classes.partition}>\n              <Typography>Notes:</Typography>\n              <Paper style={{ height: '200px', overflow: 'auto' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                  multiline\n                  rows={3}\n                  id='notes'\n                  value={''}\n                  disabled={false}\n                  readOnly\n                  onChange={event => {}}\n                />\n              </Paper>\n            </div>\n          </div>\n        </div>\n        <div className={classes.action}>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-negative'>\n            Close\n          </Button>\n          <Button onClick={() => setDialog(false)} variant='contained' color='primary' className='button-positive'>\n            Add Claim\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport BatchDetails from '../../Components/BatchDetails/BatchDetails'\nimport ClaimListHeader from '../../Components/ClaimListHeader/ClaimListHeader'\nimport ClaimList from '../../Components/ClaimList/ClaimList'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ProviderSchedule from '../../Components/ProviderSchedule/ProviderSchedule'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Styles\nimport classes from './BatchPage.module.scss'\n\nexport default function BatchPage (props) {\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  const [selectedClaimNumber, setSelectedClaimNumber] = React.useState(null)\n  const [details, setDetails] = React.useState()\n  const [claims, setClaims] = React.useState([])\n  const [submitStatus, setsubmitStatus] = React.useState('')\n  const [claimCount, setClaimCount] = React.useState(0)\n  const [openDialog, setOpenDialog] = React.useState({})\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n  const [showProviderSchedule, setShowProviderSchedule] = React.useState(false)\n  const [forDeletion, setForDeletion] = React.useState({ claim_numbers: [] })\n  const [selected, setSelected] = React.useState([])\n  const [debounce, setDebounce] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const handleSearchChange = search => {\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        /*\n         * @returnData is the sanitized input string\n         * returned by the component ClaimsListHeader 's\n         * inputChange props\n         */\n        getClaimsAndCount({ batch_number: batchNumber, search })\n      }, 500)\n    )\n  }\n\n  const getClaimsAndCount = ({ batch_number, search = '' }) => {\n    ClaimsEncodingServices.getClaims({ batch_number, params: { search } }).then(res => {\n      const { results, count } = res.data.data\n      setClaims(results)\n      setClaimCount(count)\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    const _batchNumber = props.match.params._batchNumber\n    setBatchNumber(_batchNumber)\n\n    ClaimsEncodingServices.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      setDetails(data)\n\n      let _status = {\n        text: 'In Progress',\n        color: 'blue'\n      }\n\n      if (data.status === 'SUBMITTED') {\n        _status = {\n          text: 'Completed',\n          color: 'green'\n        }\n      }\n\n      setsubmitStatus(_status.text)\n\n      LoadingService.loading(true)\n\n      BreadcrumbsService.setSelectedItems(['dashboard', 'batches', `specificBatch:${_batchNumber}`])\n\n      PageTitleService(`Batch No. ${_batchNumber}`, {\n        text: _status.text,\n        color: _status.color\n      })\n\n      getClaimsAndCount({ batch_number: _batchNumber })\n    })\n  }, [props.match.params._batchNumber])\n\n  const handleOnItemClick = index => {\n    const { claim_number } = claims[index]\n    setSelectedClaimNumber(claim_number)\n\n    // if (submitStatus === 'Completed') return\n\n    // props.history.push(`/batches/${batchNumber}/claims/${claim_number}`)\n  }\n\n  const handleOnUpdate = () => {\n    if (submitStatus === 'Completed') return\n\n    // if (selected.length > 1) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select ONLY one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // } else if (!selected.length) {\n    //   return setDialog({\n    //     open: true,\n    //     message: 'Please select one claim to update.',\n    //     okLabel: 'OK',\n    //     onOk: () => setDialog(state => ({ ...state, open: false }))\n    //   })\n    // }\n    console.log(selectedClaimNumber)\n    if (!selectedClaimNumber || selectedClaimNumber === '') {\n      return setDialog({\n        open: true,\n        message: 'Please select one claim to update.',\n        okLabel: 'OK',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    props.history.push(`/batches/${batchNumber}/claims/${selectedClaimNumber}`)\n  }\n\n  const handleOnSubmit = index => {\n    LoadingService.loading(true)\n    setOpenDialog(state => ({ ...state, show: false }))\n\n    ClaimsEncodingServices.submitBatch({ batch_number: batchNumber }).then(res => {\n      LoadingService.loading(false)\n      props.history.push(`/`)\n    })\n  }\n\n  const onOpenDelete = claim => {\n    // setselectedClaim(claim)\n    setOpenDeleteDialog(true)\n  }\n\n  const onCancelDelete = () => {\n    setOpenDeleteDialog(false)\n  }\n\n  const onConfirmDelete = () => {\n    ClaimsEncodingServices.deleteMultipleClaim({\n      batch_number: batchNumber,\n      data: forDeletion\n    })\n      .then(() => {\n        getClaimsAndCount({ batch_number: batchNumber })\n        setOpenDeleteDialog(false)\n        setForDeletion({ claim_numbers: [] })\n      })\n      .catch(() => {\n        setOpenDeleteDialog(false)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      {details && (\n        <React.Fragment>\n          <BatchDetails details={details} />\n          <ClaimListHeader\n            batchNumber={batchNumber}\n            type={details.claim.type}\n            onClickProviderSchedule={() => setShowProviderSchedule(true)}\n            // onClickPPESchedule={() => setShowPPESchedule(true)}\n            onClickAdd={() => props.history.push(`/batches/${batchNumber}/claims/add`)}\n            count={claimCount}\n            status={submitStatus}\n            inputChange={handleSearchChange}\n            disabled={!!(details.claim.type === 'Reimbursement' && claims.length > 0)}\n          />\n          <ClaimList\n            items={claims}\n            selectedClaimNumber={selectedClaimNumber}\n            onItemClick={handleOnItemClick}\n            type={details.claim.type}\n            onConfirm={onConfirmDelete}\n            openDialog={openDeleteDialog}\n            onCancel={onCancelDelete}\n            forDeletion={forDeletion}\n            setForDeletion={setForDeletion}\n            setSelected={setSelected}\n            submittedBatch={submitStatus === 'Completed'}\n          />\n          <div className={classes.footer}>\n            <div className={classes.actions}>\n              {submitStatus === 'In Progress' && (\n                <React.Fragment>\n                  {forDeletion.claim_numbers.length > 0 && (\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      className={`${'button-negative'} ${classes['delete-button']}`}\n                      onClick={() => {\n                        onOpenDelete(true)\n                      }}\n                      id='cancel'\n                    >\n                      Delete\n                    </Button>\n                  )}\n\n                  <Button\n                    id='cancel'\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                    onClick={() => props.history.push('/')}\n                  >\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' className='button-positive' onClick={handleOnUpdate}>\n                    Update Claim\n                  </Button>\n                  <Button\n                    id='submit-batch'\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() =>\n                      setOpenDialog(state => ({\n                        ...state,\n                        show: true,\n                        message: 'Are you sure you want to submit this batch?',\n                        handleOnOk: handleOnSubmit\n                      }))\n                    }\n                  >\n                    Submit\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {submitStatus === 'Completed' && (\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-negative'\n                  onClick={() => props.history.push('/')}\n                >\n                  Close\n                </Button>\n              )}\n            </div>\n          </div>\n          <ProviderSchedule\n            type={details.claim.type}\n            facility={details.facility}\n            dialog={showProviderSchedule}\n            setDialog={setShowProviderSchedule}\n          />\n\n          <Alert\n            open={openDialog.show}\n            message={openDialog.message}\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(state => ({ ...state, show: false }))}\n            onOk={openDialog.handleOnOk}\n          />\n        </React.Fragment>\n      )}\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cc')\n\nexport default class CustomerCareServices {\n  static getMember ({ member_account_no }) {\n    return axios({\n      url: `/members`,\n      method: 'GET',\n      params: { member_account_number: member_account_no },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getContractPDF ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/pdf`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberContractBenefit ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/${contract_oid}/benefit`,\n      method: 'GET',\n      params: { member_oid, contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberContract ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getBaseBenefitPlan () {\n    return axios({\n      url: `/benefit-plan/base`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getBenefitPlanTree ({ contract_oid }) {\n    return axios({\n      url: `/benefit-plan/tree/${contract_oid}`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberBenefitLimit ({ member_oid, contract_oid }) {\n    return axios({\n      url: `/member/${member_oid}/contract/limit`,\n      method: 'GET',\n      params: { contract_oid },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberFindBenefit ({ member_oid, contract_oid, tree_oid, is_exact }) {\n    return axios({\n      url: `/member/${member_oid}/contract/limit`,\n      method: 'GET',\n      params: { contract_oid, tree_oid, is_exact },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getMemberUtilizationLoa ({ member_account_no }) {\n    return axios({\n      url: `/member/utilization-loa`,\n      method: 'GET',\n      params: { member_account_number: member_account_no },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  // PRO User lookup\n  static proUsersLookup ({ value, field }) {\n    return axios({\n      url: '/users/pro',\n      method: 'GET',\n      params: { [field]: value }\n    })\n  }\n}\n","export const resetClaim = () => {\n  return {\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    type: 'SET_ClAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    type: 'SET_ClAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    type: 'SET_ClAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    type: 'ADD_ClAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    type: 'SET_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    type: 'SET_ClAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    type: 'REMOVE_ClAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    type: 'ADD_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    type: 'UPDATE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    type: 'REMOVE_ClAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    type: 'ADD_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    type: 'UPDATE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    type: 'REMOVE_ClAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    type: 'ADD_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    type: 'UPDATE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    type: 'REMOVE_ClAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setClaimType = payload => {\n  return {\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","export const initDropDowns = payload => {\n  return {\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","export const setProcedure = payload => {\n  return {\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","export const setHospitalItem = payload => {\n  return {\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","export const setProfessionalFee = payload => {\n  return {\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setGrandTotal = payload => {\n  return {\n    type: 'SET_GRAND_TOTAL',\n    payload\n  }\n}\n\nexport const resetGrandTotal = () => {\n  return {\n    type: 'RESET_GRAND_TOTAL'\n  }\n}\n","export const setDentalProcedure = payload => {\n  return {\n    type: 'SET_DENTAL_PROCEDURE',\n    payload\n  }\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\nexport default function ContractRange (props) {\n  const { claim, error = {}, disableControls = false, onChange = () => {}, readOnly = false } = props\n\n  return (\n    <div className={classes['root']}>\n      <div style={{ cursor: 'pointer' }} onClick={() => {}} className={classes['title']}>\n        <Typography variant='subtitle1'>Contract Year:</Typography>\n      </div>\n      <div className={classes['input']}>\n        <Typography variant='subtitle1' className={classes['label']}>\n          From:\n        </Typography>\n        <DatePicker\n          id='contract-date-from'\n          required\n          value={claim.contract_year_from}\n          disabled={disableControls}\n          onChange={event => onChange(event, 'contract_year_from')}\n          error={error.contract_year_from}\n          readOnly={readOnly}\n        />\n      </div>\n      <div className={classes['input']}>\n        <Typography variant='subtitle1' className={classes['label']}>\n          To:\n        </Typography>\n        <DatePicker\n          id='contract-date-to'\n          required\n          value={claim.contract_year_to}\n          disabled={disableControls}\n          onChange={event => onChange(event, 'contract_year_to')}\n          error={error.contract_year_to}\n          readOnly={readOnly}\n        />\n      </div>\n    </div>\n  )\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/client')\nexport default class CustomerCareService {\n  static getLoaDetails ({ approval_code }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa/approval/${approval_code}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n\n  static getUtilizationLoa ({ params }) {\n    return axios({\n      url: `api/customer-care/member-utilization-loa`,\n      method: 'GET',\n      params: {\n        filter: params\n      }\n    })\n  }\n\n  static getContractList ({ member_account_number }) {\n    return axios({\n      url: `api/customer-care/members/${member_account_number}`,\n      method: 'GET',\n      headers: { [ExcludeErrorConstants['404']]: 1 }\n    })\n  }\n}\n","const renameProp = (\n  oldProp,\n  newProp,\n  { [oldProp]: old, ...others }\n) => ({\n  [newProp]: old,\n  ...others\n})\n\nexport { renameProp }\n","export default {\n  'In Patient': { prefix: 'IP', other_name: 'InPatient' },\n  'Out Patient Procedure': { prefix: 'OP', other_name: 'OutPatientProcedure' },\n  'Out Patient Consultation': { prefix: 'PF', other_name: 'OutPatientConsultation' },\n  Emergency: { prefix: 'ER', other_name: 'Emergency' },\n  Dental: { prefix: 'DN', other_name: 'Dental' },\n  'Medicine Allowance': { prefix: 'MA', other_name: 'MedicineAllowance' },\n  APE: { prefix: 'AP', other_name: 'APE' },\n  ECU: { prefix: 'EC', other_name: 'ECU' },\n  Pharmacy: { prefix: 'PH', other_name: 'Pharmacy' },\n  PPE: { prefix: 'PE', other_name: 'PPE' },\n  'Medical Supplies': { prefix: 'MS', other_name: 'MedicalSupplies' },\n  'Clinic Management': { prefix: 'CM', other_name: 'ClinicManagement' },\n  Reimbursement: {\n    prefix: 'RM',\n    other_name: 'Reimbursement',\n    subType: [\n      { text: 'In Patient', value: 'InPatient' },\n      { text: 'Out Patient', value: 'OutPatient' },\n      { text: 'Professional Fee', value: 'ProfessionalFee' },\n      { text: 'Maternity Assistance', value: 'MaternityAssistance' },\n      { text: 'OPD Medicine', value: 'OPDMedicine' },\n      { text: 'Optical', value: 'Optical' },\n      { text: 'Dental', value: 'Dental' }\n    ]\n  }\n}\n","import InPatient from './InPatient'\nimport OutPatientConsultation from './OutPatientConsultation'\nimport OutPatientProcedure from './OutPatientProcedure'\nimport Emergency from './Emergency'\nimport Reimbursement from './Reimbursement'\nimport MedicineAllowance from './MedicineAllowance'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nimport ClaimTypes from './../../Constant/ClaimTypes'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\nconst AutoFill = ({ loa, claim_type }) => {\n  const type = ClaimTypes[claim_type].other_name\n\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (type) {\n    case 'InPatient':\n      InPatient({ common, loa, dispatch })\n      break\n\n    case 'OutPatientProcedure':\n      OutPatientProcedure({ common, loa, dispatch })\n      break\n\n    case 'OutPatientConsultation':\n      OutPatientConsultation({ common, loa, dispatch })\n      break\n\n    case 'Emergency':\n      Emergency({ common, loa, dispatch })\n      break\n\n    case 'Reimbursement':\n      Reimbursement({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function OutPatientProcedure ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    department: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility, setClaimDoctor, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function OutPatientConsultation ({ common, loa, dispatch }) {\n  let professional_fees = loa.professional_fees || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].pshilhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    recommendation: '',\n    anesthesiologist_id: '',\n    anesthesiologist_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n  const doctor_id = loa.partner_doctor_id || ''\n  const doctor_name = loa.partner_doctor_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n  dispatch(setClaimDoctor({ doctor_id: doctor_id }))\n  dispatch(setClaimDoctor({ doctor_name: doctor_name }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n  let diagnosis = loa.diagnoses || []\n  const primary_diagnosis = loa.primary_diagnosis\n  const primary_icd10_code = loa.primary_icd10_code\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  diagnosis.map((diag, i) => {\n    let primary = false\n    if (diag.icd10_code === primary_icd10_code) primary = true\n    diagnosis[i].primary = primary\n    diagnosis[i] = renameProp('diagnosis', 'description', diagnosis[i])\n    diagnosis[i] = renameProp('icd10_code', 'code', diagnosis[i])\n  })\n\n  let details = {\n    ...common,\n    date_from: loa.date_admitted_date ? loa.date_admitted_date: Date.now(),\n    date_to: loa.date_discharged_date ? loa.date_discharged_date: Date.now(),\n    room_type: loa.room ? loa.room[0].room_type: '',\n    room_rate: loa.room ? loa.room[0].total_amount: '',\n    pro_id: '',\n    pro_name: '',\n    claim_sub_type: '',\n    claim_sub_sub_type: '',\n    with_corporate_guarantee: '',\n    diagnosis: diagnosis || [],\n    loa_notes: '',\n    procedures: procedures || '',\n    hospital_items: hospital_items,\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const medical_partner_id = loa.partner_id || ''\n  const medical_partner_name = loa.partner_name || ''\n  dispatch(setClaimFacility({ facility_id: medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: medical_partner_name }))\n\n  // Set Rooms List\n  if (medical_partner_id || medical_partner_name) {\n    const value = medical_partner_id || medical_partner_name\n    const by = medical_partner_id ? 'id' : 'name'\n    ClaimsEncodingServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = (data[0].rooms || []).map(item => ({\n        text: item.type,\n        value: item.type,\n        rate: item.rate\n      }))\n      dispatch(setDropDown({ rooms: rooms }))\n    })\n  }\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import React from 'react'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport ContractRange from '../ContractRange/ContractRange'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from './../../AutoFill'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } from '../../Store/actions'\n\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\nimport ClaimTypes from './../../../Constant/ClaimTypes'\n\n// Libraries\n\nexport default function BaseDetails (props) {\n  const defaultFunction = () => {}\n\n  const {\n    onChange,\n    onChangeReimbursementType = defaultFunction,\n    handleMemberAccountNumber,\n    claim,\n    errors,\n    disableControls,\n    showReimbursement = false,\n    showCompany = false,\n    showContractRange = false,\n    showClaimSource = false,\n    showApprovalCode = true,\n    showLoaNumber = true,\n    isDental = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(state => state.claimType)\n  const [approvalCode, setApprovalCode] = React.useState('')\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const handleLoaDetails = event => {\n    const value = event.target.value.trim()\n\n    if (value && value !== approvalCode) {\n      setApprovalCode(value)\n      LoadingService.loading(true)\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n        LoadingService.loading(false)\n      })\n    }\n  }\n\n  const handleOnBlurMemberAccountNumber = event => {\n    if (!handleMemberAccountNumber) return\n\n    const value = event.target.value.trim()\n\n    if (value === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(value)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!value) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: value }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.groups}>\n        {showApprovalCode && (\n          <div className={classes['input']}>\n            <TextField\n              id='approval-code'\n              label='Approval Code'\n              value={claim.approval_code}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n              onBlur={handleLoaDetails}\n              error={errors.approval_code}\n            />\n          </div>\n        )}\n        {showLoaNumber && (\n          <div className={classes['input']}>\n            <TextField\n              id='loa-number'\n              label='LOA No.'\n              value={claim.loa_number}\n              disabled={disableControls}\n              onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n              error={errors.loa_number}\n            />\n          </div>\n        )}\n        {showReimbursement && (\n          <div className={classes['input']}>\n            <DropDown\n              id='reimbursement-type'\n              label='Reimbursement Type'\n              items={ClaimTypes.Reimbursement.subType}\n              value={claim.reimbursement_type}\n              disabled={disableControls}\n              required\n              onChange={event => onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })}\n              error={errors.reimbursement_type}\n            />\n          </div>\n        )}\n        {showCompany && (\n          <React.Fragment>\n            <div className={classes['input']}>\n              <TextField\n                id='company-account-number'\n                label='Customer (Company) Account Number'\n                value={claim.customer_account_number}\n                disabled={disableControls}\n                required\n                onChange={event => onChange({ field: 'customer_account_number', value: event.target.value })}\n                error={errors.customer_account_number}\n              />\n            </div>\n            <div className={classes['input']}>\n              <TextField\n                id='company-name'\n                label='Company Name'\n                required\n                value={claim.company_name}\n                disabled={disableControls}\n                onChange={event => onChange({ field: 'company_name', value: event.target.value })}\n                error={errors.company_name}\n              />\n            </div>\n          </React.Fragment>\n        )}\n        {showClaimSource && (\n          <div className={classes['input']}>\n            <TextField\n              id='claim-source'\n              label='Claim Source'\n              value={''}\n              disabled={disableControls}\n              onChange={event => {}}\n              error={''}\n            />\n          </div>\n        )}\n        {showContractRange && <ContractRange />}\n      </div>\n\n      <div className={classes.groups}>\n        <div className={classes['input']}>\n          <TextField\n            id='member-account-number'\n            required\n            label='Member Account No.'\n            value={claim.member_account_number}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_account_number',\n                value: event.target.value\n              })\n            }\n            onBlur={handleOnBlurMemberAccountNumber}\n            error={errors.member_account_number}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-last-name'\n            required\n            label='Member Last Name'\n            value={claim.member_last_name}\n            disabled={disableControls}\n            onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n            error={errors.member_last_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-first-name'\n            required\n            label='Member First Name'\n            value={claim.member_first_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_first_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_first_name}\n          />\n        </div>\n\n        <div className={classes['input']}>\n          <TextField\n            id='member-middle-name'\n            label='Member Middle Name'\n            required={!!isDental}\n            value={claim.member_middle_name}\n            disabled={disableControls}\n            onChange={event =>\n              onChange({\n                field: 'member_middle_name',\n                value: event.target.value\n              })\n            }\n            error={errors.member_middle_name}\n          />\n        </div>\n      </div>\n      <AutoFillInitializer />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <div className={classes.actions} />\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    errors = { description: '', code: '' },\n    onDeleteDiagnosis\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <div className={classes.wrapper}>\n        <div className={classes['sub-wrapper']}>\n          <div className={classes.actions}>\n            <IconButton id='delete-icd' onClick={() => setOpenDialog(true)}>\n              <DeleteIcon fontSize='small' />\n            </IconButton>\n          </div>\n\n          <Tooltip\n            onClose={() => setTooltipOpen(false)}\n            onOpen={handleTooltipOpen}\n            open={tooltipOpen}\n            title={description}\n          >\n            {/* {console.log('error ', errors)} */}\n            <div className={`${classes['description']}`}>\n              <AutoComplete\n                id={id}\n                value={description}\n                suggestions={suggestions.description}\n                onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n                error={errors.description}\n              />\n            </div>\n          </Tooltip>\n\n          <div className={`${classes['code']}`}>\n            <AutoComplete\n              id={codeId}\n              value={code}\n              suggestions={suggestions.code}\n              onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n              error={errors.code}\n            />\n          </div>\n\n          <div className={classes.primary}>\n            <Radio color='primary' checked={primary} onClick={onChangePrimary} />\n          </div>\n        </div>\n      </div>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to delete this diagnosis?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={() => {\n          setOpenDialog(false)\n          onDeleteDiagnosis()\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","function IndexedDbHelper () {}\n\n/**\n * Deletes an IndexedDb database.\n *\n * @param {string} name database to be deleted\n * @param {function} callback function to be invoked\n */\n\nIndexedDbHelper.deleteDb = function (name, callback) {\n  var request = window.indexedDB.deleteDatabase(name)\n\n  request.onerror = function (event) {\n    // console.log(\"Error deleting database.\");\n    callback()\n  }\n\n  request.onsuccess = function (event) {\n    // console.log(\"Database deleted successfully\");\n    callback()\n  }\n}\n\n/**\n * Opens an IndexedDb database.\n *\n * @param {string} name IndexedDb database to create/open\n * @param {function} onUprade callback function to be invoked when database\n *            is to be created or when there is a need to upgrade\n * @param {function} onSuccess callback function to be invoked upon successfully opening database\n * @param {function} onError callback function to be invoked upon failure\n */\nIndexedDbHelper.openDb = function (name, onUprade, onSuccess, onError) {\n  let request = window.indexedDB.open(name)\n\n  request.onerror = function (event) {\n    console.error(event)\n    if (onError) onError(event)\n  }\n\n  request.onsuccess = function (event) {\n    let db = event.target.result\n    if (onSuccess) onSuccess(db, event)\n  }\n\n  // Triggered when a new database is created or when the\n  // version number of an existing database has been incremented\n  request.onupgradeneeded = function (event) {\n    // Save the IDBDatabase interface\n    let db = event.target.result\n    if (onUprade) onUprade(db, event)\n  }\n}\n\n/**\n * Creates object store\n *\n * @param {object} db reference to database object\n * @param {string} name name of object store to be created\n * @param {string} keyPath unique key in object\n * @param {function} onComplete callback to be invoked upon object store creation\n */\nIndexedDbHelper.createStoreOnDb = function (db, name, keyPath, onComplete) {\n  // console.log('test', 'creating store ' + name);\n\n  let store = db.createObjectStore(name, { keyPath: keyPath })\n  if (onComplete) store.transaction.oncomplete = onComplete\n  return store\n}\n\n/**\n * Creates index on an object store.\n *\n * @param {object} store reference to object store\n * @param {string} name name of index to be created\n * @param {boolean} isUnique whether index is unique or not\n */\nIndexedDbHelper.createIndexOnStore = function (store, name, isUnique) {\n  store.createObjectStore(name, { unique: isUnique })\n}\n\n/**\n * Opens an IndexedDb, opens an object store, and saves the given entries\n *\n * @param {string} dbName IndexedDb database to open\n * @param {string} storeName name of objectstore to save entries to\n * @param {array} entries to be saved to objectstore\n * @param {function} onSaveComplete callback function to be invoked upon save completion\n * @param {function} onLoopEnd callback function to be invoked upon finishing loop for entries\n */\nIndexedDbHelper.openDbAndSave = function (dbName, storeName, entries, onSaveComplete, onLoopEnd) {\n  IndexedDbHelper.openDb(\n    dbName,\n\n    function (db, event) {},\n\n    function (db, event) {\n      IndexedDbHelper.saveToStore(db, storeName, entries, onSaveComplete, onLoopEnd)\n    },\n\n    function (event) {\n      console.error('error opening ' + dbName)\n      console.error(event)\n      if (onLoopEnd) onLoopEnd()\n    }\n  )\n}\n\n/**\n * Opens an IndexedDb, opens an object store, and saves the given entries\n *\n * @param {object} db IndexedDb database reference\n * @param {string} storeName name of objectstore to save entries to\n * @param {array} entries to be saved to objectstore\n * @param {function} onSaveComplete callback function to be invoked upon save completion\n * @param {function} onLoopEnd callback function to be invoked upon finishing loop for entries\n */\nIndexedDbHelper.saveToStore = function (db, storeName, entries, onSaveComplete, onLoopEnd) {\n  if (!entries || entries.length === 0) {\n    if (onLoopEnd) onLoopEnd()\n\n    return\n  }\n\n  let transaction = db.transaction([storeName], 'readwrite')\n\n  transaction.oncomplete = function (event) {\n    console.log('entries written to IndexedDb objectstore: ' + storeName + ' total: ' + entries.length)\n    if (onSaveComplete) onSaveComplete()\n  }\n\n  let store = transaction.objectStore(storeName)\n\n  entries.forEach(function (entry) {\n    // console.log(entry)\n    try {\n      store.add(entry)\n    } catch (ex) {}\n  })\n\n  if (onLoopEnd) onLoopEnd()\n}\n\nIndexedDbHelper.getAll = function (db, storeName, callback) {\n  try {\n    let objectStore = db.transaction(storeName, 'readonly').objectStore(storeName)\n    objectStore.getAll().onsuccess = function (event) {\n      callback(event.target.result)\n    }\n  } catch (ex) {\n    let empty = []\n    callback(empty)\n  }\n}\n\nexport { IndexedDbHelper }\n","import { IndexedDbHelper } from 'Utilities/IndexedDbHelper'\nimport instance from '../Api/instance'\n// const axios = instance('/c/ce')\n// const FlexSearch = require('flexsearch');\n\nexport default class IcdCptStorageServices {\n  /**\n   * Initializes a IndexedDb database and the object stores needed to store/access ICDs and CPTs\n   *\n   * @param {function} callback function to be invoked upon completion\n   */\n  static initializeStorage (callback) {\n    // IcdCptStorageServices.flexSearchIndex = {}\n\n    let dbName = IcdCptStorageServices.DB_NAME\n\n    IndexedDbHelper.deleteDb(dbName, function () {\n      IndexedDbHelper.openDb(\n        dbName,\n\n        function (db, event) {\n          IndexedDbHelper.createStoreOnDb(db, IcdCptStorageServices.OBJECT_STORE_NAME_CPT, 'code')\n          IndexedDbHelper.createStoreOnDb(db, IcdCptStorageServices.OBJECT_STORE_NAME_ICD, 'code')\n        },\n\n        function (db, event) {\n          console.log('success opening ' + dbName)\n          IcdCptStorageServices.db = db\n\n          if (callback) callback()\n        },\n\n        function (event) {\n          console.error('error opening ' + dbName)\n          console.error(event)\n          if (callback) callback()\n        }\n      )\n    })\n  }\n\n  /**\n   * Saves ICD entries\n   *\n   * @param {array} data entries to be saved\n   * @param {function} callback function to be invoked upon success or end failure\n   */\n  static saveIcdEntries (data, onSaveComplete, onLoopEnd) {\n    IcdCptStorageServices.records[IcdCptStorageServices.OBJECT_STORE_NAME_ICD] = data\n\n    IndexedDbHelper.openDbAndSave(\n      IcdCptStorageServices.DB_NAME,\n      IcdCptStorageServices.OBJECT_STORE_NAME_ICD,\n      data,\n      onSaveComplete,\n      onLoopEnd\n    )\n  }\n\n  /**\n   * Saves CPT entries\n   *\n   * @param {array} data entries to be saved\n   * @param {function} callback function to be invoked upon success or end failure\n   */\n  static saveCptEntries (data, onSaveComplete, onLoopEnd) {\n    IcdCptStorageServices.records[IcdCptStorageServices.OBJECT_STORE_NAME_CPT] = data\n\n    IndexedDbHelper.openDbAndSave(\n      IcdCptStorageServices.DB_NAME,\n      IcdCptStorageServices.OBJECT_STORE_NAME_CPT,\n      data,\n      onSaveComplete,\n      onLoopEnd\n    )\n  }\n\n  static readStorageEntries (storeName, callback) {\n    // Load entries from IndexedDB and into memory records\n    IndexedDbHelper.openDb(\n      IcdCptStorageServices.DB_NAME,\n      null,\n      function (db, event) {\n        IndexedDbHelper.getAll(db, storeName, function (entries) {\n          callback(entries)\n        })\n      },\n      null\n    )\n  }\n\n  static loadEntries (storeName, callback) {\n    // If memory records is still empty\n    if (!IcdCptStorageServices.records[storeName]) {\n      IcdCptStorageServices.readStorageEntries(storeName, function (entries) {\n        IcdCptStorageServices.records[storeName] = entries\n        callback(IcdCptStorageServices.records[storeName])\n      })\n    } else {\n      // Use entries from memory records\n      callback(IcdCptStorageServices.records[storeName])\n    }\n  }\n\n  /**\n   * Peform lookups.\n   *\n   * This method has been created to emulate the output of ClaimsEncodingServices.lookups() so that\n   * autosuggest features that rely on the behavior ClaimsEncodingServices.lookups() will still function\n   * if this method is used as a replacement.\n   *\n   * @see ClaimsEncodingServices.lookups()\n   */\n  static lookups ({ on, params }) {\n    let promise = new Promise(function (resolve, reject) {\n      let storeName = null\n      if (on === 'icd-10') {\n        storeName = IcdCptStorageServices.OBJECT_STORE_NAME_ICD\n      } else if (on === 'cpt') {\n        storeName = IcdCptStorageServices.OBJECT_STORE_NAME_CPT\n      }\n\n      IcdCptStorageServices.loadEntries(storeName, function (entries) {\n        // Perform search\n        let value = params.query.toLowerCase()\n\n        let result = []\n        let filterKey = ''\n        if (on === 'icd-10') {\n          filterKey = 'full_description'\n          switch (params.by) {\n            case 'code':\n              filterKey = 'full_code'\n              break\n            case 'category':\n              filterKey = 'category_code'\n              break\n          }\n\n          result = entries.filter(entry => ('' + entry[filterKey]).toLowerCase().includes(value))\n\n          if (result && result.length > 0) {\n            // Construct output with data structure similar to the output of ClaimsEncodingServices.lookups()\n            result = result.map(entry => ({ description: entry.full_description, code: entry.full_code, ...entry }))\n          }\n        } else if (on === 'cpt') {\n          filterKey = 'label'\n          if (params.by === 'code') filterKey = 'code'\n          result = entries.filter(entry => ('' + entry[filterKey]).toLowerCase().includes(value))\n\n          if (result && result.length > 0) {\n            // Construct output with data structure similar to the output of ClaimsEncodingServices.lookups()\n            result = result.map(entry => ({ description: entry.label, code: entry.code, ...entry }))\n          }\n        }\n\n        // Sort by filter key\n        result.sort((a, b) => {\n          let item1 = ('' + a[filterKey]).toLowerCase()\n          let item2 = ('' + b[filterKey]).toLowerCase()\n\n          if (item1 > item2) {\n            return 1\n          }\n\n          return -1\n        })\n\n        // Pick top X entries\n        result = result.slice(0, IcdCptStorageServices.LOOKUP_LIMIT)\n\n        result = { data: { data: result } }\n\n        resolve(result)\n      })\n    })\n\n    return promise\n\n    // return axios({\n    //   url: `/lookups/${on}`,\n    //   method: 'GET',\n    //   params: { limit: 10, ...params }\n    // })\n    // Expected: [{code: \"A000\", description: \"Cholera due to Vibrio cholerae 01, biovar cholerae\"}]\n  }\n}\n\nIcdCptStorageServices.DB_NAME = 'himsDb'\nIcdCptStorageServices.OBJECT_STORE_NAME_ICD = 'icd10_list'\nIcdCptStorageServices.OBJECT_STORE_NAME_CPT = 'cpt_list'\n// IcdCptStorageServices.DB_NAME = 'claimsDb'\n// IcdCptStorageServices.OBJECT_STORE_NAME_ICD = 'icds'\n// IcdCptStorageServices.OBJECT_STORE_NAME_CPT = 'cpts'\n\nIcdCptStorageServices.LOOKUP_LIMIT = 10\n\nIcdCptStorageServices.records = {}\n\n// IcdCptStorageServices.flexSearchIndex = {};\n\n// static populate(cat, entries){\n//     let index = (IcdCptStorageServices.flexSearchIndex[cat] || (\n//         IcdCptStorageServices.flexSearchIndex[cat] = new FlexSearch\n//     )).add(entries)\n\n//   // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD] = new FlexSearch\n\n//   // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].add(1, {id:0, key1: 'a'})\n//   // // IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].add(2, entries[1])\n\n//   // // let entries = IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].find({\n//   // //   full_description: data[0]['full_description']\n//   // // })\n\n//   // let entries = IcdCptStorageServices.flexSearchIndex[IcdCptStorageServices.OBJECT_STORE_NAME_ICD].find(\n//   //   function(item){\n//   //     console.log(item)\n//   //     return true;\n//   //     //return item.full_description == data[0]['full_description'];\n//   // });\n\n//   // alert('')\n//   // console.log(entries)\n\n// }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  addClaimDiagnosis,\n  addSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  removeSuggestionToArray,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  removeClaimDiagnosis\n} from '../../Store/actions'\n\nexport default function DiagnosisList (props) {\n  const { items, errors = [] } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(state => state.suggestions)\n\n  const handleOnClickAddDiagnosis = () => {\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n  }\n\n  React.useEffect(() => items && items.length === 0 && handleOnClickAddDiagnosis(), [])\n\n  return (\n    <div className={classes.groups}>\n      <div className={`${classes['diagnosis-list']} ${errors.error && classes['has-error']}`}>\n        <Typography variant='h6' className={classes.title}>\n          Diagnosis List\n        </Typography>\n        <ICDTextFields>\n          {items.map((item, index) => {\n            let error = null\n\n            try {\n              error = errors.items[index]\n            } catch (_error) {}\n\n            return (\n              <ICDTextField\n                key={`icd-${index}`}\n                id={`icd-description-${index}`}\n                codeId={`icd-code-${index}`}\n                errors={error || {}}\n                description={item.description}\n                suggestions={suggestions.icd10[index]}\n                code={item.code}\n                primary={item.primary}\n                onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                onDeleteDiagnosis={() => handleOnRemoveDiagnosis(index)}\n              />\n            )\n          })}\n        </ICDTextFields>\n\n        <Button\n          id='add-diagnosis-button'\n          className={classes['add-diagnosis-button']}\n          onClick={handleOnClickAddDiagnosis}\n        >\n          + Add a diagnosis\n        </Button>\n      </div>\n      {errors.error && <span className={classes.error}>{errors.list}</span>}\n    </div>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './CptTextField.module.scss'\n\nconst CptTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Procedure Details *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          CPT Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst CptTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    errors,\n    description = '',\n    code = '',\n    suggestions = [],\n    onChangeDescription,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip\n          onClose={() => setTooltipOpen(false)}\n          onOpen={handleTooltipOpen}\n          open={tooltipOpen}\n          title={description}\n        >\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              value={description}\n              suggestions={suggestions.description}\n              onChange={onChangeDescription}\n              error={errors.description}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            value={code}\n            suggestions={suggestions.code}\n            onChange={onChangeCode}\n            error={errors.code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { CptTextFields, CptTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    //.less(Joi.ref('gross_amount'))\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProcedureFormValidator from './ProcedureFormValidator'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} from '../../Store/actions'\n\nexport default function ProcedureForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthField = true } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const procedure = useSelector(state => state.procedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('procedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = ProcedureFormValidator({\n      description: procedure.details.description,\n      code: procedure.details.code.toString(),\n      gross_amount: procedure.details.gross_amount,\n      vat_amount: procedure.details.vat_amount,\n      amount_paid_by_member: procedure.details.amount_paid_by_member,\n      philhealth_amount_paid: procedure.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(procedure.details))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: procedure.details }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {procedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={procedure.details.description}\n                suggestions={suggestions.cpt}\n                code={procedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n              {showAmountPaidByMember && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.amount_paid_by_member}\n                  />\n                </div>\n              )}\n            </div>\n            {showPhilhealthField && (\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.philhealth_amount_paid}\n                  />\n                </div>\n\n                <div className={classes['input']}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeProcedureForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            )}\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {procedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => dispatch(setProcedure({ show: false }))}>\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {procedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(procedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(procedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './HospitalItemTextField.module.scss'\n\nconst HospitalItemTextFields = ({ children }) => {\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.description}>\n          Item Name *\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          Item Code *\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst HospitalItemTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    name = '',\n    item_code = '',\n    errors,\n    suggestions = [],\n    onChangeName,\n    onChangeCode = () => {}\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!name.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes['sub-wrapper']}>\n        <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={name}>\n          <div className={`${classes['description']}`}>\n            <AutoComplete\n              id={id}\n              required\n              value={name}\n              suggestions={suggestions.name}\n              onChange={onChangeName}\n              error={errors.name}\n            />\n          </div>\n        </Tooltip>\n\n        <div className={`${classes['code']}`}>\n          <AutoComplete\n            id={codeId}\n            required\n            value={item_code}\n            suggestions={suggestions.item_code}\n            onChange={onChangeCode}\n            error={errors.item_code}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { HospitalItemTextFields, HospitalItemTextField }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required()\n    .messages({\n      'string.empty': `\"Item Name\" is required.`\n    }),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required()\n    .messages({\n      'string.empty': `\"Item Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { HospitalItemTextFields, HospitalItemTextField } from '../HospitalItemTextField/HospitalItemTextField'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport HospitalItemFormValidator from './HospitalItemFormValidator'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n/// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setHospitalItem,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject\n} from '../../Store/actions'\n\nexport default function HospitalItemForm (props) {\n  const { showAmountPaidByMember = true, showPhilhealthRemarks = true } = props\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const suggestions = useSelector(state => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('hospitalItem.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i[field]) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeHospitalForm = args => {\n    const { value, field } = args\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const { error } = HospitalItemFormValidator({\n      name: hospitalItem.details.name,\n      item_code: hospitalItem.details.item_code.toString(),\n      gross_amount: hospitalItem.details.gross_amount,\n      vat_amount: hospitalItem.details.vat_amount,\n      amount_paid_by_member: hospitalItem.details.amount_paid_by_member,\n      philhealth_amount_paid: hospitalItem.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveHospitalItem = () => {\n    if (validate()) return\n\n    dispatch(addClaimHospitalItem(hospitalItem.details))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnUpdateHospitalItem = index => {\n    if (validate()) return\n\n    dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  const handleOnRemoveHospitalItem = index => {\n    dispatch(removeClaimHospitalItem({ index }))\n    dispatch(setHospitalItem({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {hospitalItem.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <HospitalItemTextFields>\n              <HospitalItemTextField\n                id='hospital-item'\n                codeId={`hospital-code`}\n                name={hospitalItem.details.name || ''}\n                item_code={hospitalItem.details.item_code || ''}\n                suggestions={suggestions.hospitalItem}\n                onChangeName={(value, isSuggestionClick) =>\n                  handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                }\n                onChangeCode={(value, isSuggestionClick) =>\n                  handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                }\n                errors={errors}\n              />\n            </HospitalItemTextFields>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n              {showAmountPaidByMember && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChangeHospitalForm({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={errors.amount_paid_by_member}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeHospitalForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n              {showPhilhealthRemarks && (\n                <div className={classes['input']}>\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChangeHospitalForm({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {hospitalItem.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveHospitalItem}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setHospitalItem({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {hospitalItem.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateHospitalItem(hospitalItem.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this hospital item?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveHospitalItem(hospitalItem.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required()\n    .messages({\n      'string.empty': `\"Medical Partner ID\" is required.`\n    }),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Name\" is required.`\n    }),\n  specialization: Joi.string()\n    .trim()\n    .label('Doctor Specialization')\n    .required()\n    .messages({\n      'string.empty': `\"Doctor Specialization\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid by Member')\n    .greater(-1)\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .greater(-1)\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ProfessionalFeeFormValidator from './ProfessionalFeeFormValidator'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setProfessionalFee,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const professionalFee = useSelector(state => state.professionalFee)\n  const pfSuggestions = useSelector(state => state.suggestions)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('professionalFee.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const handleOnChangeProfessionalFeeForm = args => {\n    const { value, field } = args\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const validate = () => {\n    const { error } = ProfessionalFeeFormValidator({\n      doctor_id: professionalFee.details.doctor_id,\n      doctor_name: professionalFee.details.doctor_name,\n      specialization: professionalFee.details.specialization,\n      gross_amount: professionalFee.details.gross_amount,\n      vat_amount: professionalFee.details.vat_amount,\n      amount_paid_by_member: professionalFee.details.amount_paid_by_member,\n      philhealth_amount_paid: professionalFee.details.philhealth_amount_paid\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProfessionalFee = () => {\n    if (validate()) return\n\n    dispatch(addClaimProfessionalFee(professionalFee.details))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnUpdateProfessionalFee = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const handleOnRemoveProfessionalFee = index => {\n    dispatch(removeClaimProfessionalFee({ index }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {professionalFee.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <div className={`${classes.groups} ${classes['first-item']}`}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id || ''}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({ field: 'doctor_id', value, isSuggestionClick })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name || ''}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({ field: 'doctor_name', value, isSuggestionClick })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.specialization}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={professionalFee.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={professionalFee.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.philhealth_amount_paid}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={professionalFee.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChangeProfessionalFeeForm({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {professionalFee.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProfessionalFee}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setProfessionalFee({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n\n              {professionalFee.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProfessionalFee(professionalFee.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this professional fee?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProfessionalFee(professionalFee.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './CustomTable.module.scss'\n\nconst Table = ({ children }) => {\n  const _children = React.Children.toArray(children)\n\n  const headers = []\n  const body = []\n  _children.filter((item, index) => {\n    if (item.type.displayName === 'TableHeader') {\n      headers.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n\n    if (item.type.displayName === 'TableBody') {\n      body.push(\n        React.cloneElement(item, {\n          key: index\n        })\n      )\n    }\n  })\n\n  return (\n    <table className={classes.table}>\n      {headers}\n      {body}\n    </table>\n  )\n}\n\nconst TableHeader = ({ items = [] }) => {\n  return (\n    <thead>\n      <tr>\n        {items.map((i, index) => (\n          <th key={i.name} style={{ width: `${i.width}px`, textAlign: i.align }}>\n            {i.name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.displayName = 'TableHeader'\n\nconst TableBody = ({ children }) => {\n  return <tbody>{children}</tbody>\n}\nTableBody.displayName = 'TableBody'\n\nconst TableRow = ({ children, className, onClick, expanded, id }) => {\n  const _children = React.Children.toArray(children)\n  // const [open, setOpen] = React.useState(expanded)\n  const [expandable, setExpandable] = React.useState([])\n  const [cells, setCells] = React.useState([])\n\n  React.useEffect(() => {\n    _children.filter((item, index) => {\n      if (item.type === 'td') {\n        setCells(state => [\n          ...state,\n          React.cloneElement(item, {\n            key: index\n          })\n        ])\n      }\n\n      if (item.type) {\n        if (item.type.displayName === 'TableRowExpandable') {\n          setExpandable(state => [\n            ...state,\n            React.cloneElement(item, {\n              key: index\n            })\n          ])\n        }\n      }\n    })\n  }, [])\n\n  const handleOnClick = () => {\n    // setOpen(!open)\n    if (typeof onClick === 'function') onClick()\n  }\n\n  return (\n    <React.Fragment>\n      <tr id={id} onClick={handleOnClick} className={className}>\n        {cells}\n      </tr>\n      <tr id={id} className={classes.expandable}>\n        <td colSpan={cells.length}>\n          <div className={`${classes.container} ${expanded ? classes.open : ''}`}>\n            <div className={classes.content}>{expandable}</div>\n          </div>\n        </td>\n      </tr>\n    </React.Fragment>\n  )\n}\nTableRow.displayName = 'TableRow'\n\nconst TableRowExpandable = ({ children }) => {\n  return children\n}\nTableRowExpandable.displayName = 'TableRowExpandable'\n\nexport { Table, TableHeader, TableBody, TableRow, TableRowExpandable }\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport {\n  setProcedure,\n  setProfessionalFee,\n  setHospitalItem,\n  resetSuggestionObject,\n  setDentalProcedure\n} from '../../Store/actions'\n\nexport default function ProcedureList (props) {\n  const { data, isDental } = props\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    if (isDental) return dispatch(setDentalProcedure({ show: false }))\n\n    dispatch(setProcedure({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(!isDental ? i.philhealth_amount_paid : 0)\n    )\n  }\n\n  const showProcedureForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n\n    if (isDental) {\n      dispatch(setDentalProcedure(params))\n    } else {\n      dispatch(setProcedure(params))\n    }\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n  const generateKey = i =>\n    `${i.description} ${i.code} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProcedureForm({ show: true, mode: 'add' })}\n          >\n            + Add Procedure\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProcedureForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.description}</td>\n                <td className={`${classes.align} ${classes.center}`}>{i.code}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport {\n  setHospitalItem,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  resetSuggestionObject\n} from '../../Store/actions'\n\nexport default function HospitalItemList (props) {\n  const { data } = props\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    dispatch(setHospitalItem({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    )\n  }\n\n  const showHospitalItemForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n    dispatch(setHospitalItem(params))\n\n    // TODO currently creating baseform\n    dispatch(setProcedure({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }\n\n  const generateKey = i =>\n    `${i.name} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showHospitalItemForm({ show: true, mode: 'add' })}\n          >\n            + Add Items\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']} `}\n                onClick={showHospitalItemForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.name}</td>\n                <td className={`${classes.align} ${classes.center}`}>{i.item_code}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Store\nimport { useDispatch } from 'react-redux'\nimport {\n  setProfessionalFee,\n  setHospitalItem,\n  setProcedure,\n  setDentalProcedure,\n  resetSuggestionObject\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeList (props) {\n  const { data } = props\n\n  const dispatch = useDispatch()\n\n  const [totalAmount, setTotalAmount] = React.useState(0)\n\n  React.useEffect(() => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n    setTotalAmount(amount)\n  }, [data])\n\n  React.useState(() => {\n    dispatch(setProfessionalFee({ show: false }))\n  }, [])\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    )\n  }\n\n  const showProfessionalFeeForm = params => e => {\n    dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n    dispatch(setProfessionalFee(params))\n\n    // TODO currently creating baseform\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n  }\n  const generateKey = i =>\n    `${i.doctor_name} ${i.specialization} ${i.gross_amount} ${i.vat_amount} ${i.amount_paid_by_member} ${i.philhealth_amount_paid}`\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          <Typography\n            variant='body2'\n            className={classes['add-link']}\n            onClick={showProfessionalFeeForm({ show: true, mode: 'add' })}\n          >\n            + Add Professional Fee\n          </Typography>\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' }\n            ]}\n          />\n          <TableBody>\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${generateKey(i)}`}\n                className={`${classes['row']}`}\n                onClick={showProfessionalFeeForm({\n                  show: true,\n                  mode: 'edit',\n                  index,\n                  details: data[index]\n                })}\n              >\n                <td>{i.doctor_name}</td>\n                <td>{i.specialization}</td>\n                <td className={`${classes.align} ${classes.right}`}>{CurrencyFormatter(amountPerItem(i))}</td>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {CurrencyFormatter(totalAmount)}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\nexport default function ClaimFooter (props) {\n  const { handleOnSave, setOpenDialog, openDialog, onOk, setShowReimbursementModal } = props\n  return (\n    <div className={classes.root}>\n      {setShowReimbursementModal && (\n        <Button\n          variant='contained'\n          color='primary'\n          id='save-for-now'\n          className='button-positive'\n          onClick={() => setShowReimbursementModal(true)}\n        >\n          Return\n        </Button>\n      )}\n\n      <Button\n        variant='contained'\n        color='primary'\n        id='save-for-now'\n        className='button-positive'\n        onClick={() => handleOnSave(true)}\n      >\n        Save for now\n      </Button>\n      <Button variant='contained' color='primary' className='button-positive' onClick={() => handleOnSave(false)}>\n        Save\n      </Button>\n      <Button\n        variant='contained'\n        color='primary'\n        id='cancel'\n        className='button-negative'\n        onClick={() => setOpenDialog(true)}\n      >\n        Cancel\n      </Button>\n\n      <Alert\n        open={openDialog}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDialog(false)}\n        onOk={onOk}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => data => {\n  const schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .allow('', null),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .allow('', null),\n\n    // TODO Claim Source here\n\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .messages({ 'string.empty': `\"Member Middle Name\" is required.` })\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    // TODO Client Account Number*\n    // TODO Client Account Name*\n\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .default('')\n      .allow('', null),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .default('')\n      .allow('', null),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now'),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .max('now')\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .default('')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .messages({ 'string.empty': `\"Claim Sub Type\" is required.` })\n      .required(),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import React from 'react'\nimport Alert from 'SharedComponents/Alert/Alert'\n\nlet _setDialog = null\nlet _resolve = null\nconst SoftValidatorAlertComponent = () => {\n  const [dialog, setDialog] = React.useState({})\n\n  React.useState(() => {\n    setDialog(state => ({ ...state, show: false }))\n    _setDialog = setDialog\n  }, [])\n\n  const action = t => {\n    setDialog(state => ({ ...state, show: false }))\n    _resolve(t)\n  }\n\n  return (\n    <Alert\n      open={dialog.show}\n      message={dialog.message}\n      cancelLabel='No'\n      okLabel='Yes'\n      onCancel={() => action()}\n      onOk={() => action(true)}\n    />\n  )\n}\n\nconst SoftValidatorService = ({ fields = [] }) => {\n  const _fields = []\n\n  fields.map(i => {\n    const [key] = Object.keys(i)\n    if (!i[key].trim()) _fields.push(key)\n  })\n\n  if (!_fields.length) return true\n\n  let message = 'Missing'\n  const length = _fields.length\n\n  for (let i = 0; i < length; i++) {\n    if (i && i === length - 1) message = `${message} and`\n    else if (i && i < length - 1) message = `${message},`\n\n    message = `${message} ${_fields[i]}`\n  }\n\n  message = `${message}. Are you sure you want to proceed?`\n\n  return new Promise(resolve => {\n    _resolve = resolve\n    _setDialog({ show: true, message })\n  })\n}\n\nexport { SoftValidatorAlertComponent, SoftValidatorService }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string().trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string().trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        ClaimsEncodingServices.lookups({\n          on: 'medical-partner',\n          params: { query: data.facility.id, by: 'id' }\n        }).then(res => {\n          const { data } = res.data\n          const rooms = (data[0].rooms || []).map(room => ({\n            text: room.type,\n            value: room.type,\n            rate: room.rate\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='room-type'\n                  required\n                  label='Room Type'\n                  items={dropDown.rooms}\n                  value={claim.room_type}\n                  disabled={disableControls}\n                  onChange={handleOnChangeRoomType}\n                  error={errors.room_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='room-rate'\n                  required\n                  label='Room Rate'\n                  value={claim.room_rate}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'room_rate'\n                      })\n                    )\n                  }\n                  error={errors.room_rate}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport MainValidator from './../../Validators/Claim'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            department: data.department,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='department'\n                  label='Department'\n                  value={claim.department}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'department'\n                      })\n                    )\n                  }\n                  error={errors.department}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n// import TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, onChangeAnaesthesiologist, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            recommendation: data.recommendation,\n            anesthesiologist_id: data.anesthesiologist.id,\n            anesthesiologist_name: data.anesthesiologist.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='recommendation'\n                  label='Recommendation'\n                  value={claim.recommendation}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'recommendation'\n                      })\n                    )\n                  }\n                  error={errors.recommendation}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-id'\n                  label='Medical Partner ID (Anesthesiologist)'\n                  value={claim.anesthesiologist_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_id',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='anesthesiologist-name'\n                  label='Medical Partner (Anesthesiologist) Name'\n                  value={claim.anesthesiologist_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.anesthesiologist.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeAnaesthesiologist({\n                      value,\n                      field: 'anesthesiologist_name',\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.anesthesiologist_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-sub-type'\n                  label='Claim Sub-subType'\n                  items={[\n                    { text: 'Physical', value: 'Physical' },\n                    { text: 'Speech', value: 'Speech' },\n                    { text: 'Occupational', value: 'Occupational' }\n                  ]}\n                  value={claim.claim_sub_sub_type}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_sub_type}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='with-corporate-guaranty'\n                  label='With Corporate Guaranty?'\n                  value={claim.with_corporate_guarantee}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'with_corporate_guarantee'\n                      })\n                    )\n                  }\n                  readOnly\n                  error={errors.with_corporate_guarantee}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  required\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-id'\n                  label='PRO ID'\n                  required\n                  value={claim.pro_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-name'\n                  label='PRO Name'\n                  required\n                  value={claim.pro_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.pro.name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangePro({\n                      field: 'pro_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.pro_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n\n              <TextField\n                constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                multiline\n                rows={3}\n                id='loa-notes'\n                label='LOA Notes'\n                value={claim.loa_notes}\n                disabled={disableControls}\n                readOnly\n                onChange={event =>\n                  dispatch(\n                    setClaimBaseDetails({\n                      value: event.target.value,\n                      field: 'loa_notes'\n                    })\n                  )\n                }\n              />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\n// Styles\nimport classes from './ContractRange.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nexport default function ContractRange (props) {\n  const {\n    contract_year_from,\n    contract_year_to,\n    suggestions,\n    error,\n    // disableControls = false,\n    onChange = () => {}\n    // readOnly = false\n  } = props\n\n  const [focus, setFocus] = React.useState()\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    setError()\n    if (!(contract_year_from || contract_year_to)) {\n      setError(error)\n    }\n  }, [error, contract_year_from, contract_year_to])\n\n  const handleOnItemClick = ({ event, item }) => {\n    onChange(item)\n    setTimeout(() => setFocus(false), 10)\n  }\n  return (\n    <div className={classes['root']}>\n      <div\n        className={`${classes.container} ${_error ? classes['has-error'] : focus && classes.focus} box-shadow-field`}\n        tabIndex={0}\n        onFocus={() => setFocus(true)}\n        onClick={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n      >\n        <div className={classes['label']}>\n          <Typography variant='subtitle2'>Contract Year:</Typography>\n        </div>\n\n        <div className={classes['values']}>\n          <Typography variant='subtitle1'>\n            <span>From: </span>\n            {contract_year_from ? DateFormatter(contract_year_from) : '----------'} <span>To: </span>\n            {contract_year_to ? DateFormatter(contract_year_to) : '----------'}\n          </Typography>\n        </div>\n\n        {focus && (\n          <Paper className={`${classes.suggestions} ${error && classes['add-margin']}`} square>\n            <div className={classes.header}>\n              <Typography variant='subtitle2'>Member Contract Period</Typography>\n            </div>\n\n            <div className={classes['values-container']}>\n              <div className={classes.message}>\n                <Typography variant='body2'>Please select contract period for this claim</Typography>\n              </div>\n\n              <div className={classes.list}>\n                {suggestions.map((item, index) => (\n                  <div key={index} className={classes.item} onClick={event => handleOnItemClick({ event, item })}>\n                    {DateFormatter(item.from)} To {DateFormatter(item.to)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Paper>\n        )}\n\n        {_error && <span className={classes.error}>\"Contract Year\" is required.</span>}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Procedure Name')\n    .required()\n    .messages({\n      'string.empty': `\"Procedure Name\" is required.`\n    }),\n  code: Joi.string()\n    .trim()\n    .required()\n    .messages({\n      'string.empty': `\"CPT Code\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .greater(-1)\n    .required(),\n  vat_amount: Joi.number()\n    .label('VAT Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .greater(-1)\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .greater(-1)\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .required()\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes['label']}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport { subscribe } from 'redux-subscriber'\n\n// Components\nimport { CptTextFields, CptTextField } from '../CptTextField/CptTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport DentalProcedureFormValidator from './DentalProcedureFormValidator'\nimport ToothNumber from '../ToothNumber/ToothNumber'\n\n// Styles\nimport classes from './DentalProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setDentalProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure\n} from '../../Store/actions'\n\nexport default function DentalProcedureForm (props) {\n  const dispatch = useDispatch()\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const dentalProcedure = useSelector(state => state.dentalProcedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const [debounce, setDebounce] = React.useState(null)\n\n  const [errors, setErrors] = React.useState({})\n\n  React.useEffect(() => {\n    const unsubscribe = subscribe('dentalProcedure.show', state => {\n      setErrors({})\n      setOpenDialog(false)\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleOnChangeProcedureForm = ({ value, field }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setDentalProcedure({ details: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setDentalProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  const validate = () => {\n    const { error } = DentalProcedureFormValidator({\n      description: dentalProcedure.details.description,\n      code: dentalProcedure.details.code.toString(),\n      tooth_number: dentalProcedure.details.tooth_number,\n      gross_amount: dentalProcedure.details.gross_amount,\n      vat_amount: dentalProcedure.details.vat_amount,\n      amount_paid_by_member: dentalProcedure.details.amount_paid_by_member\n    })\n    console.log(error)\n    setErrors(error || {})\n    return !!error\n  }\n\n  const handleOnSaveProcedure = () => {\n    if (validate()) return\n\n    dispatch(addClaimProcedure(dentalProcedure.details))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnUpdateProcedure = index => {\n    if (validate()) return\n\n    dispatch(updateClaimProcedure({ index, details: dentalProcedure.details }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  const handleOnRemoveProcedure = index => {\n    dispatch(removeClaimProcedure({ index }))\n    dispatch(setDentalProcedure({ show: false }))\n  }\n\n  return (\n    <React.Fragment>\n      {dentalProcedure.show && (\n        <React.Fragment>\n          <Paper className={classes.root}>\n            <CptTextFields>\n              <CptTextField\n                id={`procedure-description-autocomplete`}\n                codeId={`procedure-code-autocomplete`}\n                description={dentalProcedure.details.description}\n                suggestions={suggestions.cpt}\n                code={dentalProcedure.details.code}\n                onChangeDescription={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({\n                    field: 'description',\n                    value,\n                    isSuggestionClick,\n                    selectedIndex\n                  })\n                }\n                onChangeCode={(value, isSuggestionClick, selectedIndex) =>\n                  handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                }\n                errors={errors}\n              />\n            </CptTextFields>\n\n            <div className={classes.groups}>\n              <ToothNumber\n                id='tooth-number'\n                label='Tooth Number'\n                required\n                value={dentalProcedure.details.tooth_number}\n                onChange={event =>\n                  handleOnChangeProcedureForm({\n                    field: 'tooth_number',\n                    value: event.target.value\n                  })\n                }\n                error={errors.tooth_number}\n              />\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  label='Gross Amount'\n                  value={dentalProcedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.gross_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={dentalProcedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.vat_amount}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextFieldCurrency\n                  id='procedure-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={dentalProcedure.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChangeProcedureForm({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.amount_paid_by_member}\n                />\n              </div>\n            </div>\n\n            <div className={`${classes.groups} ${classes.buttons}`}>\n              {dentalProcedure.mode === 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={handleOnSaveProcedure}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    onClick={() => dispatch(setDentalProcedure({ show: false }))}\n                  >\n                    Cancel\n                  </Button>\n                </React.Fragment>\n              )}\n              {dentalProcedure.mode !== 'add' && (\n                <React.Fragment>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                    onClick={() => handleOnUpdateProcedure(dentalProcedure.index)}\n                  >\n                    Update\n                  </Button>\n                  <Button variant='contained' color='secondary' onClick={() => setOpenDialog(true)}>\n                    Delete\n                  </Button>\n                </React.Fragment>\n              )}\n            </div>\n          </Paper>\n\n          <Alert\n            open={openDialog}\n            message='Are you sure you want to delete this procedure?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDialog(false)}\n            onOk={() => handleOnRemoveProcedure(dentalProcedure.index)}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n","const media = {\n  dentalChart:\n     'http://1y7exd3y0q9b2aqn6d2i9q42.wpengine.netdna-cdn.com/wp-content/uploads/2015/01/periodontal-charting-862x581.jpg'\n}\n\nexport default media\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\n// import ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\n\n// Media\nimport Media from 'Constant/media'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initDropDowns, initSuggestions, setGrandTotal } from '../../Store/actions'\n\n// Libraries\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, onChangeDoctor, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [flag, setFlag] = React.useState({\n    flag: true\n  })\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_last_name: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.dental_procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member ? i.amount_paid_by_member : 0) -\n      parseFloat(i.philhealth_amount_paid ? i.philhealth_amount_paid : 0)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n              isDental\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-id'\n                  label='Medical Partner ID'\n                  value={claim.doctor_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='doctor-name'\n                  label='Medical Partner (Doctor) Name'\n                  value={claim.doctor_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.doctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    onChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.doctor_name}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['chart']}>\n                <img src={Media.dentalChart} alt='dental-chart' />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <DentalProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      customer_account_number: '',\n      company_name: '',\n      date_to: new Date().toISOString(),\n      date_from: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            customer_account_number: data.customer_account_number,\n            company_name: data.company_name,\n            date_from: new Date(data.date.to).toISOString(),\n            date_to: new Date(data.date.to).toISOString(),\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            hospital_items: data.hospital_items || [],\n            loa_number: data.loa_number,\n            medicine_category: data.medicine_category,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            procedures: data.procedures || [],\n            professional_fees: data.professional_fees || []\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(state => ({ ...state, ...base_errors }))\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_to}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'medicine_category'\n                      })\n                    )\n                  }\n                  error={errors.medicine_category}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm showAmountPaidByMember={false} showPhilhealthField={false} />\n                  <HospitalItemForm showAmountPaidByMember={false} showPhilhealthRemarks={false} />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimFields, setClaimBaseDetails, initSuggestions, setGrandTotal } from '../../Store/actions'\n\n// Libraries\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_last_name: data.member.last_name,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    return error\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    setErrors(base_errors)\n    return !!Object.keys(base_errors).length\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    data['date_to'] = data.date_from\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              handleMemberAccountNumber\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }}\n                  error={errors.date_from}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['contract-range']}`}>\n                <ContractRange\n                  id='contract-year'\n                  contract_year_from={claim.contract_year_from}\n                  contract_year_to={claim.contract_year_to}\n                  suggestions={suggestions.contract.years}\n                  onChange={({ from, to }) => {\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_from',\n                        value: from\n                      })\n                    )\n                    dispatch(\n                      setClaimBaseDetails({\n                        field: 'contract_year_to',\n                        value: to\n                      })\n                    )\n                  }}\n                  error={errors.contract_year_from}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  approval_code: Joi.string()\n    .trim()\n    .label('Approval Code')\n    .allow('', null),\n  loa_number: Joi.string()\n    .trim()\n    .label('LOA No.')\n    .allow('', null),\n  member_account_number: Joi.string()\n    .trim()\n    .label('Member Account No.')\n    .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n    .required(),\n  member_last_name: Joi.string()\n    .trim()\n    .label('Member Last Name')\n    .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n    .required(),\n  member_first_name: Joi.string()\n    .trim()\n    .label('Member First Name')\n    .messages({ 'string.empty': `\"Member First Name\" is required.` })\n    .required(),\n  member_middle_name: Joi.string()\n    .trim()\n    .label('Member Middle Name')\n    .allow('', null),\n  reimbursement_type: Joi.string()\n    .trim()\n    .label('Reimbursement Type')\n    .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimECU.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimECUValidator from './ClaimECUValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimECU (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: 'No',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimECUValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showContractRange\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-id'\n                  required\n                  label='PRO-ECU Specialist ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='pro-ecu-specialist-name'\n                  required\n                  label='PRO-ECU Specialist Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DropDown\n                  id='claims-sub-type'\n                  required\n                  label='Claim Sub Type'\n                  items={[\n                    {\n                      text: 'Medical (diagnostic, lab)',\n                      value: 'Medical (diagnostic, lab)'\n                    },\n                    { text: 'Surgical', value: 'Surgical' },\n                    { text: 'Treatment', value: 'Treatment' },\n                    { text: 'Therapy', value: 'Therapy' }\n                  ]}\n                  value={claim.claim_sub_type}\n                  // disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'claim_sub_type'\n                      })\n                    )\n                  }\n                  error={errors.claim_sub_type}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPPE.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimPPEValidator from './ClaimPPEValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimPPE (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: 'No',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimPPEValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showCompany\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: moment(event.toISOString())\n                          .startOf('day')\n                          .toISOString(),\n                        field: 'date_from'\n                      })\n                    )\n                  }\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.toISOString(),\n                        field: 'date_to'\n                      })\n                    )\n                  }\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={`${classes['input']} ${classes['packages']}`}>\n                <Typography>PPE Package/s:</Typography>\n                <Paper style={{ maxHeight: '200px', overflow: 'auto' }}>\n                  <List>\n                    {[...Array(parseInt(Math.random() * 500) + 10)].map((value, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={`Package ${index + 1}`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Paper>\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimPharmacy.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimPharmacyValidator from './ClaimPharmacyValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store./ClaimPharmacyValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimPharmacy (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimPharmacyValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showClaimSource\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='medicine-category'\n                  label='Medicine Category'\n                  value={claim.medicine_category}\n                  onChange={event => {}}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicalSupplies.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimMedicalSuppliesValidator from './ClaimMedicalSuppliesValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store./ClaimMedicalSuppliesValidator\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimMedicalSupplies (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimMedicalSuppliesValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='date-of-service'\n                  required\n                  label='Date of Service'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  facility_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n    .required(),\n  facility_name: Joi.string()\n    .trim()\n    .label('Medical Partner (Facility) Name')\n    .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n    .required(),\n  date_from: Joi.date()\n    .label('Admission Date (From)')\n    .required()\n    .max('now'),\n  date_to: Joi.date()\n    .label('Admission Date (To)')\n    .required()\n    .min(Joi.ref('date_from'))\n    .messages({\n      'date.min': `\"Admission Date (From)\" should be on or before \"Admission Date (To)\"`\n    }),\n  room_type: Joi.string()\n    .trim()\n    .label('Room Type')\n    .messages({ 'string.empty': `\"Room Type\" is required.` })\n    .required(),\n  room_rate: Joi.number()\n    .label('Room Rate')\n    .messages({ 'string.empty': `\"Room Rate\" is required.` })\n    .required(),\n  pro_id: Joi.string()\n    .trim()\n    .label('PRO ID')\n    .allow('', null),\n  pro_name: Joi.string()\n    .trim()\n    .label('PRO Name')\n    .allow('', null),\n  claim_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub Type')\n    .required()\n    .messages({\n      'string.empty': `\"Claim Sub Type\" is required.`\n    }),\n  claim_sub_sub_type: Joi.string()\n    .trim()\n    .label('Claim Sub-subType')\n    .allow('', null),\n  with_corporate_guarantee: Joi.string()\n    .trim()\n    .label('Corporate Guaranty')\n    .allow('', null),\n  loa_notes: Joi.string()\n    .trim()\n    .allow('', null)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimClinicManagement.module.scss'\n\n// Validator\nimport BaseDetailsValidator from '../BaseDetails/BaseDetailsValidator'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport ClaimClinicManagementValidator from './ClaimClinicManagementValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimClinicManagement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: '',\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      dispatch(setClaimFields(_allowedFields))\n      setAllowedFields(_allowedFields)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        dispatch(setDropDown({ rooms: [{ text: data.room.type, value: data.room.type, rate: data.room.rate }] }))\n\n        dispatch(\n          setClaimFields({\n            approval_code: data.approval_code,\n            loa_number: data.loa_number,\n            member_account_number: data.member.account_number,\n            member_first_name: data.member.first_name,\n            member_middle_name: data.member.middle_name,\n            member_last_name: data.member.last_name,\n            facility_id: data.facility.id,\n            facility_name: data.facility.name,\n            date_from: data.date.from,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name,\n            claim_sub_type: data.claim_sub.type,\n            claim_sub_sub_type: data.claim_sub.sub_type,\n            with_corporate_guarantee: data.with_corporate_guarantee,\n            diagnosis: data.diagnosis,\n            loa_notes: data.loa_notes,\n            procedures: data.procedures,\n            hospital_items: data.hospital_items,\n            professional_fees: data.professional_fees\n          })\n        )\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member) -\n      parseFloat(i.philhealth_amount_paid)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    dispatch(setClaimRoom({ room_type: '', room_rate: 0 }))\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const [errors, setErrors] = React.useState({\n    diagnosis: []\n  })\n\n  const doValidateBase = value => {\n    const { error: base_error } = BaseDetailsValidator({\n      approval_code: value.approval_code,\n      loa_number: value.loa_number,\n      member_account_number: value.member_account_number,\n      member_last_name: value.member_last_name,\n      member_first_name: value.member_first_name,\n      member_middle_name: value.member_middle_name\n    })\n\n    let { error } = ClaimClinicManagementValidator({\n      facility_id: value.facility_id,\n      facility_name: value.facility_name,\n      date_from: moment(value.date_from)\n        .startOf('day')\n        .toISOString(),\n      date_to: moment(value.date_to)\n        .endOf('day')\n        .toISOString(),\n      room_type: value.room_type,\n      room_rate: value.room_rate,\n      pro_id: value.pro_id,\n      pro_name: value.pro_name,\n      claim_sub_type: value.claim_sub_type,\n      claim_sub_sub_type: value.claim_sub_sub_type,\n      with_corporate_guarantee: value.with_corporate_guarantee,\n      loa_notes: value.loa_notes\n    })\n\n    if (error || base_error) {\n      error = { ...base_error, ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ diagnosis: state.diagnosis, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const hasErrorBase = doValidateBase(data)\n    const diagnosis = DiagnosisListValidator(data.diagnosis)\n\n    setErrors(state => ({ ...state, diagnosis }))\n    return !!(hasErrorBase || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const hasError = doValidateAll(data)\n\n    if (hasError) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': data.approval_code }, { 'LOA No.': data.loa_number }]\n    })\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push(`/batches/${batchNumber}`)\n      })\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-number'\n                  label='Client Account Number'\n                  value={''}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={''}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id='client-account-name'\n                  label='Client Account Name'\n                  value={''}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={''}\n                />\n              </div>\n            </div>\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-from'\n                  required\n                  label='Admission Date (From)'\n                  value={claim.date_from}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id='admission-date-to'\n                  required\n                  label='Admission Date (To)'\n                  value={claim.date_to}\n                  disabled={disableControls}\n                  onChange={event => {}}\n                  error={errors.date_to}\n                />\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={() => {}}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ReimbursementInfoComponent.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Libraries\n\nconst headCells = [\n  { id: 'date-created', name: 'Date Created' },\n  { id: 'prepared-by', name: 'Prepared By' },\n  { id: 'date-encoded', name: 'Date Encoded' },\n  { id: 'released-to', name: 'Released To' }\n]\n\nexport default function ReimbursementInfoComponent (props) {\n  const { show, setShowModal, handleOnSave, doReject } = props\n  const {\n    batch_number,\n    member_last_name,\n    member_first_name,\n    member_middle_name,\n    reimbursement_info: data = []\n  } = props.claim\n\n  const container = React.useRef()\n\n  const [showAdd, setShowAdd] = React.useState()\n  const [rejectModal, setRejectModal] = React.useState(false)\n\n  const [items, setItems] = React.useState([])\n  React.useEffect(() => {\n    setItems(data)\n  }, [data])\n\n  const handleOnItemClick = ({ index, value = true }) => {\n    if (showAdd && value) return\n\n    setItems(items => {\n      return items.map((item, _index) => {\n        if (_index === index) item.show = value\n        return item\n      })\n    })\n\n    setTimeout(() => {\n      setItems(items => {\n        return items.map((item, _index) => {\n          if (_index === index) item.showCell = value\n          return item\n        })\n      })\n    }, 1)\n  }\n\n  const handleOnClickAdd = () => {\n    setShowAdd(true)\n\n    setTimeout(() => {\n      container.current.scrollTo({\n        top: container.current.scrollHeight,\n        behavior: 'smooth'\n      })\n    }, 1)\n  }\n\n  const handleOnClickCancel = index => {\n    if (index === 'add') return setShowAdd()\n    handleOnItemClick({ index, value: false })\n  }\n\n  const handleOnClickSave = ({ item }) => {\n    setItems(items => {\n      const _items = [...items, item]\n      handleOnItemSave(_items)\n      return _items\n    })\n    setShowAdd()\n  }\n\n  const handleOnClickUpdate = ({ index, item }) => {\n    items[index] = item\n    setItems(items => {\n      let _items = items.map((_item, _index) => {\n        if (_index === index) _item = { ...item, show: false, showCell: false }\n        return _item\n      })\n\n      handleOnItemSave(_items)\n      return _items\n    })\n  }\n\n  const handleOnClose = () => setShowModal(false)\n\n  const handleOnItemSave = items => {\n    const _items = []\n\n    for (let i of items) {\n      _items.push({\n        date_created: i.date_created,\n        prepared_by: i.prepared_by,\n        date_encoded: i.date_encoded,\n        released_to: i.released_to,\n        date_released: i.date_released,\n        date_return: i.date_return,\n        remarks: i.remarks,\n        reasons: i.reasons\n      })\n    }\n\n    handleOnSave(_items)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            Reimbursement Info\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes['basic-info']}>\n          <Typography variant='subtitle2' className={classes.label}>\n            Batch No.: {batch_number}\n          </Typography>\n\n          <Typography variant='subtitle2' className={classes.label}>\n            Member Name.: {member_last_name}, {member_first_name} {member_middle_name}\n          </Typography>\n        </div>\n        <Table\n          TableContainerProps={{\n            style: { height: '100%', overflow: 'auto', position: 'relative' },\n            ref: container\n          }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.id} id={`header-${headCell.id}`}>\n                  {headCell.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          pagination={false}\n          body={\n            <React.Fragment>\n              {items.map((item, index) => (\n                <React.Fragment key={index}>\n                  <TableRow onClick={() => handleOnItemClick({ index })}>\n                    <TableCell id={`batch-number-${index}`}>{DateFormatter(item.date_created)}</TableCell>\n                    <TableCell id={`prepared-by-${index}`}>{item.prepared_by}</TableCell>\n                    <TableCell id={`date-encoded-${index}`}>{DateFormatter(item.date_encoded)}</TableCell>\n                    <TableCell id={`released-to-${index}`}>{item.released_to}</TableCell>\n                  </TableRow>\n\n                  {item.show && (\n                    <ItemForm\n                      index={index}\n                      item={item}\n                      handleOnClickCancel={handleOnClickCancel}\n                      handleOnClickUpdate={handleOnClickUpdate}\n                    />\n                  )}\n                </React.Fragment>\n              ))}\n\n              {/* Add Form */}\n              {showAdd && (\n                <ItemForm\n                  index='add'\n                  item={{}}\n                  handleOnClickSave={handleOnClickSave}\n                  handleOnClickCancel={handleOnClickCancel}\n                />\n              )}\n              {/* Add Form */}\n            </React.Fragment>\n          }\n        />\n\n        <div className={classes.footer}>\n          <Button variant='contained' color='primary' id='cancel' className='button-negative' onClick={handleOnClose}>\n            Close\n          </Button>\n\n          {doReject && (\n            <Button\n              variant='contained'\n              color='primary'\n              id='reject'\n              className='button-neutral'\n              onClick={() => setRejectModal(true)}\n            >\n              Reject\n            </Button>\n          )}\n\n          <Button\n            variant='contained'\n            color='primary'\n            id='save-for-now'\n            className='button-positive'\n            onClick={handleOnClickAdd}\n            disabled={showAdd}\n          >\n            Add\n          </Button>\n          <Button variant='contained' color='primary' className='button-positive'>\n            Print Notice\n          </Button>\n        </div>\n      </DialogContent>\n\n      <Alert\n        open={rejectModal}\n        message='Are you sure you want to reject this claim?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setRejectModal(false)}\n        onOk={() => {\n          setRejectModal(false)\n          setShowModal(false)\n          doReject()\n        }}\n      />\n    </Dialog>\n  )\n}\n\nconst ItemForm = props => {\n  const defaultFunction = () => {}\n  const { index, item: _item, readOnly } = props\n\n  // Events\n  const {\n    handleOnClickCancel = defaultFunction,\n    handleOnClickSave = defaultFunction,\n    handleOnClickUpdate = defaultFunction\n  } = props\n\n  const [item, setItem] = React.useState({})\n\n  React.useEffect(() => {\n    const today = new Date().toISOString()\n\n    setItem({\n      date_created: today,\n      prepared_by: '',\n      date_encoded: today,\n      released_to: '',\n      date_released: today,\n      date_return: today,\n      remarks: '',\n      reasons: [],\n      ..._item\n    })\n  }, [])\n\n  const handleOnChange = ({ field, value }) => {\n    setItem(p => ({ ...p, [field]: value }))\n  }\n\n  const handleOnClickAddReason = () => {\n    setItem(item => ({\n      ...item,\n      reasons: [...item.reasons, { value: '', other_details: '' }]\n    }))\n  }\n  const handleOnClickRemoveReason = __index => {\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.filter((item, _index) => __index !== _index)\n    }))\n  }\n\n  const handleOnChangeReason = ({ field, value, index }) => {\n    setItem(item => ({\n      ...item,\n      reasons: item.reasons.map((item, _index) => {\n        if (index === _index) item[field] = value\n        return item\n      })\n    }))\n  }\n\n  const _handleOnClickUpdate = () => {\n    handleOnClickUpdate({ index, item })\n  }\n\n  const _handleOnClickSave = () => {\n    handleOnClickSave({ item })\n  }\n\n  return (\n    <TableRow key={`collapsible-${index}`}>\n      <TableCell colSpan={headCells.length} id={`collabsible-cell-${index}`} className={classes['collapsible-cell']}>\n        <div className={`${classes.container} ${!item.showCell || index === 'add' ? classes['show-cell'] : ''}`}>\n          <div className={classes.cell}>\n            <Typography variant='h6' className={classes.label}>\n              {index === 'add' ? 'Add Item' : 'Update Item'}\n            </Typography>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-created-${index}`}\n                  label='Date Created'\n                  value={item.date_created}\n                  onChange={event => handleOnChange({ field: 'date_created', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`prepared-by-${index}`}\n                  label='Prepared By'\n                  value={item.prepared_by || ''}\n                  onChange={event => handleOnChange({ field: 'prepared_by', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-encoded-${index}`}\n                  label='Date Encoded'\n                  value={item.date_encoded}\n                  onChange={event => handleOnChange({ field: 'date_encoded', value: event.toISOString() })}\n                  // error={errors.date_from}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <TextField\n                  id={`released-to-${index}`}\n                  label='Released To'\n                  value={item.released_to || ''}\n                  onChange={event => handleOnChange({ field: 'released_to', value: event.target.value })}\n                  // error={errors.loa_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`date-released-${index}`}\n                  label='Date Released'\n                  value={item.date_released}\n                  onChange={event => handleOnChange({ field: 'date_released', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <DatePicker\n                  id={`return-date-${index}`}\n                  label='Return Date'\n                  value={item.date_return}\n                  onChange={event => handleOnChange({ field: 'date_return', value: event.toISOString() })}\n                />\n              </div>\n\n              <div className={classes['input']} style={{ width: '50%' }}>\n                <TextField\n                  constainerStyle={{ width: 'unset', flex: 1 }}\n                  multiline\n                  rows={3}\n                  id='remarks'\n                  label='Remarks'\n                  value={item.remarks || ''}\n                  onChange={event => handleOnChange({ field: 'remarks', value: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <div className={classes['reasons-container']}>\n              <div className={classes.header}>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Reasons\n                </Typography>\n                <Typography variant='subtitle2' className={classes.label}>\n                  Other Details\n                </Typography>\n\n                <div className={classes.delete} />\n              </div>\n\n              {/* Reasons */}\n              {(item.reasons || []).map((item, _index) => (\n                <div className={classes.reasons} key={`reason-${_index}`}>\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-text-${_index}`}\n                      value={item.value || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'value', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes['input']} style={{ width: '50%' }}>\n                    <TextField\n                      id={`reason-other-details-${_index}`}\n                      value={item.other_details || ''}\n                      onChange={event =>\n                        handleOnChangeReason({ field: 'other_details', value: event.target.value, index: _index })\n                      }\n                    />\n                  </div>\n\n                  <div className={classes.delete}>\n                    <IconButton id='delete-reason'>\n                      <DeleteIcon fontSize='small' onClick={() => handleOnClickRemoveReason(_index)} />\n                    </IconButton>\n                  </div>\n                </div>\n              ))}\n\n              <Typography\n                variant='body2'\n                className={`${classes['add-link']} ${(item.reasons || []).length ? '' : classes['empty-reasons']}`}\n                onClick={() => handleOnClickAddReason()}\n              >\n                + Add a reason\n              </Typography>\n              {/* Reasons */}\n            </div>\n\n            <div className={classes.footer}>\n              <React.Fragment>\n                {!readOnly && (\n                  <React.Fragment>\n                    <Button\n                      variant='contained'\n                      color='primary'\n                      id='cancel'\n                      className='button-negative'\n                      onClick={() => handleOnClickCancel(index)}\n                    >\n                      Cancel\n                    </Button>\n                    {index === 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickSave}\n                        >\n                          Save\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {index !== 'add' && (\n                      <React.Fragment>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          id='save-for-now'\n                          className='button-positive'\n                          onClick={_handleOnClickUpdate}\n                        >\n                          Update\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst Dental = ['doctor_id', 'doctor_name', 'contract_year_from', 'contract_year_to', 'date_from']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : type === 'Dental' ? Dental : other_fields\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport ReimbursementInfoComponent from '../../../Components/ReimbursementInfoComponent/ReimbursementInfoComponent'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\nimport DentalProcedureForm from '../DentalProcedureForm/DentalProcedureForm'\n\n// Services\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport { SoftValidatorService, SoftValidatorAlertComponent } from '../BaseDetails/SoftValidator'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\n\nimport AdditionalFields from './AdditionalFields'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setGrandTotal,\n  setProcedure,\n  setDentalProcedure,\n  setProfessionalFee,\n  setHospitalItem\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  const { claim, onChangeFacility, getClaimDetails, onChangeDoctor, onChangePro } = props\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const grandTotal = useSelector(state => state.grandTotal)\n\n  const [isAdd, setIsAdd] = React.useState(true)\n\n  const [batchNumber, setBatchNumber] = React.useState(null)\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  const [type, setType] = React.useState('')\n\n  React.useEffect(() => {\n    const { _batchNumber } = props.match.params\n    setIsAdd(props.isAdd)\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: props.isAdd ? 'InPatient' : '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: '',\n      diagnosis: []\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(props.isAdd ? 'InPatient' : undefined) })\n      setlineItemFields(_lineItemFields)\n      setInitialAllowedFields(_allowedFields)\n\n      const initial_values = { ..._allowedFields, ..._lineItemFields }\n\n      if (props.isAdd) initial_values['date_to'] = new Date().toISOString()\n\n      dispatch(setClaimFields(initial_values))\n\n      // if (result['date_to'] !== undefined)\n    }, 10)\n\n    if (!props.isAdd) {\n      getClaimDetails(data => {\n        setType(data.reimbursement_details.type)\n        ClaimsEncodingServices.lookups({\n          on: 'medical-partner',\n          params: { query: data.facility.id, by: 'id' }\n        }).then(res => {\n          const { data } = res.data\n          const rooms = (data[0].rooms || []).map(room => ({\n            text: room.type,\n            value: room.type,\n            rate: room.rate\n          }))\n          dispatch(setDropDown({ rooms }))\n        })\n\n        let _claim = {\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          reimbursement_type: data.reimbursement_details.type,\n          member_account_number: data.member.account_number,\n          member_last_name: data.member.last_name,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          medicine_category: data.medicine_category,\n          reimbursement_category: data.reimbursement_details.category,\n          official_receipt_number: data.reimbursement_details.official_receipt_number,\n          diagnosis: data.diagnosis || [],\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || [],\n          hospital_items: data.hospital_items || [],\n          reimbursement_info: data.reimbursement_info || [],\n          batch_number: data.batch_number\n        }\n\n        if (data.reimbursement_details.type === 'InPatient') {\n          _claim = {\n            ..._claim,\n            date_to: data.date.to,\n            room_type: data.room.type,\n            room_rate: data.room.rate || 0,\n            pro_id: data.pro.id,\n            pro_name: data.pro.name\n          }\n        } else if (data.reimbursement_details.type === 'Dental') {\n          _claim = {\n            ..._claim,\n            procedures: data.dental_procedures || [],\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            contract_year_from: data.contract_year.from,\n            contract_year_to: data.contract_year.to\n          }\n        } else {\n          _claim = {\n            ..._claim,\n            doctor_id: data.doctor.id,\n            doctor_name: data.doctor.name,\n            department: data.department\n          }\n        }\n\n        dispatch(setClaimFields(_claim))\n        setAllowedFields({\n          ..._allowedFields,\n          ...AdditionalFields(\n            data.reimbursement_details.type === 'InPatient'\n              ? 'InPatient'\n              : data.reimbursement_details.type === 'Dental'\n                ? 'Dental'\n                : ''\n          )\n        })\n      })\n    }\n\n    setBatchNumber(_batchNumber)\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_paid_by_member ? i.amount_paid_by_member : 0) -\n      parseFloat(i.philhealth_amount_paid ? i.philhealth_amount_paid : 0)\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n    }\n\n    dispatch(setGrandTotal(sum))\n  }, [claim])\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const [errors, setErrors] = React.useState({})\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...fields, flag: type === 'Dental' }))({\n      ...data,\n      flag: type === 'Dental'\n    })\n    return error\n  }\n\n  const validateDiagnosis = () => {\n    if (type === 'Dental') {\n      return {}\n    }\n    return DiagnosisListValidator(claim.diagnosis)\n  }\n\n  const doValidateAll = () => {\n    const base_errors = doValidateBase()\n    const diagnosis = validateDiagnosis()\n    setErrors({ ...base_errors, diagnosis })\n    return !!(Object.keys(base_errors).length || diagnosis.error)\n  }\n\n  const [disableControls, setDisableControls] = React.useState(false)\n  const handleOnSave = async goBack => {\n    if (doValidateAll()) return\n\n    const proceed = await SoftValidatorService({\n      fields: [{ 'Approval Code': claim.approval_code }, { 'LOA No.': claim.loa_number }]\n    })\n\n    if (!proceed) return\n\n    setDisableControls(true)\n    LoadingService.loading(true)\n\n    const data = {}\n    for (let f in { ...allowedFields, ...lineItemFields }) data[f] = claim[f]\n\n    if (!data.date_to) {\n      data.date_to = new Date().toISOString()\n    }\n\n    if (isAdd) {\n      ClaimsEncodingServices.addClaim({ batch_number: batchNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    } else {\n      const { _claimNumber } = props.match.params\n      ClaimsEncodingServices.updateClaim({ batch_number: batchNumber, claim_number: _claimNumber, data }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) return props.history.push(`/batches/${batchNumber}`)\n        props.history.push(`/`)\n      })\n    }\n  }\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n    setType(value)\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: new Date().toISOString()\n        })\n      )\n    } else if (value === 'Dental') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          reimbursement_type: 'Dental',\n          date_from: new Date().toISOString(),\n          contract_year_to: '',\n          contract_year_from: '',\n          doctor_id: '',\n          doctor_name: ''\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  React.useEffect(() => {\n    dispatch(setDentalProcedure({ show: false }))\n    dispatch(setProcedure({ show: false }))\n    dispatch(setHospitalItem({ show: false }))\n    dispatch(setProfessionalFee({ show: false }))\n  }, [type])\n\n  return (\n    <React.Fragment>\n      {claim && (\n        <div className={classes.root}>\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              errors={errors}\n              disableControls={disableControls}\n              showReimbursement\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              handleMemberAccountNumber={type === 'Dental'}\n              isDental={type === 'Dental'}\n            />\n\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={claim.facility_id}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_id}\n                />\n              </div>\n\n              <div className={classes['input']}>\n                <AutoComplete\n                  id='medical-partner-facility-name'\n                  required\n                  label='Medical Partner (Facility) Name'\n                  value={claim.facility_name}\n                  disabled={disableControls}\n                  suggestions={suggestions.facility.name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeFacility({\n                      field: 'facility_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={errors.facility_name}\n                />\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='dp-medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.doctor_id}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.id}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='doctor-name'\n                    required\n                    label='Medical Partner (Doctor) Name'\n                    value={claim.doctor_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.doctor.full_name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangeDoctor({\n                        field: 'doctor_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.doctor_name}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_from') && AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={errors.date_from}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={errors.date_to}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'date_from') && type === 'Dental' && (\n                <div className={classes['input']}>\n                  <DatePicker\n                    id='date-of-service'\n                    required\n                    label='Date of Service'\n                    value={claim.date_from}\n                    disabled={disableControls}\n                    onChange={event => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_from'\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.toISOString(),\n                          field: 'date_to'\n                        })\n                      )\n                    }}\n                    error={errors.date_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'contract_year_from') && (\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <ContractRange\n                    id='contract-year'\n                    contract_year_from={claim.contract_year_from}\n                    contract_year_to={claim.contract_year_to}\n                    suggestions={suggestions.contract.years}\n                    onChange={({ from, to }) => {\n                      dispatch(\n                        setClaimBaseDetails({\n                          field: 'contract_year_from',\n                          value: from\n                        })\n                      )\n                      dispatch(\n                        setClaimBaseDetails({\n                          field: 'contract_year_to',\n                          value: to\n                        })\n                      )\n                    }}\n                    error={errors.contract_year_from}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'department') && (\n                <div className={classes['input']}>\n                  <TextField\n                    id='department'\n                    label='Department'\n                    value={claim.department}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'department'\n                        })\n                      )\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <div className={classes['input']}>\n                  <DropDown\n                    id='room-type'\n                    required\n                    label='Room Type'\n                    items={dropDown.rooms}\n                    value={claim.room_type}\n                    disabled={disableControls}\n                    onChange={handleOnChangeRoomType}\n                    error={errors.room_type}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <div className={classes['input']}>\n                  <TextFieldCurrency\n                    id='room-rate'\n                    required\n                    label='Room Rate'\n                    value={claim.room_rate}\n                    disabled={disableControls}\n                    onChange={event =>\n                      dispatch(\n                        setClaimBaseDetails({\n                          value: event.target.value,\n                          field: 'room_rate'\n                        })\n                      )\n                    }\n                    error={errors.room_rate}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_id') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-id'\n                    required\n                    label='PRO ID'\n                    value={claim.pro_id}\n                    suggestions={suggestions.pro.id}\n                    disabled={disableControls}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_id}\n                  />\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'pro_name') && (\n                <div className={classes['input']}>\n                  <AutoComplete\n                    id='pro-name'\n                    required\n                    label='PRO Name'\n                    value={claim.pro_name}\n                    disabled={disableControls}\n                    suggestions={suggestions.pro.name}\n                    onChange={(value, isSuggestionClick) =>\n                      onChangePro({\n                        field: 'pro_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={errors.pro_name}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_rate') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      error={errors.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      disabled={disableControls}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      error={errors.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  disabled={disableControls}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  error={errors.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <DiagnosisList items={claim.diagnosis} errors={errors.diagnosis} />\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              <ProcedureList data={claim.procedures} isDental={type === 'Dental'} />\n              <HospitalItemList data={claim.hospital_items} />\n              <ProfessionalFeeList data={claim.professional_fees} />\n            </div>\n\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  {/* temporary dental proc  dental_procedure */}\n                  <DentalProcedureForm />\n                  <ProcedureForm />\n                  <HospitalItemForm />\n                  <ProfessionalFeeForm />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n\n          <ClaimFooter\n            handleOnSave={handleOnSave}\n            setOpenDialog={setOpenDialog}\n            openDialog={openDialog}\n            setShowReimbursementModal={setShowReimbursementModal}\n            onOk={() => {\n              setOpenDialog(false)\n              props.history.push(`/batches/${batchNumber}`)\n            }}\n          />\n          <ReimbursementInfoComponent\n            claim={claim}\n            show={showReimbursementModal}\n            setShowModal={setShowReimbursementModal}\n            handleOnSave={reimbursement_info =>\n              dispatch(\n                setClaimBaseDetails({\n                  value: reimbursement_info,\n                  field: 'reimbursement_info'\n                })\n              )\n            }\n          />\n          <SoftValidatorAlertComponent />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Components\nimport ClaimInPatient from '../../Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from '../../Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from '../../Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from '../../Components/ClaimEmergency/ClaimEmergency'\nimport ClaimDental from '../../Components/ClaimDental/ClaimDental'\nimport ClaimMedicineAllowance from '../../Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimAPE from '../../Components/ClaimAPE/ClaimAPE'\nimport ClaimECU from '../../Components/ClaimECU/ClaimECU'\nimport ClaimPPE from '../../Components/ClaimPPE/ClaimPPE'\nimport ClaimPharmacy from '../../Components/ClaimPharmacy/ClaimPharmacy'\nimport ClaimMedicalSupplies from '../../Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\nimport ClaimClinicManagement from '../../Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from '../../Components/ClaimReimbursement/ClaimReimbursement'\n\nimport ClaimTypes from './../../../Constant/ClaimTypes'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n\n  const SelectecClaimType = selected => {\n    const type = ClaimTypes[selected].other_name\n\n    switch (type) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      case 'ECU':\n        return <ClaimECU {...props} />\n\n      case 'PPE':\n        return <ClaimPPE {...props} />\n\n      case 'Pharmacy':\n        return <ClaimPharmacy {...props} />\n\n      case 'MedicalSupplies':\n        return <ClaimMedicalSupplies {...props} />\n\n      case 'ClinicManagement':\n        return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        break\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import React from 'react'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport ClaimsEncodingServices from 'Services/Api/ClaimsEncodingServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  resetGrandTotal,\n  setClaimPro\n} from '../../Store/actions'\n\nimport GetClaimComponent from './GetClaimComponent'\n\nexport default function ClaimPage (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(state => state.claim)\n  const claim_type = useSelector(state => state.claimType)\n  const suggestions = useSelector(state => state.suggestions)\n\n  const getBatchDetails = ({ _batchNumber }) => {\n    ClaimsEncodingServices.getBatch({ batch_number: _batchNumber }).then(res => {\n      const { data } = res.data\n      dispatch(setClaimType(data.claim.type))\n      LoadingService.loading(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    LoadingService.loading(true)\n    const { _batchNumber, _claimNumber } = props.match.params\n\n    let pageTitle = ''\n    let breadCrumbs = ['dashboard', 'batches', `specificBatch:${_batchNumber}`]\n    if (props.isAdd) {\n      pageTitle = 'Add new claim'\n      breadCrumbs = [...breadCrumbs, 'addClaim']\n    } else {\n      pageTitle = `Claim No. ${_claimNumber}`\n      breadCrumbs = [...breadCrumbs, 'updateClaim']\n    }\n\n    PageTitleService(pageTitle)\n    BreadcrumbsService.setSelectedItems(breadCrumbs)\n    getBatchDetails({ _batchNumber })\n\n    return () => {\n      dispatch(setClaimType(''))\n      dispatch(resetClaim())\n      dispatch(resetGrandTotal())\n    }\n  }, [props.match.params._batchNumber])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { _batchNumber, _claimNumber } = props.match.params\n    ClaimsEncodingServices.getClaim({\n      batch_number: _batchNumber,\n      claim_number: _claimNumber\n    }).then(res => {\n      const { data } = res.data\n\n      // Set Diagnosis Suggestions\n      const { diagnosis = [] } = data\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n\n      callback(data)\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // PRO User lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ClaimsEncodingServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && (\n        <GetClaimComponent\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          onChangeFacility={handleOnChangeFacility}\n          getClaimDetails={getClaimDetails}\n          onChangePro={handleOnChangePro}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","const claimReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_ClAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_ClAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_ClAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'SET_ClAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'ADD_ClAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_ClAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_ClAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","const claimTypeReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","const initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'REMOVE_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { index, field } = action.payload\n        return {\n          ...state,\n          [field]: state[field].filter((i, _index) => index !== _index)\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","const dropDownReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","const grandTotalReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'RESET_GRAND_TOTAL':\n      return 0\n\n    case 'SET_GRAND_TOTAL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default grandTotalReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    tooth_number: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0\n  }\n}\n\nconst dentalProcedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_DENTAL_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default dentalProcedureReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\nimport initSubscriber from 'redux-subscriber'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS_DETAILS_ENCODER') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst store = createStore(...args)\ninitSubscriber(store)\nexport default store\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport grandTotalReducer from './grandTotalReducer'\nimport dentalProcedureReducer from './dentalProcedureReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  grandTotal: grandTotalReducer,\n  dentalProcedure: dentalProcedureReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport BatchesPage from './Pages/BatchesPage/BatchesPage'\nimport BatchPage from './Pages/BatchPage/BatchPage'\nimport ClaimPage from './Pages/ClaimPage/ClaimPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// Store\nimport Store from './Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Batches',\n    icon: 'box-open',\n    to: '/batches'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  batches: {\n    text: 'Batches',\n    to: '/batches'\n  },\n  specificBatch: {\n    text: data => data,\n    to: data => `/batches/${data}`\n  },\n  addClaim: {\n    text: 'Add new claim',\n    to: ''\n  },\n  updateClaim: {\n    text: 'Update Claim',\n    to: ''\n  }\n}\n\nfunction ClaimsDetailsEncoderRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Provider store={Store}>\n      <Switch>\n        <Route path='/' exact component={Dashboard} />\n        <Route path='/batches' exact component={BatchesPage} />\n        <Route path='/batches/:_batchNumber' exact component={BatchPage} />\n        <Route path='/batches/:_batchNumber/claims/add' exact render={props => <ClaimPage {...props} isAdd />} />\n        <Route path='/batches/:_batchNumber/claims/:_claimNumber' exact component={ClaimPage} />\n      </Switch>\n    </Provider>\n  )\n}\n\nexport default ClaimsDetailsEncoderRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n\nimport PrintIcon from '@material-ui/icons/Print'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: ' Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: ' Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: ' Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell\n                id={\n                  category === 'open'\n                    ? `analyze-claim-${index}`\n                    : category === 'my'\n                      ? `update-claim-${index}`\n                      : category === 'submitted'\n                        ? `print-${index}`\n                        : `update-esc-claim-${index}`\n                }\n              >\n                {category === 'submitted' && (\n                  <React.Fragment>\n                    <IconButton\n                      id={`print-${index}`}\n                      aria-label='more'\n                      aria-controls='long-menu'\n                      aria-haspopup='true'\n                      onClick={event =>\n                        onItemClick({ category, claim_number: row.claim_number, event: event, claim: row })\n                      }\n                    >\n                      <PrintIcon />\n                    </IconButton>\n                  </React.Fragment>\n                )}\n\n                {category !== 'submitted' && (\n                  <Typography\n                    variant='caption'\n                    className='text-link underline'\n                    onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                  >\n                    {category === 'open' && 'Analyze'}\n                    {category === 'my' && 'Update'}\n                    {category === 'escalated' && 'Update'}\n                  </Typography>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ForAdjudicationTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n\n  const [claims, setClaims] = React.useState({\n    open: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'open',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'open' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, open: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnAnalyze = claim_number => {\n    services.assignClaim({ claim_number }).then(({ data: res }) => {\n      props.history.push(`/claims/${claim_number}/analyze`)\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleOnAnalyze(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='for-adjudication'\n        count={{ color: 3, value: claims.open.count, id: 'for-adjudication-count' }}\n        sizes={sizes}\n        title='For Adjudication'\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('open')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('open')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.open.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Typography\n                    id={`analyze-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnAnalyze(item.claim_number)}\n                  >\n                    Analyze\n                  </Typography>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nForAdjudicationTile.displayName = 'DashboardTileComponent'\n\nexport default ForAdjudicationTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from './../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst MyClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    my: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'my',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'my' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, my: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='my-claims'\n        count={{ color: 3, value: claims.my.count, id: 'my-claims-count' }}\n        sizes={sizes}\n        title='My Claims'\n        viewList={\n          <Typography\n            id='mc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('my')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('my')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-due-date'>Due Date</TableCell>\n              <TableCell id='mc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.my.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-facility-name${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  {/* { item.claim_number.startsWith('IP') && */}\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`} variant='caption' className='text-link underline'>\n                      Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nMyClaimsTile.displayName = 'DashboardTileComponent'\n\nexport default MyClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Print from '@material-ui/icons/Print'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst SubmittedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claimNumber, setClaimNumber] = React.useState(false)\n  const [claimType, setClaimType] = React.useState(null)\n  const [disableLoaButton, setDisableLoaButton] = React.useState(false)\n  const ITEM_HEIGHT = 48\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const open = Boolean(anchorEl)\n\n  function handleClickSubmitted (event, claim) {\n    setAnchorEl(event.currentTarget)\n    setClaimNumber(claim.claim_number)\n    setClaimType(claim._type)\n    setDisableLoaButton(!claim.has_amount_concerns)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const [claims, setClaims] = React.useState({\n    submitted: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'submitted',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'submitted' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, submitted: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'open') title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    handleClickSubmitted(event, claim)\n  }\n\n  const handleOnShowPdf = ({ claim_number, type }) => {\n    setAnchorEl()\n\n    let pdf = {}\n\n    switch (type) {\n      case 'letter_of_advice':\n        pdf = {\n          name: 'Letter of Advice',\n          service: services.getLetterOfAdvice({ claimNo: claim_number })\n        }\n        break\n\n      case 'analysis_sheet':\n        pdf = {\n          name: 'Analysis Sheet',\n          service: services.getAnalysisSheet({ claimNo: claim_number })\n        }\n\n        break\n    }\n\n    PdfViewer2Service({ ...pdf, open: true, fileName: type })\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='submitted-claims'\n        count={{ color: 5, value: claims.submitted.count, id: 'submitted-claims-count' }}\n        sizes={sizes}\n        title='Submitted Claims'\n        viewList={\n          <Typography\n            id='sc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('submitted')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('submitted')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='sc-claim-no'>Claim No.</TableCell>\n              <TableCell id='sc-due-date'>Due Date</TableCell>\n              <TableCell id='sc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.submitted.data.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell id={`sc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`sc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`sc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell>\n                  <IconButton\n                    id={`print${index}`}\n                    aria-label='more'\n                    aria-controls='long-menu'\n                    aria-haspopup='true'\n                    onClick={e => handleClickSubmitted(e, item)}\n                  >\n                    <Print />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <Menu\n              id='long-menu'\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n              style={{\n                zIndex: 1310\n              }}\n              PaperProps={{\n                style: {\n                  maxHeight: ITEM_HEIGHT * 4.5,\n                  width: claimType === 'Reimbursement' ? 280 : 200\n                }\n              }}\n            >\n              <MenuItem onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'analysis_sheet' })}>\n                {claimType === 'Reimbursement' ? 'Approved Reimbursement Letter' : 'Analysis Sheet'}\n              </MenuItem>\n              {/* {disableLoaButton ? ( */}\n              <MenuItem\n                disabled={disableLoaButton}\n                onClick={() => handleOnShowPdf({ claim_number: claimNumber, type: 'letter_of_advice' })}\n              >\n                {claimType === 'Reimbursement' ? 'Rejected Reimbursement Letter' : 'Letter Of Advice'}\n              </MenuItem>\n            </Menu>\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nSubmittedClaimsTile.displayName = 'DashboardTileComponent'\nexport default SubmittedClaimsTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReturnedEscalatedClaimsTile = props => {\n  const { services, sizes = { sm: 12 } } = props\n  const [claims, setClaims] = React.useState({\n    escalated: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getClaims({\n        category: 'escalated',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getClaimCount({ category: 'escalated' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const openBatches = batchResponse.data.data.results\n      const openBatchCount = batchCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, escalated: { data: openBatches, count: openBatchCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    services.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'For Adjudication'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    services.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number, claim, event }) => {\n    props.history.push(`/claims/${claim_number}/analyze`)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='returned-escalated'\n        count={{ color: 3, value: claims.escalated.count, id: 'returned-escalated-count' }}\n        sizes={sizes}\n        title='Returned Escalated Claims'\n        viewList={\n          <Typography\n            id='re-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('escalated')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('escalated')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='re-claim-no'>Claim No.</TableCell>\n              <TableCell id='re-due-date'>Due Date</TableCell>\n              <TableCell id='re-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.escalated.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`re-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`re-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`re-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`re-update-claim-${index}`}>\n                  <Link to={`/claims/${item.claim_number}/analyze`}>\n                    <Typography id={`update-claim-${index}`}>\n                      {' '}\n                      variant='caption' className='text-link underline'> Update\n                    </Typography>\n                  </Link>\n                  {/* } */}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReturnedEscalatedClaimsTile.displayName = 'DashboardTileComponent'\nexport default ReturnedEscalatedClaimsTile\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/ca')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  static isFacilityExists (params) {\n    return axios({\n      url: `/lookups/medical-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static isDoctorExists (params) {\n    return axios({\n      url: `/lookups/doctor-partner/exists`,\n      method: 'GET',\n      params\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/ForAdjudicationTile/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/MyClaimsTile/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/SubmittedClaimsTile/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <ForAdjudicationTile services={ClaimsAdjudicationServices} {...props} />\n            <MyClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <SubmittedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n            <ReturnedEscalatedClaimsTile services={ClaimsAdjudicationServices} {...props} />\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[1, 2].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DiscrepancyBase.module.scss'\n\nexport default function DiscrepancyBase (props) {\n  // INIT\n  const { discrepancy, id = '', children, iconStyle = {}, ...others } = props\n\n  // Breaking down props\n  const { result } = discrepancy\n  const { retainSpace = false, noMargin = false } = others\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n          list = list.flat(Infinity)\n        }\n      }\n\n      // const uniqOnly = Array.from(new Set(list))\n      // uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n\n      list.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  React.useEffect(() => {\n    spreadResult(result)\n  }, [result])\n\n  const open = Boolean(anchorEl)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const icon = ({ iconStyle }) => {\n    return (\n      <div\n        className={`${classes['discrepancy-icon']} ${\n          message === '' ? (retainSpace ? classes['display-hidden'] : classes['display-none']) : ''\n        } ${noMargin ? classes['no-margin'] : classes['with-margin']}`}\n      >\n        <FontAwesomeIcon\n          id={`exc-circle-${id}`}\n          style={iconStyle}\n          icon='exclamation-circle'\n          className={`${classes['icon']}`}\n          onClick={handleClick}\n        />\n        <Popover\n          id={`simple-popover`}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'left'\n          }}\n        >\n          <Typography style={{ whiteSpace: 'pre-line' }} className={classes['message']}>\n            {message}\n          </Typography>\n        </Popover>\n      </div>\n    )\n  }\n\n  return (\n    <div id={id} className={`${classes[`root`]}`}>\n      <div className={`${classes[`input-wrapper`]} ${message !== '' ? classes['discrepancy'] : ''}`}>{children}</div>\n      {icon({ iconStyle })}\n      {/* {message !== '' && icon({ iconStyle })} */}\n    </div>\n  )\n}\n","export const resetClaim = () => {\n  return {\n    type: 'RESET'\n  }\n}\n\nexport const setClaimFields = payload => {\n  return {\n    type: 'SET_CLAIM_FIELDS',\n    payload\n  }\n}\n\nexport const setClaimPro = payload => {\n  return {\n    type: 'SET_CLAIM_PRO',\n    payload\n  }\n}\n\nexport const setClaimBaseDetails = payload => {\n  return {\n    type: 'SET_CLAIM_BASE_DETAILS',\n    payload\n  }\n}\n\nexport const setClaimFacility = payload => {\n  return {\n    type: 'SET_CLAIM_FACILITY',\n    payload\n  }\n}\n\nexport const setClaimDoctor = payload => {\n  return {\n    type: 'SET_CLAIM_DOCTOR',\n    payload\n  }\n}\n\nexport const setClaimRoom = payload => {\n  return {\n    type: 'SET_CLAIM_ROOM',\n    payload\n  }\n}\n\nexport const addClaimDiagnosis = () => {\n  return {\n    type: 'ADD_CLAIM_DIAGNOSIS'\n  }\n}\n\nexport const setClaimDiagnosis = payload => {\n  return {\n    type: 'SET_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const removeClaimDiagnosis = payload => {\n  return {\n    type: 'REMOVE_CLAIM_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const setClaimPrimaryDiagnosis = payload => {\n  return {\n    type: 'SET_CLAIM_PRIMARY_DIAGNOSIS',\n    payload\n  }\n}\n\nexport const addClaimProcedure = payload => {\n  return {\n    type: 'ADD_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const updateClaimProcedure = payload => {\n  return {\n    type: 'UPDATE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const removeClaimProcedure = payload => {\n  return {\n    type: 'REMOVE_CLAIM_PROCEDURE',\n    payload\n  }\n}\n\nexport const addClaimHospitalItem = payload => {\n  return {\n    type: 'ADD_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const updateClaimHospitalItem = payload => {\n  return {\n    type: 'UPDATE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const removeClaimHospitalItem = payload => {\n  return {\n    type: 'REMOVE_CLAIM_HOSPITAL_ITEM',\n    payload\n  }\n}\n\nexport const addClaimProfessionalFee = payload => {\n  return {\n    type: 'ADD_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const updateClaimProfessionalFee = payload => {\n  return {\n    type: 'UPDATE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n\nexport const removeClaimProfessionalFee = payload => {\n  return {\n    type: 'REMOVE_CLAIM_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const setClaimType = payload => {\n  return {\n    type: 'SET_CLAIM_TYPE',\n    payload\n  }\n}\n","export const initDropDowns = payload => {\n  return {\n    type: 'INIT_DROP_DOWNS',\n    payload\n  }\n}\n\nexport const setDropDown = payload => {\n  return {\n    type: 'SET_DROP_DOWN',\n    payload\n  }\n}\n","export const initSuggestions = payload => {\n  return {\n    type: 'INIT_SUGGESTIONS',\n    payload\n  }\n}\n\nexport const setSuggestionObject = payload => {\n  return {\n    type: 'SET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const setSuggestionOnArray = payload => {\n  return {\n    type: 'SET_SUGGESTION_ON_ARRAY',\n    payload\n  }\n}\n\nexport const addSuggestionToArray = payload => {\n  return {\n    type: 'ADD_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const removeSuggestionToArray = payload => {\n  return {\n    type: 'REMOVE_SUGGESTION_TO_ARRAY',\n    payload\n  }\n}\n\nexport const resetSuggestionObject = payload => {\n  return {\n    type: 'RESET_SUGGESTION_OBJECT',\n    payload\n  }\n}\n\nexport const resetSuggestionArray = payload => {\n  return {\n    type: 'RESET_SUGGESTION_ARRAY',\n    payload\n  }\n}\n","export const setProcedure = payload => {\n  return {\n    type: 'SET_PROCEDURE',\n    payload\n  }\n}\n","export const setHospitalItem = payload => {\n  return {\n    type: 'SET_HOSPITAL_ITEM',\n    payload\n  }\n}\n","export const setProfessionalFee = payload => {\n  return {\n    type: 'SET_PROFESSIONAL_FEE',\n    payload\n  }\n}\n","export const resetError = payload => {\n  return {\n    type: 'RESET_ERROR',\n    payload\n  }\n}\n\nexport const setError = payload => {\n  return {\n    type: 'SET_ERROR',\n    payload\n  }\n}\n","export const resetEscalation = payload => {\n  return {\n    type: 'RESET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationShow = payload => {\n  return {\n    type: 'SET_ESCALATION_SHOW',\n    payload\n  }\n}\n\nexport const addEscalationMessages = payload => {\n  return {\n    type: 'ADD_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessages = payload => {\n  return {\n    type: 'SET_ESCALATION_MESSAGES',\n    payload\n  }\n}\n\nexport const setEscalationMessage = payload => {\n  return {\n    type: 'SET_ESCALATION_MESSAGE',\n    payload\n  }\n}\n\nexport const setEscalationAssignee = payload => {\n  return {\n    type: 'SET_ESCALATION_ASSIGNEE',\n    payload\n  }\n}\n","export const resetReassign = payload => {\n  return {\n    type: 'RESET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignShow = payload => {\n  return {\n    type: 'SET_REASSIGN_SHOW',\n    payload\n  }\n}\n\nexport const addReassignMessages = payload => {\n  return {\n    type: 'ADD_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessages = payload => {\n  return {\n    type: 'SET_REASSIGN_MESSAGES',\n    payload\n  }\n}\n\nexport const setReassignMessage = payload => {\n  return {\n    type: 'SET_REASSIGN_MESSAGE',\n    payload\n  }\n}\n\nexport const setReassignAssignee = payload => {\n  return {\n    type: 'SET_REASSIGN_ASSIGNEE',\n    payload\n  }\n}\n","export const setRejectStatus = payload => {\n  return {\n    type: 'SET_REJECT_CONTROL',\n    payload\n  }\n}\n","export const setLimitType = payload => {\n  return {\n    type: 'SET_LIMIT_TYPE',\n    payload\n  }\n}\n\nexport const resetLimitType = payload => {\n  return {\n    type: 'RESET_LIMIT_TYPE',\n    payload\n  }\n}\n","import InPatient from './InPatient'\nimport MedicineAllowance from './MedicineAllowance'\n\n// Store\nimport { useDispatch } from 'react-redux'\n\nlet dispatch = null\nconst AutoFillInitializer = () => {\n  dispatch = useDispatch()\n  return ''\n}\n\nconst AutoFill = ({ loa, claim_type }) => {\n  // Work Around for Member Names\n  const [last_name, others] = loa.member_info.member_name.split(',')\n  const first_middle = others.trim().split(' ')\n  let given_name = ''\n  let middle_name = ''\n  switch (first_middle.length) {\n    case 0:\n      break\n    case 1:\n      given_name = first_middle.join(' ')\n      break\n    case 2:\n      given_name = first_middle[0]\n      middle_name = first_middle[1]\n      break\n    case 3:\n      middle_name = first_middle.pop()\n      given_name = first_middle.join(' ')\n      break\n  }\n\n  let common = {\n    loa_number: loa.loa_no,\n    member_account_number: loa.member_id,\n    member_last_name: last_name,\n    member_first_name: given_name,\n    member_middle_name: middle_name\n  }\n  switch (claim_type) {\n    case 'IN_PATIENT':\n      InPatient({ common, loa, dispatch })\n      break\n    case 'MedicineAllowance':\n      MedicineAllowance({ common, loa, dispatch })\n      break\n\n    default:\n      break\n  }\n}\n\nexport { AutoFill, AutoFillInitializer }\n","import { setClaimBaseDetails, setDropDown, setClaimFacility, addSuggestionToArray } from '../Store/actions'\n\nexport default function InPatient ({ common, loa, dispatch }) {\n  let details = {\n    ...common,\n    date_from: loa.loa_details[0].date.from,\n    date_to: loa.loa_details[0].date.to,\n    room_type: loa.loa_details[0].room.type,\n    room_rate: loa.loa_details[0].room.rate,\n    pro_id: loa.loa_details[0].pro.id,\n    pro_name: loa.loa_details[0].pro.name,\n    claim_sub_type: loa.loa_details[0].claim_sub_type ? loa.loa_details[0].claim_sub_type : '',\n    claim_sub_sub_type: loa.loa_details[0].claim_sub_sub_type ? loa.loa_details[0].claim_sub_sub_type : '',\n    with_corporate_guarantee: loa.has_corp_guarantee ? 'Yes' : 'No',\n    diagnosis: loa.loa_details[0].diagnosis,\n    loa_notes: loa.remarks,\n    procedures: loa.loa_details[0].procedures,\n    hospital_items: loa.loa_details[0].hospital_items,\n    professional_fees: loa.loa_details[0].professional_fees\n  }\n\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  dispatch(setClaimFacility({ facility_id: loa.loa_details[0].medical_partner_id }))\n  dispatch(setClaimFacility({ facility_name: loa.loa_details[0].medical_partner_name }))\n  console.log(loa.rooms)\n  dispatch(setDropDown({ rooms: loa.rooms }))\n\n  // Set Diagnosis Suggestions\n  details.diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n}\n","import { setClaimBaseDetails, setClaimFacility } from '../Store/actions'\nimport { renameProp } from 'Utilities/RenameProperty'\n\nexport default function MedicineAllowance ({ common, loa, dispatch }) {\n  let procedures = loa.procedures || []\n  let professional_fees = loa.professional_fees || []\n  let hospital_items = loa.hospital_items || []\n\n  // Rename Object Keys to match used names in React\n  procedures.map((proc, i) => {\n    procedures[i] = renameProp('procedure_name', 'description', proc)\n    procedures[i] = renameProp('amount', 'gross_amount', procedures[i])\n    procedures[i] = renameProp('cpt_code', 'code', procedures[i])\n    procedures[i].vat_amount = 0\n    procedures[i].amount_paid_by_member = 0\n    procedures[i].philhealth_amount_paid = 0\n    procedures[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  professional_fees.map((prof, i) => {\n    professional_fees[i] = renameProp('amount', 'gross_amount', professional_fees[i])\n    professional_fees[i].doctor_id = ''\n    professional_fees[i].vat_amount = 0\n    professional_fees[i].amount_paid_by_member = 0\n    professional_fees[i].philhealth_amount_paid = 0\n    professional_fees[i].philhealth_remarks = ''\n  })\n\n  // Rename Object Keys to match used names in React\n  hospital_items.map((item, i) => {\n    hospital_items[i] = renameProp('item_name', 'name', hospital_items[i])\n    hospital_items[i] = renameProp('amount', 'gross_amount', hospital_items[i])\n    hospital_items[i].doctor_id = ''\n    hospital_items[i].vat_amount = 0\n    hospital_items[i].amount_paid_by_member = 0\n    hospital_items[i].philhealth_amount_paid = 0\n    hospital_items[i].philhealth_remarks = ''\n  })\n\n  let details = {\n    ...common,\n    customer_account_number: loa.client_id || '',\n    company_name: loa.client_name || '',\n    hospital_items: hospital_items || [],\n    procedures: procedures || [],\n    professional_fees: professional_fees || []\n  }\n\n  // Fill Claim Details Based on LOA\n  for (let i in details) dispatch(setClaimBaseDetails({ field: i, value: details[i] }))\n\n  // Fill Medical Partner ID and Medical Partner Name\n  const facility_id = loa.partner_id || ''\n  const facility_name = loa.partner_name || ''\n\n  dispatch(setClaimFacility({ facility_id: facility_id }))\n  dispatch(setClaimFacility({ facility_name: facility_name }))\n}\n","import React from 'react'\n\n// Components\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Services\nimport CustomerCareService from 'Services/Api/CustomerCareService'\nimport { AutoFill, AutoFillInitializer } from '../../AutoFill'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setClaimBaseDetails, resetSuggestionObject, setSuggestionObject } from '../../Store/actions'\n// Styles\nimport classes from './BaseDetails.module.scss'\n\n// Constants\n// import ReimbursementTypes from 'Constant/reimbursementTypes'\n// Constants\nimport ClaimTypes from './../../../Constant/ClaimTypes'\n\n// On Init\n// const reimbursementTypes = ReimbursementTypes.dropdown()\n\nexport default function BaseDetails (props) {\n  const {\n    onChange,\n    claim,\n    disableControls,\n    onChangeReimbursementType = () => {},\n    handleMemberAccountNumber,\n    permissions,\n    requiredFields = {\n      approval_code: true,\n      loa_number: true,\n      reimbursement_type: true\n    },\n    showReimbursement = false,\n    showApprovalCode = true,\n    showLoaNumber = true,\n    showCompany = false,\n    isDental = false\n  } = props\n\n  const dispatch = useDispatch()\n\n  const claim_type = useSelector(state => state.claimType)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const errors = useSelector(state => state.error)\n\n  const [memberAccountNumber, setMemberAccountNumber] = React.useState()\n\n  const handleLoaDetails = event => {\n    const { value } = event.target\n    if (value.trim()) {\n      CustomerCareService.getLoaDetails({ approval_code: value }).then(res => {\n        const loa = res.data.data\n        if (loa) {\n          AutoFill({\n            loa,\n            claim_type\n          })\n        }\n      })\n    }\n  }\n\n  const handleOnBlurMemberAccountNumber = event => {\n    if (!handleMemberAccountNumber) return\n\n    const value = event.target.value.trim()\n\n    if (value === memberAccountNumber) return\n\n    dispatch(resetSuggestionObject({ field: 'contract' }))\n    setMemberAccountNumber(value)\n    dispatch(setClaimBaseDetails({ field: 'contract_year_from', value: null }))\n    dispatch(setClaimBaseDetails({ field: 'contract_year_to', value: null }))\n\n    if (!value) return\n\n    LoadingService.loading(true)\n    CustomerCareService.getContractList({ member_account_number: value }).then(({ data: res }) => {\n      LoadingService.loading(false)\n\n      if (!res) return\n\n      const { latest_contract } = res\n      const { coverage_start_date: from, coverage_end_date: to } = latest_contract.custom_metadata\n\n      dispatch(\n        setSuggestionObject({\n          field: 'contract',\n          suggestion: { years: [{ from, to }] }\n        })\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {showApprovalCode && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-approval-code'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.approval_code\n                  }}\n                >\n                  <TextField\n                    id='approval-code'\n                    required={!!requiredFields.approval_code}\n                    label='Approval Code'\n                    placeholder={claim.approval_code || 'Pending'}\n                    value={claim.approval_code}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'approval_code', value: event.target.value })}\n                    onBlur={handleLoaDetails}\n                    error={errors.approval_code}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showLoaNumber && (\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-loa-number'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.loa_number\n                  }}\n                >\n                  <TextField\n                    id='loa-number'\n                    required={!!requiredFields.loa_number}\n                    label='LOA No.'\n                    placeholder={claim.loa_number || 'Pending'}\n                    value={claim.loa_number}\n                    disabled={disableControls}\n                    onChange={event => onChange({ field: 'loa_number', value: event.target.value })}\n                    error={errors.loa_number}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n\n            {showReimbursement && (\n              <div className={classes['input']}>\n                <DropDown\n                  id='reimbursement-type'\n                  label='Reimbursement Type'\n                  required={!!requiredFields.reimbursement_type}\n                  items={ClaimTypes.Reimbursement.subType}\n                  value={claim.reimbursement_type}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChangeReimbursementType({ field: 'reimbursement_type', value: event.target.value })\n                  }\n                  error={errors.reimbursement_type}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            )}\n            {showCompany && (\n              <React.Fragment>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-customer-account-number'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.customer_account_number\n                    }}\n                  >\n                    <TextField\n                      id='company-account-number'\n                      label='Customer (Company) Account Number'\n                      value={claim.customer_account_number}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'customer_account_number', value: event.target.value })}\n                      error={errors.customer_account_number}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-company-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.company_name\n                    }}\n                  >\n                    <TextField\n                      id='company-name'\n                      label='Company Name'\n                      value={claim.company_name}\n                      disabled={disableControls}\n                      required\n                      onChange={event => onChange({ field: 'company_name', value: event.target.value })}\n                      error={errors.company_name}\n                      readOnly={!permissions.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-account-number'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_account_number\n                }}\n              >\n                <TextField\n                  id='member-account-number'\n                  required\n                  label='Member Account No.'\n                  value={claim.member_account_number}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_account_number',\n                      value: event.target.value\n                    })\n                  }\n                  onBlur={handleOnBlurMemberAccountNumber}\n                  error={errors.member_account_number}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-last-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_last_name\n                }}\n              >\n                <TextField\n                  id='member-last-name'\n                  required\n                  label='Member Last Name'\n                  value={claim.member_last_name}\n                  disabled={disableControls}\n                  onChange={event => onChange({ field: 'member_last_name', value: event.target.value })}\n                  error={errors.member_last_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-first-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_first_name\n                }}\n              >\n                <TextField\n                  id='member-first-name'\n                  required\n                  label='Member First Name'\n                  value={claim.member_first_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_first_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_first_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes['input']}>\n              <DiscrepancyBase\n                id='dp-member-middle-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.member_middle_name\n                }}\n              >\n                <TextField\n                  id='member-middle-name'\n                  required={!!isDental}\n                  label='Member Middle Name'\n                  value={claim.member_middle_name}\n                  disabled={disableControls}\n                  onChange={event =>\n                    onChange({\n                      field: 'member_middle_name',\n                      value: event.target.value\n                    })\n                  }\n                  error={errors.member_middle_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n      <AutoFillInitializer />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Radio from '@material-ui/core/Radio'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Compoents\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Typography from '@material-ui/core/Typography'\n// import Popover from '@material-ui/core/Popover'\n\nimport classes from './ICDTextField.module.scss'\n\nconst ICDTextFields = props => {\n  const { children, required } = props\n  return (\n    <div className={classes.root}>\n      {/* Headers */}\n      <div className={classes.header}>\n        <Typography variant='subtitle2' className={classes.delete}>\n          {''}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.description}>\n          ICD10 Description {required.description && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.code}>\n          ICD10 Code {required.code && ' *'}\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.primary}>\n          Primary\n        </Typography>\n\n        <Typography variant='subtitle2' className={classes.discrepancy}>\n          {''}\n        </Typography>\n      </div>\n\n      {children}\n    </div>\n  )\n}\n\nconst ICDTextField = props => {\n  const {\n    id = '',\n    codeId = '',\n    description = '',\n    code = '',\n    primary = false,\n    suggestions = { description: [], code: [] },\n    onChangeDescription,\n    onChangeCode,\n    onChangePrimary,\n    onDeleteDiagnosis,\n    error = { description: '', code: '' },\n    permissions\n  } = props\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(false)\n  const handleTooltipOpen = () => {\n    setTooltipOpen(!!description.trim())\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.delete}>\n        {permissions.delete && (\n          <IconButton id='delete-icd' onClick={index => onDeleteDiagnosis({ index })}>\n            <DeleteIcon fontSize='small' />\n          </IconButton>\n        )}\n      </div>\n\n      <Tooltip onClose={() => setTooltipOpen(false)} onOpen={handleTooltipOpen} open={tooltipOpen} title={description}>\n        <div className={`${classes['description']}`}>\n          <AutoComplete\n            id={id}\n            value={description}\n            suggestions={suggestions.description}\n            onChange={(value, isSuggestionClick) => onChangeDescription({ value, isSuggestionClick })}\n            error={error.description}\n            readOnly={!permissions.update}\n          />\n        </div>\n      </Tooltip>\n      <div className={`${classes['code']}`}>\n        <AutoComplete\n          id={codeId}\n          value={code}\n          suggestions={suggestions.code}\n          onChange={(value, isSuggestionClick) => onChangeCode({ value, isSuggestionClick })}\n          error={error.code}\n          readOnly={!permissions.update}\n        />\n      </div>\n      <div className={classes.primary}>\n        <Radio color='primary' checked={primary} onClick={onChangePrimary} disabled={!permissions.update} />\n      </div>\n    </div>\n  )\n}\n\nexport { ICDTextFields, ICDTextField }\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Components\n\nimport { ICDTextFields, ICDTextField } from '../ICDTextField/ICDTextField'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\n\n// Styles\nimport classes from './DiagnosisList.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  addClaimDiagnosis,\n  removeClaimDiagnosis,\n  addSuggestionToArray,\n  removeSuggestionToArray,\n  setClaimPrimaryDiagnosis,\n  setClaimDiagnosis,\n  resetSuggestionArray,\n  setSuggestionOnArray,\n  setError\n} from '../../Store/actions'\n\nexport default function DiagnosisList (props) {\n  const { items, error, permissions, id } = props\n\n  const dispatch = useDispatch()\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n\n  const handleOnClickAddDiagnosis = (defaultBehaviour = true) => {\n    const lastEntry = items.length !== 0 ? items[items.length - 1] : null\n    if (defaultBehaviour && lastEntry && (!lastEntry.code.length || !lastEntry.description.length)) {\n      return false\n    }\n    dispatch(addClaimDiagnosis())\n    dispatch(addSuggestionToArray({ field: 'icd10' }))\n  }\n\n  const handleOnConfirmDelete = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemoveDiagnosis = index => {\n    setOpenDeleteDialog({ show: false, index: null })\n    dispatch(removeClaimDiagnosis({ index }))\n    dispatch(setError({ diagnosis: {} }))\n    dispatch(removeSuggestionToArray({ index, field: 'icd10' }))\n    if (items.length === 1 && index !== null) {\n      handleOnClickAddDiagnosis(false)\n    }\n  }\n\n  const handleOnChangeIcd10 = args => {\n    const { field, value, isSuggestionClick, index } = args\n\n    dispatch(setClaimDiagnosis({ index, data: { [field]: value } }))\n\n    if (isSuggestionClick) {\n      for (let i of suggestions.icd10[index].data) {\n        if (value === i[field]) {\n          dispatch(\n            setClaimDiagnosis({\n              index,\n              data: { description: i.description, code: i.code }\n            })\n          )\n        }\n      }\n    } else getIcd10Suggestions({ value, by: field, index })\n\n    dispatch(resetSuggestionArray({ field: 'icd10', index }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const getIcd10Suggestions = ({ value, by, index }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'icd-10',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n\n            dispatch(\n              setSuggestionOnArray({\n                field: 'icd10',\n                index,\n                by,\n                suggestion: _items,\n                data\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.groups} id={id}>\n          <div className={`${classes['diagnosis-list']} ${error['list'] && classes['has-error']}`}>\n            <Typography variant='h6' className={classes.title}>\n              Diagnosis List\n            </Typography>\n            <ICDTextFields required={{ code: !permissions.create, description: !permissions.create }}>\n              {items.map((item, index) => (\n                <DiscrepancyBase\n                  id={`dp-icd-description-${index}`}\n                  key={`icd-${index}`}\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.diagnosis[index]\n                  }}\n                  retainSpace\n                  noMargin\n                >\n                  <ICDTextField\n                    key={`icd-${index} ${error[index]}`}\n                    id={`icd-description-${index}`}\n                    codeId={`icd-code-${index}`}\n                    error={error.error && error.items[index]}\n                    description={item.description}\n                    suggestions={suggestions.icd10[index]}\n                    code={item.code}\n                    primary={item.primary}\n                    onChangeDescription={args => handleOnChangeIcd10({ field: 'description', index, ...args })}\n                    onChangeCode={args => handleOnChangeIcd10({ field: 'code', index, ...args })}\n                    onChangePrimary={() => dispatch(setClaimPrimaryDiagnosis({ index }))}\n                    onDeleteDiagnosis={() => handleOnConfirmDelete(index)}\n                    permissions={permissions}\n                  />\n                </DiscrepancyBase>\n              ))}\n            </ICDTextFields>\n            {permissions.create && (\n              <Button\n                id='add-diagnosis-button'\n                className={classes['add-diagnosis-button']}\n                onClick={handleOnClickAddDiagnosis}\n              >\n                + Add a diagnosis\n              </Button>\n            )}\n          </div>\n          {error.error && <span className={classes.error}>{error.list}</span>}\n          <Alert\n            open={openDeleteDialog.show}\n            message='Are you sure you want to delete this diagnosis?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n            onOk={() => handleOnRemoveDiagnosis(openDeleteDialog.index)}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n// import TextFieldNumber from 'SharedComponents/TextFieldNumber/TextFieldNumber'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\n// Styles\nimport classes from './ToothNumber.module.scss'\n\nexport default function ToothNumber (props) {\n  const { label = '', readOnly, error, onChange, value = '', required = false } = props\n  return (\n    <div className={classes['root']}>\n      <Typography variant='subtitle2' className={classes['label']}>\n        {`${label} ${required ? '*' : ''}`}\n      </Typography>\n      <div>\n        <TextField value={value} id='tooth-number' onChange={onChange} readOnly={readOnly} error={error} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport ToothNumber from '../ToothNumber/ToothNumber'\n\n// Styles\nimport classes from './ProcedureForm.module.scss'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProcedure,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProcedure,\n  updateClaimProcedure,\n  removeClaimProcedure,\n  setError\n} from '../../Store/actions'\n\nexport default function ProcedureForm (props) {\n  const dispatch = useDispatch()\n  const {\n    index,\n    discrepancy = {},\n    errors = {},\n    doValidate,\n    permissions,\n    isDental,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n\n  const procedure = useSelector(state => state.procedure)\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState(null)\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in errors) {\n      if (errors.hasOwnProperty(prop)) {\n        setErrors(errors)\n        break\n      }\n    }\n  }, [errors, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeCpt = ({ value, field, isSuggestionClick, selectedIndex }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      if (!isNaN(selectedIndex)) {\n        try {\n          const i = suggestions.cpt.data[selectedIndex]\n          dispatch(resetSuggestionObject({ field: 'cpt' }))\n          return dispatch(\n            setProcedure({\n              details: { description: i.description, code: i.code.toString() }\n            })\n          )\n        } catch (ex) {}\n      }\n    } else getCptSuggestions({ value, by: field })\n\n    dispatch(resetSuggestionObject({ field: 'cpt' }))\n  }\n\n  // ***** FETCHING\n\n  const getCptSuggestions = ({ value, by }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce)\n\n    setDebounce(\n      setTimeout(() => {\n        if (value) {\n          IcdCptStorageServices.lookups({\n            on: 'cpt',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'cpt',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    )\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProcedure({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const failed = doValidate({ ...procedure })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimProcedure(procedure.details))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    const failed = doValidate({ ...procedure })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimProcedure({ index, details: procedure.details }))\n      dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProcedure({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ procedure: { index: null, details: {} } }))\n    dispatch(setProcedure({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Procedure Form')} */}\n      {/* {console.log('Data', procedure)} */}\n      {/* {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', procedure.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {procedure.show && procedure.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-description'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { code: discrepancy.code, description: discrepancy.description }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    id={`procedure-description-autocomplete`}\n                    required\n                    label={'Procedure Details'}\n                    value={procedure.details.description}\n                    suggestions={suggestions.cpt.description}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({\n                        field: 'description',\n                        value,\n                        isSuggestionClick,\n                        selectedIndex\n                      })\n                    }\n                    error={_errors.description}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n\n                <div className={classes.code}>\n                  <AutoComplete\n                    id={`procedure-code-autocomplete`}\n                    required\n                    label={'CPT Code'}\n                    value={procedure.details.code}\n                    suggestions={suggestions.cpt.code}\n                    onChange={(value, isSuggestionClick, selectedIndex) =>\n                      handleOnChangeCpt({ field: 'code', value, isSuggestionClick, selectedIndex })\n                    }\n                    error={_errors.code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          {isDental && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <ToothNumber\n                  id='tooth-number'\n                  label='Tooth Number'\n                  required\n                  value={procedure.details.tooth_number}\n                  onChange={event => {\n                    handleOnChange({\n                      field: 'tooth_number',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.tooth_number}\n                  readOnly={!permissions.update}\n                />\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={procedure.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-procedure-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='procedure-vat-amount'\n                  label='VAT Amount'\n                  value={procedure.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-procedure-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='procedure-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={procedure.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showPhilhealthField && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-amount-paid'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_amount_paid\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='philhealth-amount-paid'\n                    label='PhilHealth Amount Paid'\n                    value={procedure.details.philhealth_amount_paid}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_amount_paid',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_amount_paid}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={procedure.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={procedure.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={procedure.details.amount_not_covered > 0}\n                    disableComponents={procedure.details.amount_not_covered === 0}\n                    value={procedure.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={procedure.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        procedure.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, amount_due_from_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospital-item'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='hospital-item'\n                    label='Reason for Charging Member'\n                    required={procedure.details.amount_due_from_member > 0}\n                    disableComponents={procedure.details.amount_due_from_member === 0}\n                    value={procedure.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {procedure.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button variant='contained' color='primary' className='button-positive' onClick={handleOnSave}>\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {procedure.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(procedure.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(procedure.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(procedure.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this procedure?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(procedure.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProcedureForm from '../ProcedureForm/ProcedureForm'\n\n// Styles\nimport classes from './ProcedureList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setProcedure } from '../../Store/actions'\n\nexport default function ProcedureList (props) {\n  const {\n    data,\n    doValidate,\n    permissions,\n    id,\n    isDental = false,\n    showAmountPaidByMember = true,\n    showPhilhealthField = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.procedure)\n  const procedure = useSelector(state => state.procedure)\n  const error = useSelector(state => state.error.procedure)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProcedure({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            List of Procedures\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProcedure({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Procedure\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Procedure Name' },\n              { name: 'CPT Code', align: 'center' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Procedure List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${procedure ? procedure.show : ''}`}\n                id={`procedure-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={procedure.index === index ? procedure.show : false}\n              >\n                <td id={`${id}-description-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.description}\n                </td>\n                <td\n                  id={`${id}-code-${index}`}\n                  className={`${classes.align} ${classes.center}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.code}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    isDental={isDental}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthField={showPhilhealthField}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {procedure.mode === 'add' && (\n              <TableRow\n                key={`add ${procedure ? procedure.show : ''} `}\n                id={`procedure-add`}\n                className={`${classes['row']}`}\n                expanded={procedure.mode === 'add' ? procedure.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProcedureForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    isDental={isDental}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthField={showPhilhealthField}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './HospitalItemForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setHospitalItem,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimHospitalItem,\n  updateClaimHospitalItem,\n  removeClaimHospitalItem,\n  resetError\n} from '../../Store/actions'\n\nexport default function HospitalItemForm (props) {\n  const {\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const dispatch = useDispatch()\n  const { index, discrepancy = {}, error = {}, doValidate, permissions } = props\n\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    hospitalItem: null\n  })\n\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeHospitalItem = ({ value, field, isSuggestionClick }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.hospitalItem.data) {\n        if (value === i.name || value === i.item_code) {\n          dispatch(\n            setHospitalItem({\n              details: {\n                id: i.id,\n                name: i.name,\n                item_code: i.item_code\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'hospitalItem' }))\n      getHospitalItemSuggestions({ value, by: field })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getHospitalItemSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.hospitalItem)\n    setDebounce(state => ({\n      ...state,\n      hospitalItem: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'hospital-item',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'hospitalItem',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setHospitalItem({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const failed = doValidate({ ...hospitalItem })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimHospitalItem(hospitalItem.details))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    const failed = doValidate({ ...hospitalItem })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimHospitalItem({ index, details: hospitalItem.details }))\n      dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(resetError({ hospital_item: { index: null, details: {} } }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimHospitalItem({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOCancel = index => {\n    dispatch(resetError({ index }))\n    dispatch(setHospitalItem({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('Hospital Item Form')} */}\n      {/* {console.log('Data', hospitalItem)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', hospitalItem.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {hospitalItem.show && hospitalItem.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: { item_code: discrepancy.item_code, name: discrepancy.name }\n                }}\n              >\n                <div className={classes.description}>\n                  <AutoComplete\n                    label={'Item Name'}\n                    required\n                    id={`hospital-item-name`}\n                    value={hospitalItem.details.name}\n                    suggestions={suggestions.hospitalItem.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'name', value, isSuggestionClick })\n                    }\n                    error={_errors.name}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n                <div className={classes.code}>\n                  <AutoComplete\n                    label={'Item Code'}\n                    required\n                    id={`hospital-item-code`}\n                    value={hospitalItem.details.item_code}\n                    suggestions={suggestions.hospitalItem.item_code}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeHospitalItem({ field: 'item_code', value, isSuggestionClick })\n                    }\n                    error={_errors.item_code}\n                    readOnly={!permissions.update}\n                  />\n                </div>\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospitalItem-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={hospitalItem.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospitalItem-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='hospitalItem-vat-amount'\n                  label='VAT Amount'\n                  value={hospitalItem.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          {showAmountPaidByMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-hospitalItem-amount-paid-by-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_paid_by_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='hospitalItem-amount-paid-by-member'\n                    label='Amount Paid by Member'\n                    value={hospitalItem.details.amount_paid_by_member}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'amount_paid_by_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.amount_paid_by_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={hospitalItem.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n            {showPhilhealthRemarks && (\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-philhealth-remarks'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.philhealth_remarks\n                  }}\n                >\n                  <TextField\n                    multiline\n                    rows={3}\n                    id='philhealth-remarks'\n                    label='PhilHealth Remarks'\n                    value={hospitalItem.details.philhealth_remarks}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'philhealth_remarks',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.philhealth_remarks}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            )}\n          </div>\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_not_covered\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-not-covered'\n                    label='Amount Not Covered'\n                    value={hospitalItem.details.amount_not_covered}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason = ''\n                        setErrors(state => ({ ...state, reason: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_not_covered',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_not_covered}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountNotCovered && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-not-covered-reason'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason\n                  }}\n                >\n                  <DropDown\n                    id='amount-not-covered-reason'\n                    label='Reason'\n                    required={hospitalItem.details.amount_not_covered > 0}\n                    disableComponents={hospitalItem.details.amount_not_covered === 0}\n                    value={hospitalItem.details.reason}\n                    items={dropDown.reason}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-amount-due-from-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.amount_due_from_member\n                  }}\n                >\n                  <TextFieldCurrency\n                    id='amount-due-from-member'\n                    label='Amount Due from Member'\n                    value={hospitalItem.details.amount_due_from_member}\n                    onChange={event => {\n                      if (event.target.value === 0) {\n                        hospitalItem.details.reason_for_charging_member = ''\n                        setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                      }\n\n                      handleOnChange({\n                        field: 'amount_due_from_member',\n                        value: event.target.value\n                      })\n                    }}\n                    error={_errors.amount_due_from_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          {showAmountDueFromMember && (\n            <div className={classes.groups}>\n              <div className={classes.input}>\n                <DiscrepancyBase\n                  id='dp-reason-for-charging-member'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.reason_for_charging_member\n                  }}\n                >\n                  <DropDown\n                    id='reason-for-charging-member'\n                    label='Reason for Charging Member'\n                    required={hospitalItem.details.amount_due_from_member > 0}\n                    disableComponents={hospitalItem.details.amount_due_from_member === 0}\n                    value={hospitalItem.details.reason_for_charging_member}\n                    items={dropDown.reason_charging}\n                    onChange={event =>\n                      handleOnChange({\n                        field: 'reason_for_charging_member',\n                        value: event.target.value\n                      })\n                    }\n                    error={_errors.reason_for_charging_member}\n                    readOnly={!permissions.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n            </div>\n          )}\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {hospitalItem.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnSave(hospitalItem.index)}\n                >\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {hospitalItem.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(hospitalItem.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(hospitalItem.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOCancel(hospitalItem.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this hospital item?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(hospitalItem.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport HospitalItemForm from '../HospitalItemForm/HospitalItemForm'\n\n// Styles\nimport classes from './HospitalItemList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setHospitalItem } from '../../Store/actions'\n\nexport default function HospitalItemList (props) {\n  const {\n    data,\n    doValidate,\n    permissions,\n    id,\n    showAmountPaidByMember = true,\n    showPhilhealthRemarks = true,\n    showAmountNotCovered = true,\n    showAmountDueFromMember = true\n  } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.hospital_item)\n  const hospitalItem = useSelector(state => state.hospitalItem)\n  const error = useSelector(state => state.error.hospital_item)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setHospitalItem({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Hospital Items\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setHospitalItem({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Items\n            </Typography>\n          )}\n        </div>\n\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Item Name' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Hospital List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', hospitalItem)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={hospitalItem.index === index ? hospitalItem.show : false}\n              >\n                <td id={`${id}-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.name}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthRemarks={showPhilhealthRemarks}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {hospitalItem.mode === 'add' && (\n              <TableRow\n                key={`add ${hospitalItem ? hospitalItem.show : ''}`}\n                id={`hospitalItem-add`}\n                className={`${classes['row']}`}\n                expanded={hospitalItem.mode === 'add' ? hospitalItem.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <HospitalItemForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                    showAmountPaidByMember={showAmountPaidByMember}\n                    showPhilhealthRemarks={showPhilhealthRemarks}\n                    showAmountNotCovered={showAmountNotCovered}\n                    showAmountDueFromMember={showAmountDueFromMember}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport Button from '@material-ui/core/Button'\nimport DiscrepancyBase from 'Pages/Protected/Claims/ClaimsViewer/Components/DiscrepancyBase/DiscrepancyBase'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Styles\nimport classes from './ProfessionalFeeForm.module.scss'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setProfessionalFee,\n  resetSuggestionObject,\n  setSuggestionObject,\n  addClaimProfessionalFee,\n  updateClaimProfessionalFee,\n  removeClaimProfessionalFee,\n  setError\n} from '../../Store/actions'\n\nexport default function ProfessionalFeeForm (props) {\n  const dispatch = useDispatch()\n  const { index, discrepancy = {}, error = {}, doValidate, permissions } = props\n  const professionalFee = useSelector(state => state.professionalFee)\n  const pfSuggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n\n  const [debounce, setDebounce] = React.useState({\n    pfDoctor: null\n  })\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState({ show: false, index: null })\n  const [_errors, setErrors] = React.useState({})\n\n  // ***** REACTIVE\n\n  React.useEffect(() => {\n    for (var prop in error) {\n      if (error.hasOwnProperty(prop)) {\n        setErrors(error)\n        break\n      }\n    }\n  }, [error, index])\n\n  // ***** EVENTS\n\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n    if (isSuggestionClick) {\n      for (let i of pfSuggestions.pfDoctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(\n            setProfessionalFee({\n              details: {\n                doctor_id: i.id,\n                doctor_name: i.full_name,\n                specialization: i.specialization.main + ', ' + i.specialization.major\n              }\n            })\n          )\n          dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pfDoctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  // ***** FETCHING\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.pfDoctor)\n    setDebounce(state => ({\n      ...state,\n      pfDoctor: setTimeout(() => {\n        if (value) {\n          ClaimsAdjudicationServices.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'pfDoctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // ***** ACTIONS\n\n  const handleOnChange = ({ value, field }) => {\n    dispatch(setProfessionalFee({ details: { [field]: value } }))\n  }\n\n  const handleOnSave = () => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const failed = doValidate({ ...professionalFee })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(addClaimProfessionalFee(professionalFee.details))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnUpdate = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    const failed = doValidate({ ...professionalFee })\n    setErrors(failed)\n    if (!failed) {\n      dispatch(updateClaimProfessionalFee({ index, details: professionalFee.details }))\n      dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    }\n  }\n\n  const handleOnRemoveConfirm = index => {\n    setOpenDeleteDialog({ show: true, index })\n  }\n\n  const handleOnRemove = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n    dispatch(removeClaimProfessionalFee({ index }))\n    setOpenDeleteDialog({ show: false, index: null })\n  }\n\n  const handleOnCancel = index => {\n    dispatch(setError({ professional_fee: { index: null, details: {} } }))\n    dispatch(setProfessionalFee({ show: false, mode: '', index: '' }))\n  }\n\n  return (\n    <React.Fragment>\n      {/* {console.group('ProfessionalFee Form')} */}\n      {/* {console.log('Data', professionalFee)} */}\n      {/* {console.log('Discrepancy', discrepancy)} */}\n      {/* {console.log('Errors', error)} */}\n      {/* {console.log('Suggestions ', suggestions)} */}\n      {/* {console.log('Index ', professionalFee.index, index)} */}\n      {/* {console.groupEnd()} */}\n      {professionalFee.show && professionalFee.index === index && (\n        <Paper className={classes.root}>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-medical-partner-id'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_id\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-medical-partner-id'\n                  required\n                  label='Medical Partner ID'\n                  value={professionalFee.details.doctor_id}\n                  suggestions={pfSuggestions.pfDoctor.id}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_id',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_id}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-doctor-name'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.doctor_name\n                }}\n              >\n                <AutoComplete\n                  id='professional-fee-doctor-name'\n                  required\n                  label='Doctor Name'\n                  value={professionalFee.details.doctor_name}\n                  suggestions={pfSuggestions.pfDoctor.full_name}\n                  onChange={(value, isSuggestionClick) =>\n                    handleOnChangeDoctor({\n                      field: 'doctor_name',\n                      value,\n                      isSuggestionClick\n                    })\n                  }\n                  error={_errors.doctor_name}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-specialization'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.specialization\n                }}\n              >\n                <TextField\n                  id='professional-fee-specialization'\n                  required\n                  label='Specialization'\n                  value={professionalFee.details.specialization}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'specialization',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.specialization}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-gross-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.gross_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-gross-amount'\n                  required\n                  label='Gross Amount'\n                  value={professionalFee.details.gross_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'gross_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.gross_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-vat-amount'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.vat_amount\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-vat-amount'\n                  label='VAT Amount'\n                  value={professionalFee.details.vat_amount}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'vat_amount',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.vat_amount}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-professional-fee-amount-paid-by-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_paid_by_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='professional-fee-amount-paid-by-member'\n                  label='Amount Paid by Member'\n                  value={professionalFee.details.amount_paid_by_member}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'amount_paid_by_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.amount_paid_by_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-amount-paid'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_amount_paid\n                }}\n              >\n                <TextFieldCurrency\n                  id='philhealth-amount-paid'\n                  label='PhilHealth Amount Paid'\n                  value={professionalFee.details.philhealth_amount_paid}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_amount_paid',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_amount_paid}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-philhealth-remarks'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.philhealth_remarks\n                }}\n              >\n                <TextField\n                  multiline\n                  rows={3}\n                  id='philhealth-remarks'\n                  label='PhilHealth Remarks'\n                  value={professionalFee.details.philhealth_remarks}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'philhealth_remarks',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.philhealth_remarks}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_not_covered\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-not-covered'\n                  label='Amount Not Covered'\n                  value={professionalFee.details.amount_not_covered}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      professionalFee.details.reason = ''\n                      setErrors(state => ({ ...state, reason: '' }))\n                    }\n\n                    handleOnChange({\n                      field: 'amount_not_covered',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_not_covered}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-amount-not-covered-reason'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason\n                }}\n              >\n                <DropDown\n                  id='amount-not-covered-reason'\n                  label='Reason'\n                  required={professionalFee.details.amount_not_covered > 0}\n                  disableComponents={professionalFee.details.amount_not_covered === 0}\n                  value={professionalFee.details.reason}\n                  items={dropDown.reason}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-amount-due-from-member'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.amount_due_from_member\n                }}\n              >\n                <TextFieldCurrency\n                  id='amount-due-from-member'\n                  label='Amount Due from Member'\n                  value={professionalFee.details.amount_due_from_member}\n                  onChange={event => {\n                    if (event.target.value === 0) {\n                      professionalFee.details.reason_for_charging_member = ''\n                      setErrors(state => ({ ...state, reason_for_charging_member: '' }))\n                    }\n                    handleOnChange({\n                      field: 'amount_due_from_member',\n                      value: event.target.value\n                    })\n                  }}\n                  error={_errors.amount_due_from_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n          <div className={classes.groups}>\n            <div className={classes.input}>\n              <DiscrepancyBase\n                id='dp-hospital-item'\n                discrepancy={{\n                  message: 'Failed',\n                  result: discrepancy.reason_for_charging_member\n                }}\n              >\n                <DropDown\n                  id='hospital-item'\n                  label='Reason for Charging Member'\n                  required={professionalFee.details.amount_due_from_member > 0}\n                  disableComponents={professionalFee.details.amount_due_from_member === 0}\n                  value={professionalFee.details.reason_for_charging_member}\n                  items={dropDown.reason_charging}\n                  onChange={event =>\n                    handleOnChange({\n                      field: 'reason_for_charging_member',\n                      value: event.target.value\n                    })\n                  }\n                  error={_errors.reason_for_charging_member}\n                  readOnly={!permissions.update}\n                />\n              </DiscrepancyBase>\n            </div>\n          </div>\n\n          <div className={`${classes.groups} ${classes.buttons}`}>\n            {professionalFee.mode === 'add' && permissions.create && (\n              <React.Fragment>\n                <Button variant='contained' color='primary' className='button-positive' onClick={handleOnSave}>\n                  Save\n                </Button>\n              </React.Fragment>\n            )}\n            {professionalFee.mode !== 'add' && permissions.update && (\n              <React.Fragment>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  className='button-positive'\n                  onClick={() => handleOnUpdate(professionalFee.index)}\n                >\n                  Update\n                </Button>\n                {permissions.delete && (\n                  <Button\n                    variant='contained'\n                    color='secondary'\n                    className='button-negative'\n                    onClick={() => handleOnRemoveConfirm(professionalFee.index)}\n                  >\n                    Delete\n                  </Button>\n                )}\n              </React.Fragment>\n            )}\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-negative'\n              onClick={() => handleOnCancel(professionalFee.index)}\n            >\n              {permissions.create && permissions.update ? 'Cancel' : 'Close'}\n            </Button>\n          </div>\n        </Paper>\n      )}\n      <Alert\n        open={openDeleteDialog.show}\n        message='Are you sure you want to delete this professional fee?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setOpenDeleteDialog({ show: false, index: null })}\n        onOk={() => handleOnRemove(professionalFee.index)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\nimport { Table, TableHeader, TableBody, TableRow, TableRowExpandable } from 'SharedComponents/CustomTable/CustomTable'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\nimport ProfessionalFeeForm from '../ProfessionalFeeForm/ProfessionalFeeForm'\n\n// Styles\nimport classes from './ProfessionalFeeList.module.scss'\n\n// Store\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setProfessionalFee } from '../../Store/actions'\n\nexport default function ProfessionalFeeList (props) {\n  const { data, doValidate, permissions, id } = props\n  const dispatch = useDispatch()\n  const discrepancy = useSelector(state => state.discrepancy.professional_fee)\n  const professionalFee = useSelector(state => state.professionalFee)\n  const error = useSelector(state => state.error.professional_fee)\n\n  const amountPerItem = i => {\n    return (\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      parseFloat(i.amount_not_covered) -\n      parseFloat(i.philhealth_amount_paid) -\n      parseFloat(i.amount_due_from_member) -\n      parseFloat(i.amount_paid_by_member)\n    )\n  }\n\n  const totalAmount = () => {\n    let amount = 0\n    for (let i of data) {\n      amount += amountPerItem(i)\n    }\n\n    return CurrencyFormatter(amount)\n  }\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [message, setMessage] = React.useState('')\n  const open = Boolean(anchorEl)\n\n  // FUNCTIONS\n  const spreadResult = result => {\n    if (result) {\n      let message = ''\n      let list = []\n      if (typeof result === 'object') {\n        if (Array.isArray(result)) {\n          list = result.flat(Infinity)\n        } else {\n          for (const field in result) {\n            if (result[field]) list.push(result[field].flat(Infinity))\n          }\n        }\n      }\n      const uniqOnly = Array.from(new Set(list))\n      uniqOnly.map(m => m && (message += `\\u2022 ${m} \\n`))\n      setMessage(message)\n    }\n  }\n\n  function handleClickLineDiscrepancy ({ event, index }) {\n    setAnchorEl(event.currentTarget)\n    spreadResult(discrepancy[index]['line'])\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  const expand = args => {\n    const { mode, index, details } = args\n    dispatch(\n      setProfessionalFee({\n        show: true,\n        mode,\n        index,\n        details\n      })\n    )\n  }\n\n  const icon = () => {\n    return (\n      <Popover\n        id={'simple-popover'}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'left'\n        }}\n      >\n        <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n          {message}\n        </Typography>\n      </Popover>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.table}>\n        <div className={classes['table-header']}>\n          <Typography variant='subtitle2' className={classes['table-description']}>\n            Professional Fee\n          </Typography>\n          {permissions.create && (\n            <Typography\n              variant='body2'\n              className={classes['add-link']}\n              onClick={() => dispatch(setProfessionalFee({ show: true, mode: 'add', index: 'add' }))}\n            >\n              + Add Professional Fee\n            </Typography>\n          )}\n        </div>\n        <Table>\n          <TableHeader\n            items={[\n              { name: 'Doctor Name' },\n              { name: 'Specialization' },\n              { name: 'Amount (PHP)', width: 100, align: 'right' },\n              { name: '', width: 20, align: 'center' }\n            ]}\n          />\n          <TableBody>\n            {/* {console.group('Professional Fee List')} */}\n            {/* {console.log('Discrepancy', discrepancy)} */}\n            {/* {console.log('Errors', error)} */}\n            {/* {console.log('Suggestions ', suggestions)} */}\n            {/* {console.log('Data Collection ', data)} */}\n            {/* {console.log('Status Collection ', procedure)} */}\n            {/* {console.groupEnd()} */}\n            {data.map((i, index) => (\n              <TableRow\n                key={`${index} ${professionalFee ? professionalFee.show : ''}`}\n                id={`professional-fee-${index}`}\n                className={`${classes['row']} ${discrepancy[index] && classes.discrepancy}`}\n                expanded={professionalFee.index === index ? professionalFee.show : false}\n              >\n                <td id={`${id}-doctor-name-${index}`} onClick={() => expand({ mode: 'edit', index, details: i })}>\n                  {i.doctor_name}\n                </td>\n                <td\n                  id={`${id}-specialization-${index}`}\n                  className={classes.specialization}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {i.specialization}\n                </td>\n                <td\n                  id={`${id}-amount-${index}`}\n                  className={`${classes.align} ${classes.right}`}\n                  onClick={() => expand({ mode: 'edit', index, details: i })}\n                >\n                  {CurrencyFormatter(amountPerItem(i))}\n                </td>\n                <td id={`${id}-icon-${index}`} className={`${classes.align} ${classes.center}`}>\n                  {discrepancy[index] && discrepancy[index]['line'] && (\n                    <div className={classes['icon-container']}>\n                      <FontAwesomeIcon\n                        id={`${id}-exc-circle-${index}`}\n                        icon='exclamation-circle'\n                        className={classes.icon}\n                        onClick={event => handleClickLineDiscrepancy({ event, index })}\n                      />\n                    </div>\n                  )}\n                </td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={index}\n                    discrepancy={discrepancy[index]}\n                    error={error.index === index ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            ))}\n            {professionalFee.mode === 'add' && (\n              <TableRow\n                key={`add ${professionalFee ? professionalFee.show : ''}`}\n                id={`professionalFee-add`}\n                className={`${classes['row']}`}\n                expanded={professionalFee.mode === 'add' ? professionalFee.show : false}\n              >\n                <td>{''}</td>\n                <td className={`${classes.align} ${classes.center}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <td className={`${classes.align} ${classes.right}`}>{''}</td>\n                <TableRowExpandable>\n                  <ProfessionalFeeForm\n                    index={'add'}\n                    error={error.index === 'add' ? error : {}}\n                    doValidate={doValidate}\n                    permissions={permissions}\n                  />\n                </TableRowExpandable>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n\n        <div className={classes['table-total']}>\n          <Typography variant='body2' className={classes.caption}>\n            Running Total (PHP)\n          </Typography>\n          <Typography variant='body2' className={classes.amount}>\n            {totalAmount(data)}\n          </Typography>\n        </div>\n      </div>\n      {message !== '' && icon()}\n    </Paper>\n  )\n}\n","const SafeAccess = (value, path, def = undefined) => {\n  return path.reduce((obj, key) => (obj && obj[key] !== 'undefined' ? obj[key] : undefined), value) || def\n} // pass in your object structure as array elements\n\nexport { SafeAccess }\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string().trim()\n    .label('Escalation Message')\n    .messages({ 'string.empty': `Please enter reason of escalation.` })\n    .required(),\n  assignee: Joi.string().trim()\n    .messages({ 'string.empty': `Please select a name from the Assigned To field.` })\n    .label('Assignee')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  message: Joi.string()\n    .trim()\n    .label('Message')\n    .required()\n    .messages({ 'string.empty': 'Please enter a remarks/notes.' }),\n  assignee: Joi.string()\n    .trim()\n    .label('Assignee')\n    .required()\n    .messages({ 'string.empty': 'Please select a name from the Assigned To field.' })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\n\n// Components\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport Button from '@material-ui/core/Button'\n\nimport { SafeAccess } from 'Utilities/SafeAccess'\n// Styles\nimport classes from './ClaimFooter.module.scss'\n\n// Validations\nimport EscalateValidator from './EscalateValidator'\nimport ReconValidator from './ReconValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  resetEscalation,\n  setEscalationMessage,\n  setEscalationAssignee,\n  resetReassign,\n  setReassignMessage,\n  setReassignAssignee\n} from '../../Store/actions'\n\n// lodash\nimport { sortBy } from 'lodash'\n\nexport default function ClaimFooter (props) {\n  // Events\n  const {\n    doValidate,\n    doReject,\n    doViewAnalysisSheet,\n    doViewLetterOfAdvice,\n    doReassign,\n    doSave,\n    doEscalate,\n    doApprove,\n    doCancel,\n    isReimbursement\n  } = props\n  // Variables\n  const { disabled, permissions } = props\n  // Services\n  const { grandTotal, claimType, userManagementService = () => {} } = props\n\n  const dispatch = useDispatch()\n  const escalations = useSelector(state => state.escalations)\n  const reassign = useSelector(state => state.reassign)\n  const rejectStatus = useSelector(state => state.rejectStatus)\n\n  const [escalateModal, setEscalateModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [reassignModal, setReassignModal] = React.useState({\n    dialog: false,\n    confirm: false\n  })\n  const [rejectModal, setRejectModal] = React.useState(false)\n  const [approveModal, setApproveModal] = React.useState({ message: '', show: false })\n  const [saveModal, setSaveModal] = React.useState(false)\n  const [cancelModal, setCancelModal] = React.useState(false)\n\n  const [dropDownUsers, setDropDownUsers] = React.useState([])\n\n  const [escalationErrors, setEscalationErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  const [reassignErrors, setReassignErrors] = React.useState({\n    message: '',\n    assignee: ''\n  })\n\n  // Init functions\n  const initDropdownUsers = async ({ roles }) => {\n    userManagementService.getUsersByRole(roles[0]).then(({ data }) => {\n      let users = data.map(user => ({ text: `${user.first_name} ${user.last_name}`, value: user._id }))\n      setDropDownUsers(sortBy(users, ['text']))\n    })\n  }\n\n  // Validators\n  const doValidateEscalation = () => {\n    const { error } = EscalateValidator({\n      message: escalations.message,\n      assignee: escalations.assignee.id\n    })\n\n    setEscalationErrors({ ...error })\n    return !!error\n  }\n\n  const doValidateReassign = () => {\n    const { error } = ReconValidator({\n      message: reassign.message,\n      assignee: reassign.assignee.id\n    })\n\n    setReassignErrors({ ...error })\n    return !!error\n  }\n\n  // UI Functions\n  const handleEscalateDialog = () => {\n    dispatch(resetEscalation())\n    initDropdownUsers({ roles: permissions.escalate.options.roles })\n    setEscalationErrors({ message: '', assignee: '' })\n    dispatch(setEscalationMessage(''))\n    setEscalateModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleReassignDialog = () => {\n    dispatch(resetReassign())\n    initDropdownUsers({ roles: permissions.reassign.options.roles })\n    setReassignErrors({ message: '', assignee: '' })\n    dispatch(setReassignMessage(''))\n    setReassignModal(state => ({ ...state, dialog: true }))\n  }\n\n  const handleOnShowModal = () => {\n    const { AuthorityMatrix } = permissions.approve.options\n\n    const modalProps = { show: true }\n\n    if (AuthorityMatrix) {\n      const { other_types } = AuthorityMatrix\n\n      const selected_amount = AuthorityMatrix[claimType] === undefined ? other_types : AuthorityMatrix[claimType]\n\n      if (grandTotal > selected_amount) {\n        modalProps.message =\n          'The billed amount to be approved is higher than the threshold. Are you sure you want to Submit the Claim?'\n      }\n    }\n\n    setApproveModal(modalProps)\n    return true\n  }\n\n  const handleOnClickReject = () => {\n    if (!doValidate()) {\n      if (isReimbursement) doReject()\n      else setRejectModal(true)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {permissions.visible && (\n        <React.Fragment>\n          {SafeAccess(permissions.analysis_sheet, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && doViewAnalysisSheet({ goBack: false })}\n              disabled={disabled && permissions.analysis_sheet.enabled}\n            >\n              View Analysis Sheet\n            </Button>\n          )}\n          {SafeAccess(permissions.letter_of_advice, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && doViewLetterOfAdvice({ goBack: false })}\n              disabled={disabled && permissions.letter_of_advice.enabled}\n            >\n              View Letter of Advice\n            </Button>\n          )}\n          {SafeAccess(permissions.escalate, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleEscalateDialog()}\n              disabled={disabled && permissions.escalate.enabled}\n            >\n              Escalate\n            </Button>\n          )}\n          {SafeAccess(permissions.reject, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={handleOnClickReject}\n              disabled={rejectStatus && !isReimbursement}\n            >\n              Reject\n            </Button>\n          )}\n\n          {SafeAccess(permissions.return, ['visible']) && (\n            <Button\n              id='btn-return'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              // onClick={() => setApproveModal(true)}\n              // disabled={disabled && permissions.return.enabled}\n            >\n              Return\n            </Button>\n          )}\n\n          {SafeAccess(permissions.approve, ['visible']) && (\n            <Button\n              id='approve'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleOnShowModal()}\n              disabled={disabled && permissions.approve.enabled}\n            >\n              Approve\n            </Button>\n          )}\n          {SafeAccess(permissions.save, ['visible']) && (\n            <Button\n              id='save-for-now'\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={() => !doValidate() && setSaveModal(true)}\n              disabled={disabled && permissions.save.enabled}\n            >\n              Save for now\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n      <Button id='cancel' variant='contained' color='secondary' onClick={() => setCancelModal(true)}>\n        Cancel\n      </Button>\n      {permissions.visible && (\n        <React.Fragment>\n          {SafeAccess(permissions.reassign, ['visible']) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              className='button-positive'\n              onClick={() => !doValidate() && handleReassignDialog()}\n              disabled={disabled && permissions.reassign.enabled}\n            >\n              Reassign\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n      {SafeAccess(permissions.escalate, ['enabled']) && (\n        <React.Fragment>\n          <Dialog\n            fullWidth\n            maxWidth='md'\n            onClose={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n            aria-labelledby='customized-dialog-title'\n            open={escalateModal.dialog}\n            className={classes.escalate}\n            PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          >\n            <DialogTitle disableTypography className={classes['header-container']}>\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  Reason For Escalation\n                </Typography>\n                <IconButton\n                  aria-label='close'\n                  className={classes.button}\n                  onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </DialogTitle>\n\n            <DialogContent dividers className={classes.content}>\n              <div className={classes.input}>\n                <TextField\n                  className={classes.comment}\n                  multiline\n                  rows={5}\n                  id=''\n                  value={escalations.message}\n                  autoFocus\n                  fullWidth\n                  placeholder='Compose a Message'\n                  onChange={event => dispatch(setEscalationMessage(event.target.value))}\n                  error={escalationErrors.message}\n                />\n              </div>\n              <div className={classes.footer}>\n                <div className={classes.assign}>\n                  <Typography variant='subtitle2' className={classes.to}>\n                    {dropDownUsers && dropDownUsers.length > 0 ? 'Assign To' : 'No Users'}\n                  </Typography>\n                  <DropDown\n                    id='escalate-to'\n                    items={dropDownUsers}\n                    value={escalations.assignee.id}\n                    onChange={event =>\n                      dispatch(\n                        setEscalationAssignee({\n                          id: event.target.value,\n                          name: event.target.value\n                        })\n                      )\n                    }\n                    error={escalationErrors.assignee}\n                    disableComponents={!!(dropDownUsers && dropDownUsers.length === 0)}\n                  />\n                </div>\n\n                <div className={classes.action}>\n                  <Button\n                    onClick={() => setEscalateModal(state => ({ ...state, dialog: false }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => !doValidateEscalation() && setEscalateModal(state => ({ ...state, confirm: true }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Alert\n            open={escalateModal.confirm}\n            message='Are you sure you want to escalate claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setEscalateModal(state => ({ ...state, confirm: false }))}\n            onOk={() => {\n              setEscalateModal(state => ({ ...state, dialog: false, confirm: false }))\n              doEscalate({ goBack: true })\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {SafeAccess(permissions.reassign, ['enabled']) && (\n        <React.Fragment>\n          <Dialog\n            fullWidth\n            maxWidth='md'\n            onClose={() => setReassignModal(state => ({ ...state, dialog: false }))}\n            aria-labelledby='customized-dialog-title'\n            open={reassignModal.dialog}\n            className={classes.reassign}\n            PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n          >\n            <DialogTitle disableTypography className={classes['header-container']}>\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  Reassign\n                </Typography>\n                <IconButton\n                  aria-label='close'\n                  className={classes.button}\n                  onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </DialogTitle>\n\n            <DialogContent dividers className={classes.content}>\n              <div className={classes.input}>\n                <TextField\n                  className={classes.comment}\n                  multiline\n                  rows={5}\n                  id=''\n                  value={reassign.message}\n                  autoFocus\n                  fullWidth\n                  placeholder='Compose a Message'\n                  onChange={event => dispatch(setReassignMessage(event.target.value))}\n                  error={reassignErrors.message}\n                />\n              </div>\n              <div className={classes.footer}>\n                <div className={classes.assign}>\n                  <Typography variant='subtitle2' className={classes.to}>\n                    Assign To:\n                  </Typography>\n                  <DropDown\n                    id='reassign-to'\n                    items={dropDownUsers}\n                    value={reassign.assignee.id}\n                    onChange={event =>\n                      dispatch(\n                        setReassignAssignee({\n                          id: event.target.value,\n                          name: event.target.value\n                        })\n                      )\n                    }\n                    error={reassignErrors.assignee}\n                  />\n                </div>\n\n                <div className={classes.action}>\n                  <Button\n                    onClick={() => setReassignModal(state => ({ ...state, dialog: false }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-negative'\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={() => !doValidateReassign() && setReassignModal(state => ({ ...state, confirm: true }))}\n                    variant='contained'\n                    color='primary'\n                    className='button-positive'\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Alert\n            open={reassignModal.confirm}\n            message='Are you sure you want to re-assign claim?'\n            cancelLabel='No'\n            okLabel='Yes'\n            onCancel={() => setReassignModal(state => ({ ...state, confirm: false }))}\n            onOk={() => {\n              setReassignModal(state => ({ ...state, dialog: false, confirm: false }))\n              doReassign({ goBack: true })\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {SafeAccess(permissions.reject, ['enabled']) && (\n        <Alert\n          open={rejectModal}\n          message='Are you sure you want to reject this claim?'\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setRejectModal(false)}\n          onOk={() => {\n            setRejectModal(false)\n            doReject({ goBack: true })\n          }}\n        />\n      )}\n\n      {SafeAccess(permissions.approve, ['enabled']) && (\n        <Alert\n          open={approveModal.show}\n          message={approveModal.message || 'Are you sure you want to approve the claim?'}\n          cancelLabel='No'\n          okLabel='Yes'\n          onCancel={() => setApproveModal({ show: false })}\n          onOk={() => {\n            setApproveModal({ show: false })\n            doApprove({ goBack: false })\n          }}\n        />\n      )}\n\n      <Alert\n        open={saveModal}\n        message='Are you sure you want to save the changes?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setSaveModal(false)}\n        onOk={() => {\n          setSaveModal(false)\n          doSave(true)\n        }}\n      />\n\n      <Alert\n        open={cancelModal}\n        message='Are you sure you want to cancel?'\n        cancelLabel='No'\n        okLabel='Yes'\n        onCancel={() => setCancelModal(false)}\n        onOk={() => {\n          setCancelModal(false)\n          doCancel({ goBack: true })\n        }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Popover from '@material-ui/core/Popover'\n\n// Components\n\n// Styles\nimport classes from './DisapprovedLabel.module.scss'\n\nexport default function DisapprovedLabel(props) {\n  // INIT\n  const { reasons, ...other } = props\n\n  // Breaking down props\n  let { id } = props\n\n  // VARIABLES\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  // FUNCTIONS\n\n  function generateMessage(results) {\n    if (typeof results === 'string') {\n      return '\\u2022 ' + results\n    } else if (typeof results === 'object') {\n      let message = ''\n      results.map((value, index) => {\n        message += '\\u2022 ' + value + '\\n'\n      })\n      return message.substring(0, message.length - 1)\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  id = open ? 'simple-popover' : id\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n  return (\n    <React.Fragment>\n      {reasons && reasons.length > 0 ? (\n        <div className={`${classes[`root`]} ${reasons.length > 0 ? classes.disapproved : ''}`}>\n          <div id={id} className={`${classes[`input-wrapper`]}`}>\n            <Typography\n              id={props.id}\n              variant='h6'\n              className={`${classes.label} ${classes['read-only-value']}`}\n              {...other}\n            >\n              {props.value}\n            </Typography>\n            {reasons.length > 0 ? (\n              <div id={`container-${id}`} className={classes['icon-container']}>\n                <FontAwesomeIcon\n                  id={`exc-circle-${id}`}\n                  icon='exclamation-circle'\n                  className={classes.icon}\n                  onClick={handleClick} />\n                <Popover\n                  id={id}\n                  open={open}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Typography style={{ whiteSpace: 'pre-line' }} className={classes.message}>\n                    {generateMessage(reasons)}\n                  </Typography>\n                </Popover>\n              </div>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      ) : (\n          ''\n        )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport classes from './TextFieldSubmit.module.scss'\nexport default function TextFieldSubmit (props) {\n  const { label = '', required, readOnly, error, onSubmit, ...other } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${error && classes['has-error']}`}>\n              <InputBase className={classes.input} {...other} autoComplete='no' />\n              <Button\n                className={`button-positive ${classes.submit}`}\n                onClick={onSubmit}\n                variant='contained'\n                color='primary'\n                autoFocus\n              >\n                Send\n              </Button>\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  comment: Joi.string()\n    .trim()\n    .label('Comment')\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextFieldSubmit from 'SharedComponents/TextFieldSubmit/TextFieldSubmit'\nimport Alert from 'SharedComponents/Alert/Alert'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ChatBox.module.scss'\n\n// Validator\nimport ExcalateValidator from './EscalateValidator'\n\nexport default function ChatBox (props) {\n  let {\n    messages = [],\n    title,\n    permissions,\n    placeholder = 'Compose Message',\n    confirmMessage = 'Are you sure you want to reply to the escalated claim?',\n    okLabel = 'Send',\n    cancelLabel = 'Cancel',\n    onSubmitComment = () => {},\n    confirm = false\n  } = props\n\n  if (permissions.options) {\n    confirmMessage = permissions.options.confirmMessage\n    okLabel = permissions.options.okLabel\n    cancelLabel = permissions.options.cancelLabel\n    confirm = permissions.options.confirm\n  }\n\n  let lastDate = ''\n\n  const [confirmSubmitDialog, setConfirmSubmitDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({})\n  const [comment, setComment] = React.useState('')\n\n  const isMe = args => {\n    const user_id = localStorage.getItem('user_id')\n    return args._id === user_id\n  }\n\n  const doDateSplit = date => {\n    const sdate = DateFormatter(date)\n\n    if (lastDate !== sdate) {\n      lastDate = sdate\n      return true\n    }\n    return false\n  }\n\n  const doValidate = () => {\n    const { error } = ExcalateValidator({ comment })\n    if (error) {\n      setErrors(error)\n      return !!error\n    }\n  }\n\n  const doSubmit = () => {\n    if (confirm) setConfirmSubmitDialog(true)\n    else onSubmitComment(comment)\n  }\n\n  return (\n    <React.Fragment>\n      {permissions.read && (\n        <div className={classes.root}>\n          <Paper className={classes.wrapper}>\n            {title && (\n              <div className={classes.header}>\n                <Typography variant='h6' className={classes.title}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            <div className={classes.body}>\n              {messages.length <= 0 ? (\n                <div className={classes.placeholder}>\n                  <Typography variant='subtitle2'>No Message</Typography>\n                </div>\n              ) : (\n                <div className={classes.messages}>\n                  {messages.map((m, index) => (\n                    <React.Fragment key={`${m.timestamp.object}`}>\n                      {doDateSplit(m.timestamp.object) && (\n                        <Typography variant='subtitle2' className={classes.split}>\n                          {DateFormatter(m.timestamp.object)}\n                        </Typography>\n                      )}\n                      <div\n                        key={`${index}`}\n                        className={`${classes.balloon} ${isMe(m.sender) ? classes.me : classes.receive} `}\n                      >\n                        <div className={classes.mheader}>\n                          <Typography variant='subtitle2' className={classes.sender}>\n                            {m.sender.username}\n                          </Typography>\n                          <Typography variant='subtitle2' className={classes.time}>\n                            {DateFormatter(m.timestamp.object, 'hh:mm A')}\n                          </Typography>\n                        </div>\n                        <div className={classes.mbody}>\n                          <Typography\n                            variant='subtitle2'\n                            style={{ whiteSpace: 'pre-line' }}\n                            className={classes.content}\n                          >\n                            {m.message}\n                          </Typography>\n                        </div>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </div>\n              )}\n            </div>\n            <div className={classes.action}>\n              {permissions.create && (\n                <div className={classes['comment-box']}>\n                  <TextFieldSubmit\n                    className={classes.comment}\n                    multiline\n                    rows={5}\n                    id=''\n                    value={comment}\n                    autoFocus\n                    fullWidth\n                    placeholder={placeholder}\n                    onChange={event => setComment(event.target.value)}\n                    onSubmit={event => !doValidate() && doSubmit()}\n                    error={errors.comment}\n                  />\n                </div>\n              )}\n            </div>\n          </Paper>\n          <Alert\n            open={confirmSubmitDialog}\n            message={confirmMessage}\n            cancelLabel={cancelLabel}\n            okLabel={okLabel}\n            onCancel={() => setConfirmSubmitDialog(false)}\n            onOk={() => {\n              setConfirmSubmitDialog(false)\n              onSubmitComment(comment)\n            }}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n      >\n        {items.map((item, index) => (\n          <Tab key={`${item.props.label}-tab-label`} className={classes['item']} label={item.props.label} />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel key={`${item.props.label}-tab-content`} className={classes['panels']} value={value} index={index}>\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\n\n// Components\nimport Typography from '@material-ui/core/Typography'\nimport TreeView from '@material-ui/lab/TreeView'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport TreeItem from '@material-ui/lab/TreeItem'\n\n// Styles\nimport classes from './SideBar.module.scss'\n\nexport default function SideBar (props) {\n  const { contractId, planTypeList, categoryNode, roomAndBoardList, coverageList, riderList, onItemClick } = props\n\n  // console.log(planTypeList) // Base []\n  // console.log(categoryNode) // Room {} name\n  // console.log(roomAndBoardList) // Room Rows\n  // console.log(coverageList) // CV []\n  // console.log(riderList) // RI []\n\n  return (\n    <div className={classes.root}>\n      <div className={classes['contract-id']}>\n        <span>CONTRACT ID</span>\n        <span className={classes.id}>{contractId}</span>\n      </div>\n      <div className={classes['plan-types']}>\n        <TreeView defaultCollapseIcon={<ExpandMoreIcon />} defaultExpandIcon={<ChevronRightIcon />}>\n          <TreeItem\n            key={`node-room-board`}\n            className={`${classes.node}`}\n            nodeId={`node-room-board`}\n            label={'Room and Board'}\n            onClick={() => onItemClick({ list: 'room-board', planPackage: 'RB', benefitCategory: 'RBC' })}\n          />\n          <TreeItem\n            key={`node-coverage`}\n            className={`${classes.node} ${classes['benefit-label']}`}\n            nodeId={`node-coverage`}\n            label={'COVERAGE'}\n          >\n            {coverageList\n              .filter(item => item.included)\n              .map((item, idx) => (\n                <TreeItem\n                  key={`node-coverage-${item.tree_id}`}\n                  className={classes.node}\n                  nodeId={`node-coverage-${item.tree_id}`}\n                  label={item.name}\n                  onClick={() => onItemClick({ list: 'coverage', planPackage: 'CV', benefitCategory: item.code })}\n                />\n              ))}\n          </TreeItem>\n          <TreeItem\n            key={`node-riders`}\n            className={`${classes.node} ${classes['benefit-label']}`}\n            nodeId={`node-riders`}\n            label={'RIDERS'}\n          >\n            {riderList\n              .filter(item => item.included)\n              .map((item, idx) => (\n                <TreeItem\n                  key={`node-riders-${item.tree_id}`}\n                  className={classes.node}\n                  nodeId={`node-riders-${item.tree_id}`}\n                  label={item.name}\n                  onClick={() => onItemClick({ list: 'riders', planPackage: 'CV', benefitCategory: item.code })}\n                />\n              ))}\n          </TreeItem>\n        </TreeView>\n      </div>\n    </div>\n  )\n}\n","const UnitLimit = unit => {\n  if (!unit) return ''\n\n  switch (unit) {\n    case 'Percentage':\n      return '%'\n    default:\n      return unit\n  }\n}\n\nexport { UnitLimit }\n","import React from 'react'\n\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './LimitTable.module.scss'\n\nconst columns = {\n  // COVERAGE\n  RBC: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Rollover', sortField: 'rollerover', search: true },\n    { name: 'Refresh', sortField: 'refresh', search: true }\n  ],\n  EM: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  IP: [\n    { name: 'Category', sortField: 'parent_name', search: true },\n    { name: 'Description', sortField: 'name', search: true },\n    { name: 'Inner Limit Type', sortField: 'type', search: true },\n    { name: 'Inner Limit', sortField: 'limit', search: true },\n    { name: 'Daily Inner Limit', sortField: '', search: true }\n  ],\n  OP: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Benefit', sortField: 'benefit', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  PV: [\n    { name: 'Provision', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  APE: [\n    { name: 'Category', sortField: 'category', search: true },\n    { name: 'Description', sortField: 'description', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Minimum Age', sortField: 'min_age', search: true },\n    { name: 'Max Availee', sortField: 'max_availee', search: true },\n    { name: 'Payment', sortField: 'payment', search: true },\n    { name: 'Required', sortField: 'required', search: true }\n  ],\n  PPE: [\n    { name: 'Category', sortField: 'category', search: true },\n    { name: 'Description', sortField: 'description', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Minimum Age', sortField: 'min_age', search: true },\n    { name: 'Max Availee', sortField: 'max_availee', search: true },\n    { name: 'Payment', sortField: 'payment', search: true },\n    { name: 'Required', sortField: 'required', search: true }\n  ],\n  SD: [\n    { name: 'Procedure', sortField: 'category', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  MT: [\n    { name: 'Provision', sortField: 'provision', search: true },\n    { name: 'Eligible Availess', sortField: 'eligible_availees', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Availment', sortField: 'availment', search: true }\n  ],\n  OM: [\n    { name: 'Excluded Medicine', sortField: 'excluded_medicine', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true },\n    { name: 'Availment Type', sortField: 'availment_type', search: true }\n  ],\n  CC: [\n    { name: 'Personnel', sortField: 'personnel', search: true },\n    { name: 'Number', sortField: 'number', search: true },\n    { name: 'No. of Days', sortField: 'no_of_days', search: true },\n    { name: 'Days Deployed', sortField: 'days_deployed', search: true },\n    { name: 'Time From', sortField: 'time_from', search: true },\n    { name: 'Time To', sortField: 'time_to', search: true }\n  ],\n  DNT: [\n    { name: 'Category', sortField: 'name', search: true },\n    { name: 'Limit Type', sortField: 'limit_type', search: true },\n    { name: 'Limit', sortField: 'limit', search: true }\n  ],\n  SH: [\n    { name: 'Plan', sortField: 'name', search: true },\n    { name: 'Member Type', sortField: 'member_type', search: true }\n  ]\n\n  // RIDERS\n}\n\nconst queryColumn = (collection, { search, field }) => {\n  // if (collection === 'benefits') {\n  //   clearTimeout(debounce)\n  //   setDebounce(\n  //     setTimeout(() => {\n  //       let searchObj = search\n  //       let category = field\n  //       if (field === 'id') {\n  //         setPartnerId(search)\n  //         if (partnerName || partnerLocation) {\n  //           searchObj = {\n  //             id: search,\n  //             name: partnerName,\n  //             address: partnerLocation\n  //           }\n  //           category = 'and'\n  //         }\n  //       }\n  //       if (field === 'name') {\n  //         setPartnerName(search)\n  //         if (partnerId || partnerLocation) {\n  //           searchObj = {\n  //             id: partnerId,\n  //             name: search,\n  //             address: partnerLocation\n  //           }\n  //           category = 'and'\n  //         }\n  //       }\n  //       if (field === 'address') {\n  //         setPartnerLocation(search)\n  //         if (partnerId || partnerName) {\n  //           searchObj = {\n  //             id: partnerId,\n  //             name: partnerName,\n  //             address: search\n  //           }\n  //           category = 'and'\n  //         }\n  //       }\n  //       console.log(search, category)\n  //       if (search.length >= 3 || (!search && category === 'and')) {\n  //         benefitservice({\n  //           member_account_no: memberAccountNumber,\n  //           params: {\n  //             limit: benefits.limit,\n  //             page: benefits.page,\n  //             sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n  //             search: searchObj,\n  //             category: category\n  //           }\n  //         }).then(res => {\n  //           const { data } = res.data\n  //           setbenefits(state => ({\n  //             ...state,\n  //             data: data.results,\n  //             count: data.count,\n  //             page: 1,\n  //             orderBy: 'name',\n  //             order: true\n  //           }))\n  //         })\n  //       } else fetchAll()\n  //     }, 500)\n  //   )\n  // } else {\n  //   setDoctors(state => ({ ...state, filters: { [field]: search } }))\n  // }\n}\n\nconst handleOnSort = (collection, orderBy) => e => {\n  // if (collection === 'benefits') {\n  //   const _params = {\n  //     ...benefits,\n  //     orderBy,\n  //     order: !benefits.order,\n  //     sort: `${orderBy}|${benefits.order ? 'asc' : 'desc'}`\n  //   }\n  //   benefitservice({\n  //     member_account_no: memberAccountNumber,\n  //     params: _params\n  //   }).then(res => {\n  //     const { data } = res.data\n  //     setbenefits(state => ({\n  //       ...state,\n  //       ..._params,\n  //       data: data.results,\n  //       count: data.count\n  //     }))\n  //   })\n  // } else {\n  //   const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n  //   setDoctors(state => ({ ...state, filtered: sorted }))\n  // }\n}\n\nconst handleOnPaginate = (collection, params) => {\n  // if (collection === 'benefits') {\n  //   const _params = {\n  //     category: benefits.category,\n  //     limit: benefits.limit,\n  //     page: benefits.page,\n  //     search: benefits.search,\n  //     sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n  //     ...params\n  //   }\n  //   benefitservice({\n  //     member_account_no: memberAccountNumber,\n  //     params: _params\n  //   }).then(res => {\n  //     const { data } = res.data\n  //     setbenefits(state => ({\n  //       ...state,\n  //       ..._params,\n  //       data: data.results,\n  //       count: data.count\n  //     }))\n  //   })\n  // } else {\n  // }\n}\n\nconst generateColumns = ({ benefitType }) => {\n  const rows = columns[benefitType] || []\n  return (\n    <TableRow>\n      {rows.map(headCell => (\n        <TableCell key={headCell.sortField}>\n          <TableSortLabel\n            // active={benefits.orderBy === headCell.sortField}\n            // direction={benefits.order ? 'asc' : 'desc'}\n            onClick={event => {}}\n          >\n            {headCell.name}\n          </TableSortLabel>\n          {headCell.search && <TextField className={`${classes.search}`} onChange={event => {}} />}\n        </TableCell>\n      ))}\n\n      <TableCell align='center' />\n    </TableRow>\n  )\n}\n\nconst generateRows = ({ benefitType, rows }) => {\n  if (rows.length <= 0) {\n    return (\n      <TableRow>\n        <TableCell id={`no-record`} colSpan={5}>\n          <div\n            className={`${classes.cell} ${classes.center}`}\n            style={{\n              textAlign: 'center',\n              fontStyle: 'italic',\n              padding: '10px'\n            }}\n          >\n            <span>No Record</span>\n          </div>\n        </TableCell>\n      </TableRow>\n    )\n  }\n\n  switch (benefitType) {\n    case 'RBC':\n      const firstOnly = true\n      const _rows = !firstOnly ? rows : [rows[0]]\n      return _rows.map((row, index) => {\n        return (\n          row && (\n            <TableRow key={`benefit-${index}`}>\n              <TableCell id={`category-${index}`}>{row.name}</TableCell>\n              <TableCell id={`limit-${index}`}>\n                <div className={classes.cell}>\n                  {row.limits.map((limit, idx) => {\n                    return (\n                      limit.limit && (\n                        <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                      )\n                    )\n                  })}\n                </div>\n              </TableCell>\n              <TableCell id={`rollover-${index}`}>\n                <div className={classes.cell}>\n                  {SafeAccess(row, ['custom_metadata', 'rollover'], []).map((data, idx) => {\n                    return <span key={idx}>{UpperWord(data)}</span>\n                  })}\n                </div>\n              </TableCell>\n              <TableCell id={`refresh-${index}`}>\n                <div className={classes.cell}>\n                  {SafeAccess(row, ['custom_metadata', 'refresh'], []).map((data, idx) => {\n                    return <span key={idx}>{UpperWord(data)}</span>\n                  })}\n                </div>\n              </TableCell>\n            </TableRow>\n          )\n        )\n      })\n    case 'EM':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'IP':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`description-${index}`}>{row.name}</TableCell>\n            <TableCell id={`inner-limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`inner-limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`daily-inner-limit-${index}`}>{/* Unknown */}</TableCell>\n          </TableRow>\n        )\n      })\n    case 'OP':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'PV':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`provision-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'APE':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`minimum-age-${index}`}>{SafeAccess(row, ['custom_metadata', 'age_limit'], '')}</TableCell>\n            <TableCell id={`max-availee-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'max_availee'], '0')}\n            </TableCell>\n            <TableCell id={`payment-${index}`}>{SafeAccess(row, ['custom_metadata', 'payment'], '--')}</TableCell>\n            <TableCell id={`required-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'required'], 'Optional')}\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'PPE':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`category-${index}`}>{row.parent_name}</TableCell>\n            <TableCell id={`benefit-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`minimum-age-${index}`}>{SafeAccess(row, ['custom_metadata', 'age_limit'], '')}</TableCell>\n            <TableCell id={`max-availee-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'max_availee'], '0')}\n            </TableCell>\n            <TableCell id={`payment-${index}`}>{SafeAccess(row, ['custom_metadata', 'payment'], '--')}</TableCell>\n            <TableCell id={`required-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'required'], 'Optional')}\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'SD':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`procedure-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'MT':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`provision-${index}`}>{row.name}</TableCell>\n            <TableCell id={`eligible-availess-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'eligible_availees'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`availment-${index}`}>\n              {UpperWord(SafeAccess(row, ['custom_metadata', 'availment'], ''))}\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'OM':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`excluded-medicine-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`availment-type-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'availment'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'CC':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`personnel-${index}`}>{row.name}</TableCell>\n            <TableCell id={`number-${index}`}>{SafeAccess(row, ['custom_metadata', 'number'], '')}</TableCell>\n            <TableCell id={`number-of-days-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'no_of_days'], '')}\n            </TableCell>\n            <TableCell id={`days-deployed-${index}`}>\n              {SafeAccess(row, ['custom_metadata', 'days_deployed'], '')}\n            </TableCell>\n            <TableCell id={`time_from-${index}`}>{SafeAccess(row, ['custom_metadata', 'time_from'], '')}</TableCell>\n            <TableCell id={`time_to-${index}`}>{SafeAccess(row, ['custom_metadata', 'time_to'], '')}</TableCell>\n          </TableRow>\n        )\n      })\n    case 'DNT':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`name-${index}`}>{row.name}</TableCell>\n            <TableCell id={`limit-type-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return <span key={idx}>{limit.type}</span>\n                })}\n              </div>\n            </TableCell>\n            <TableCell id={`limit-${index}`}>\n              <div className={classes.cell}>\n                {row.limits.map((limit, idx) => {\n                  return (\n                    limit.limit && (\n                      <span key={idx}>{`${DigitFormatter(limit.limit)} ${UnitLimit(limit.limit_unit)}`}</span>\n                    )\n                  )\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n    case 'SH':\n      return rows.map((row, index) => {\n        return (\n          <TableRow key={`benefit-${index}`}>\n            <TableCell id={`plan-${index}`}>{SafeAccess(row, ['custom_metadata', 'title'], '-')}</TableCell>\n            <TableCell id={`member-type-${index}`}>\n              <div className={classes.cell}>\n                {SafeAccess(row, ['custom_metadata', 'member_type'], []).map((data, idx) => {\n                  return <span key={idx}>{UpperWord(data)}</span>\n                })}\n              </div>\n            </TableCell>\n          </TableRow>\n        )\n      })\n  }\n}\n\nexport default function LimitTable (props) {\n  const { benefitType, rows } = props\n\n  const [elemRows, setElemRows] = React.useState([])\n  const [elemColumns, setElemColumns] = React.useState([])\n\n  React.useEffect(() => {\n    setElemColumns(generateColumns({ benefitType }))\n    setElemRows(generateRows({ benefitType, rows }))\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={elemColumns}\n          body={elemRows}\n          pagination\n          count={0}\n          page={1}\n          limit={5}\n          rowsPerPageOptions={[5, 10, 15]}\n          onChange={args => {}}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ValueField.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function LimitTable (props) {\n  const { label, value } = props\n\n  return (\n    <div className={classes.field}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n      </Typography>\n      <Typography variant='subtitle2' className={classes.value}>\n        {value}\n      </Typography>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\nimport { Typography } from '@material-ui/core'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './Header.module.scss'\n\nconst populateClient = args => {\n  const { showAll, benefitType, categoryNode } = args\n\n  const metadata = SafeAccess(categoryNode, ['metadata'], {})\n\n  let limits = []\n  let index = -1\n  let PECIndex = -1\n  let timebasedindex = 0\n  let timebased\n\n  switch (benefitType) {\n    case 'APE':\n      return <React.Fragment />\n\n    case 'CC':\n      return <React.Fragment />\n\n    case 'DNT':\n      return <React.Fragment />\n\n    case 'EC':\n      // this one have sub form function, need further study\n      return <React.Fragment />\n\n    case 'EM':\n      return <React.Fragment />\n\n    case 'IP':\n      return <React.Fragment />\n\n    case 'MT':\n      return <React.Fragment />\n\n    case 'OP':\n      return <React.Fragment />\n\n    case 'OM':\n      return <React.Fragment />\n\n    case 'NT':\n      return <React.Fragment />\n\n    case 'PPE':\n      return <React.Fragment />\n\n    case 'PV':\n      return <React.Fragment />\n\n    case 'RBC':\n      if (categoryNode) {\n        limits = categoryNode['limits'] || {}\n        index = limits.findIndex(item => ['ABL', 'MBL'].includes(item.type))\n        PECIndex = limits.findIndex(item => ['PEC'].includes(item.type))\n        if (limits[PECIndex] && limits[PECIndex]['time_based_limit']) {\n          timebased = limits[PECIndex]['time_based_limit']\n          timebasedindex = limits[PECIndex]['time_based_limit'].length\n        }\n      }\n      let voluntaryValue = ''\n      let involuntaryValue = ''\n\n      const modeOfPayment = {\n        annual: 'Annual',\n        semiannual: 'Semi-Annual',\n        quarterly: 'Quarterly',\n        monthly: 'Monthly'\n      }\n\n      if (metadata['voluntary_upgrading_type']) {\n        if (metadata['voluntary_upgrading_type'] === 'paid_by_member') {\n          voluntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['voluntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['voluntary_upgrading_amount']\n        ) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' hrs'\n        } else if (metadata['voluntary_upgrading_type'] === 'rate' && metadata['voluntary_upgrading_amount']) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' %'\n        }\n      }\n      if (metadata['involuntary_upgrading_type']) {\n        if (metadata['involuntary_upgrading_type'] === 'paid_by_member') {\n          involuntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['involuntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['involuntary_upgrading_amount']\n        ) {\n          involuntaryValue = metadata['involuntary_upgrading_amount'] + ' hrs'\n        }\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            <ValueField\n              label={'Limit Type'}\n              value={`${index > -1 && limits[index]['type'] ? limits[index]['type'] : ''}`}\n            />\n            <ValueField\n              label={'Limit'}\n              value={`${\n                index > -1 && limits[index]['limit'] && limits[index]['limit_unit']\n                  ? `${DigitFormatter(limits[index]['limit'])} ${UnitLimit(limits[index]['limit_unit'])}`\n                  : ''\n              }`}\n            />\n            <ValueField\n              label={'PEC Limit Type'}\n              value={`${PECIndex > -1 && limits[PECIndex]['type'] ? limits[PECIndex]['type'] : ''}`}\n            />\n            {PECIndex === -1 ||\n            limits[PECIndex]['limit_unit'] === 'PHP' ||\n            limits[PECIndex]['limit_unit'] === 'Percentage' ? (\n                <ValueField\n                  label={'PEC Limit'}\n                  value={`${\n                    PECIndex > -1 && limits[PECIndex]['limit'] && limits[PECIndex]['limit_unit']\n                      ? `${DigitFormatter(limits[PECIndex]['limit'])} ${UnitLimit(limits[PECIndex]['limit_unit'])}`\n                      : ''\n                  }`}\n                />\n              ) : (\n                <React.Fragment>\n                  <Typography style={{ height: 26, paddingBottom: 6 }} htmlFor='limit_unit'>\n                  Specify Limit\n                  </Typography>\n                  <Typography style={{ height: 26, paddingBottom: 5 }} htmlFor='limit_unit'>\n                  After n month\n                  </Typography>\n                  {timebasedindex > 0 ? (\n                    timebased.map((col, index) => (\n                      <ValueField\n                        label={''}\n                        value={\n                          limits[PECIndex]['time_based_limit'] && limits[PECIndex]['time_based_limit'][index]\n                            ? limits[PECIndex]['time_based_limit'][index]['number_month'] &&\n                            limits[PECIndex]['time_based_limit'][index]['number_month'] !== '' &&\n                            limits[PECIndex]['time_based_limit'][index]['limit'] &&\n                            limits[PECIndex]['time_based_limit'][index]['limit'] !== ''\n                              ? // number of month\n                              (limits[PECIndex]['time_based_limit'][index]['number_month'] &&\n                              limits[PECIndex]['time_based_limit'][index]['number_month'] !== ''\n                                ? limits[PECIndex]['time_based_limit'][index]['number_month'].toString()\n                                : '—') +\n                              ' ' +\n                              // day_based\n                              (limits[PECIndex]['time_based_limit'][index]['day_based']\n                                ? limits[PECIndex]['time_based_limit'][index]['day_based'].toString()\n                                : 'Months') +\n                              ' : ' +\n                              // limit\n                              (limits[PECIndex]['time_based_limit'][index]['limit'] &&\n                              limits[PECIndex]['time_based_limit'][index]['limit'] !== ''\n                                ? limits[PECIndex]['time_based_limit'][index]['limit'].toString()\n                                : '—') +\n                              ' ' +\n                              // limit type\n                              (limits[PECIndex]['time_based_limit'][index]['limit_type']\n                                ? limits[PECIndex]['time_based_limit'][index]['limit_type'] === 'PHP'\n                                  ? 'PHP'\n                                  : '%'\n                                : '%')\n                              : '——'\n                            : '——'\n                        }\n                      />\n                    ))\n                  ) : (\n                    <ValueField label={''} value={`——`} />\n                  )}\n                </React.Fragment>\n              )}\n            <ValueField label={'Mode of Payment'} value={modeOfPayment[metadata['mode_of_payment']]} />\n          </div>\n        </React.Fragment>\n      )\n\n    case 'SD':\n      return <React.Fragment />\n\n    case 'SH':\n      return <React.Fragment />\n  }\n}\n\nconst populateMember = args => {}\n\nexport default function Header (props) {\n  const { contractType } = props\n  const [elemFields, setElemFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (contractType === 'client') {\n      setElemFields(populateClient(props))\n    } else if (contractType === 'member') {\n      setElemFields(populateMember(props))\n    }\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>{elemFields}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport ValueField from '../ValueField/ValueField'\nimport { Typography } from '@material-ui/core'\n\nimport { DigitFormatter, UpperWord } from 'Utilities/TextFormatter'\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nimport { UnitLimit } from '../../Utilities/FieldFormatter'\n\nimport classes from './Footer.module.scss'\n\nconst populateClient = args => {\n  const { showAll, benefitType, categoryNode } = args\n\n  const metadata = SafeAccess(categoryNode, ['custom_metadata'], {})\n\n  let billingArrangement = {}\n  let amountLimit = {}\n\n  switch (benefitType) {\n    case 'APE':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['mobile_ape_availees'] || showAll) && (\n              <React.Fragment>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Mobile APE\n                </Typography>\n                <ValueField\n                  label={'Min no. of availees in a shift (8 hrs)'}\n                  value={`${metadata['mobile_ape_availees']}`}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'CC':\n      billingArrangement = {\n        premium: 'Imputed in premiums',\n        fixed_rate_rider: 'Scheduled fixed rate for the entire rider',\n        fixed_rate_personnel: 'Scheduled fixed rate per personnel deployed',\n        soa_rate: 'Scheduled SOA based on fixed rate/hour/personnel deployed',\n        soa_actual_cost: 'Scheduled SOA based on actual cost of personnel deployed',\n        rider_fee: '1-time rider fee to be upon start of contract'\n      }\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['billing_arangement'] || showAll) && (\n              <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'DNT':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['waiting_period_unit'] && metadata['waiting_period_type']) || showAll) && (\n              <ValueField\n                label={'Activation'}\n                value={`${metadata['waiting_period_type']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'EC':\n      billingArrangement = {\n        imputed_in_premiums: 'Imputed in premiums',\n        billback: 'Bill back with admin fee',\n        billback_net: 'Bill back, net of APE cost with admin fee',\n        rider_fee: '1-time rider fee to be upon enrollment'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['waiting_period_unit'] && metadata['waiting_period_type']) || showAll) && (\n              <ValueField\n                label={'Activation'}\n                value={`${metadata['waiting_period_type']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n            {([metadata['billing_arangement']], showAll) && (\n              <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'EM':\n      return <React.Fragment />\n\n    case 'IP':\n      amountLimit = {\n        amt_limit: 'Amount Limit',\n        max_session: 'Max Session',\n        max_amount: 'Max Amount',\n        percent_mbl: 'Percent of MBL',\n        percent_abl: 'Percent of ABL',\n        no_visits: 'No. of Visits'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['amt_limit'] && metadata['amt_limit_unit']) || showAll) && (\n              <Typography variant='overline' display='block' gutterBottom>\n                Limit\n              </Typography>\n            )}\n            {([metadata['mobile_ape_availees']], showAll) && (\n              <ValueField\n                label={'Amount Limit for all procedures'}\n                value={`${metadata['amt_limit']} ${amountLimit[metadata['amt_limit_unit']]}`}\n              />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'MT':\n      billingArrangement = {\n        premium: 'Imputed in premiums',\n        billback: 'Bill back with admin fee (15%)',\n        rider_fee: '1-time rider fee to be upon enrollment'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['availment_per_year'] || showAll) && (\n              <ValueField label={'AVAILMENT PER YEAR'} value={`${metadata['availment_per_year'] || ''}`} />\n            )}\n            {([metadata['waiting_period_type'], metadata['waiting_period_unit']], showAll) && (\n              <ValueField\n                label={'Activation'}\n                value={`${metadata['waiting_period_type']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n            {([billingArrangement[metadata['billing_arangement']]], showAll) && (\n              <ValueField label={'BILLING ARRANGEMENT'} value={billingArrangement[metadata['billing_arangement']]} />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'OP':\n      amountLimit = {\n        amt_limit: 'Amount Limit',\n        max_session: 'Max Session',\n        max_amount: 'Max Amount',\n        percent_mbl: 'Percent of MBL',\n        percent_abl: 'Percent of ABL',\n        no_visits: 'No. of Visits'\n      }\n\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['amt_limit'] && metadata['amt_limit_unit']) || showAll) && (\n              <React.Fragment>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Limit\n                </Typography>\n                <ValueField\n                  label={'Amount Limit for all procedures'}\n                  value={`${metadata['amt_limit']} ${amountLimit[metadata['amt_limit_unit']]}`}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'OM':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['limit_for_all'] && metadata['limit_for_all_unit']) || showAll) && (\n              <ValueField\n                label={'Limit for All'}\n                value={`${metadata['limit_for_all']} ${metadata['limit_for_all_unit']}`}\n              />\n            )}\n          </div>\n          <div className={classes.groups}>\n            {((metadata['waiting_period'] && metadata['waiting_period_unit']) || showAll) && (\n              <ValueField\n                label={'Waiting period after effectivity of member'}\n                value={`${metadata['waiting_period']} ${metadata['waiting_period_unit']}`}\n              />\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'NT':\n      return <React.Fragment />\n\n    case 'PPE':\n      return <React.Fragment />\n\n    case 'PV':\n      return <React.Fragment />\n\n    case 'RBC':\n      let voluntaryValue = ''\n      // let involuntaryValue = ''\n      if (metadata['voluntary_upgrading_type']) {\n        if (metadata['voluntary_upgrading_type'] === 'paid_by_member') {\n          voluntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['voluntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['voluntary_upgrading_amount']\n        ) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' hrs'\n        } else if (metadata['voluntary_upgrading_type'] === 'rate' && metadata['voluntary_upgrading_amount']) {\n          voluntaryValue = metadata['voluntary_upgrading_amount'] + ' %'\n        }\n      }\n      if (metadata['involuntary_upgrading_type']) {\n        if (metadata['involuntary_upgrading_type'] === 'paid_by_member') {\n          // involuntaryValue = 'Room and Board difference is paid by the Member'\n        } else if (\n          metadata['involuntary_upgrading_type'] === 'first_hours_free' &&\n          metadata['involuntary_upgrading_amount']\n        ) {\n          // involuntaryValue = metadata['involuntary_upgrading_amount'] + ' hrs'\n        }\n      }\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {(metadata['voluntary_upgrading_type'] || showAll) && (\n              <React.Fragment>\n                <ValueField label={'Voluntary Room Upgrading'} value={voluntaryValue} />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'SD':\n      return (\n        <React.Fragment>\n          <div className={classes.groups}>\n            {((metadata['limit_for_all'] && metadata['limit_for_all_unit']) || showAll) && (\n              <React.Fragment>\n                <Typography variant='overline' display='block' gutterBottom>\n                  Limit\n                </Typography>\n                <ValueField\n                  label={'Peso Limit for all procedures'}\n                  value={`${metadata['limit_for_all']} ${metadata['limit_for_all_unit']}`}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </React.Fragment>\n      )\n\n    case 'SH':\n      return <React.Fragment />\n  }\n}\n\nconst populateMember = args => {}\n\nexport default function Footer (props) {\n  const { contractType } = props\n  const [elemFields, setElemFields] = React.useState([])\n\n  React.useEffect(() => {\n    if (contractType === 'client') {\n      setElemFields(populateClient(props))\n    } else if (contractType === 'member') {\n      setElemFields(populateMember(props))\n    }\n  }, [props])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>{elemFields}</div>\n    </div>\n  )\n}\n","const includesAny = (s1 = '', s2 = '') => {\n  return s1.toLowerCase().includes(s2.toLowerCase())\n}\n\nconst compare = (list, find, comparer = includesAny, fields = []) => {\n  if (Array.isArray(list)) {\n    return list.some(item => {\n      for (const field of fields) {\n        if (comparer(item[field], find)) return true\n      }\n    })\n  } else {\n    if (comparer(list, find)) return true\n  }\n  return false\n}\n\nexport { compare, includesAny }\n","export class BenefitNode2 {\n  static getNodeTree (item, nodes) {\n    let current = item\n    let treePath = []\n    let levelLimit = 2\n\n    if (Array.isArray(current['tree_path'])) {\n      treePath = [...current['tree_path']].reverse()\n    } else {\n      treePath = Object.values(current['tree_path']).reverse()\n    }\n    treePath.shift()\n\n    if (current.level === 3) {\n      levelLimit = 1\n    }\n\n    const nodeTree = treePath\n      .reduce((result, path) => {\n        if (current !== undefined && current.level > levelLimit) {\n          const input = {\n            id: current.id,\n            name: current.name,\n            code: current.code\n          }\n\n          if (current['original_id']) {\n            input['original_id'] = current['original_id']\n          }\n\n          result.push(input)\n\n          current = nodes.find(node => {\n            return node.level === current.level - 1 && node.code === path && node.children.includes(current.id)\n          })\n        }\n        return result\n      }, [])\n      .reverse()\n\n    return nodeTree\n  }\n\n  static convertNodeData (nodesParam, loadExisting = false) {\n    let nodeIDMap = []\n\n    let nodes = [...nodesParam]\n\n    if (!loadExisting) {\n      nodes = nodes.filter(item => {\n        if (item.level === 1 || item.level === 2 || (item.level > 2 && item.tree_path[2] === 'BASE')) {\n          return true\n        }\n        return false\n      })\n    }\n\n    nodes = nodes.sort((node1, node2) => {\n      if (node1.level === 3 && node1.code === 'BASE') return -1\n      if (node2.level === 3 && node2.code === 'BASE') return 1\n\n      if (node1.sort_index > node2.sort_index) return -1\n      if (node1.sort_index < node2.sort_index) return 1\n\n      if (node1.name > node2.name) return 1\n      if (node1.name < node2.name) return -1\n\n      return 0\n    })\n\n    nodes = nodes.map((item, i) => {\n      const oldID = item['_id']\n      let itemPlanType = 'BASE'\n\n      if (item.level > 2 && item.tree_path[2] !== 'BASE') {\n        itemPlanType = item.tree_path[2]\n      }\n\n      const newID = 'NODE-' + itemPlanType + '-' + i.toString().padStart(3, '0')\n\n      item['included'] = true\n\n      const IDSet = {\n        id: oldID,\n        newID: newID\n      }\n\n      let metadata = Object.assign({}, item['custom_metadata'])\n\n      if (metadata['included_facilities'] && metadata['included_facilities'].length > 0) {\n        const newIncludedFacilities = [...metadata['included_facilities']]\n\n        metadata['partner_network_list'] = newIncludedFacilities.map((item, i) => {\n          let newPartner = Object.assign({}, item)\n\n          newPartner['parent'] = newID\n          newPartner['included'] = true\n          newPartner['index'] = i\n\n          return newPartner\n        })\n\n        delete metadata.included_facilities\n      }\n\n      if (metadata['excluded_facilties'] && metadata['excluded_facilties'].length > 0) {\n        let newExcludedFacilities = [...metadata['excluded_facilties']]\n\n        let partnerNetworkList = []\n\n        if (metadata['partner_network_list'] !== undefined) {\n          partnerNetworkList = [...metadata['partner_network_list']]\n        }\n\n        newExcludedFacilities = newExcludedFacilities.map((item, i) => {\n          let newPartner = Object.assign({}, item)\n\n          newPartner['parent'] = newID\n          newPartner['included'] = false\n          newPartner['index'] = i\n\n          return newPartner\n        })\n\n        metadata['partner_network_list'] = [...partnerNetworkList, ...newExcludedFacilities]\n\n        delete metadata.excluded_facilties\n      }\n\n      item['custom_metadata'] = metadata\n\n      nodeIDMap.push(IDSet)\n\n      if (loadExisting) {\n        item['original_id'] = item['_id']\n      }\n\n      item['id'] = newID\n\n      delete item['_id']\n\n      return Object.assign({}, item)\n    })\n\n    nodes = nodes.map(item => {\n      if (loadExisting) {\n        item['original_children'] = [...item['children']]\n      }\n\n      if (item['children'].length > 0) {\n        item['children'] = item['children'].reduce((result, id) => {\n          const found = nodeIDMap.find(set => {\n            return set.id === id\n          })\n\n          if (found) {\n            result.push(found.newID)\n          }\n\n          return result\n        }, [])\n      }\n      return item\n    })\n\n    return nodes\n  }\n\n  static createExclusionList (nodes) {\n    const eList = nodes.reduce((exResult, item) => {\n      // if (item['custom_metadata']['is_excluded'] && item['custom_metadata']['is_excluded'] === true) {\n      if (item['level'] === 6 && item['tree_path'][3] === 'EX') {\n        const exTree = this.getNodeTree(item, nodes)\n        exResult.push(exTree)\n      }\n      return exResult\n    }, [])\n\n    return eList\n  }\n\n  static combineNodes (parentNodes, childNodes) {\n    const nodes = parentNodes.reduce((result, parent) => {\n      parent.children.map(child => {\n        let foundChild = childNodes.find(childNode => child === childNode.id)\n\n        if (foundChild) {\n          let child = Object.assign({}, foundChild)\n\n          child['parent_name'] = parent.name\n          child['parent_code'] = parent.code\n          child['disabled'] = false\n          result.push(child)\n        }\n      })\n\n      return result\n    }, [])\n\n    return nodes\n  }\n\n  static combineNodes2 (parentNodes, childNodes) {\n    const nodes = parentNodes.reduce((result, parent) => {\n      let newParent = Object.assign({}, parent)\n      let newChildNodes = []\n\n      newParent.children.map(child => {\n        let foundChild = childNodes.find(childNode => child === childNode.id)\n\n        if (foundChild) {\n          let child = Object.assign({}, foundChild)\n\n          child['disabled'] = false\n          newChildNodes.push(child)\n        }\n      })\n\n      newParent['child_nodes'] = newChildNodes\n      newParent['disabled'] = false\n\n      result.push(newParent)\n\n      return result\n    }, [])\n\n    return nodes\n  }\n\n  static getFilteredNodes (nodes, level) {\n    return nodes.filter(item => {\n      return item.level === level\n    })\n  }\n\n  static getSidebarList (benefitCategoryNodes, planType, planPackage) {\n    return benefitCategoryNodes.reduce((result, item) => {\n      if (item.tree_path[2] === planType && item.tree_path[3] === planPackage) {\n        let newItem = Object.assign({}, item)\n\n        if (planType !== 'BASE') {\n          const baseNode = benefitCategoryNodes.find(baseItem => {\n            return (\n              baseItem.name === newItem.name &&\n              baseItem.code === newItem.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === newItem.tree_path[3] &&\n              baseItem.tree_path[4] === newItem.tree_path[4]\n            )\n          })\n\n          if (baseNode && baseNode.included === false) {\n            newItem['base_disabled'] = true\n          } else {\n            newItem['base_disabled'] = false\n          }\n        }\n\n        result.push(newItem)\n      }\n\n      return result\n    }, [])\n  }\n\n  static getRows (\n    exclusionList,\n    benefitCategoryNodes,\n    benefitTypeNodes,\n    mainBenefitNodes,\n    subBenefitNodes,\n    selectedPlanType,\n    selectedPlanPackage,\n    selectedBenefitCategory\n  ) {\n    let rows = []\n    if (['EX'].includes(selectedBenefitCategory)) {\n      if (exclusionList.length > 0) {\n        rows = exclusionList.reduce((result, exclusionArray) => {\n          const code = exclusionArray[0].code\n\n          if (code === selectedPlanType) {\n            let exclusion = Object.assign({}, exclusionArray[exclusionArray.length - 1])\n\n            const parent = Object.assign({}, exclusionArray[exclusionArray.length - 2])\n\n            exclusion['parent_name'] = parent.name\n            exclusion['parent_code'] = parent.code\n            exclusion['disabled'] = false\n            exclusion['included'] = false\n\n            const found = benefitTypeNodes.find(item => {\n              return item.id === exclusion.id\n            })\n\n            if (found && found['custom_metadata'] && found['custom_metadata']['is_excluded'] !== undefined) {\n              const metadata = Object.assign({}, found['custom_metadata'])\n              exclusion['included'] = metadata['is_excluded']\n            }\n\n            result.push(exclusion)\n          }\n\n          return result\n        }, [])\n      }\n    } else if (['ID', 'NT'].includes(selectedBenefitCategory)) {\n      const categoryNodes = benefitCategoryNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedBenefitCategory\n      })\n      const typeNodes = benefitTypeNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedBenefitCategory\n      })\n\n      rows = this.combineNodes2(categoryNodes, typeNodes)\n    } else if (['EL'].includes(selectedBenefitCategory)) {\n      const benefitNodes = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory &&\n          item.tree_path[5] === 'DP'\n        )\n      })\n\n      const subNodes = subBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory &&\n          item.tree_path[5] === 'DP'\n        )\n      })\n\n      rows = this.combineNodes2(benefitNodes, subNodes)\n\n      if (selectedPlanType !== 'BASE') {\n        rows = rows.map(item => {\n          item.child_nodes.map(child => {\n            const baseNode = subBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === child.name &&\n                baseItem.code === child.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === child.tree_path[3] &&\n                baseItem.tree_path[4] === child.tree_path[4] &&\n                baseItem.tree_path[5] === child.tree_path[5] &&\n                baseItem.tree_path[6] === child.tree_path[6] &&\n                baseItem.tree_path[7] === child.tree_path[7]\n              )\n            })\n\n            if (baseNode && baseNode.included === true) {\n              child['disabled'] = true\n            } else {\n              child['disabled'] = false\n            }\n\n            return child\n          })\n          return item\n        })\n      }\n    } else if (['RBC'].includes(selectedBenefitCategory)) {\n      rows = [...benefitCategoryNodes]\n\n      rows = rows.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[3] === selectedPlanPackage\n      })\n\n      rows = rows.map(item => {\n        item['disabled'] = false\n        return item\n      })\n    } else if (['EM', 'DNT', 'CC', 'EC', 'PV', 'SH', 'ADD', 'SD'].includes(selectedBenefitCategory)) {\n      rows = [...benefitTypeNodes]\n\n      rows = rows.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n\n      if (selectedPlanType !== 'BASE' && selectedBenefitCategory !== 'SH') {\n        rows = rows.map(item => {\n          const baseNode = benefitTypeNodes.find(baseItem => {\n            return (\n              baseItem.name === item.name &&\n              baseItem.code === item.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === item.tree_path[3] &&\n              baseItem.tree_path[4] === item.tree_path[4] &&\n              baseItem.tree_path[5] === item.tree_path[5]\n            )\n          })\n\n          if (baseNode && baseNode.included === true) {\n            item['disabled'] = true\n          } else {\n            item['disabled'] = false\n          }\n\n          return item\n        })\n      } else {\n        rows = rows.map(item => {\n          item['disabled'] = false\n          return item\n        })\n      }\n      return rows\n    } else if (['MT', 'APE', 'IP', 'OP', 'OM', 'PPE'].includes(selectedBenefitCategory)) {\n      const typeNodes = benefitTypeNodes.filter(item => {\n        return item.tree_path[2] === selectedPlanType && item.tree_path[4] === selectedBenefitCategory\n      })\n      const benefitNodes = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n\n      rows = this.combineNodes(typeNodes, benefitNodes)\n\n      if (selectedPlanType !== 'BASE') {\n        rows = rows.map(item => {\n          const baseNode = mainBenefitNodes.find(baseItem => {\n            return (\n              baseItem.name === item.name &&\n              baseItem.code === item.code &&\n              baseItem.tree_path[2] === 'BASE' &&\n              baseItem.tree_path[3] === item.tree_path[3] &&\n              baseItem.tree_path[4] === item.tree_path[4] &&\n              baseItem.tree_path[5] === item.tree_path[5] &&\n              baseItem.tree_path[6] === item.tree_path[6]\n            )\n          })\n\n          if (baseNode && baseNode.included === true) {\n            item['disabled'] = true\n          } else {\n            item['disabled'] = false\n          }\n\n          return item\n        })\n      }\n    } else {\n      rows = mainBenefitNodes.filter(item => {\n        return (\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n        )\n      })\n    }\n\n    if (selectedBenefitCategory !== 'EX') {\n      rows = rows.filter(item => {\n        if (item['custom_metadata'] && item['custom_metadata']['standard_exclusion'] !== undefined) {\n          return !item['custom_metadata']['standard_exclusion']\n        }\n        return true\n      })\n    }\n\n    return rows\n  }\n\n  static getContractNode (contractNodes) {\n    return contractNodes.find(item => item.code === 'CT')\n  }\n\n  static getCategoryNode (\n    planPackageNodes,\n    benefitCategoryNodes,\n    selectedPlanType,\n    selectedPlanPackage,\n    selectedBenefitCategory\n  ) {\n    if (['RBC', 'EX'].includes(selectedBenefitCategory)) {\n      return planPackageNodes.find(\n        item =>\n          item.code === selectedPlanPackage &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage\n      )\n    } else if (selectedBenefitCategory === 'NT') {\n      return planPackageNodes.find(\n        item =>\n          item.code === selectedBenefitCategory &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedBenefitCategory\n      )\n    } else {\n      return benefitCategoryNodes.find(\n        item =>\n          item.code === selectedBenefitCategory &&\n          item.tree_path[2] === selectedPlanType &&\n          item.tree_path[3] === selectedPlanPackage &&\n          item.tree_path[4] === selectedBenefitCategory\n      )\n    }\n  }\n\n  static getPlanTypeList (planTypeNodes, mainBenefitNodes, benefitTypeNodes, subBenefitNodes) {\n    const coverageCategories = ['EM', 'SD', 'PV']\n    const riderCategories = ['DNT', 'EC', 'CC', 'SH', 'ADD']\n    // const combinedCategories = [...coverageCategories, ...riderCategories];\n    const combinedNodes = [...mainBenefitNodes, ...benefitTypeNodes, ...subBenefitNodes]\n\n    return planTypeNodes.map(item => {\n      item['count'] = combinedNodes.reduce((result, benefit) => {\n        if (\n          benefit.level === 6 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          ['CV'].includes(benefit.tree_path[3]) &&\n          coverageCategories.includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = benefitTypeNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 6 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          ['RI'].includes(benefit.tree_path[3]) &&\n          riderCategories.includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = benefitTypeNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5]\n              )\n            })\n\n            if (baseNode && !baseNode.included && benefit.tree_path[4] !== 'SH') {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 7 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          !['EM', 'EC', 'EL'].includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = mainBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5] &&\n                baseItem.tree_path[6] === benefit.tree_path[6]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        } else if (\n          benefit.level === 8 &&\n          benefit.tree_path[2] === item.code &&\n          benefit.included &&\n          !['OP'].includes(benefit.tree_path[4])\n        ) {\n          if (benefit.tree_path[2] !== 'BASE') {\n            const baseNode = mainBenefitNodes.find(baseItem => {\n              return (\n                baseItem.name === benefit.name &&\n                baseItem.code === benefit.code &&\n                baseItem.tree_path[2] === 'BASE' &&\n                baseItem.tree_path[3] === benefit.tree_path[3] &&\n                baseItem.tree_path[4] === benefit.tree_path[4] &&\n                baseItem.tree_path[5] === benefit.tree_path[5] &&\n                baseItem.tree_path[6] === benefit.tree_path[6]\n              )\n            })\n\n            if (baseNode && !baseNode.included) {\n              result++\n            }\n          } else {\n            result++\n          }\n        }\n        return result\n      }, 0)\n\n      return item\n    })\n  }\n\n  static generatePlanNodes (baseNodes, name, code, tmp_data, basePlanType = 'BASE') {\n    let planNodes = [...baseNodes]\n    let planTypeID = ''\n\n    planNodes = planNodes.filter(item => {\n      return item.level > 2 && item.tree_path[2] === basePlanType\n    })\n\n    let nodeIDMap = []\n\n    planNodes = planNodes.map((item, i) => {\n      let newItem = Object.assign({}, item)\n\n      const oldID = newItem['id']\n      const newID = 'NODE-' + code + '-' + i.toString().padStart(3, '0')\n\n      if (newItem.level > 2 && newItem.tree_path[2] === basePlanType) {\n        newItem.tree_path = Object.assign({}, newItem.tree_path)\n        newItem.tree_path[2] = code\n      }\n\n      if (newItem.level === 3 && newItem.code === basePlanType) {\n        newItem['name'] = name\n        newItem['code'] = code\n        if (!newItem['custom_metadata']) {\n          newItem['custom_metadata'] = {}\n        }\n        if (!newItem['custom_metadata_schema']) {\n          newItem['custom_metadata_schema'] = {}\n        }\n        newItem['custom_metadata'] = Object.assign({}, newItem.custom_metadata)\n        newItem['description'] = 'Specific Plan Type Template'\n        newItem['sort_index'] = 2\n        newItem['custom_metadata']['title'] = 'Benefits for ' + name\n        newItem['custom_metadata']['contract_plan_type'] = tmp_data['contractPlanType']\n          ? tmp_data['contractPlanType']\n          : tmp_data['requestedRate']\n          ? 'HMO'\n          : ''\n        newItem['custom_metadata']['requested_rate'] = tmp_data['requestedRate'] ? tmp_data['requestedRate'] : 0\n        newItem['custom_metadata']['admin_fee'] = tmp_data['adminFee'] ? tmp_data['adminFee'] : 0\n        newItem['custom_metadata']['naf'] = tmp_data['naf'] ? tmp_data['naf'] : 0\n        newItem['custom_metadata']['rsd'] = tmp_data['rsdFee'] ? tmp_data['rsdFee'] : 0\n\n        newItem['custom_metadata']['indicative_principals'] = tmp_data['indicativeNumOfPrincipals']\n          ? tmp_data['indicativeNumOfPrincipals']\n          : 0\n        newItem['custom_metadata']['indicative_dependents'] = tmp_data['indicativeNumOfDependents']\n          ? tmp_data['indicativeNumOfDependents']\n          : 0\n        newItem['custom_metadata_schema'] = {\n          properties: {\n            title: {\n              type: 'string'\n            },\n            contract_plan_type: {\n              type: 'string'\n            },\n            requested_rate: {\n              type: 'number'\n            },\n            admin_fee: {\n              type: 'number'\n            },\n            naf: {\n              type: 'number'\n            },\n            rsd: {\n              type: 'number'\n            },\n            indicative_principals: {\n              type: 'number'\n            },\n            indicative_dependents: {\n              type: 'number'\n            }\n          }\n        }\n\n        planTypeID = newID\n      }\n\n      const IDSet = {\n        id: oldID,\n        newID: newID\n      }\n\n      nodeIDMap.push(IDSet)\n      newItem['id'] = newID\n      newItem['edited'] = false\n\n      delete newItem.original_children\n      delete newItem.original_id\n\n      return newItem\n    })\n\n    planNodes = planNodes.map(item => {\n      if (item['children'].length > 0) {\n        item['children'] = item['children'].reduce((result, id) => {\n          const found = nodeIDMap.find(set => {\n            return set.id === id\n          })\n\n          if (found) {\n            result.push(found.newID)\n          }\n          return result\n        }, [])\n      }\n\n      if (item['limits']) {\n        item['limits'] = [...item['limits']]\n      }\n\n      if (item['custom_metadata'] && item['custom_metadata']['partner_network_list']) {\n        let metadata = Object.assign({}, item['custom_metadata'])\n\n        let newPartnerNetworkList = [...item['custom_metadata']['partner_network_list']]\n\n        newPartnerNetworkList = newPartnerNetworkList.reduce((result, partner) => {\n          let newPartner = Object.assign({}, partner)\n\n          newPartner['parent'] = item['id']\n\n          result.push(newPartner)\n          return result\n        }, [])\n\n        metadata['partner_network_list'] = newPartnerNetworkList\n\n        item['custom_metadata'] = metadata\n      }\n\n      if (item['original_node']) {\n        const found = nodeIDMap.find(set => {\n          return set.id === item['original_node']\n        })\n\n        if (found) {\n          item['original_node'] = found.newID\n        }\n      }\n      return item\n    })\n\n    return { planNodes, planTypeID }\n  }\n\n  static combineBaseBenefitNodes (baseNodes, benefitNodes, addFlag = false) {\n    // Get all the plan types\n    const planTypeNodes = benefitNodes.reduce((result, node) => {\n      if (node.level === 3 && node.code !== 'BASE') {\n        result.push(node)\n      }\n      return result\n    }, [])\n\n    let nodes = [...baseNodes]\n\n    // remove the base eligiblity nodes\n    nodes = nodes.filter(item => {\n      return !([7, 8].includes(item.level) && item.tree_path[3] === 'TC' && item.tree_path[4] === 'EL')\n    })\n\n    nodes = nodes.map(item => {\n      if (item.level === 6 && item.tree_path[3] === 'TC' && item.tree_path[4] === 'EL') {\n        let newItem = Object.assign({}, item)\n\n        newItem.children = newItem.children.filter(child => !!nodes.find(node => node.id === child))\n        return newItem\n      } else {\n        return item\n      }\n    })\n\n    // Duplicate the base nodes for every non-base plan type\n    nodes = planTypeNodes.reduce((result, planTypeNode) => {\n      const { planNodes, planTypeID } = this.generatePlanNodes(\n        result,\n        planTypeNode.name,\n        planTypeNode.code,\n        planTypeNode\n      )\n\n      const index = result.findIndex(item => item.level === 2 && item.code === 'CT')\n\n      result[index]['children'].push(planTypeID)\n\n      return [...result, ...planNodes]\n    }, nodes)\n\n    // Overlay the benefit nodes array to the base nodes array and return\n    nodes = nodes.map(node => {\n      let newNode = Object.assign({}, node)\n\n      const found = benefitNodes.find(benefit => {\n        if (newNode.level === 8) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5] &&\n            newNode.tree_path[6] === benefit.tree_path[6] &&\n            newNode.tree_path[7] === benefit.tree_path[7]\n          )\n        } else if (newNode.level === 7) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5] &&\n            newNode.tree_path[6] === benefit.tree_path[6]\n          )\n        } else if (newNode.level === 6) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4] &&\n            newNode.tree_path[5] === benefit.tree_path[5]\n          )\n        } else if (newNode.level === 5) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3] &&\n            newNode.tree_path[4] === benefit.tree_path[4]\n          )\n        } else if (newNode.level === 4) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2] &&\n            newNode.tree_path[3] === benefit.tree_path[3]\n          )\n        } else if (newNode.level === 3) {\n          return (\n            newNode.name === benefit.name &&\n            newNode.code === benefit.code &&\n            newNode.level === benefit.level &&\n            newNode.tree_path[2] === benefit.tree_path[2]\n          )\n        } else if (newNode.code === 'CT') {\n          return benefit.code === 'CT'\n        } else if (newNode.code === 'MCT') {\n          return benefit.code === 'MCT'\n        } else {\n          return newNode.name === benefit.name && newNode.code === benefit.code && newNode.level === benefit.level\n        }\n      })\n\n      if (found) {\n        const foundNode = Object.assign({}, found)\n        delete foundNode.id\n        delete foundNode.children\n        delete foundNode.node_path\n        delete foundNode.tree_id\n        delete foundNode.tree_path\n\n        newNode = Object.assign({}, newNode, foundNode)\n\n        if (addFlag && newNode.level > 3 && newNode.tree_path[2] !== 'BASE') {\n          newNode['edited'] = true\n        }\n      } else {\n        if (\n          newNode.level > 6 ||\n          (newNode.level === 5 && ['RI', 'CV', 'RB', 'ID'].includes(newNode.tree_path[3])) ||\n          (newNode.level === 6 && newNode.tree_path[3] === 'EX') ||\n          (newNode.level === 6 && newNode.tree_path[3] === 'RI' && newNode.tree_path[4] === 'OM') ||\n          (newNode.level === 6 && ['EM', 'CC', 'EC', 'DNT', 'ADD', 'SH', 'SD', 'PV'].includes(newNode.tree_path[4]))\n        ) {\n          newNode['included'] = false\n        }\n      }\n\n      return newNode\n    })\n\n    nodes.map((node, i) => {\n      if (node.level > 3 && node.tree_path[2] !== 'BASE' && node.tree_path[3] !== 'RB') {\n        const baseIndex = this.getMatchByPlanCode(nodes, nodes[i], 'BASE')\n\n        if (addFlag && (node.tree_path[3] === 'EX' || (node.tree_path[3] === 'RI' && node.tree_path[4] === 'OM'))) {\n          if (\n            baseIndex > -1 &&\n            nodes[baseIndex]['custom_metadata']['is_excluded'] &&\n            nodes[baseIndex]['custom_metadata']['is_excluded'] === true\n          ) {\n            let newNode = Object.assign({}, nodes[i])\n\n            if (addFlag) {\n              newNode['is_base'] = true\n            }\n\n            nodes[i] = newNode\n          }\n        } else {\n          if (baseIndex > -1 && nodes[baseIndex]['included'] && nodes[baseIndex]['included'] === true) {\n            let newNode = Object.assign({}, nodes[i])\n\n            if (newNode['included'] === false) {\n              const foundNode = Object.assign({}, nodes[baseIndex])\n              delete foundNode.id\n              delete foundNode.children\n              delete foundNode.original_id\n              delete foundNode.original_children\n              delete foundNode.node_path\n              delete foundNode.tree_id\n              delete foundNode.tree_path\n\n              newNode = Object.assign({}, newNode, foundNode)\n\n              newNode['included'] = true\n            }\n\n            if (addFlag && !newNode['edited']) {\n              newNode['is_base'] = true\n            }\n\n            nodes[i] = newNode\n          }\n        }\n      }\n    })\n\n    let count = 0\n\n    let eligiblityNodes = benefitNodes.filter(benefit => {\n      return [7, 8].includes(benefit.level) && benefit.tree_path[3] === 'TC' && benefit.tree_path[4] === 'EL'\n    })\n\n    eligiblityNodes = eligiblityNodes.sort((node1, node2) => {\n      if (node1.level < node2.level) return -1\n      if (node1.level > node2.level) return 1\n\n      return 0\n    })\n\n    eligiblityNodes.map(benefit => {\n      const newID = 'NODE-LOAD-' + count.toString().padStart(3, '0')\n      const parentLevel = benefit.level - 1\n      const parentCode = benefit.tree_path[benefit.level - 2]\n      const parentIndex = nodes.findIndex(node => {\n        if (benefit.level === 5) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3]\n          )\n        } else if (benefit.level === 6) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4]\n          )\n        } else if (benefit.level === 7) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4] &&\n            benefit.tree_path[5] === node.tree_path[5]\n          )\n        } else if (benefit.level === 8) {\n          return (\n            parentCode === node.code &&\n            parentLevel === node.level &&\n            benefit.tree_path[2] === node.tree_path[2] &&\n            benefit.tree_path[3] === node.tree_path[3] &&\n            benefit.tree_path[4] === node.tree_path[4] &&\n            benefit.tree_path[5] === node.tree_path[5] &&\n            benefit.tree_path[6] === node.tree_path[6]\n          )\n        }\n        return false\n      })\n\n      let newNode = Object.assign({}, benefit)\n      newNode['children'] = []\n      if (nodes[parentIndex] && nodes[parentIndex] !== undefined) {\n        let newChildren = [...nodes[parentIndex].children]\n        newChildren.push(newID)\n\n        nodes[parentIndex]['children'] = newChildren\n      }\n\n      newNode['included'] = true\n      newNode['id'] = newID\n\n      nodes.push(newNode)\n      count++\n    })\n\n    return nodes\n  }\n\n  static getMatchByPlanCode (nodes, baseNode, planCode) {\n    const planIndex = nodes.findIndex(item => {\n      if (baseNode.level === 8) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5] &&\n          baseNode.tree_path[6] === item.tree_path[6] &&\n          baseNode.tree_path[7] === item.tree_path[7]\n        )\n      } else if (baseNode.level === 7) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5] &&\n          baseNode.tree_path[6] === item.tree_path[6]\n        )\n      } else if (baseNode.level === 6) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4] &&\n          baseNode.tree_path[5] === item.tree_path[5]\n        )\n      } else if (baseNode.level === 5) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3] &&\n          baseNode.tree_path[4] === item.tree_path[4]\n        )\n      } else if (baseNode.level === 4) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2] &&\n          baseNode.tree_path[3] === item.tree_path[3]\n        )\n      } else if (baseNode.level === 3) {\n        return (\n          baseNode.name === item.name &&\n          baseNode.code === item.code &&\n          baseNode.level === item.level &&\n          planCode === item.tree_path[2]\n        )\n      } else {\n        return baseNode.name === item.name && baseNode.code === item.code && baseNode.level === item.level\n      }\n    })\n    return planIndex\n  }\n}\n","import React from 'react'\n\n// Components\nimport Typography from '@material-ui/core/Typography'\nimport SideBar from './Components/SideBar/SideBar'\nimport LimitTable from './Components/LimitTable/LimitTable'\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n// import { BenefitNode } from 'Utilities/BenefitNode'\nimport { BenefitNode2 } from 'Utilities/BenefitNode2'\n\n// Styles\nimport classes from './Benefits.module.scss'\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { contractType, member, client } = props\n  // Service\n\n  // Local Variables\n  const [selectedPlanType, setSelectedPlanType] = React.useState('BASE')\n  const [selectedPlanPackage, setSelectedPlanPackage] = React.useState('RB')\n  const [selectedBenefitCategory, setSelectedBenefitCategory] = React.useState('RBC')\n\n  const [showAll, setShowAll] = React.useState(true)\n\n  const [benefitRows, setBenefitRows] = React.useState([])\n\n  const [exclusionList, setExclusionList] = React.useState([])\n  const [contractNodes, setContractNodes] = React.useState([])\n  const [planTypeNodes, setPlanTypeNodes] = React.useState([])\n  const [planPackageNodes, setPlanPackageNodes] = React.useState([])\n  const [benefitCategoryNodes, setBenefitCategoryNodes] = React.useState([])\n  const [benefitTypeNodes, setBenefitTypeNodes] = React.useState([])\n  const [mainBenefitNodes, setMainBenefitNodes] = React.useState([])\n  const [subBenefitNodes, setSubBenefitNodes] = React.useState([])\n\n  const [contractId, setContractId] = React.useState('')\n\n  React.useEffect(() => {\n    if (contractType === 'client') {\n      setContractId('---')\n      if (client.contract.base.length <= 0 || client.contract.benefits.length <= 0) return\n\n      console.log(client)\n\n      const baseNodes = BenefitNode2.convertNodeData(client.contract.base) // temporary handling if no result from endpoint\n      const contractNodes = BenefitNode2.convertNodeData(client.contract.benefits, true) // temporary handling if member have no benefit\n      const nodes = BenefitNode2.combineBaseBenefitNodes(baseNodes, contractNodes)\n\n      const eList = BenefitNode2.createExclusionList(nodes)\n\n      setExclusionList(eList)\n\n      setContractNodes(BenefitNode2.getFilteredNodes(nodes, 2))\n      setPlanTypeNodes(BenefitNode2.getFilteredNodes(nodes, 3))\n      setPlanPackageNodes(BenefitNode2.getFilteredNodes(nodes, 4))\n      setBenefitCategoryNodes(BenefitNode2.getFilteredNodes(nodes, 5))\n      setBenefitTypeNodes(BenefitNode2.getFilteredNodes(nodes, 6))\n      setMainBenefitNodes(BenefitNode2.getFilteredNodes(nodes, 7))\n      setSubBenefitNodes(BenefitNode2.getFilteredNodes(nodes, 8))\n\n      setSelectedPlanType('BASE')\n      setSelectedPlanPackage('RB')\n      setSelectedBenefitCategory('RBC')\n    } else if (contractType === 'member') {\n      if (member.info.contracts) setContractId(member.contracts.slice().pop())\n      // ALGO HERE\n    }\n  }, [contractType, member, client])\n\n  React.useEffect(() => {\n    setBenefitRows(getRows(selectedPlanPackage, selectedBenefitCategory))\n  }, [selectedPlanType, selectedPlanPackage, selectedBenefitCategory])\n\n  const getContractNode = () => {\n    return BenefitNode2.getContractNode(contractNodes)\n  }\n\n  const getCategoryNode = () => {\n    return BenefitNode2.getCategoryNode(\n      planPackageNodes,\n      benefitCategoryNodes,\n      selectedPlanType,\n      selectedPlanPackage,\n      selectedBenefitCategory\n    )\n  }\n\n  const getPlanTypeList = () => {\n    return BenefitNode2.getPlanTypeList(planTypeNodes, mainBenefitNodes, benefitTypeNodes, subBenefitNodes)\n  }\n\n  const getRows = (planPackage, benefitCategory) => {\n    return BenefitNode2.getRows(\n      exclusionList,\n      benefitCategoryNodes,\n      benefitTypeNodes,\n      mainBenefitNodes,\n      subBenefitNodes,\n      selectedPlanType,\n      planPackage,\n      benefitCategory\n    )\n  }\n\n  const getRoomAndBoardList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'RB')\n  }\n\n  const getCoverageList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'CV')\n  }\n\n  const getRiderList = () => {\n    return BenefitNode2.getSidebarList(benefitCategoryNodes, selectedPlanType, 'RI')\n  }\n\n  const handleItemClick = args => {\n    const { planPackage, benefitCategory } = args\n    setSelectedPlanPackage(planPackage)\n    setSelectedBenefitCategory(benefitCategory)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <div className={classes['left-side']}>\n          <Typography className={classes.title}>Member Benefits</Typography>\n          <SideBar\n            contractId={contractId}\n            planTypeList={getPlanTypeList()}\n            contractNode={getContractNode()}\n            categoryNode={getCategoryNode()}\n            roomAndBoardList={getRoomAndBoardList()}\n            coverageList={getCoverageList()}\n            riderList={getRiderList()}\n            onItemClick={handleItemClick}\n          />\n        </div>\n\n        <div className={classes['right-side']}>\n          <Header\n            contractType={contractType}\n            showAll={showAll}\n            benefitType={selectedBenefitCategory}\n            categoryNode={getContractNode()}\n          />\n\n          <LimitTable\n            contractType={contractType}\n            benefitType={selectedBenefitCategory}\n            rows={benefitRows}\n            contractId={contractId}\n            planTypeList={getPlanTypeList()}\n            contractNode={getContractNode()}\n            categoryNode={getCategoryNode()}\n            roomAndBoardList={getRoomAndBoardList()}\n            coverageList={getCoverageList()}\n            riderList={getRiderList()}\n          />\n\n          <Footer\n            contractType={contractType}\n            showAll={showAll}\n            benefitType={selectedBenefitCategory}\n            categoryNode={getContractNode()}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './Exclusions.module.scss'\n\nlet columns = [\n  { name: 'Type', sortField: 'parent_name', search: true },\n  { name: 'Item', sortField: 'name', search: true }\n]\n\nexport default function Benefits (props) {\n  // Events\n\n  // Variables\n  const { contractType, member, client } = props\n  // Service\n\n  // Local Variables\n\n  const [exclusionList, setExclusionList] = React.useState([])\n  const [selectedPlan, setSelectedPlan] = React.useState('BASE')\n  const [planTypes, setPlantTypes] = React.useState([])\n\n  const [rows, setRows] = React.useState([])\n\n  const getExclusions = tree => {\n    const benefitsExclusion = tree.filter(element => element.level === 5 && element.tree_path[3] === 'EX')\n\n    let childExclusions = []\n    benefitsExclusion.map(benefit => {\n      benefit.children.forEach(childId => {\n        // const subBenefit = tree.filter(element => element.original_id === childId)[0]\n        const subBenefit = tree.filter(element => element._id === childId && element.custom_metadata.is_excluded)[0]\n        // console.log('test0', tree[0])\n        // console.log('Any subBenefit? ', subBenefit)\n        if (subBenefit) {\n          childExclusions.push({\n            name: subBenefit.name,\n            parent_name: benefit.name,\n            code: subBenefit.code,\n            parent_code: benefit.code,\n            plan_type: benefit.tree_path[2]\n          })\n        }\n      })\n    })\n\n    const subPlan = tree.filter(element => element.level === 3)\n    const planTypes = subPlan.map(plan => plan.code)\n    setPlantTypes(planTypes)\n\n    setExclusionList(childExclusions)\n  }\n\n  React.useEffect(() => {\n    if (contractType === 'member') {\n      getExclusions(member.contract.benefits)\n      setRows(generateRows(selectedPlan))\n    } else if (contractType === 'client') {\n      getExclusions(client.contract.benefits)\n      setRows(generateRows(selectedPlan))\n    }\n  }, [contractType, member, client])\n\n  const queryColumn = (collection, { search, field }) => {\n    // if (collection === 'benefits') {\n    //   clearTimeout(debounce)\n    //   setDebounce(\n    //     setTimeout(() => {\n    //       let searchObj = search\n    //       let category = field\n    //       if (field === 'id') {\n    //         setPartnerId(search)\n    //         if (partnerName || partnerLocation) {\n    //           searchObj = {\n    //             id: search,\n    //             name: partnerName,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'name') {\n    //         setPartnerName(search)\n    //         if (partnerId || partnerLocation) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: search,\n    //             address: partnerLocation\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       if (field === 'address') {\n    //         setPartnerLocation(search)\n    //         if (partnerId || partnerName) {\n    //           searchObj = {\n    //             id: partnerId,\n    //             name: partnerName,\n    //             address: search\n    //           }\n    //           category = 'and'\n    //         }\n    //       }\n    //       console.log(search, category)\n    //       if (search.length >= 3 || (!search && category === 'and')) {\n    //         benefitservice({\n    //           member_account_no: memberAccountNumber,\n    //           params: {\n    //             limit: benefits.limit,\n    //             page: benefits.page,\n    //             sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //             search: searchObj,\n    //             category: category\n    //           }\n    //         }).then(res => {\n    //           const { data } = res.data\n    //           setbenefits(state => ({\n    //             ...state,\n    //             data: data.results,\n    //             count: data.count,\n    //             page: 1,\n    //             orderBy: 'name',\n    //             order: true\n    //           }))\n    //         })\n    //       } else fetchAll()\n    //     }, 500)\n    //   )\n    // } else {\n    //   setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    // }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     ...benefits,\n    //     orderBy,\n    //     order: !benefits.order,\n    //     sort: `${orderBy}|${benefits.order ? 'asc' : 'desc'}`\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    //   const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    //   setDoctors(state => ({ ...state, filtered: sorted }))\n    // }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    // if (collection === 'benefits') {\n    //   const _params = {\n    //     category: benefits.category,\n    //     limit: benefits.limit,\n    //     page: benefits.page,\n    //     search: benefits.search,\n    //     sort: `${benefits.orderBy}|${benefits.order ? 'asc' : 'desc'}`,\n    //     ...params\n    //   }\n    //   benefitservice({\n    //     member_account_no: memberAccountNumber,\n    //     params: _params\n    //   }).then(res => {\n    //     const { data } = res.data\n    //     setbenefits(state => ({\n    //       ...state,\n    //       ..._params,\n    //       data: data.results,\n    //       count: data.count\n    //     }))\n    //   })\n    // } else {\n    // }\n  }\n\n  const generateRows = selectedPlan => {\n    let _rows = exclusionList.filter(benefit => benefit.plan_type === selectedPlan)\n    // FILTER ALL\n    // if (largeSearch.trim() !== '') {\n    //   filteredTickets = filteredTickets.filter(col => {\n    //     return (\n    //       col['name']\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(largeSearch.toLocaleLowerCase().trim()) ||\n    //       col['parent_name']\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(largeSearch.toLocaleLowerCase().trim())\n    //     )\n    //   })\n    // }\n    // FILTER COLUMNS\n    // columns.map(column => {\n    //   filteredTickets = filteredTickets.filter(ticket =>\n    //     filters[column.name]\n    //       ? filters[column.name] === '' ||\n    //         (ticket[column.name] &&\n    //           ticket[column.name]\n    //             .toString()\n    //             .toLowerCase()\n    //             .includes(filters[column.name].toLowerCase()))\n    //       : true\n    //   )\n    // })\n    return _rows\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      <div className={classes.body}>\n        <div className={classes[`plan-types`]}>\n          {planTypes.map((item, index) => (\n            <Typography key={`plan-${index}`} className={classes.type}>\n              <Link\n                onClick={() => {\n                  setSelectedPlan(item)\n                  setRows(generateRows(item))\n                }}\n              >\n                <span>{item}</span>\n              </Link>\n            </Typography>\n          ))}\n        </div>\n        <div className={classes.table}>\n          <Table\n            TableContainerProps={{ style: { maxHeight: '400px', overflow: 'auto', position: 'relative' } }}\n            TableProps={{ stickyHeader: true }}\n            head={\n              <TableRow>\n                {columns.map(headCell => (\n                  <TableCell key={headCell.sortField}>\n                    <TableSortLabel\n                      // active={benefits.orderBy === headCell.sortField}\n                      // direction={benefits.order ? 'asc' : 'desc'}\n                      onClick={event => {}}\n                    >\n                      {headCell.name}\n                    </TableSortLabel>\n                    {headCell.search && <TextField className={`${classes.search}`} onChange={event => {}} />}\n                  </TableCell>\n                ))}\n              </TableRow>\n            }\n            body={rows.map((row, index) => (\n              <TableRow key={`ex-${index}`}>\n                <TableCell>{row.parent_name}</TableCell>\n                <TableCell>{row.name}</TableCell>\n              </TableRow>\n            ))}\n            pagination\n            count={0}\n            page={1}\n            limit={5}\n            rowsPerPageOptions={[5, 10, 15]}\n            onChange={args => {}}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\nimport Typography from '@material-ui/core/Typography'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Utilities\nimport { compare, includesAny } from 'Utilities/ArrayCompare'\n\n// Styles\nimport classes from './PartnerNetwork.module.scss'\n\nconst headCells = [\n  { name: 'Code', sortField: 'id', search: true },\n  { name: 'Name', sortField: 'name', search: true },\n  { name: 'Location', sortField: 'address', search: true },\n  // { name: 'Type', sortField: 'type', search: true },\n  // { name: 'Groupings', sortField: 'groups', search: true },\n  { name: '', sortField: 'affiliated_doctors', search: false }\n]\n\nconst headCellsDoctors = [\n  { name: 'Medical Partner ID', sortField: 'id', search: true },\n  { name: 'Doctor Name', sortField: 'name', search: true },\n  { name: 'Specialization', sortField: 'specialization', search: true },\n  { name: 'Schedule', sortField: 'schedule', search: true },\n  { name: 'Remarks', sortField: 'remarks', search: false }\n]\n\nexport default function PartnerNetwork (props) {\n  const { partnerService, doctorService, memberAccountNumber } = props\n  const [partnerId, setPartnerId] = React.useState('')\n  const [partnerName, setPartnerName] = React.useState('')\n  const [partnerLocation, setPartnerLocation] = React.useState('')\n\n  const [partners, setPartners] = React.useState({\n    data: [],\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [doctors, setDoctors] = React.useState({\n    show: false,\n    facility_id: '',\n    data: [],\n    filtered: [],\n    filters: {},\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20],\n    orderBy: 'name',\n    order: true\n  })\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const fetchAll = () => {\n    partnerService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' }\n    }).then(res => {\n      const { data } = res.data\n      setPartners(state => ({\n        ...state,\n        data: data.results,\n        count: data.count,\n        page: 1,\n        orderBy: 'name',\n        order: true\n      }))\n    })\n  }\n\n  const fetchDoctors = ({ facility_id, filters }) => {\n    doctorService({\n      member_account_no: memberAccountNumber,\n      params: { limit: partners.limit, page: 1, sort: 'name|asc', search: '', category: 'all' },\n      facility_id,\n      filters\n    }).then(res => {\n      const { data } = res.data\n      setDoctors(state => ({\n        ...state,\n        ...data,\n        show: true,\n        facility_id,\n        data: data.results,\n        filtered: data.results,\n        filters\n      }))\n    })\n  }\n\n  const lodash = require('lodash')\n\n  React.useEffect(() => {\n    if (memberAccountNumber) fetchAll()\n  }, [memberAccountNumber])\n\n  React.useEffect(() => {\n    let filtered = doctors.data\n    for (const filter in doctors.filters) {\n      filtered = filtered.filter(item => {\n        if (typeof item[filter] !== 'object') {\n          return includesAny(item[filter], doctors.filters[filter])\n        } else {\n          for (const field in item[filter]) {\n            if (includesAny(item[filter][field], doctors.filters[filter])) return true\n          }\n        }\n      })\n    }\n    filtered = lodash.sortBy(filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n    setDoctors(state => ({ ...state, filtered }))\n  }, [doctors.filters])\n\n  const queryColumn = (collection, { search, field }) => {\n    if (collection === 'partners') {\n      clearTimeout(debounce)\n      setDebounce(\n        setTimeout(() => {\n          let searchObj = search\n          let category = field\n          if (field === 'id') {\n            setPartnerId(search)\n            if (partnerName || partnerLocation) {\n              searchObj = {\n                id: search,\n                name: partnerName,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'name') {\n            setPartnerName(search)\n            if (partnerId || partnerLocation) {\n              searchObj = {\n                id: partnerId,\n                name: search,\n                address: partnerLocation\n              }\n              category = 'and'\n            }\n          }\n          if (field === 'address') {\n            setPartnerLocation(search)\n            if (partnerId || partnerName) {\n              searchObj = {\n                id: partnerId,\n                name: partnerName,\n                address: search\n              }\n              category = 'and'\n            }\n          }\n          console.log(search, category)\n          if (search.length >= 3 || (!search && category === 'and')) {\n            partnerService({\n              member_account_no: memberAccountNumber,\n              params: {\n                limit: partners.limit,\n                page: partners.page,\n                sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n                search: searchObj,\n                category: category\n              }\n            }).then(res => {\n              const { data } = res.data\n              setPartners(state => ({\n                ...state,\n                data: data.results,\n                count: data.count,\n                page: 1,\n                orderBy: 'name',\n                order: true\n              }))\n            })\n          } else fetchAll()\n        }, 500)\n      )\n    } else {\n      setDoctors(state => ({ ...state, filters: { [field]: search } }))\n    }\n  }\n\n  const handleOnSort = (collection, orderBy) => e => {\n    if (collection === 'partners') {\n      const _params = {\n        ...partners,\n        orderBy,\n        order: !partners.order,\n        sort: `${orderBy}|${partners.order ? 'asc' : 'desc'}`\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n      const sorted = lodash.sortBy(doctors.filtered, doctors.sortBy, doctors.sort ? 'asc' : 'desc')\n      setDoctors(state => ({ ...state, filtered: sorted }))\n    }\n  }\n\n  const handleOnPaginate = (collection, params) => {\n    if (collection === 'partners') {\n      const _params = {\n        category: partners.category,\n        limit: partners.limit,\n        page: partners.page,\n        search: partners.search,\n        sort: `${partners.orderBy}|${partners.order ? 'asc' : 'desc'}`,\n        ...params\n      }\n      partnerService({\n        member_account_no: memberAccountNumber,\n        params: _params\n      }).then(res => {\n        const { data } = res.data\n        setPartners(state => ({\n          ...state,\n          ..._params,\n          data: data.results,\n          count: data.count\n        }))\n      })\n    } else {\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-partner'\n            onChange={event => queryColumn('partners', { search: event.target.value, field: 'any' })}\n            placeholder='Search for Partner Network Code, Name, and Location'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={partners.orderBy === headCell.sortField}\n                    direction={partners.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort('partners', headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                  {headCell.search && (\n                    <TextField\n                      className={`${classes.search}`}\n                      onChange={event =>\n                        queryColumn('partners', { search: event.target.value, field: headCell.sortField })\n                      }\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={partners.data.map((row, index) => (\n            <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n              <TableCell id={`pn-code-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.id}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-name-${index}`}>\n                <div className={classes.cell}>\n                  <span>{row.name}</span>\n                </div>\n              </TableCell>\n              <TableCell id={`pn-location-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    {[\n                      row.address.unit_no,\n                      row.address.floor,\n                      row.address.building_no,\n                      row.address.building_name,\n                      row.address.street,\n                      row.address.barangay,\n                      row.address.district,\n                      row.address.city,\n                      row.address.region,\n                      row.address.zip_code\n                    ]\n                      .filter(Boolean)\n                      .join(' ')}\n                  </span>\n                </div>\n              </TableCell>\n\n              <TableCell id={`pn-view-link-${index}`}>\n                <div className={classes.cell}>\n                  <span>\n                    <Typography\n                      variant='caption'\n                      className={`text-link `}\n                      onClick={() => {\n                        fetchDoctors({ facility_id: row.id, filters: [] })\n                      }}\n                    >\n                      View Affiliated Doctors\n                    </Typography>\n                  </span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n          pagination\n          count={partners.count}\n          page={partners.page}\n          limit={partners.limit}\n          rowsPerPageOptions={partners.rowsPerPageOptions}\n          onChange={args => handleOnPaginate('partners', args)}\n        />\n      </div>\n\n      <Dialog\n        fullWidth\n        maxWidth='md'\n        onClose={() => setDoctors(state => ({ ...state, show: false }))}\n        aria-labelledby='customized-dialog-title'\n        open={doctors.show}\n        className={classes.doctors}\n        PaperProps={{ style: { height: 'auto', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <Typography variant='h6' className={classes.title}>\n              Affiliated Doctors\n            </Typography>\n            <IconButton\n              aria-label='close'\n              className={classes.button}\n              onClick={() => setDoctors(state => ({ ...state, show: false }))}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </DialogTitle>\n\n        <DialogContent dividers className={classes.content}>\n          <div className={classes.table}>\n            <Table\n              TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n              TableProps={{ stickyHeader: true }}\n              head={\n                <TableRow>\n                  {headCellsDoctors.map(cell => (\n                    <TableCell key={cell.sortField}>\n                      <TableSortLabel\n                        active={doctors.orderBy === cell.sortField}\n                        direction={doctors.order ? 'asc' : 'desc'}\n                        onClick={handleOnSort('doctors', cell.sortField)}\n                      >\n                        {cell.name}\n                      </TableSortLabel>\n                      {cell.search && (\n                        <TextField\n                          className={`${classes.search}`}\n                          onChange={event =>\n                            queryColumn('doctors', { search: event.target.value, field: cell.sortField })\n                          }\n                        />\n                      )}\n                    </TableCell>\n                  ))}\n\n                  <TableCell align='center' />\n                </TableRow>\n              }\n              body={\n                doctors.filtered.length <= 0 ? (\n                  <TableRow key={`claim-no-record`} hover role='checkbox' tabIndex={-1}>\n                    <TableCell id={`no-record`} colSpan={5}>\n                      <div className={`${classes.cell} ${classes.center}`}>\n                        <span>No Records</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  doctors.filtered.map((row, index) => (\n                    <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n                      <TableCell id={`doctor-id-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.id}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-name-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{[row.name.first, row.name.middle, row.name.last].join(' ')}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-specialization-${index}`}>\n                        <div className={classes.cell}>\n                          <span>\n                            {[\n                              row.specialization.main,\n                              row.specialization.major,\n                              row.specialization.sub,\n                              row.specialization.other\n                            ]\n                              .filter(Boolean)\n                              .join(', ')}\n                          </span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-schedule-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.schedule}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell id={`doctor-remarks-${index}`}>\n                        <div className={classes.cell}>\n                          <span>{row.remarks}</span>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )\n              }\n              pagination\n              count={doctors.count}\n              page={doctors.page}\n              limit={doctors.limit}\n              rowsPerPageOptions={doctors.rowsPerPageOptions}\n              onChange={args => handleOnPaginate('doctors', args)}\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","function extractLoa (data) {\n  return data.map(item => {\n    const init = {\n      claim_number: item.claim_number ? item.claim_number : '',\n      __type:\n        item.ticket_type === 'Outpatient Procedure'\n          ? 'UtilizationOutPatientProcedure'\n          : item.ticket_type === 'Inpatient'\n            ? 'UtilizationInPatient'\n            : item.ticket_type === 'Consultation'\n              ? 'UtilizationOutPatientConsultation'\n              : item.ticket_type === 'Emergency Room'\n                ? 'UtilizationEmergency'\n                : 'UtilizationReimbursemt',\n      type: item.type ? item.type : 'IBNR',\n      grand_total: item.total_amount ? item.total_amount : 0,\n      diagnosis: item.diagnoses ? item.diagnoses : [],\n      doctors: item.professional_fees\n        ? item.professional_fees.map((doctor, index) => ({\n          name: doctor.doctor_name,\n          specialization: doctor.specialization,\n          id: `${index}`\n        }))\n        : [],\n      date_admitted: item.date_issued ? item.date_issued : '',\n      procedures: item.procedures ? item.procedures : [],\n      professional_fees: item.professional_fees ? item.professional_fees : []\n    }\n    return {\n      ...item,\n      __type: init.__type,\n      claim_no: init.claim_number,\n      diagnosis: init.diagnosis,\n      grand_total: init.grand_total,\n      session: 1,\n      date_admitted: init.date_admitted,\n      type: init.type,\n      doctors: init.doctors,\n      procedures: init.procedures,\n      professional_fees: init.professional_fees\n    }\n  })\n}\n\nfunction setDoctors (data) {\n  return data.map(item => {\n    let newDoctor = [{ id: item.partner_doctor_id, name: item.partner_doctor_name }]\n    let _doctors = [...item.doctors]\n    if (typeof newDoctor[0].id !== 'undefined') {\n      _doctors = [..._doctors, ...newDoctor]\n    }\n\n    return {\n      ...item,\n      doctors: _doctors\n    }\n  })\n}\n\nexport { extractLoa, setDoctors }\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n// import TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Typography from '@material-ui/core/Typography'\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Services\nimport IcdCptStorageServices from 'Services/Storage/IcdCptStorageServices'\nimport { extractLoa, setDoctors } from './helper'\nimport lodash from 'lodash'\n\n// Styles\nimport classes from './Utilization.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setLimitType, resetLimitType } from '../../Store/actions'\n\nconst headCells = [\n  { name: 'Claim ID', sortField: 'claim_number', search: true },\n  { name: 'Diagnosis', sortField: 'diagnosis', search: true },\n  { name: 'Procedure', sortField: 'procedure', search: true },\n  { name: 'Provider', sortField: 'provider', search: true },\n  { name: 'Amount', sortField: 'amount', search: true },\n  { name: 'Session', sortField: 'session', search: true },\n  { name: 'Date', sortField: 'date', search: true },\n  { name: 'Type', sortField: 'type', search: true },\n  { name: 'Status', sortField: 'status', search: true }\n]\n\nconst randomRange = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport default function Utilization (props) {\n  const dispatch = useDispatch()\n  const title = useSelector(state => state.title)\n\n  const { fetchService, diagnosis, member = {}, memberBenefitLimit = {}, utilizationLoa = {} } = props\n  const [list, setList] = React.useState({\n    rows: [],\n    alter: []\n  })\n\n  const [filters, setFilters] = React.useState({})\n  const [allFilters, setAllFilters] = React.useState({})\n  const [filteredRows, setFilteredRows] = React.useState({\n    data: list.rows,\n    orderBy: '',\n    order: 'desc',\n    category: 'all',\n    search: '',\n    count: 0,\n    page: 1,\n    limit: 10,\n    rowsPerPageOptions: [10, 15, 20]\n  })\n\n  const [graph, setGraph] = React.useState({\n    utilized: 0,\n    ibnr: 0,\n    total: 0\n  })\n\n  React.useEffect(() => {\n    if (member) {\n      let type\n      let limit\n\n      if (!memberBenefitLimit.length <= 0) {\n        type = memberBenefitLimit[0].type\n        limit = memberBenefitLimit[0].limit\n      }\n\n      if (type === 'ABL') {\n        dispatch(setLimitType('Annual Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        fetchService({\n          member_account_no: member.member_id,\n          type: '',\n          icd_code: ''\n        }).then(res => {\n          const { data } = res.data\n\n          let _utilizationLoa = extractLoa(utilizationLoa)\n\n          let list = setDoctors(_utilizationLoa.concat(data))\n\n          setList(state => ({ ...state, rows: list, alter: list }))\n          setFilteredRows(state => ({ ...state, count: list.length, data: list.slice(0, state.limit) }))\n\n          let ibnr = 0\n          let utilized = 0\n\n          _utilizationLoa.map(item => (ibnr += item.total_amount))\n          data.map(item => (utilized += item.grand_total))\n\n          setGraph(state => ({\n            ...state,\n            ibnr,\n            utilized\n          }))\n        })\n      } else if (type === 'MBL') {\n        dispatch(setLimitType('Maximum Benefit Limit'))\n\n        setGraph(state => ({\n          ...state,\n          total: limit || randomRange\n        }))\n\n        let primary = diagnosis.filter(icd => icd.primary === true)[0] || {\n          code: '',\n          description: '',\n          category_code: ''\n        }\n\n        IcdCptStorageServices.lookups({\n          on: 'icd-10',\n          params: { query: primary.code, by: 'code' }\n        }).then(res => {\n          const { data } = res.data\n          const { category_code } = data[0] || []\n          primary.category_code = category_code\n\n          fetchService({\n            member_account_no: member.member_id,\n            type: 'mbl',\n            icd_code: primary.category_code\n          }).then(res => {\n            const { data } = res.data\n\n            // ICD Screening\n            let _utilizationLoa = utilizationLoa.filter(item => {\n              if (item.primary_icd10_code) {\n                return item.primary_icd10_code.startsWith(primary.category_code)\n              }\n            })\n\n            // extractation of needed fields\n            _utilizationLoa = extractLoa(_utilizationLoa)\n            let list = setDoctors(_utilizationLoa.concat(data))\n\n            setList(state => ({ ...state, rows: list, alter: list }))\n            setFilteredRows(state => ({ ...state, count: list.length, data: list.slice(0, state.limit) }))\n\n            let ibnr = 0\n            let utilized = 0\n\n            _utilizationLoa.map(item => (ibnr += item.total_amount))\n            data.map(item => (utilized += item.grand_total))\n\n            setGraph(state => ({\n              ...state,\n              ibnr,\n              utilized\n            }))\n          })\n        })\n      }\n    } else {\n      dispatch(setLimitType('Member Not Found'))\n    }\n  }, [member, memberBenefitLimit, diagnosis])\n\n  React.useEffect(() => {\n    dispatch(resetLimitType())\n  }, [])\n\n  React.useEffect(() => {\n    let rows = allFilter(list.rows, allFilters)\n    rows = columnFilter(rows, filters)\n    // rows = lodash.sortBy(rows, 'claim_no')\n    setList(state => ({ ...state, alter: rows }))\n    setFilteredRows(state => ({\n      ...state,\n      page: 1,\n      count: rows.length,\n      data: Object.keys(filters).length !== 0 ? lodash.chunk(rows, state.limit)[0] : lodash.take(rows, state.limit)\n    }))\n  }, [filters, allFilters])\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = args => {\n    const { event, field } = args\n    const search = event.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        if (field !== 'all') setFilters(state => ({ ...state, [field]: search }))\n        if (field === 'all') setAllFilters({ [field]: search })\n      }, 500)\n    )\n  }\n\n  const compare = (list, find, comparer = includesAny, fields = []) => {\n    if (Array.isArray(list)) {\n      return list.some(item => {\n        for (const field of fields) {\n          if (comparer(item[field], find)) return true\n        }\n      })\n    } else {\n      if (comparer(list, find)) return true\n    }\n    return false\n  }\n\n  const includesAny = (s1 = '', s2 = '') => {\n    return s1.toLowerCase().includes(s2.toLowerCase())\n  }\n\n  const allFilter = (rows, filters) => {\n    let filteredRows = rows\n    return filteredRows.filter(row => {\n      if (includesAny(row.claim_no, filters.all)) return true\n\n      if (includesAny(row.partner_name, filters.all)) return true\n\n      if (DateFormatter(row.date_admitted) === filters.all) return true\n\n      if (includesAny(row.type, filters.all)) return true\n      // temporary\n      if (includesAny(row.status === 'Open' ? row.status : 'Approved', filters.all)) return true\n\n      if (row.grand_total === parseFloat(filters.all)) return true\n\n      if (row.session === parseFloat(filters.all)) return true\n\n      // console.log(compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis']))\n      if (row.__type === 'UtilizationInPatient') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (row.procedures) {\n            if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientProcedure') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (row.procedures) {\n            if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientConsultation') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n      } else if (row.__type === 'UtilizationEmergency') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n        }\n      } else if (row.__type === 'UtilizationReimbursement') {\n        if (row.doctors) {\n          if (compare(row.doctors, filters.all, includesAny, ['id', 'name'])) return true\n        }\n\n        if (row.diagnosis) {\n          if (compare(row.diagnosis, filters.all, includesAny, ['icd10_code', 'diagnosis'])) return true\n        }\n\n        if (row.procedures) {\n          if (compare(row.procedures, filters.all, includesAny, ['cpt_code', 'procedure_name'])) return true\n        }\n      }\n    })\n  }\n\n  const columnFilter = (rows, filters) => {\n    // hard coded ugly static search\n    // TODO refactor for dynamic deep comparison\n    let filteredRows = rows\n    for (const filter in filters) if (filters[filter] === '') delete filters[filter]\n    return filteredRows.filter(row => {\n      if (!includesAny(row.claim_no, filters.claim_number)) return false\n\n      // if (!includesAny(row.partner_name, filters.provider)) return false\n\n      if (filters.date && DateFormatter(row.date_admitted) !== filters.date) return false\n\n      if (!includesAny(row.type, filters.type)) return false\n      // temporary\n      if (!includesAny(row.status === 'Open' ? row.status : 'Approved', filters.status)) return false\n\n      if (filters.amount && row.grand_total !== parseFloat(filters.amount)) return false\n\n      if (filters.session && row.session !== parseFloat(filters.session)) return false\n\n      if (row.__type === 'UtilizationInPatient') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientProcedure') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationOutPatientConsultation') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationEmergency') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      } else if (row.__type === 'UtilizationReimbursement') {\n        if (filters.provider) {\n          if (row.doctors || row.partner_name) {\n            if (\n              !compare(row.doctors, filters.provider, includesAny, ['id', 'name']) &&\n              !includesAny(row.partner_name, filters.provider)\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (filters.diagnosis) {\n          if (row.diagnosis) {\n            if (!compare(row.diagnosis, filters.diagnosis, includesAny, ['icd10_code', 'diagnosis'])) return false\n          }\n        }\n\n        if (filters.procedure) {\n          if (row.procedures) {\n            if (!compare(row.procedures, filters.procedure, includesAny, ['cpt_code', 'procedure_name'])) return false\n          }\n        }\n      }\n      return true\n    })\n  }\n\n  // TODO\n  // THIS CAN BE BETTER\n  const handleOnPaginate = args => {\n    if (args && args.limit && args.page) {\n      setList(state => ({ ...state, limit: args.limit }))\n      setFilteredRows(state => ({\n        ...state,\n        count: list.alter.length,\n        page: args.page,\n        limit: args.limit,\n        data: lodash.take(list.alter, args.limit)\n      }))\n    } else if (args && args.page) {\n      if (list.alter.length === list.rows.length) {\n        return setFilteredRows(state => ({\n          ...state,\n          page: args.page,\n          data: lodash.chunk(list.rows, state.limit)[args.page - 1]\n        }))\n      }\n      setFilteredRows(state => ({\n        ...state,\n        page: args.page,\n        data: lodash.chunk(list.alter, state.limit)[args.page - 1]\n      }))\n    }\n  }\n\n  const renderRows = ({ rows = [] }) => {\n    return rows.map((row, index) => (\n      <TableRow key={`claim-${index}`} hover role='checkbox' tabIndex={-1}>\n        <TableCell>\n          <div className={classes.cell}>\n            <span>{row.claim_no}</span>\n            <span className={classes.label}>SWIPE</span>\n            <span>YES</span>\n          </div>\n        </TableCell>\n        <TableCell>\n          {row.diagnosis.map((row, index) => (\n            <div key={`icd-${index}`} className={classes.cell}>\n              <span>{row.diagnosis}</span>\n              <span className={classes.label}>ICD 10 CODE</span>\n              <span>{row.icd10_code}</span>\n            </div>\n          ))}\n        </TableCell>\n\n        <TableCell>\n          <div className={classes.cell}>\n            {row.procedures.map((row, index) => (\n              <div key={`procedure-${index}`} className={classes.cell}>\n                <span>{row.procedure_name}</span>\n                <span className={classes.label}>CPT CODE</span>\n                <span>{row.cpt_code}</span>\n              </div>\n            ))}\n          </div>\n        </TableCell>\n\n        <TableCell>\n          <div className={classes.cell}>\n            <div className={classes.cell}>\n              <span>{row.partner_name}</span>\n              <span className={classes.label}>MEDICAL DOCTOR</span>\n              {row.doctors.map((row, index) => (\n                <span key={`doctor-${index}`}>{`${row.name},`}</span>\n              ))}\n            </div>\n          </div>\n        </TableCell>\n        <TableCell align='right'>\n          <span>{CurrencyFormatter(row.grand_total)}</span>\n        </TableCell>\n        <TableCell align='right'>\n          <span>{row.session}</span>\n        </TableCell>\n        <TableCell>\n          <span>{DateFormatter(row.date_admitted)}</span>\n        </TableCell>\n        <TableCell>\n          <span>{row.type}</span>\n        </TableCell>\n        <TableCell align='center'>\n          <span>{row.status === 'Open' ? 'Open' : 'Approved'}</span>\n        </TableCell>\n        <TableCell align='center'>\n          <FontAwesomeIcon icon='file-alt' size='lg' className={classes.icon} />\n        </TableCell>\n      </TableRow>\n    ))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <div className={classes.graph}>\n          <div className={classes['anual-benefit']}>\n            <Typography variant='button'>{title}</Typography>\n            <Typography variant='h6'>{`PHP ${CurrencyFormatter(graph.total)}`}</Typography>\n          </div>\n\n          <div className={classes['line-graph']}>\n            <div className={classes.container}>\n              <div className={classes['line-container']}>\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.utilized / graph.total) * 100}%`, background: '#4fb083' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{ width: `${(graph.ibnr / graph.total) * 100}%`, background: '#2a2b6e' }}\n                />\n                <span\n                  className={classes.item}\n                  style={{\n                    width: `${\n                      ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100 < 0\n                        ? 0\n                        : ((graph.total - graph.ibnr - graph.utilized) / graph.total) * 100\n                    }%`,\n                    background: '#f8b439'\n                  }}\n                />\n              </div>\n              <div className={classes['line-details']}>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#4fb083' }} />\n                    <Typography variant='button'>UTILIZED</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#4fb083' }}>\n                    {`PHP ${CurrencyFormatter(graph.utilized)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#2a2b6e' }} />\n                    <Typography variant='button'>IBNR</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#2a2b6e' }}>\n                    {`PHP ${CurrencyFormatter(graph.ibnr)}`}\n                  </Typography>\n                </div>\n                <div className={classes.item}>\n                  <div className={classes.label}>\n                    <span className={classes.color} style={{ background: '#f8b439' }} />\n                    <Typography variant='button'>AVAILABLE</Typography>\n                  </div>\n                  <Typography variant='button' style={{ color: '#f8b439' }}>\n                    {`PHP ${CurrencyFormatter(graph.total - graph.ibnr - graph.utilized)}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search-utilization'\n            onChange={event => handleSearchChange({ event, field: 'all' })}\n            placeholder='Search'\n          />\n        </div>\n      </div>\n      <div className={classes.table}>\n        <Table\n          TableContainerProps={{ style: { maxHeight: '500px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  {headCell.name}\n                  {headCell.search && (\n                    <TextField\n                      className={`${classes.search}`}\n                      onChange={event => handleSearchChange({ event, field: headCell.sortField })}\n                    />\n                  )}\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={renderRows({ rows: filteredRows.data })}\n          pagination\n          count={filteredRows.count}\n          page={filteredRows.page}\n          limit={filteredRows.limit}\n          rowsPerPageOptions={filteredRows.rowsPerPageOptions}\n          onChange={args => handleOnPaginate(args)}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n// import file from './INTELLICARE SPECIMEN CONTRACT_2017.pdf'\n// Styles\nimport classes from './PdfViewer.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nexport default function PdfViewer (props) {\n  const { file, fileName, initialPageNumber = 1, initialScale = 1, download = () => {}, print = () => {} } = props\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [numPages, setNumPages] = React.useState(0)\n\n  const _file = file\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <Typography className={classes['file-name']} align='left'>\n          {fileName}\n        </Typography>\n        <Typography className={classes['page-number']}>Page: {pageNumber}</Typography>\n        <Tooltip title='Previous Page' className={classes.control}>\n          <span>\n            <IconButton\n              disabled={numPages <= 1}\n              onClick={() => setPageNumber(pageNumber > 1 ? pageNumber - 1 : pageNumber)}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-left' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Next Page' className={classes.control}>\n          <span>\n            <IconButton\n              disabled={numPages <= 1}\n              onClick={() => setPageNumber(pageNumber < numPages ? pageNumber + 1 : pageNumber)}\n            >\n              <FontAwesomeIcon icon='arrow-alt-circle-right' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom in' className={classes.control}>\n          <span>\n            <IconButton onClick={() => setScale(scale + 0.2)}>\n              <FontAwesomeIcon icon='search-plus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <span>\n            <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n              <FontAwesomeIcon icon='search-minus' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Print' className={classes.control}>\n          <span>\n            <IconButton onClick={print}>\n              <FontAwesomeIcon icon='print' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n        <Tooltip title='Download' className={classes.control}>\n          <span>\n            <IconButton onClick={download}>\n              <FontAwesomeIcon icon='save' className={classes.icon} />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n\n      <div className={classes.pdf}>\n        <Document\n          file={file}\n          onLoadSuccess={document => {\n            setNumPages(document.numPages)\n          }}\n        >\n          <Page pageNumber={pageNumber} scale={scale} />\n        </Document>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Component\nimport PdfViewer from 'SharedComponents/PdfViewer/PdfViewer'\n// Styles\n// import classes from './Contract.module.scss'\n\nexport default function Contract (props) {\n  // Service\n  const { fetchService } = props\n  // Variables\n  const { fileName } = props\n  return <PdfViewer file='' fileName='INTELLICARE SPECIMEN CONTRACT_2017.pdf' />\n}\n","import React from 'react'\n\n// Components\nimport ChatBox from '../ChatBox/ChatBox'\n\nimport { CustomTabs, CustomTab } from 'SharedComponents/CustomTabs/CustomTabs'\n\n// Compare Tabs\nimport Benefits from '../Benefits/Benefits'\nimport Exclusions from '../Exclusions/Exclusions'\nimport PartnerNetwork from '../PartnerNetwork/PartnerNetwork'\nimport Utilization from '../Utilization/Utilization'\nimport Contract from '../Contract/Contract'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\n// Store\nimport { useSelector } from 'react-redux'\n\nexport default function RightPanelTabs (props) {\n  // Events\n  const { onReturnEscalate } = props\n  // Variables\n  const { claim, permissions, contractType, member, client, utilizationLoa } = props\n  // Services\n  const { getUtilizations, getPartners, getDoctors } = props\n\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  return (\n    <CustomTabs id='medical-partner-tabs' defaultIndex={0}>\n      {SafeAccess(permissions, ['tabs', 'benefits', 'read']) && (\n        <CustomTab id='benifits-tab' label='BENEFITS'>\n          <Benefits contractType={contractType} member={member} client={client} />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'exclusions', 'read']) && (\n        <CustomTab id='-exclusions-tab' label='EXCLUSIONS'>\n          <Exclusions contractType={contractType} member={member} client={client} />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'partner', 'read']) && (\n        <CustomTab id='partner-network-tab' label='PARTNER NETWORK'>\n          <PartnerNetwork\n            partnerService={getPartners}\n            doctorService={getDoctors}\n            memberAccountNumber={claim.member_account_number}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'utilization', 'read']) && (\n        <CustomTab id='utilization-tab' label='UTILIZATION'>\n          <Utilization\n            fetchService={getUtilizations}\n            utilizationLoa={utilizationLoa}\n            member={member.info}\n            memberBenefitLimit={member.benefit_limit}\n            memberAccountNumber={claim.member_account_number}\n            diagnosis={claim.diagnosis || []}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'contact', 'read']) && (\n        <CustomTab id='contract-tab' label='CONTRACT'>\n          <Contract />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'comments', 'read']) && (\n        <CustomTab id='comment-tab' label='COMMENTS'>\n          <ChatBox\n            messages={escalations.messages}\n            title='Escalation Logs'\n            onSubmitComment={comment => onReturnEscalate({ comment: comment, goBack: true })}\n            permissions={permissions.tabs.comments}\n          />\n        </CustomTab>\n      )}\n\n      {SafeAccess(permissions, ['tabs', 'notes', 'read']) && (\n        <CustomTab id='notes-tab' label='NOTES'>\n          <ChatBox messages={recon.messages} permissions={permissions.tabs.notes} />\n        </CustomTab>\n      )}\n    </CustomTabs>\n  )\n}\n","import Joi from '@hapi/joi'\n\nimport getValidators from './getValidators'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst validate = fields => data => {\n  const schema = Joi.object(getValidators(fields)).options({ abortEarly: false })\n  return ExtractValidationResult(schema.validate(data))\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\nexport default function (selected_fields) {\n  const available_fields = {\n    approval_code: Joi.string()\n      .trim()\n      .label('Approval Code')\n      .required(),\n    loa_number: Joi.string()\n      .trim()\n      .label('LOA No.')\n      .required(),\n\n    // TODO Claim Source here\n\n    member_account_number: Joi.string()\n      .trim()\n      .label('Member Account No.')\n      .messages({ 'string.empty': `\"Member Account No.\" is required.` })\n      .required(),\n    member_last_name: Joi.string()\n      .trim()\n      .label('Member Last Name')\n      .messages({ 'string.empty': `\"Member Last Name\" is required.` })\n      .required(),\n    member_first_name: Joi.string()\n      .trim()\n      .label('Member First Name')\n      .messages({ 'string.empty': `\"Member First Name\" is required.` })\n      .required(),\n    member_middle_name: Joi.string()\n      .trim()\n      .label('Member Middle Name')\n      .when('flag', {\n        is: true,\n        then: Joi.required(),\n        otherwise: Joi.allow('', null)\n      }),\n\n    // TODO addt'l dental validation\n    flag: Joi.boolean().default(false),\n\n    // TODO Client Account Number*\n    // TODO Client Account Name*\n\n    customer_account_number: Joi.string()\n      .label('Customer (Company) Account Number')\n      .required(),\n    company_name: Joi.string()\n      .label('Company Name')\n      .required(),\n    facility_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    facility_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Facility) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Facility) Name\" is required.` })\n      .required(),\n    doctor_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID')\n      .messages({ 'string.empty': `\"Medical Partner ID\" is required.` })\n      .required(),\n    doctor_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Doctor) Name')\n      .messages({ 'string.empty': `\"Medical Partner (Doctor) Name\" is required.` })\n      .required(),\n    anesthesiologist_id: Joi.string()\n      .trim()\n      .label('Medical Partner ID (Anesthesiologist)')\n      .allow('', null),\n    anesthesiologist_name: Joi.string()\n      .trim()\n      .label('Medical Partner (Anesthesiologist) Name')\n      .allow('', null),\n    date_from: Joi.date()\n      .label('Admission Date (From)')\n      .required()\n      .max('now'),\n    date_to: Joi.date()\n      .label('Admission Date (To)')\n      .required()\n      .min(Joi.ref('date_from'))\n      .max('now')\n      .messages({\n        'date.min': `\"Admission Date (To)\" should be on or after \"Admission Date (From)\"`\n      }),\n    contract_year_from: Joi.date().label('Contract Year (From)'),\n    contract_year_to: Joi.date().label('Contract Year (To)'),\n    department: Joi.string()\n      .trim()\n      .label('Department')\n      .allow('', null),\n    recommendation: Joi.string()\n      .trim()\n      .label('Recommendation')\n      .allow('', null),\n    room_type: Joi.string()\n      .trim()\n      .label('Room Type')\n      .messages({ 'string.empty': `\"Room Type\" is required.` })\n      .required(),\n    room_rate: Joi.number()\n      .label('Room Rate')\n      .messages({ 'string.empty': `\"Room Rate\" is required.` })\n      .required(),\n    pro_id: Joi.string()\n      .trim()\n      .label('PRO ID')\n      .messages({ 'string.empty': `\"PRO ID\" is required.` })\n      .required(),\n    pro_name: Joi.string()\n      .trim()\n      .label('PRO Name')\n      .messages({ 'string.empty': `\"PRO Name\" is required.` })\n      .required(),\n    claim_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub Type')\n      .allow('', null),\n    claim_sub_sub_type: Joi.string()\n      .trim()\n      .label('Claim Sub-subType')\n      .allow('', null),\n    with_corporate_guarantee: Joi.string()\n      .trim()\n      .label('Corporate Guaranty')\n      .allow('', null),\n    medicine_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Medicine Category\" is required.` })\n      .required(),\n    reimbursement_type: Joi.string()\n      .trim()\n      .label('Reimbursement Type')\n      .messages({ 'string.empty': `\"Reimbursement Type\" is required.` })\n      .required(),\n    reimbursement_category: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Reimbursement Category\" is required.` })\n      .allow('', null),\n    official_receipt_number: Joi.string()\n      .trim()\n      .label('Medicine Category')\n      .messages({ 'string.empty': `\"Official Receipt Number\" is required.` })\n      .required(),\n    loa_notes: Joi.string()\n      .trim()\n      .allow('', null)\n  }\n\n  const result = {}\n  for (const field of selected_fields) {\n    result[field] = available_fields[field]\n  }\n\n  if (result['date_from'] && !result['date_to']) {\n    result['date_from'] = Joi.date()\n      .label('Date of Service')\n      .required()\n      .max('now')\n  }\n\n  return result\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  code: Joi.string()\n    .trim()\n    .label('ICD10 Code')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Code\" is required.`\n    }),\n  description: Joi.string()\n    .trim()\n    .label('ICD10 Description')\n    .required()\n    .messages({\n      'string.empty': `\"ICD10 Description\" is required.`\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => {\n  const items = []\n  let hasPrimary = false\n  let itemError = true\n  for (let d of data) {\n    itemError = false\n    if (d.primary) hasPrimary = true\n    const { error } = ExtractValidationResult(schema.validate({ code: d.code, description: d.description }))\n\n    items.push(error || {})\n  }\n\n  let list = ''\n\n  if (data.length && !hasPrimary) {\n    list = 'Diagnosis should have at least one primary item'\n    itemError = true\n  } else if (!data.length) list = 'Diagnosis should have at least one item'\n\n  for (let i of items) {\n    if (i.code) {\n      itemError = true\n      break\n    }\n  }\n\n  return {\n    items,\n    list,\n    error: itemError\n  }\n}\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  name: Joi.string()\n    .trim()\n    .label('Item Name')\n    .required(),\n  item_code: Joi.string()\n    .trim()\n    .label('Item Code')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  doctor_id: Joi.string()\n    .trim()\n    .label('Medical Partner ID')\n    .required(),\n  doctor_name: Joi.string()\n    .trim()\n    .label('Doctor Name')\n    .required(),\n  specialization: Joi.string()\n    .trim()\n    .label('Specialization')\n    .required(),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  description: Joi.string()\n    .trim()\n    .label('Description')\n    .required(),\n  code: Joi.string()\n    .trim()\n    .label('Code')\n    .required(),\n  tooth_number: Joi.string()\n    .label('Tooth Number')\n    .when('flag', {\n      is: true,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    })\n    .messages({\n      'string.empty': `\"Tooth Number\" is required.`\n    }),\n  gross_amount: Joi.number()\n    .label('Gross Amount')\n    .required(),\n  vat_amount: Joi.number()\n    .label('Vat Amount')\n    .max(Joi.ref('gross_amount'))\n    .message('\"VAT Amount\" must be equal or less than \"Gross Amount\"')\n    .required(),\n  amount_paid_by_member: Joi.number()\n    .label('Amount Paid By Member')\n    .required(),\n  philhealth_amount_paid: Joi.number()\n    .label('PhilHealth Amount Paid')\n    .required(),\n  philhealth_remarks: Joi.string()\n    .trim()\n    .label('PhilHealth Remarks')\n    .allow('', null),\n  amount_not_covered: Joi.number()\n    .label('Amount Not Covered')\n    .required(),\n  reason: Joi.string()\n    .trim()\n    .label('Reason')\n    .when('amount_not_covered', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  amount_due_from_member: Joi.number()\n    .label('Amount Due from Member')\n    .required(),\n  reason_for_charging_member: Joi.string()\n    .trim()\n    .label('Reason For Charging Member')\n    .when('amount_due_from_member', {\n      not: 0,\n      then: Joi.required(),\n      otherwise: Joi.allow('', null)\n    }),\n  flag: Joi.boolean().default(false)\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimInPatient.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimInPatient (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      room_type: '',\n      room_rate: 0,\n      pro_id: '',\n      pro_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const { data } = res.data\n      const rooms = data[0]\n        ? data[0].rooms.map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n        : []\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_type\n                    }}\n                  >\n                    <DropDown\n                      id='room-type'\n                      required\n                      label='Room Type'\n                      items={dropDown.rooms}\n                      value={claim.room_type}\n                      onChange={handleOnChangeRoomType}\n                      error={error.room_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-room-rate'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.room_rate\n                    }}\n                  >\n                    <TextFieldCurrency\n                      id='room-rate'\n                      required\n                      label='Room Rate'\n                      value={claim.room_rate}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'room_rate'\n                          })\n                        )\n                      }}\n                      error={error.room_rate}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientProcedure.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimOutPatientProcedure (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      department: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          department: data.department,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-department'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.department\n                    }}\n                  >\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.department}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={suggestions.anesthesiologist.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimOutPatientConsultation.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimOutPatientConsultation (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor,\n    onChangeAnaesthesiologist\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      recommendation: '',\n      anesthesiologist_id: '',\n      anesthesiologist_name: '',\n      claim_sub_type: '',\n      claim_sub_sub_type: '',\n      with_corporate_guarantee: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          recommendation: data.recommendation,\n          anesthesiologist_id: data.anesthesiologist.id,\n          anesthesiologist_name: data.anesthesiologist.name,\n          claim_sub_type: data.claim_sub.type,\n          claim_sub_sub_type: data.claim_sub.sub_type,\n          with_corporate_guarantee: data.with_corporate_guarantee,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-facility-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-facility-id'\n                      required\n                      label='Medical Facility ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-recommendation'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.recommendation\n                    }}\n                  >\n                    <TextField\n                      id='recommendation'\n                      label='Recommendation'\n                      value={claim.recommendation}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'recommendation'\n                          })\n                        )\n                      }\n                      error={error.recommendation}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-id'\n                      label='Medical Partner ID (Anesthesiologist)'\n                      value={claim.anesthesiologist_id}\n                      suggestions={suggestions.anesthesiologist.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_id',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-anesthesiologist-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.anesthesiologist_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='anesthesiologist-name'\n                      label='Medical Partner (Anesthesiologist) Name'\n                      value={claim.anesthesiologist_name}\n                      suggestions={[]}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeAnaesthesiologist({\n                          value,\n                          field: 'anesthesiologist_name',\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.anesthesiologist_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-type'\n                      required\n                      label='Claim Sub Type'\n                      items={[\n                        {\n                          text: 'Medical (diagnostic, lab)',\n                          value: 'Medical (diagnostic, lab)'\n                        },\n                        { text: 'Surgical', value: 'Surgical' },\n                        { text: 'Treatment', value: 'Treatment' },\n                        { text: 'Therapy', value: 'Therapy' }\n                      ]}\n                      value={claim.claim_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-claims-sub-sub-type'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.claim_sub_sub_type\n                    }}\n                  >\n                    <DropDown\n                      id='claims-sub-sub-type'\n                      label='Claim Sub-subType'\n                      items={[\n                        { text: 'Physical', value: 'Physical' },\n                        { text: 'Speech', value: 'Speech' },\n                        { text: 'Occupational', value: 'Occupational' }\n                      ]}\n                      value={claim.claim_sub_sub_type}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'claim_sub_sub_type'\n                          })\n                        )\n                      }\n                      error={error.claim_sub_sub_type}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-with-corporate-guaranty'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.with_corporate_guarantee\n                    }}\n                  >\n                    <TextField\n                      id='with-corporate-guaranty'\n                      label='With Corporate Guaranty?'\n                      value={claim.with_corporate_guarantee}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'with_corporate_guarantee'\n                          })\n                        )\n                      }\n                      error={error.with_corporate_guarantee}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimEmergency.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimEmergency (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangePro,\n    onChangeDoctor\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      pro_id: '',\n      pro_name: '',\n      diagnosis: [],\n      loa_notes: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_name: data.doctor.name,\n          doctor_id: data.doctor.id,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name,\n          diagnosis: data.diagnosis,\n          loa_notes: data.loa_notes,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-from'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_from\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-from'\n                      required\n                      label='Admission Date (From)'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: moment(event.toISOString())\n                              .startOf('day')\n                              .toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-admission-date-to'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='admission-date-to'\n                      required\n                      label='Admission Date (To)'\n                      value={claim.date_to}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                      }\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-pro-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.pro_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes['child-container']}>\n                <div className={classes['left-side']}>\n                  {permissions.diagnosis.read && (\n                    <DiagnosisList\n                      id='diagnosis-list'\n                      permissions={permissions.diagnosis}\n                      items={claim.diagnosis}\n                      error={error.diagnosis}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']}>\n                  <DiscrepancyBase\n                    id='dp-loa-notes'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.loa_notes\n                    }}\n                  >\n                    <TextField\n                      constainerStyle={{ width: 'unset', flex: 1, marginTop: '20px' }}\n                      multiline\n                      rows={3}\n                      id='loa-notes'\n                      label='LOA Notes'\n                      value={claim.loa_notes}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'loa_notes'\n                          })\n                        )\n                      }\n                      error={error.loa_notes}\n                      readOnly\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport Typography from '@material-ui/core/Typography'\n\n// Controller\nimport ConfigController from 'Controllers/ConfigController2'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimMedicineAllowance.module.scss'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimMedicineAllowance (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      customer_account_number: '',\n      company_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      facility_id: '',\n      facility_name: '',\n      loa_number: '',\n      medicine_category: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      professional_fees: [],\n      hospital_items: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          customer_account_number: data.customer_account_number,\n          company_name: data.company_name,\n          date_from: new Date(data.date.to).toISOString(),\n          date_to: new Date(data.date.to).toISOString(),\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          hospital_items: data.hospital_items || [],\n          loa_number: data.loa_number,\n          medicine_category: data.medicine_category,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          procedures: data.procedures || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n      ConfigController.getUserManagementData().then(res => {\n        dispatch(\n          setClaimBaseDetails({\n            value: new Date().toISOString(),\n            field: 'approved_date'\n          })\n        )\n        dispatch(\n          setClaimBaseDetails({\n            value: res.user_id,\n            field: 'approved_id'\n          })\n        )\n        dispatch(\n          setClaimBaseDetails({\n            value: `${res.first_name} ${res.last_name}`,\n            field: 'approved_name'\n          })\n        )\n      })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    const { diagnosis, ...fields } = allowedFields\n    for (let f in fields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(fields))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <div className={classes.root}>\n              <Paper className={classes['first-container']}>\n                <BaseDetails\n                  claim={claim}\n                  showCompany\n                  onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                  permissions={permissions.base}\n                />\n                <div className={classes.groups}>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-of-service'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='date-of-service'\n                        required\n                        label='Date of Service'\n                        value={claim.date_to}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }}\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-id'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_id\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-id'\n                        required\n                        label='Medical Partner ID'\n                        value={claim.facility_id}\n                        suggestions={suggestions.facility.id}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_id',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_id}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medical-partner-facility-name'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.facility_name\n                      }}\n                    >\n                      <AutoComplete\n                        id='medical-partner-facility-name'\n                        required\n                        label='Medical Partner (Facility) Name'\n                        value={claim.facility_name}\n                        suggestions={suggestions.facility.name}\n                        onChange={(value, isSuggestionClick) =>\n                          handleOnChangeFacility({\n                            field: 'facility_name',\n                            value,\n                            isSuggestionClick\n                          })\n                        }\n                        error={error.facility_name}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-medicine-category'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.medicine_category\n                      }}\n                    >\n                      <TextField\n                        id='medicine-category'\n                        label='Medicine Category'\n                        value={claim.medicine_category}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'medicine_category'\n                            })\n                          )\n                        }\n                        required\n                        error={error.medicine_category}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </div>\n              </Paper>\n\n              <div className={classes['tables-container']}>\n                <div className={classes['left-side']} id='left-side-panel'>\n                  {permissions.procedures.read && (\n                    <ProcedureList\n                      id='procedure'\n                      data={claim.procedures}\n                      doValidate={doValidateProcedure}\n                      permissions={permissions.procedures}\n                      showAmountPaidByMember={false}\n                      showPhilhealthField={false}\n                      showAmountNotCovered={false}\n                      showAmountDueFromMember={false}\n                    />\n                  )}\n                  {permissions.hospital_items.read && (\n                    <HospitalItemList\n                      id='hospital-item'\n                      data={claim.hospital_items}\n                      doValidate={doValidateHospitalItem}\n                      permissions={permissions.hospital_items}\n                      showAmountPaidByMember={false}\n                      showPhilhealthRemarks={false}\n                      showAmountNotCovered={false}\n                      showAmountDueFromMember={false}\n                    />\n                  )}\n                  {permissions.professional_fees.read && (\n                    <ProfessionalFeeList\n                      id='professional-fee'\n                      data={claim.professional_fees}\n                      doValidate={doValidateProfessionalFee}\n                      permissions={permissions.professional_fees}\n                    />\n                  )}\n                </div>\n                <div className={classes['right-side']} id='right-side-panel'>\n                  <div className={classes['wrapper']}>\n                    <div className={classes['sticky']}>\n                      <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className={classes['grand-total']}>\n                <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n              </div>\n\n              <ClaimFooter\n                getUsers={getUsers}\n                doValidate={doValidateAll}\n                doEscalate={onEscalate}\n                doReassign={onReassign}\n                doViewAnalysisSheet={onViewAnalysisSheet}\n                doViewLetterOfAdvice={onViewLetterOfAdvice}\n                doReject={onReject}\n                doApprove={onApprove}\n                doSave={onSave}\n                doCancel={onCancel}\n                permissions={permissions.footer}\n                grandTotal={grandTotal}\n                claimType={_type}\n                userManagementService={userManagementService}\n              />\n            </div>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimDental.module.scss'\n\n// Media\nimport Media from 'Constant/media'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimDental (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility,\n    onChangeDoctor\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n  const [flag, setFlag] = React.useState({ flag: true })\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      doctor_id: '',\n      doctor_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.dental_procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields, ...flag }))({ ...data, ...flag })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      tooth_number: details.tooth_number,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member,\n      flag: true\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n                isDental\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n              <div className={classes.groups}>\n                <div className={classes['chart']}>\n                  <img src={Media.dentalChart} alt='dental-chart' />\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                  isDental\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport Typography from '@material-ui/core/Typography'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ContractRange from 'SharedComponents/ContractRange/ContractRange'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimAPE.module.scss'\n\n// Validator\nimport MainValidator from '../../Validators/Claim'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nexport default function ClaimAPE (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {} } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [lineItemFields, setlineItemFields] = React.useState({})\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      member_account_number: '',\n      member_first_name: '',\n      member_middle_name: '',\n      member_last_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      date_to: new Date().toISOString(),\n      contract_year_from: '',\n      contract_year_to: ''\n    }\n\n    const _lineItemFields = {\n      procedures: [],\n      hospital_items: [],\n      professional_fees: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields(_allowedFields)\n      setlineItemFields(_lineItemFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      dispatch(\n        setClaimFields({\n          approval_code: data.approval_code,\n          loa_number: data.loa_number,\n          member_account_number: data.member.account_number,\n          member_first_name: data.member.first_name,\n          member_middle_name: data.member.middle_name,\n          member_last_name: data.member.last_name,\n          facility_id: data.facility.id,\n          facility_name: data.facility.name,\n          date_from: data.date.from,\n          date_to: data.date.to,\n          contract_year_from: data.contract_year.from,\n          contract_year_to: data.contract_year.to,\n          procedures: data.procedures || [],\n          hospital_items: data.hospital_items || [],\n          professional_fees: data.professional_fees || []\n        })\n      )\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    onChangeFacility(args)\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys({ ...allowedFields }))({ ...data })\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n          {permissions.base.read && (\n            <Paper className={classes['first-container']}>\n              <BaseDetails\n                claim={claim}\n                onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n                permissions={permissions.base}\n                handleMemberAccountNumber\n              />\n\n              <div className={classes.groups}>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.facility_id}\n                      suggestions={suggestions.facility.id}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-partner-facility-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.facility_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='medical-partner-facility-name'\n                      required\n                      label='Medical Partner (Facility) Name'\n                      value={claim.facility_name}\n                      suggestions={suggestions.facility.name}\n                      onChange={(value, isSuggestionClick) =>\n                        handleOnChangeFacility({\n                          field: 'facility_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.facility_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-date-of-service'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.date_to\n                    }}\n                  >\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_to}\n                      onChange={event => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_to'\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }}\n                      error={error.date_to}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n\n              <div className={classes.groups}>\n                <div className={`${classes['input']} ${classes['contract-range']}`}>\n                  <DiscrepancyBase\n                    id='contract-year'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.contract_year_from\n                    }}\n                  >\n                    <ContractRange\n                      id='contract-year'\n                      contract_year_from={claim.contract_year_from}\n                      contract_year_to={claim.contract_year_to}\n                      suggestions={suggestions.contract.years}\n                      onChange={({ from, to }) => {\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_from',\n                            value: from\n                          })\n                        )\n                        dispatch(\n                          setClaimBaseDetails({\n                            field: 'contract_year_to',\n                            value: to\n                          })\n                        )\n                      }}\n                      error={error.contract_year_from}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              </div>\n            </Paper>\n          )}\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={onReject}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","const InPatient = ['date_to', 'room_type', 'room_rate', 'pro_id', 'pro_name']\nconst other_fields = ['doctor_id', 'doctor_name', 'department']\n\nconst AdditionalFields = type => {\n  if (type === undefined) return {}\n\n  const additional_fields = type === 'InPatient' ? InPatient : other_fields\n\n  let result = {}\n\n  for (let field of additional_fields) result[field] = ''\n\n  return result\n}\n\nAdditionalFields.exist = (fields, field) => fields[field] !== undefined\n\nexport default AdditionalFields\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport BaseDetails from '../BaseDetails/BaseDetails'\nimport DiagnosisList from '../DiagnosisList/DiagnosisList'\nimport TextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport DatePicker from 'SharedComponents/DatePicker/DatePicker'\nimport DropDown from 'SharedComponents/DropDown/DropDown'\nimport AutoComplete from 'SharedComponents/AutoComplete/AutoComplete'\nimport ProcedureList from '../ProcedureList/ProcedureList'\nimport HospitalItemList from '../HospitalItemList/HospitalItemList'\nimport ProfessionalFeeList from '../ProfessionalFeeList/ProfessionalFeeList'\nimport ClaimFooter from '../ClaimFooter/ClaimFooter'\nimport DiscrepancyBase from '../DiscrepancyBase/DiscrepancyBase'\nimport DisapprovedLabel from '../DisapprovedLabel/DisapprovedLabel'\nimport RightPanelTabs from '../RightPanelTabs/RightPanelTabs'\nimport ReimbursementInfoComponent from '../../../Components/ReimbursementInfoComponent/ReimbursementInfoComponent'\n\n// Services\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Utilities\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './ClaimReimbursement.module.scss'\n\n// Controller\n// import ConfigController from 'Controllers/ConfigController2'\n\n// Validator\nimport MainValidator from './../../Validators/Claim'\nimport DiagnosisListValidator from '../DiagnosisList/DiagnosisListValidator'\nimport HospitalItemValidator from '../HospitalItemForm/HospitalItemValidator'\nimport ProfessionalFeeValidator from '../ProfessionalFeeForm/ProfessionalFeeValidator'\nimport ProcedureValidator from '../ProcedureForm/ProcedureValidator'\n\n// Store\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setClaimFields,\n  setClaimBaseDetails,\n  setClaimRoom,\n  setDropDown,\n  initDropDowns,\n  initSuggestions,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setError,\n  setRejectStatus\n} from '../../Store/actions'\n\nimport AdditionalFields from './AdditionalFields'\n\n// Libraries\nimport moment from 'moment'\n\nexport default function ClaimReimbursement (props) {\n  const dispatch = useDispatch()\n  // Events\n  const {\n    onEscalate,\n    onViewAnalysisSheet,\n    onViewLetterOfAdvice,\n    onChangeDoctor = () => {},\n    onReject,\n    onReassign,\n    onApprove,\n    onSave,\n    onCancel,\n    onChangeFacility\n  } = props\n  // Variables\n  const { claim, permissions, _type } = props\n  // Services\n  const { getClaimDetails, getUsers, userManagementService = () => {}, onChangePro } = props\n\n  const suggestions = useSelector(state => state.suggestions)\n  const dropDown = useSelector(state => state.dropDown)\n  const discrepancy = useSelector(state => state.discrepancy)\n  const error = useSelector(state => state.error)\n  const escalations = useSelector(state => state.escalations)\n  const recon = useSelector(state => state.recon)\n\n  const [hasError, setHasError] = React.useState(false)\n  //\n  const [batchNumber, setBatchNumber] = React.useState(null)\n  // const [openDialog, setOpenDialog] = React.useState(false)\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const [initialAllowedFields, setInitialAllowedFields] = React.useState({})\n  const [showReimbursementModal, setShowReimbursementModal] = React.useState(false)\n  //\n\n  const [grandTotal, setGrandTotal] = React.useState(0)\n\n  React.useEffect(() => {\n    console.log('fdsfd')\n    dispatch(initSuggestions())\n    dispatch(initDropDowns(['rooms']))\n    dispatch(initDropDowns(['reason']))\n    dispatch(initDropDowns(['reason-charging']))\n\n    getReason()\n\n    const _allowedFields = {\n      approval_code: '',\n      loa_number: '',\n      reimbursement_type: '',\n      member_account_number: '',\n      member_last_name: '',\n      member_first_name: '',\n      member_middle_name: '',\n      facility_id: '',\n      facility_name: '',\n      date_from: new Date().toISOString(),\n      medicine_category: '',\n      reimbursement_category: '',\n      official_receipt_number: ''\n    }\n\n    const _lineItemFields = {\n      diagnosis: [],\n      procedures: [],\n      hospital_items: [],\n      professional_fees: [],\n      reimbursement_info: []\n    }\n\n    setTimeout(() => {\n      setAllowedFields({ ..._allowedFields, ...AdditionalFields(undefined) })\n      setInitialAllowedFields(_allowedFields)\n      dispatch(setClaimFields({ ..._allowedFields, ..._lineItemFields }))\n    }, 10)\n\n    getClaimDetails(data => {\n      getRooms({ value: data.facility.id, by: 'id' })\n\n      let _claim = {\n        approval_code: data.approval_code,\n        loa_number: data.loa_number,\n        reimbursement_type: data.reimbursement_details.type,\n        member_account_number: data.member.account_number,\n        member_last_name: data.member.last_name,\n        member_first_name: data.member.first_name,\n        member_middle_name: data.member.middle_name,\n        facility_id: data.facility.id,\n        facility_name: data.facility.name,\n        date_from: data.date.from,\n        medicine_category: data.medicine_category,\n        reimbursement_category: data.reimbursement_details.category,\n        official_receipt_number: data.reimbursement_details.official_receipt_number,\n        diagnosis: data.diagnosis || [],\n        procedures: data.procedures || [],\n        professional_fees: data.professional_fees || [],\n        hospital_items: data.hospital_items || [],\n        reimbursement_info: data.reimbursement_info || [],\n        batch_number: data.batch_number\n      }\n\n      if (data.reimbursement_details.type === 'InPatient') {\n        _claim = {\n          ..._claim,\n          date_to: data.date.to,\n          room_type: data.room.type,\n          room_rate: data.room.rate || 0,\n          pro_id: data.pro.id,\n          pro_name: data.pro.name\n        }\n      } else {\n        _claim = {\n          ..._claim,\n          doctor_id: data.doctor.id,\n          doctor_name: data.doctor.name,\n          department: data.department\n        }\n      }\n\n      dispatch(setClaimFields(_claim))\n      setAllowedFields({\n        ..._allowedFields,\n        ...AdditionalFields(data.reimbursement_details.type === 'InPatient' ? 'InPatient' : '')\n      })\n\n      setBatchNumber(data.batch_number)\n\n      // ConfigController.getUserManagementData().then(res => {\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: new Date().toISOString(),\n      //       field: 'approved_date'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: res.user_id,\n      //       field: 'approved_id'\n      //     })\n      //   )\n      //   dispatch(\n      //     setClaimBaseDetails({\n      //       value: `${res.first_name} ${res.last_name}`,\n      //       field: 'approved_name'\n      //     })\n      //   )\n      // })\n    })\n  }, [])\n\n  const totalAmount = (currentValue, i) => {\n    const total =\n      parseFloat(i.gross_amount) +\n      parseFloat(i.vat_amount) -\n      (parseFloat(i.amount_not_covered) +\n        parseFloat(i.philhealth_amount_paid) +\n        parseFloat(i.amount_due_from_member) +\n        parseFloat(i.amount_paid_by_member))\n    return currentValue + total\n  }\n\n  //* Room\n  const getRooms = ({ value, by = 'id' }) => {\n    ClaimsAdjudicationServices.lookups({\n      on: 'medical-partner',\n      params: { query: value, by }\n    }).then(res => {\n      const [data] = res.data.data\n\n      let rooms = []\n      if (data) {\n        rooms = (data.rooms || []).map(item => ({\n          text: item.type,\n          value: item.type,\n          rate: item.rate\n        }))\n      }\n\n      dispatch(setDropDown({ rooms }))\n    })\n  }\n\n  React.useEffect(() => {\n    let sum = 0\n    if (claim) {\n      if (claim.procedures) sum = claim.procedures.reduce(totalAmount, sum)\n      if (claim.hospital_items) sum = claim.hospital_items.reduce(totalAmount, sum)\n      if (claim.professional_fees) sum = claim.professional_fees.reduce(totalAmount, sum)\n      dispatch(setRejectStatus(!(sum === 0)))\n    }\n    setGrandTotal(sum)\n  }, [claim])\n\n  const getReason = () => {\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason' }).then(res => {\n      const { data } = res.data\n      const reason = data.map(item => ({\n        text: item.reason,\n        value: item.reason,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason }))\n    })\n    ClaimsAdjudicationServices.getDropdown({ field: 'reason-charging' }).then(res => {\n      const { data } = res.data\n      const reason_charging = data.map(item => ({\n        text: item.reason_charging,\n        value: item.reason_charging,\n        code: item.code\n      }))\n      dispatch(setDropDown({ reason_charging }))\n    })\n  }\n\n  const handleOnChangeFacility = args => {\n    const rooms = (onChangeFacility(args) || []).map(item => ({\n      text: item.type,\n      value: item.type,\n      rate: item.rate\n    }))\n    for (let i of rooms) {\n      if (i.value === claim.room_type) {\n        console.log(i)\n        dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n    dispatch(setDropDown({ rooms }))\n  }\n\n  const handleOnChangeRoomType = e => {\n    const { value } = e.target\n    for (let i of dropDown.rooms) {\n      if (i.value === value) {\n        return dispatch(setClaimRoom({ room_type: i.value, room_rate: i.rate }))\n      }\n    }\n  }\n\n  const doValidateBase = () => {\n    const data = {}\n\n    for (let f in allowedFields) data[f] = claim[f]\n\n    const { error = {} } = MainValidator(Object.keys(allowedFields))({ ...data })\n    console.log(error)\n    return error\n  }\n\n  const doValidateProcedure = ({ details }) => {\n    const { error } = ProcedureValidator({\n      description: details.description,\n      code: details.code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateHospitalItem = ({ details }) => {\n    const { error } = HospitalItemValidator({\n      name: details.name,\n      item_code: details.item_code,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateProfessionalFee = ({ details }) => {\n    const { error } = ProfessionalFeeValidator({\n      doctor_id: details.doctor_id,\n      doctor_name: details.doctor_name,\n      specialization: details.specialization,\n      gross_amount: details.gross_amount,\n      vat_amount: details.vat_amount,\n      amount_paid_by_member: details.amount_paid_by_member,\n      philhealth_amount_paid: details.philhealth_amount_paid,\n      philhealth_remarks: details.philhealth_remarks,\n      amount_not_covered: details.amount_not_covered,\n      reason: details.reason,\n      amount_due_from_member: details.amount_due_from_member,\n      reason_for_charging_member: details.reason_for_charging_member\n    })\n    return error\n  }\n\n  const doValidateAll = () => {\n    dispatch(resetError())\n\n    const base_errors = doValidateBase()\n    const diagnosis = DiagnosisListValidator(claim.diagnosis)\n    let procedure = {}\n    let hospital_item = {}\n    let professional_fee = {}\n\n    for (const [index, value] of claim.procedures.entries()) {\n      const error = doValidateProcedure({ index, details: value })\n      if (error) {\n        procedure = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProcedure({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.hospital_items.entries()) {\n      const error = doValidateHospitalItem({ index, details: value })\n      if (error) {\n        hospital_item = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setHospitalItem({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n\n    for (const [index, value] of claim.professional_fees.entries()) {\n      const error = doValidateProfessionalFee({ index, details: value })\n      if (error) {\n        professional_fee = { index, ...error }\n        // AUTO OPEN CLAIM\n        dispatch(\n          setProfessionalFee({\n            show: true,\n            mode: 'edit',\n            index,\n            details: value\n          })\n        )\n        break\n      }\n    }\n    dispatch(\n      setError({\n        ...base_errors,\n        diagnosis,\n        procedure,\n        hospital_item,\n        professional_fee\n      })\n    )\n\n    const invalid =\n      Object.keys(base_errors).length > 0 ||\n      diagnosis.error ||\n      procedure.index >= 0 ||\n      hospital_item.index >= 0 ||\n      professional_fee.index >= 0\n\n    setHasError(invalid)\n\n    return invalid\n  }\n\n  React.useEffect(() => {\n    if (hasError) {\n      console.group('Validation Failed')\n      for (const value in error) {\n        console.log(value, error[value])\n      }\n      console.groupEnd()\n    }\n  }, [hasError])\n\n  const onChangeReimbursementType = ({ value, field }) => {\n    setAllowedFields({ ...initialAllowedFields, ...AdditionalFields(value) })\n\n    if (value === 'InPatient') {\n      dispatch(\n        setClaimFields({\n          ...claim,\n          date_to: moment(claim.date_from)\n            .endOf('day')\n            .toISOString()\n        })\n      )\n    }\n\n    dispatch(setClaimBaseDetails({ value, field }))\n  }\n\n  return (\n    <div className={classes.root}>\n      {claim && (\n        <React.Fragment>\n          <DisapprovedLabel\n            id='dp-failed-adjudication'\n            value='Failed Adjudication'\n            reasons={discrepancy.disapproved ? discrepancy.disapproved : []}\n          />\n\n          <Paper className={classes['first-container']}>\n            <BaseDetails\n              claim={claim}\n              onChange={({ value, field }) => dispatch(setClaimBaseDetails({ value, field }))}\n              onChangeReimbursementType={onChangeReimbursementType}\n              permissions={permissions.base}\n              showReimbursement\n              requiredFields={{ reimbursement_type: true }}\n            />\n            <div className={classes.groups}>\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-id'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_id\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-id'\n                    required\n                    label='Medical Partner ID'\n                    value={claim.facility_id}\n                    suggestions={suggestions.facility.id}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_id',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_id}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              <div className={classes['input']}>\n                <DiscrepancyBase\n                  id='dp-medical-partner-facility-name'\n                  discrepancy={{\n                    message: 'Failed',\n                    result: discrepancy.facility_name\n                  }}\n                >\n                  <AutoComplete\n                    id='medical-partner-facility-name'\n                    required\n                    label='Medical Partner (Facility) Name'\n                    value={claim.facility_name}\n                    suggestions={suggestions.facility.name}\n                    onChange={(value, isSuggestionClick) =>\n                      handleOnChangeFacility({\n                        field: 'facility_name',\n                        value,\n                        isSuggestionClick\n                      })\n                    }\n                    error={error.facility_name}\n                    readOnly={!permissions.base.update}\n                  />\n                </DiscrepancyBase>\n              </div>\n\n              {AdditionalFields.exist(allowedFields, 'doctor_id') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-id'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_id\n                    }}\n                  >\n                    <AutoComplete\n                      id='dp-medical-partner-id'\n                      required\n                      label='Medical Partner ID'\n                      value={claim.doctor_id}\n                      suggestions={suggestions.doctor.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'doctor_name') && (\n                <div className={classes['input']}>\n                  <DiscrepancyBase\n                    id='dp-medical-doctor-name'\n                    discrepancy={{\n                      message: 'Failed',\n                      result: discrepancy.doctor_name\n                    }}\n                  >\n                    <AutoComplete\n                      id='doctor-name'\n                      required\n                      label='Medical Partner (Doctor) Name'\n                      value={claim.doctor_name}\n                      suggestions={suggestions.doctor.full_name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangeDoctor({\n                          field: 'doctor_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.doctor_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </DiscrepancyBase>\n                </div>\n              )}\n\n              {AdditionalFields.exist(allowedFields, 'date_to') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-admission-date-from'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_from\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-from'\n                        required\n                        label='Admission Date (From)'\n                        value={claim.date_from}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: moment(event.toISOString())\n                                .startOf('day')\n                                .toISOString(),\n                              field: 'date_from'\n                            })\n                          )\n                        }\n                        error={error.date_from}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='admission-date-to'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.date_to\n                      }}\n                    >\n                      <DatePicker\n                        id='admission-date-to'\n                        required\n                        label='Admission Date (To)'\n                        value={claim.date_to}\n                        onChange={event =>\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.toISOString(),\n                              field: 'date_to'\n                            })\n                          )\n                        }\n                        error={error.date_to}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-type'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_type\n                      }}\n                    >\n                      <DropDown\n                        id='room-type'\n                        label='Room Type'\n                        items={dropDown.rooms}\n                        value={claim.room_type}\n                        onChange={handleOnChangeRoomType}\n                        error={error.room_type}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <DiscrepancyBase\n                      id='dp-room-rate'\n                      discrepancy={{\n                        message: 'Failed',\n                        result: discrepancy.room_rate\n                      }}\n                    >\n                      <TextFieldCurrency\n                        id='room-rate'\n                        label='Room Rate'\n                        value={claim.room_rate}\n                        onChange={event => {\n                          dispatch(\n                            setClaimBaseDetails({\n                              value: event.target.value,\n                              field: 'room_rate'\n                            })\n                          )\n                        }}\n                        error={error.room_rate}\n                        readOnly={!permissions.base.update}\n                      />\n                    </DiscrepancyBase>\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-id'\n                      label='PRO ID'\n                      required\n                      value={claim.pro_id}\n                      suggestions={suggestions.pro.id}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_id',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <AutoComplete\n                      id='pro-name'\n                      label='PRO Name'\n                      required\n                      value={claim.pro_name}\n                      suggestions={suggestions.pro.name}\n                      onChange={(value, isSuggestionClick) =>\n                        onChangePro({\n                          field: 'pro_name',\n                          value,\n                          isSuggestionClick\n                        })\n                      }\n                      error={error.pro_name}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              {!AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <DatePicker\n                      id='date-of-service'\n                      required\n                      label='Date of Service'\n                      value={claim.date_from}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.toISOString(),\n                            field: 'date_from'\n                          })\n                        )\n                      }\n                      error={error.date_from}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='department'\n                      label='Department'\n                      value={claim.department}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'department'\n                          })\n                        )\n                      }\n                      error={error.pro_id}\n                      readOnly={!permissions.base.update}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      required\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n\n            <div className={classes.groups}>\n              {AdditionalFields.exist(allowedFields, 'room_type') && (\n                <React.Fragment>\n                  <div className={classes['input']}>\n                    <TextField\n                      id='medicine-category'\n                      label='Medicine Category'\n                      value={claim.medicine_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'medicine_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.medicine_category}\n                    />\n                  </div>\n\n                  <div className={classes['input']}>\n                    <TextField\n                      id='reimbursement-category'\n                      label='Reimbursement Category'\n                      value={claim.reimbursement_category}\n                      onChange={event =>\n                        dispatch(\n                          setClaimBaseDetails({\n                            value: event.target.value,\n                            field: 'reimbursement_category'\n                          })\n                        )\n                      }\n                      readOnly={!permissions.base.update}\n                      error={error.reimbursement_category}\n                    />\n                  </div>\n                </React.Fragment>\n              )}\n\n              <div className={classes['input']}>\n                <TextField\n                  id='official-receipt-number'\n                  label='Official Receipt Number'\n                  value={claim.official_receipt_number}\n                  required\n                  onChange={event =>\n                    dispatch(\n                      setClaimBaseDetails({\n                        value: event.target.value,\n                        field: 'official_receipt_number'\n                      })\n                    )\n                  }\n                  readOnly={!permissions.base.update}\n                  error={error.official_receipt_number}\n                />\n              </div>\n            </div>\n\n            <div className={classes['child-container']}>\n              <div className={classes['left-side']}>\n                {permissions.diagnosis.read && (\n                  <DiagnosisList\n                    id='diagnosis-list'\n                    permissions={permissions.diagnosis}\n                    items={claim.diagnosis}\n                    error={error.diagnosis}\n                  />\n                )}\n              </div>\n            </div>\n          </Paper>\n\n          <div className={classes['tables-container']}>\n            <div className={classes['left-side']} id='left-side-panel'>\n              {permissions.procedures.read && (\n                <ProcedureList\n                  id='procedure'\n                  data={claim.procedures}\n                  doValidate={doValidateProcedure}\n                  permissions={permissions.procedures}\n                />\n              )}\n              {permissions.hospital_items.read && (\n                <HospitalItemList\n                  id='hospital-item'\n                  data={claim.hospital_items}\n                  doValidate={doValidateHospitalItem}\n                  permissions={permissions.hospital_items}\n                />\n              )}\n              {permissions.professional_fees.read && (\n                <ProfessionalFeeList\n                  id='professional-fee'\n                  data={claim.professional_fees}\n                  doValidate={doValidateProfessionalFee}\n                  permissions={permissions.professional_fees}\n                />\n              )}\n            </div>\n            <div className={classes['right-side']} id='right-side-panel'>\n              <div className={classes['wrapper']}>\n                <div className={classes['sticky']}>\n                  <RightPanelTabs escalations={escalations} recon={recon} {...props} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes['grand-total']}>\n            <Typography variant='subtitle2'>TOTAL PHP {CurrencyFormatter(grandTotal)}</Typography>\n          </div>\n          <ClaimFooter\n            getUsers={getUsers}\n            doValidate={doValidateAll}\n            doEscalate={onEscalate}\n            doReassign={onReassign}\n            doViewAnalysisSheet={onViewAnalysisSheet}\n            doViewLetterOfAdvice={onViewLetterOfAdvice}\n            doReject={() => setShowReimbursementModal(true)}\n            doApprove={onApprove}\n            doSave={onSave}\n            doCancel={onCancel}\n            permissions={permissions.footer}\n            grandTotal={grandTotal}\n            claimType={_type}\n            userManagementService={userManagementService}\n            isReimbursement\n          />\n        </React.Fragment>\n      )}\n\n      <ReimbursementInfoComponent\n        claim={{ ...claim, batch_number: batchNumber }}\n        show={showReimbursementModal}\n        setShowModal={setShowReimbursementModal}\n        handleOnSave={reimbursement_info =>\n          dispatch(\n            setClaimBaseDetails({\n              value: reimbursement_info,\n              field: 'reimbursement_info'\n            })\n          )\n        }\n        doReject={() => onReject({ goBack: true })}\n      />\n    </div>\n  )\n}\n// doReject={onReject}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { useHistory } from 'react-router-dom'\n\n// Styles\nimport classes from './Error.module.scss'\n\nlet history = null\n\nconst DashboardRedirect = props => {\n  const { title = `Page not found`, body = `We cant seem to find the page you're looking for.` } = props\n  const [counter, setCounter] = React.useState()\n\n  React.useEffect(() => {\n    let _counter = 10\n    setCounter(_counter)\n    let interval = setInterval(() => {\n      if (_counter) {\n        _counter--\n        setCounter(_counter)\n      } else {\n        clearInterval(interval)\n        history.push('/')\n      }\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='h4' className={classes.title}>\n        {title}\n      </Typography>\n      <Typography variant='body1' className={classes.message}>\n        {body}\n      </Typography>\n\n      <div className={classes['action-messages']}>\n        <Typography variant='body2' className={classes.message}>\n          You will be redirected to Dashboard in {counter}\n        </Typography>\n        <Typography variant='body2' className={classes.message}>\n          Click the button below to go to that page.\n        </Typography>\n      </div>\n\n      <Button variant='contained' color='primary' className='button-neutral' onClick={() => history.push('/')}>\n        Go to Dashboard\n      </Button>\n    </div>\n  )\n}\n\nconst DashboardRedirectInit = props => {\n  history = useHistory()\n  return ''\n}\n\nconst DashboardRedirectService = {\n  redirect: () => {\n    history.push('/404')\n  }\n}\n\nexport { DashboardRedirectInit, DashboardRedirect, DashboardRedirectService }\n","import React from 'react'\n\n// Services\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// Components\nimport ClaimInPatient from './Components/ClaimInPatient/ClaimInPatient'\nimport ClaimOutPatientProcedure from './Components/ClaimOutPatientProcedure/ClaimOutPatientProcedure'\nimport ClaimOutPatientConsultation from './Components/ClaimOutPatientConsultation/ClaimOutPatientConsultation'\nimport ClaimEmergency from './Components/ClaimEmergency/ClaimEmergency'\nimport ClaimMedicineAllowance from './Components/ClaimMedicineAllowance/ClaimMedicineAllowance'\nimport ClaimDental from './Components/ClaimDental/ClaimDental'\nimport ClaimAPE from './Components/ClaimAPE/ClaimAPE'\n// import ClaimECU from './Components/ClaimECU/ClaimECU'\n// import ClaimPPE from './Components/ClaimPPE/ClaimPPE'\n// import ClaimPharmacy from './Components/ClaimPharmacy/ClaimPharmacy'\n// import ClaimMedicalSupplies from './Components/ClaimMedicalSupplies/ClaimMedicalSupplies'\n// import ClaimClinicManagement from './Components/ClaimClinicManagement/ClaimClinicManagement'\nimport ClaimReimbursement from './Components/ClaimReimbursement/ClaimReimbursement'\n\nimport { DashboardRedirect } from 'SharedComponents/DashboardRedirect/DashboardRedirect'\n\nexport default function GetClaimComponent (_props) {\n  const { _type, ...props } = _props\n  const SelectecClaimType = selected => {\n    // const type = ClaimTypes[selected].other_name\n\n    switch (selected) {\n      case 'InPatient':\n        return <ClaimInPatient {...props} />\n\n      case 'OutPatientProcedure':\n        return <ClaimOutPatientProcedure {...props} />\n\n      case 'OutPatientConsultation':\n        return <ClaimOutPatientConsultation {...props} />\n\n      case 'Emergency':\n        return <ClaimEmergency {...props} />\n\n      case 'Dental':\n        return <ClaimDental {...props} />\n\n      case 'MedicineAllowance':\n        return <ClaimMedicineAllowance {...props} />\n\n      case 'APE':\n        return <ClaimAPE {...props} />\n\n      // case 'ECU':\n      //   return <ClaimECU {...props} />\n\n      // case 'PPE':\n      //   return <ClaimPPE {...props} />\n\n      // case 'Pharmacy':\n      //   return <ClaimPharmacy {...props} />\n\n      // case 'MedicalSupplies':\n      //   return <ClaimMedicalSupplies {...props} />\n\n      // case 'ClinicManagement':\n      //   return <ClaimClinicManagement {...props} />\n\n      case 'Reimbursement':\n        return <ClaimReimbursement {...props} />\n\n      default:\n        LoadingService.loading(false)\n        return <DashboardRedirect title='Claim Type Under Development' />\n    }\n  }\n\n  return <React.Fragment>{SelectecClaimType(_type)}</React.Fragment>\n}\n","import instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/md')\n\nexport default class MedicalConsultantServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import MedicalConsultantServices from './MedicalConsultantServices'\nimport instance from './instance'\nconst axios = instance('/client')\n\nexport default class UserManagementServices {\n  static getUsers (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getUsersByRole (role_name) {\n    return axios({\n      url: `/api/users/list?filter={\"where\":{\"main_role.name\"%20:\"${role_name}\"}}`,\n      method: 'GET'\n    })\n  }\n\n  static getClaimsVerifierSupervisors () {\n    // TODO\n    /**\n     * Create API request direct to SEER's api\n     * For fetching claims verifier supervisor members\n     */\n    return this.getUsers('CLAIMS_VERIFIER_SUPERVISOR')\n  }\n}\n","import React from 'react'\n\n// Components\nimport GetClaimComponent from './GetClaimComponent'\n\n// Services\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { PdfViewer2Service } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport UserManagementServices from 'Services/Api/UserManagementServices'\nimport CustomerCareServices from 'Services/Api/CustomerCareServices'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  resetClaim,\n  setClaimType,\n  setSuggestionObject,\n  resetSuggestionObject,\n  setClaimFacility,\n  setClaimDoctor,\n  addSuggestionToArray,\n  initDiscrepancy,\n  setDiscrepancy,\n  setProcedure,\n  setHospitalItem,\n  setProfessionalFee,\n  resetError,\n  setEscalationMessages,\n  setClaimPro,\n  resetRecon,\n  setReconNotes\n} from './Store/actions'\n\n// Utilities\nimport { SafeAccess } from 'Utilities/SafeAccess'\n\nexport default function ClaimAnalysis (props) {\n  const dispatch = useDispatch()\n  const claim = useSelector(state => state.claim)\n  const claim_type = useSelector(state => state.claimType)\n  const suggestions = useSelector(state => state.suggestions)\n  const escalations = useSelector(state => state.escalations)\n  const reassign = useSelector(state => state.reassign)\n\n  const [fetching, setFetching] = React.useState(true)\n\n  const contractType = 'client'\n  const [member, setMember] = React.useState({\n    info: {},\n    contract: { benefits: [] },\n    benefit_limit: []\n  })\n\n  const [client, setClient] = React.useState({\n    info: {},\n    contract: { base: [], benefits: [] }\n  })\n\n  const [utilizationLoa, setUtilizationLoa] = React.useState({})\n\n  const { ApiService, breadCrumbsList } = props\n\n  const [claimNumber, setClaimNumber] = React.useState('')\n\n  const REPORT_LETTER_OF_ADVICE = 1\n  const REPORT_ANALYSIS_SHEET = 2\n  const REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE = 3\n\n  const getClaimType = ({ claim_number }) => {\n    setFetching(true)\n    BreadcrumbsService.setSelectedItems(breadCrumbsList)\n\n    ApiService.getClaim({ claim_number }).then(res => {\n      const { data } = res.data\n      const _claim_type = data.__type\n      dispatch(setClaimType(_claim_type))\n      dispatch(setDiscrepancy(getDiscrepancy(data.analysis_results.result)))\n      setFetching(false)\n    })\n  }\n\n  React.useEffect(() => {\n    dispatch(resetClaim())\n    dispatch(initDiscrepancy())\n    dispatch(resetError())\n    dispatch(resetRecon())\n    LoadingService.loading(true)\n    const { claim_number } = props.match.params\n\n    getClaimType({ claim_number })\n    getEscalationLogs({ claim_number })\n    getReconNotes({ claim_number })\n\n    return () => {\n      dispatch(setClaimType(''))\n    }\n  }, [props.match.params.claim_number])\n\n  const [debounce, setDebounce] = React.useState({\n    facility: null,\n    doctor: null,\n    icd10: null,\n    cpt: null,\n    hospital_items: null,\n    pro: null\n  })\n\n  const getClaimDetails = callback => {\n    const { claim_number } = props.match.params\n    setClaimNumber(claim_number)\n    dispatch(\n      setProcedure({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setHospitalItem({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n    dispatch(\n      setProfessionalFee({\n        show: false,\n        mode: '',\n        index: null,\n        details: {}\n      })\n    )\n\n    ApiService.getClaim({\n      claim_number\n    }).then(res => {\n      const { data } = res.data\n      // Set Diagnosis Suggestions\n      const diagnosis = data.diagnosis || []\n      diagnosis.map(i => dispatch(addSuggestionToArray({ field: 'icd10' })))\n      callback(data)\n\n      // FETCH Member from Customer Care\n      if (data.member.account_number) {\n        const member_account_no = data.member.account_number\n\n        CustomerCareServices.getMemberUtilizationLoa({ member_account_no }).then(res => {\n          const { data } = res.data\n          setUtilizationLoa(data)\n        })\n\n        CustomerCareServices.getMember({ member_account_no }).then(res => {\n          const { data } = res.data\n          setMember(state => ({ ...state, info: data }))\n\n          if (data) {\n            const member_oid = data._id\n            const contract_oid = data.contracts.slice().pop()\n\n            // FETCH Member Contract from Customer Care\n            if (contractType === 'client') {\n              CustomerCareServices.getBaseBenefitPlan().then(res => {\n                const { data } = res.data\n                setClient(state => ({ ...state, contract: { ...state.contract, base: data } }))\n              })\n\n              CustomerCareServices.getBenefitPlanTree({\n                contract_oid\n              }).then(res => {\n                const { data } = res.data\n                setClient(state => ({ ...state, contract: { ...state.contract, benefits: data } }))\n              })\n            } else {\n              CustomerCareServices.getMemberContract({\n                member_oid,\n                contract_oid\n              }).then(res => {\n                const { data } = res.data\n                setMember(state => ({ ...state, contract: { ...state.contract, base: data } }))\n              })\n\n              CustomerCareServices.getMemberContractBenefit({\n                member_oid,\n                contract_oid\n              }).then(res => {\n                const { data } = res.data\n                setMember(state => ({ ...state, contract: { ...state.contract, benefits: data } }))\n              })\n            }\n\n            // FETCH Member Benefit Limit from Customer Care\n            CustomerCareServices.getMemberBenefitLimit({ member_oid, contract_oid }).then(res => {\n              const { data } = res.data\n              setMember(state => ({ ...state, benefit_limit: data }))\n            })\n          }\n        })\n      }\n\n      LoadingService.loading(false)\n    })\n  }\n\n  //* Facility\n  const handleOnChangeFacility = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimFacility({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.facility.data) {\n        if (value === i.id || value === i.name) {\n          dispatch(setClaimFacility({ facility_id: i.id, facility_name: i.name }))\n          dispatch(resetSuggestionObject({ field: 'facility' }))\n          return i.rooms\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'facility' }))\n      const { 1: by } = field.split('_')\n      getFacilitySuggestions({ value, by })\n    }\n  }\n\n  const getFacilitySuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.facility)\n    setDebounce(state => ({\n      ...state,\n      facility: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'medical-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'facility',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n  //* Doctor\n  const handleOnChangeDoctor = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.doctor.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ doctor_id: i.id, doctor_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'doctor' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'doctor' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getDoctorSuggestions({ value, by: _by })\n    }\n  }\n\n  const getDoctorSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.doctor)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'doctor',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // PRO\n  const handleOnChangePro = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimPro({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.pro.data) {\n        if (value === i.employee_id || value === i.name) {\n          dispatch(setClaimPro({ pro_name: i.name, pro_id: i.employee_id }))\n          dispatch(resetSuggestionObject({ field: 'pro' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'pro' }))\n      getProSuggestions({ value, field })\n    }\n  }\n\n  const getProSuggestions = ({ value, field }) => {\n    if (value.trim().length < 3) return\n    clearTimeout(debounce.pro)\n    setDebounce(state => ({\n      ...state,\n      pro: setTimeout(() => {\n        if (value) {\n          // pro user lookup\n          CustomerCareServices.proUsersLookup({ value, field }).then(res => {\n            // limit temporary - no limit in api seer\n            const limit = []\n            for (let i = 0; i < 10; i++) {\n              if (!res.data.data[i]) break\n              limit.push(res.data.data[i])\n            }\n\n            const data = limit.map(elem => {\n              let full_name = `${elem.first_name} ${elem.last_name}`\n              delete elem.first_name\n              delete elem.last_name\n              return { ...elem, name: full_name }\n            })\n\n            let _items = []\n\n            if (field === 'pro_id') {\n              for (let d of data) {\n                _items.push(d[`employee_${field.split('_')[1]}`])\n              }\n            } else {\n              for (let d of data) {\n                _items.push(d['name'])\n              }\n            }\n\n            dispatch(\n              setSuggestionObject({\n                field: 'pro',\n                suggestion: { [`${field.split('_')[1]}`]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  // Anaesthesiologist\n  const handleOnChangeAnaesthesiologist = ({ value, field, isSuggestionClick }) => {\n    dispatch(setClaimDoctor({ [field]: value }))\n    if (isSuggestionClick) {\n      for (let i of suggestions.anesthesiologist.data) {\n        if (value === i.id || value === i.full_name) {\n          dispatch(setClaimDoctor({ anesthesiologist_id: i.id, anesthesiologist_name: i.full_name }))\n          dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n          return\n        }\n      }\n    } else {\n      dispatch(resetSuggestionObject({ field: 'anesthesiologist' }))\n      const { 1: by } = field.split('_')\n      let _by = by === 'id' ? 'id' : 'full_name'\n      getAnaesthesiologistSuggestions({ value, by: _by })\n    }\n  }\n\n  const getUtilizations = args => ApiService.getUtilizations(args)\n\n  const getPartners = args => ApiService.getPartners(args)\n\n  const getDoctors = args => ApiService.getDoctors(args)\n\n  const getUsers = args => ApiService.getUsers(args)\n\n  const getMember = args => CustomerCareServices.getMember(args)\n\n  const getAnaesthesiologistSuggestions = ({ value = '', by }) => {\n    if (value.trim().length < 3) return\n\n    clearTimeout(debounce.anaesthesiologist)\n    setDebounce(state => ({\n      ...state,\n      doctor: setTimeout(() => {\n        if (value) {\n          ApiService.lookups({\n            on: 'doctor-partner',\n            params: { query: value, by }\n          }).then(res => {\n            const { data } = res.data\n            let _items = []\n            for (let d of data) _items.push(d[by])\n            dispatch(\n              setSuggestionObject({\n                field: 'anesthesiologist',\n                suggestion: { [by]: _items, data }\n              })\n            )\n          })\n        }\n      }, 500)\n    }))\n  }\n\n  const getDiscrepancy = adjudicationResults => {\n    const debug = false\n    if (debug) console.group('Discrepancy Check')\n    let discrepancy = {}\n    let diagnosis = {}\n    let procedures = {}\n    let hospital_items = {}\n    let professional_fees = {}\n    if (debug) console.log(adjudicationResults)\n\n    if (adjudicationResults) {\n      adjudicationResults.map((result, index) => {\n        result.fields.map((field, fieldIndex) => {\n          if (field.item_type === 'procedures') {\n            if (!procedures[field.item_id]) procedures[field.item_id] = {}\n            if (!procedures[field.item_id][field.id]) procedures[field.item_id][field.id] = []\n            procedures = {\n              ...procedures,\n              [field.item_id]: {\n                ...procedures[field.item_id],\n                [field.id]: [...procedures[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'hospital_items') {\n            if (!hospital_items[field.item_id]) hospital_items[field.item_id] = {}\n            if (!hospital_items[field.item_id][field.id]) hospital_items[field.item_id][field.id] = []\n            hospital_items = {\n              ...hospital_items,\n              [field.item_id]: {\n                ...hospital_items[field.item_id],\n                [field.id]: [...hospital_items[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'professional_fees') {\n            if (!professional_fees[field.item_id]) professional_fees[field.item_id] = {}\n            if (!professional_fees[field.item_id][field.id]) professional_fees[field.item_id][field.id] = []\n            professional_fees = {\n              ...professional_fees,\n              [field.item_id]: {\n                ...professional_fees[field.item_id],\n                [field.id]: [...professional_fees[field.item_id][field.id], field.message]\n              }\n            }\n          } else if (field.item_type === 'icd') {\n            if (!diagnosis[field.item_id]) diagnosis[field.item_id] = {}\n            if (!diagnosis[field.item_id][field.id]) diagnosis[field.item_id][field.id] = []\n            diagnosis = {\n              ...diagnosis,\n              [field.item_id]: {\n                ...diagnosis[field.item_id],\n                [field.id]: [...diagnosis[field.item_id][field.id], field.message]\n              }\n            }\n          } else {\n            if (!discrepancy[field.id]) discrepancy[field.id] = []\n            discrepancy = { ...discrepancy, [field.id]: [...discrepancy[field.id], field.message] }\n          }\n        })\n      })\n    }\n    discrepancy = {\n      ...discrepancy,\n      diagnosis: diagnosis,\n      procedure: procedures,\n      hospital_item: hospital_items,\n      professional_fee: professional_fees\n    }\n    if (debug) console.log(discrepancy)\n    if (debug) console.groupEnd()\n    return discrepancy\n  }\n\n  const getEscalationLogs = ({ claim_number }) => {\n    ApiService.getComments({ claim_number }).then(res => {\n      const { data } = res.data\n      dispatch(setEscalationMessages({ messages: data }))\n    })\n  }\n\n  const getReconNotes = ({ claim_number }) => {\n    const { permissions } = props\n    if (SafeAccess(permissions.tabs.notes, ['read'])) {\n      ApiService.getNotes({ claim_number }).then(res => {\n        const { data } = res.data\n        dispatch(setReconNotes({ messages: data }))\n      })\n    }\n  }\n\n  const getReport = mode => {\n    LoadingService.loading(true)\n    ApiService.getClaim({ claim_number: claimNumber }).then(value => {\n      LoadingService.loading(false)\n      // const hasAmount = value.data.data.has_amount_concerns\n\n      let pdf = {}\n\n      switch (mode) {\n        case REPORT_ANALYSIS_SHEET:\n          pdf = {\n            name: 'Analysis Sheet',\n            fileName: 'analysis_sheet',\n            service: ApiService.getAnalysisSheet({ claimNo: claimNumber })\n          }\n          break\n\n        case REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Reports',\n            fileName: 'reports',\n            service: ApiService.getReports({ claimNo: claimNumber }),\n            onClose: () => props.history.push('/')\n          }\n          break\n\n        case REPORT_LETTER_OF_ADVICE:\n          pdf = {\n            name: 'Letter of Advice',\n            fileName: 'letter_of_advice',\n            service: ApiService.getLetterOfAdvice({ claimNo: claimNumber })\n          }\n          break\n      }\n\n      PdfViewer2Service({ ...pdf, open: true })\n    })\n  }\n\n  const handleOnEscalate = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      const { id } = escalations.assignee\n      ApiService.escalate({\n        claim_number: claimNumber,\n        data: { receiver_id: id, message: escalations.message }\n      }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReject = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.reject({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) props.history.push('/')\n      })\n    })\n  }\n\n  const handleOnReassign = ({ goBack = true }) => {\n    LoadingService.loading(true)\n\n    const { id } = reassign.assignee\n\n    ApiService.reassign({\n      claim_number: claimNumber,\n      data: { receiver_id: id, message: reassign.message }\n    }).then(res => {\n      if (goBack) props.history.push('/')\n      LoadingService.loading(false)\n    })\n  }\n\n  const handleOnApprove = ({ goBack = false }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      ApiService.approve({ claim_number: claimNumber }).then(res => {\n        LoadingService.loading(false)\n        if (goBack) {\n          props.history.push('/')\n        } else {\n          getReport(REPORT_MERGED_ANALYSIS_SHEET_AND_LETTER_OF_ADVICE)\n        }\n      })\n    })\n  }\n\n  const handleOnViewAnalysisSheet = () => {\n    getReport(REPORT_ANALYSIS_SHEET)\n  }\n\n  const handleOnViewLetterOfAdvice = () => {\n    getReport(REPORT_LETTER_OF_ADVICE)\n  }\n\n  const handleOnSave = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    ApiService.update({ claim_number: claimNumber, body: claim }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  const handleOnCancel = ({ goBack = true }) => {\n    LoadingService.loading(true)\n    if (goBack) props.history.push('/')\n    LoadingService.loading(false)\n  }\n\n  const handleOnReturnEscalate = ({ comment, goBack }) => {\n    LoadingService.loading(true)\n    ApiService.comment({ claim_number: claimNumber, data: { comment } }).then(res => {\n      LoadingService.loading(false)\n      if (goBack) props.history.push('/')\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {claim_type && !fetching && (\n        <GetClaimComponent\n          // #region VARIABLES\n          _type={claim_type}\n          {...props}\n          claim={claim}\n          contractType={contractType}\n          member={member}\n          client={client}\n          utilizationLoa={utilizationLoa}\n          // contractType={contractType}\n          // baseContract={baseContract}\n          // clientContract={clientContract}\n          // memberContract={memberContract}\n          // memberContractBenefit={memberContractBenefit}\n          // memberBenefitLimit={memberBenefitLimit}\n          //  #endregion\n          //  #region FETCHING\n          getClaimDetails={getClaimDetails}\n          getUtilizations={getUtilizations}\n          getUsers={getUsers}\n          getMember={getMember}\n          getPartners={getPartners}\n          getDoctors={getDoctors}\n          //  #endregion\n          //  #region EVENTS\n          onChangeFacility={handleOnChangeFacility}\n          onChangeDoctor={handleOnChangeDoctor}\n          onChangeAnaesthesiologist={handleOnChangeAnaesthesiologist}\n          onReturnEscalate={handleOnReturnEscalate}\n          onEscalate={handleOnEscalate}\n          onViewAnalysisSheet={handleOnViewAnalysisSheet}\n          onViewLetterOfAdvice={handleOnViewLetterOfAdvice}\n          onReject={handleOnReject}\n          onReassign={handleOnReassign}\n          onApprove={handleOnApprove}\n          onSave={handleOnSave}\n          onCancel={handleOnCancel}\n          onChangePro={handleOnChangePro}\n          //  #endregion\n          //  #region SERVICES\n          userManagementService={UserManagementServices}\n          //  #endregion\n        />\n      )}\n    </React.Fragment>\n  )\n}\n","export const initDiscrepancy = payload => {\n  return {\n    type: 'INIT_DISCREPANCY',\n    payload\n  }\n}\n\nexport const setDiscrepancy = payload => {\n  return {\n    type: 'SET_DISCREPANCY',\n    payload\n  }\n}\n","export const resetRecon = payload => {\n  return {\n    type: 'RESET_RECON_NOTES',\n    payload\n  }\n}\n\nexport const setReconNotes = payload => {\n  return {\n    type: 'SET_RECON_NOTES',\n    payload\n  }\n}\n","const claimReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'RESET':\n      return null\n\n    case 'SET_CLAIM_FIELDS':\n      return action.payload\n\n    case 'SET_CLAIM_BASE_DETAILS':\n      return (() => {\n        const { value, field } = action.payload\n        return { ...state, [field]: value }\n      })()\n\n    case 'SET_CLAIM_FACILITY':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_DOCTOR':\n      return { ...state, ...action.payload }\n\n    case 'SET_CLAIM_ROOM':\n      return { ...state, ...action.payload }\n\n    case 'ADD_CLAIM_DIAGNOSIS':\n      return {\n        ...state,\n        diagnosis: [\n          ...state.diagnosis,\n          {\n            code: '',\n            description: '',\n            primary: false\n          }\n        ]\n      }\n\n    case 'SET_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index, data } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            if (index === _index) {\n              for (let f in data) i[f] = data[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRIMARY_DIAGNOSIS':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          diagnosis: state.diagnosis.map((i, _index) => {\n            i.primary = index === _index\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROCEDURE':\n      return {\n        ...state,\n        procedures: [...state.procedures, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROCEDURE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          procedures: state.procedures.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_HOSPITAL_ITEM':\n      return {\n        ...state,\n        hospital_items: [...state.hospital_items, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_HOSPITAL_ITEM':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          hospital_items: state.hospital_items.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'ADD_CLAIM_PROFESSIONAL_FEE':\n      return {\n        ...state,\n        professional_fees: [...state.professional_fees, action.payload]\n      }\n\n    case 'UPDATE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index, details } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.map((i, _index) => {\n            if (index === _index) {\n              for (const f in details) i[f] = details[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'REMOVE_CLAIM_PROFESSIONAL_FEE':\n      return (() => {\n        const { index } = action.payload\n        return {\n          ...state,\n          professional_fees: state.professional_fees.filter((i, _index) => {\n            if (index !== _index) return i\n          })\n        }\n      })()\n\n    case 'SET_CLAIM_PRO':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default claimReducer\n","const claimTypeReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_CLAIM_TYPE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default claimTypeReducer\n","const initialState = {\n  pro: {\n    id: [],\n    name: [],\n    data: []\n  },\n  facility: {\n    id: [],\n    name: [],\n    data: []\n  },\n  doctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  anesthesiologist: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  pfDoctor: {\n    id: [],\n    full_name: [],\n    data: []\n  },\n  hospitalItem: {\n    id: [],\n    name: [],\n    data: []\n  },\n  icd10: [],\n  cpt: {\n    description: [],\n    code: [],\n    data: []\n  },\n  contract: {\n    years: []\n  }\n}\n\nconst icd10 = {\n  description: [],\n  code: [],\n  data: []\n}\n\nconst suggestionsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_SUGGESTIONS':\n      return initialState\n\n    case 'SET_SUGGESTION_OBJECT':\n      return (() => {\n        let { field, suggestion } = action.payload\n        return {\n          ...state,\n          [field]: { ...initialState[field], ...suggestion }\n        }\n      })()\n\n    case 'SET_SUGGESTION_ON_ARRAY':\n      return (() => {\n        let { field, index, by, suggestion, data } = action.payload\n\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              i = { ...i, [by]: suggestion, data }\n            }\n            return i\n          })\n        }\n      })()\n\n    case 'ADD_SUGGESTION_TO_ARRAY':\n      return (() => {\n        const { field } = action.payload\n        return {\n          ...state,\n          [field]: [...state[field], { ...icd10 }]\n        }\n      })()\n\n    case 'RESET_SUGGESTION_OBJECT':\n      return (() => {\n        const { field } = action.payload\n        return { ...state, [field]: initialState[field] }\n      })()\n\n    case 'RESET_SUGGESTION_ARRAY':\n      return (() => {\n        const { field, index } = action.payload\n        return {\n          ...state,\n          [field]: state[field].map((i, _index) => {\n            if (index === _index) {\n              for (let f in icd10) i[f] = icd10[f]\n            }\n            return i\n          })\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default suggestionsReducer\n","const dropDownReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'INIT_DROP_DOWNS':\n      return (() => {\n        let s = {}\n        for (let f of action.payload) {\n          s[f] = []\n        }\n\n        return s\n      })()\n\n    case 'SET_DROP_DOWN':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default dropDownReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    description: '',\n    code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst procedureReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROCEDURE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default procedureReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    name: '',\n    item_code: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst hospitalItemReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_HOSPITAL_ITEM':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default hospitalItemReducer\n","const initialValue = {\n  show: false,\n  mode: null,\n  index: null,\n  details: {\n    doctor_id: '',\n    doctor_name: '',\n    specialization: '',\n    gross_amount: 0,\n    vat_amount: 0,\n    amount_paid_by_member: 0,\n    philhealth_amount_paid: 0,\n    philhealth_remarks: '',\n    amount_not_covered: 0,\n    reason: '',\n    amount_due_from_member: 0,\n    reason_for_charging_member: ''\n  }\n}\n\nconst professionalFeeReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_PROFESSIONAL_FEE':\n      return (() => {\n        const { details = {}, ...others } = action.payload\n        return {\n          ...initialValue,\n          ...state,\n          ...others,\n          details: others.mode === 'add' ? initialValue.details : { ...state.details, ...details }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default professionalFeeReducer\n","const initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst discrepancyReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'INIT_DISCREPANCY':\n      return initialValue\n\n    case 'SET_DISCREPANCY':\n      return { ...initialValue, ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default discrepancyReducer\n","const initialValue = {\n  diagnosis: {},\n  procedure: {},\n  hospital_item: {},\n  professional_fee: {}\n}\n\nconst errorReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_ERROR':\n      return initialValue\n\n    case 'SET_ERROR':\n      return (() => {\n        return {\n          ...initialValue,\n          ...state,\n          ...action.payload\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default errorReducer\n","const initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst escalationReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_ESCALATION_MESSAGES':\n      return initialValue\n\n    case 'ADD_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_ESCALATION_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_ESCALATION_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default escalationReducer\n","const initialValue = {\n  messages: [],\n  assignee: { id: '', name: '' },\n  message: ''\n}\n\nconst reassignReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_REASSIGN_MESSAGES':\n      return initialValue\n\n    case 'ADD_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...state.messages, { ...messages }]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    case 'SET_REASSIGN_MESSAGE':\n      return (() => {\n        return {\n          ...state,\n          message: action.payload\n        }\n      })()\n\n    case 'SET_REASSIGN_ASSIGNEE':\n      return (() => {\n        const { id, name } = action.payload\n        return {\n          ...state,\n          assignee: { id, name }\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reassignReducer\n","const initialValue = true\n\nconst rejectReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_REJECT_CONTROL':\n      return (state = action.payload)\n\n    default:\n      return state\n  }\n}\n\nexport default rejectReducer\n","const initialValue = {\n  messages: []\n}\n\nconst reconReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'RESET_RECON_NOTES':\n      return initialValue\n\n    case 'SET_RECON_NOTES':\n      return (() => {\n        const { messages } = action.payload\n        return {\n          ...state,\n          messages: [...messages]\n        }\n      })()\n\n    default:\n      return state\n  }\n}\n\nexport default reconReducer\n","const initialValue = '--'\n\nconst utilizationReducer = (state = initialValue, action) => {\n  switch (action.type) {\n    case 'SET_LIMIT_TYPE':\n      return (state = action.payload)\n\n    case 'RESET_LIMIT_TYPE':\n      return initialValue\n\n    default:\n      return state\n  }\n}\n\nexport default utilizationReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'CLAIMS_VIEWER') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport claimReducer from './claimReducer'\nimport claimTypeReducer from './claimTypeReducer'\nimport suggestionsReducer from './suggestionsReducer'\nimport dropDownReducer from './dropDownReducer'\nimport procedureReducer from './procedureReducer'\nimport hospitalItemReducer from './hospitalItemReducer'\nimport professionalFeeReducer from './professionalFeeReducer'\nimport discrepancyReducer from './discrepancyReducer'\nimport errorReducer from './errorReducer'\nimport escalationReducer from './escalationReducer'\nimport reassignReducer from './reassignReducer'\nimport rejectReducer from './rejectReducer'\nimport reconReducer from './reconReducer'\nimport utilizationReducer from './utilizationReducer'\n\nconst reducers = combineReducers({\n  claim: claimReducer,\n  claimType: claimTypeReducer,\n  suggestions: suggestionsReducer,\n  dropDown: dropDownReducer,\n  procedure: procedureReducer,\n  hospitalItem: hospitalItemReducer,\n  professionalFee: professionalFeeReducer,\n  discrepancy: discrepancyReducer,\n  error: errorReducer,\n  escalations: escalationReducer,\n  reassign: reassignReducer,\n  rejectStatus: rejectReducer,\n  recon: reconReducer,\n  title: utilizationReducer\n})\n\nexport default reducers\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Claims Details Encoder\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    exclusions: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsAnalystRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/:claim_number/analyze'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsAdjudicationServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsAnalystRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'claim.claim_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'claim.date.due' },\n  { id: 'facility-name', name: 'Medical Partner Name (Facility)', sortField: 'claim.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/payment-request/${row.bundle_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    {category === 'payment-request' && 'Request Payment'}\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/c/pr')\n\nexport default class PaymentRequestServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getPaymentRequest ({ bundle_number }) {\n    return axios({\n      url: `/payment-request/${bundle_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getPaymentRequestBatches ({ bundle_number, params }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/batches`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static submit ({ bundle_number, data }) {\n    return axios({\n      url: `/payment-request/${bundle_number}/submit`,\n      method: 'PUT',\n      data\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\n//\n// Styles\nimport classes from './Dashboard.module.scss'\nexport default function Dashboard () {\n  const [claims, setClaims] = React.useState({\n    paymentRequests: { count: 0, data: [] },\n    override: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'claim.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Payment Request\n    Promise.all([\n      PaymentRequestServices.getClaims({\n        category: 'payment-request',\n        limit: 10,\n        sort: 'claim.date.due|desc',\n        range: 'this-week'\n      }),\n\n      PaymentRequestServices.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [batchResponse, batchCountResponse] = values\n      const paymentRequestClaims = batchResponse.data.data.results\n      const paymentRequestClaimCount = batchCountResponse.data.data\n      setClaims(prevState => ({\n        ...prevState,\n        paymentRequests: { data: paymentRequestClaims, count: paymentRequestClaimCount }\n      }))\n    })\n\n    // //* Override\n    // Promise.all([\n    //   PaymentRequestServices.getClaims({ category: 'override', range: 'this-week' }),\n    //   PaymentRequestServices.getClaimCount({ category: 'override' })\n    // ]).then(values => {\n    //   const [batchResponse, batchCountResponse] = values\n    //   const myBatches = batchResponse.data.data\n    //   const myBatchCount = batchCountResponse.data.data\n    //   setBatches(prevState => ({ ...prevState, my: { data: myBatches, count: myBatchCount } }))\n    // })\n  }, [])\n\n  const handleOnShowViewList = category => () => {\n    const title = 'For Payment Request'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    PaymentRequestServices.getClaims({ category, limit: 10, sort: 'claim.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleFilterChange = category => value => {\n    let _category = category === 'payment-request' ? 'paymentRequests' : ''\n\n    PaymentRequestServices.getClaims({ category, range: value, limit: 10, sort: 'claim.date.due|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [_category]: { ...prevState[_category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    PaymentRequestServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.paymentRequests.count, id: 'for-pr-count' }}\n              title='For Payment Request'\n              id='for-payment-request'\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={handleOnShowViewList('payment-request')}\n                  id='for-pr-view-list'\n                >\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('payment-request')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='for-pr-claim-no'>Claim No.</TableCell>\n                    <TableCell id='for-pr-soa-no'>Bundle/SOA No.</TableCell>\n                    <TableCell id='for-pr-due-date'>Due Date</TableCell>\n                    <TableCell id='for-pr-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.paymentRequests.data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell id={`for-pr-claim-no-${index}`}>{item.claim_number}</TableCell>\n                      <TableCell id={`for-pr-soa-no-${index}`}>{item.soa.number || item.bundle_number}</TableCell>\n                      <TableCell id={`for-pr-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell id={`for-pr-facility-name-${index}`}>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Link to={`/payment-request/${item.bundle_number}`}>\n                          <Typography variant='caption' className={`text-link underline`} id={`request-payment-${index}`}>\n                            Request Payment\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 5, value: claims.override.count, id: 'override-claim-count' }}\n              title='Override Claim'\n              id='override-claim'\n              viewAllLink={{ to: '/claims?type=override', caption: 'View List' }}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Bundle/SOA No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.override.data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.soa_no}</TableCell>\n                      <TableCell>{item.claim_no}</TableCell>\n                      <TableCell>{item.due_date}</TableCell>\n                      <TableCell>{item.facility_name}</TableCell>\n                      <TableCell>\n                        <Typography variant='caption' className={`text-link underline`}>\n                          Request Payment\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList viewList={viewList} setViewList={setViewList} onViewListChange={handleOnViewListChange} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\nimport Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport PaymentRequestServices from 'Services/Api/PaymentRequestServices'\nimport { LoadingService } from 'SharedComponents/LoadingComponent/LoadingComponent'\n\n// CSS\nimport classes from './PaymentRequestPage.module.scss'\n\nconst pendingHeadCells = [\n  { id: 'pending-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'pending-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'pending-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'pending-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' }\n]\nconst submittedHeadCells = [\n  { id: 'submitted-batch-no', numeric: false, center: false, disablePadding: false, label: 'Batch No.' },\n  { id: 'submitted-claim-type', numeric: false, center: true, disablePadding: false, label: 'Claim Type' },\n  { id: 'submitted-total-rcs', numeric: false, center: true, disablePadding: false, label: 'Total No. of RCS' },\n  { id: 'submitted-billed-amount', numeric: true, center: false, disablePadding: false, label: 'Billed Amount' }\n]\nexport default function PaymentRequestPage (props) {\n  const [bundle, setBundle] = React.useState(null)\n  const [bundle_number, setBundleNumber] = React.useState(null)\n  const [dialog, setDialog] = React.useState({})\n\n  const [batches, setBatches] = React.useState({\n    pending: { data: [], header: {}, loading: true },\n    submitted: { data: [], header: {}, loading: true }\n  })\n\n  React.useEffect(() => {\n    const { bundle_number } = props.match.params\n\n    PageTitleService(`Request for Payment: ${bundle_number}`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'paymentRequest', `specificPaymentRequest:${bundle_number}`])\n\n    setBundleNumber(bundle_number)\n    PaymentRequestServices.getPaymentRequest({ bundle_number }).then(({ data: res }) => {\n      const { data } = res\n      setBundle(data)\n      getBatches({ bundle_number, bundle: data })\n    })\n  }, [])\n\n  const getBatches = ({ bundle_number, bundle }) => {\n    // * Pending Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'pending' } }).then(\n      ({ data: res }) => resetBatches({ type: 'pending', data: res.data, bundle })\n    )\n\n    // * Submitted Payment request\n    PaymentRequestServices.getPaymentRequestBatches({ bundle_number, params: { category: 'submitted' } }).then(\n      ({ data: res }) => resetBatches({ type: 'submitted', data: res.data, bundle })\n    )\n  }\n\n  const resetBatches = ({ type, data, bundle }) => {\n    const total_batches = `${data.length} / ${bundle.total_batch}`\n    const total_rcs = `${data.reduce((acc, batch) => acc + batch.claims.length, 0)} / ${bundle.total_rcs}`\n\n    data = data.map(i => ({\n      ...i,\n      selected: false,\n      total_amount: i.claims.reduce((acc, claim) => acc + claim.utilization_amount, 0)\n    }))\n\n    const approved_amount = data.reduce((acc, batch) => acc + batch.total_amount, 0)\n\n    setBatches(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        data,\n        header: {\n          total_batches,\n          total_rcs,\n          approved_amount,\n          pr_amount: 0\n        },\n        loading: false,\n        indeterminate: undefined,\n        checked: undefined\n      }\n    }))\n  }\n\n  const handleClick = ({ index, batches: selectedBatches }) => {\n    const _batch = {\n      ...batches[selectedBatches],\n      data: batches[selectedBatches].data.map((i, _index) => {\n        if (_index === index) i.selected = !i.selected\n        return i\n      })\n    }\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const handleSelectAllClick = ({ batches: selectedBatches }) => {\n    let _batch = batches[selectedBatches]\n\n    _batch.data.map(i => {\n      i.selected = _batch.indeterminate ? true : !_batch.checked\n      return i\n    })\n\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n    changeSelectAllState({ batches: selectedBatches, data: _batch })\n  }\n\n  const changeSelectAllState = ({ batches: selectedBatches, data }) => {\n    let _batch = data || batches[selectedBatches]\n\n    let selected_count = 0\n    let pr_amount = 0\n    for (let b of _batch.data) {\n      if (b.selected) {\n        pr_amount += b.total_amount\n        selected_count++\n      }\n    }\n\n    let indeterminate = selected_count ? selected_count < _batch.data.length : false\n    let checked = selected_count ? selected_count === _batch.data.length : false\n\n    _batch = { ..._batch, indeterminate, checked, header: { ..._batch.header, pr_amount } }\n    setBatches(state => ({ ...state, [selectedBatches]: _batch }))\n  }\n\n  const handleOnSubmit = () => {\n    let selected = getSelectedPending(batches.pending.data)\n\n    if (!selected.length) {\n      return setDialog({\n        open: true,\n        message: 'Please select a batch for submission to Treasury Department.',\n        okLabel: 'Close',\n        onOk: () => setDialog(state => ({ ...state, open: false }))\n      })\n    }\n\n    const onOk = () => {\n      LoadingService.loading(true)\n      setDialog(state => ({ ...state, open: false }))\n      const requestBatch = []\n\n      for (let select of selected) {\n        const claims = select.claims.map(claim => {\n          return claim.claim_number\n        })\n        requestBatch.push(PaymentRequestServices.submit({ bundle_number, data: { claims } }))\n      }\n\n      Promise.all(requestBatch).then(\n        ({ data: res }) => {\n          const data = batches.pending.data.filter((i, index) => {\n            let should_include = true\n            for (let s of selected) {\n              if (s.index === index) {\n                should_include = false\n                break\n              }\n            }\n            if (should_include) return i\n          })\n          resetBatches({ type: 'pending', data, bundle })\n          resetBatches({ type: 'submitted', data: [...selected, ...batches.submitted.data], bundle })\n          LoadingService.loading(false)\n        },\n        err => {\n          console.log(err)\n        }\n      )\n    }\n\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to submit?',\n      okLabel: 'Yes',\n      cancelLabel: 'No',\n      onCancel: () => setDialog(state => ({ ...state, open: false })),\n      onOk\n    })\n  }\n\n  const handleOnCancel = () => {\n    setDialog({\n      open: true,\n      message: 'Are you sure you want to cancel?',\n      okLabel: 'Yes',\n      onOk: () => props.history.push(`/`),\n      cancelLabel: 'Close',\n      onCancel: () => setDialog(state => ({ ...state, open: false }))\n    })\n  }\n\n  const getSelectedPending = data => {\n    return data.filter((i, index) => {\n      if (i.selected) {\n        i.index = index\n        return i\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      {bundle ? (\n        <React.Fragment>\n          <Paper className={classes['text-fields']}>\n            <Grid className={classes['sub-container']} container spacing={4}>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Bundle No.' id='bundle-number' value={bundle.bundle_number} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Total No. of RCS' id='total-rcs' value={bundle.total_rcs} />\n              </Grid>\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Date Received'\n                  id='date-received'\n                  value={DateFormatter(bundle.date.received)}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Due Date' id='date-due' value={DateFormatter(bundle.date.due)} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='SOA No.' id='soa-number' value={bundle.soa.number} />\n              </Grid>\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <TextFieldCurrency\n                  readOnly\n                  label='Total SOA Amount'\n                  id='total-soa'\n                  value={CurrencyFormatter(bundle.soa.amount)}\n                />\n              </Grid>\n\n              <Grid item xs={12} />\n\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='facility-id' value={bundle.facility.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Facility)'\n                  id='facility-name'\n                  value={bundle.facility.name}\n                />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField readOnly label='Medical Partner ID' id='doctor-id' value={bundle.doctor.id} />\n              </Grid>\n              <Grid item xs={3} className={classes['input-container']}>\n                <CustomTextField\n                  readOnly\n                  label='Medical Partner Name (Doctor)'\n                  id='doctor-name'\n                  value={bundle.doctor.name}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes.header}>Total Batches: {batches.pending.header.total_batches}</Typography>\n              <Typography className={classes.header}>Total RCS: {batches.pending.header.total_rcs}</Typography>\n              <Typography className={classes.header}>\n                Total Approved Amount: PHP{' '}\n                <span id='total-approved-amount'>{CurrencyFormatter(batches.pending.header.approved_amount)}</span>\n              </Typography>\n              <Typography className={classes.header}>\n                Total PR Amount: PHP{' '}\n                <span id='total-pr-amount'>{CurrencyFormatter(batches.pending.header.pr_amount)}</span>\n              </Typography>\n            </div>\n\n            <EnhancedTable\n              className={classes.table}\n              headCells={pendingHeadCells}\n              handleSelectAllClick={() => handleSelectAllClick({ batches: 'pending' })}\n              indeterminate={!!batches.pending.indeterminate}\n              checked={!!batches.pending.checked}\n              checkAll\n              checkboxColor='default'\n            >\n              <TableBody>\n                {batches.pending.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      onClick={event => handleClick({ index, batches: 'pending' })}\n                      role='checkbox'\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox checked={batch.selected} color='default' />\n                      </TableCell>\n                      <TableCell align='left' id={`pending-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`pending-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`pending-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`pending-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.pending.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n          <div className={classes.buttonWrapper}>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-negative'\n              onClick={handleOnCancel}\n              id='cancel'\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              onClick={handleOnSubmit}\n              id='submit'\n            >\n              Submit\n            </Button>\n          </div>\n\n          <Paper className={classes['table-container']}>\n            <div className={classes.headers}>\n              <Typography className={classes['submit-header']}>Submitted Batches</Typography>\n            </div>\n            <EnhancedTable className={classes.table} headCells={submittedHeadCells}>\n              <TableBody>\n                {batches.submitted.data.map((batch, index) => {\n                  return (\n                    <TableRow\n                      // hover\n                      tabIndex={-1}\n                      key={`${batch.batch_number}-${index}`}\n                    >\n                      <TableCell align='left' id={`submitted-batch-number-${index}`}>\n                        {batch.batch_number}\n                      </TableCell>\n                      <TableCell align='center' id={`submitted-claim-type-${index}`}>\n                        {batch.type}\n                      </TableCell>\n                      <TableCell\n                        align='center'\n                        id={`submitted-total-rcs-${index}`}\n                      >{`${batch.claims.length} / ${batch.total_rcs}`}</TableCell>\n                      <TableCell align='right' id={`submitted-billed-amount-${index}`}>\n                        {CurrencyFormatter(batch.total_amount)}\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n                {!batches.submitted.data.length && (\n                  <TableRow style={{ height: 50 }}>\n                    <TableCell colSpan={5} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </EnhancedTable>\n          </Paper>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n\n      <Alert\n        open={!!dialog.open}\n        message={dialog.message}\n        cancelLabel={dialog.cancelLabel}\n        okLabel={dialog.okLabel}\n        onOk={dialog.onOk}\n        onCancel={dialog.onCancel}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Payment Request Officer\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport PaymentRequestPage from './Pages/PaymentRequestPage/PaymentRequestPage'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  paymentRequest: {\n    text: 'Payment Request',\n    to: '/payment-request'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  }\n}\n\nfunction PaymentRequestRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Route path='/payment-request/:bundle_number' exact component={PaymentRequestPage} />\n    </Switch>\n  )\n}\n\nexport default PaymentRequestRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Medical Partner Name (Facility)', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/review/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    Review\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_review: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      MedicalConsultantServices.getClaims({\n        category: 'for-review',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      MedicalConsultantServices.getClaimCount({ category: 'for-review' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_review: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    MedicalConsultantServices.getClaims({\n      category,\n      range: value,\n      limit: 10,\n      sort: 'latest.due.date|desc'\n    }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/review/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_review') title = 'For Review'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    MedicalConsultantServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    MedicalConsultantServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_review') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_review.count }}\n              sizes={{ sm: 12 }}\n              title='Escalated Claims'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-review')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_review')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_review.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          Review\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {claims.ticket.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport MedicalConsultantServices from 'Services/Api/MedicalConsultantServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  review: {\n    text: 'Review',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n      options: {\n        confirm: true,\n        confirmMessage: 'Are you sure you want to Reply to the Escalated Claim?',\n        okLabel: 'Yes',\n        cancelLabel: 'No'\n      }\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true\n  }\n}\n\nfunction MedicalConsultantRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/review/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'review']}\n              {...props}\n              permissions={permissions}\n              ApiService={MedicalConsultantServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default MedicalConsultantRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { name: 'Claim Number', sortField: 'latest.claim_number' },\n  { name: 'SOA No.', sortField: 'latest.soa.number' },\n  { name: 'Bundle', sortField: 'latest.bundle_number' },\n  { name: 'Due Date', sortField: 'latest.date.due' },\n  { name: 'Facility Name', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange }) {\n  // const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for the claim number, SOA number, bundle, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map(row => (\n            <TableRow key={row.claim_number}>\n              <TableCell>{row.claim_number}</TableCell>\n              <TableCell>{row.soa.number}</TableCell>\n              <TableCell>{row.bundle_number}</TableCell>\n              <TableCell>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell>{row.facility.name}</TableCell>\n              <TableCell>\n                <Link to={`/claims/recon/${row.claim_number}`}>\n                  <Typography variant='caption' className={`text-link underline`}>\n                    View Claim\n                  </Typography>\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport instance from './instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\n\nconst axios = instance('/c/cr')\n\nexport default class ClaimsReconServices extends ClaimsAdjudicationServices {\n  static getClaims (params) {\n    return axios({\n      url: '/claims',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static reassign ({ claim_number, data }) {\n    return axios({\n      url: `/claims/${claim_number}/reassign`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static getDoctors ({ member_account_no, facility_id, filters, params }) {\n    return axios({\n      url: `/claims/${member_account_no}/${facility_id}/doctors`,\n      method: 'GET',\n      params,\n      data: { member_account_no, facility_id, filters }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  const [claims, setClaims] = React.useState({\n    for_recon: { count: 0, data: [] },\n    ticket: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n\n    //* For Claims\n    Promise.all([\n      ClaimsReconServices.getClaims({\n        category: 'for-recon',\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      ClaimsReconServices.getClaimCount({ category: 'for-recon' })\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, for_recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    // Not yet working, but change of filter will not show error.\n\n    ClaimsReconServices.getClaims({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(\n      ({ data: res }) => {\n        const { data } = res\n        setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n      }\n    )\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/recon/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'for_recon') title = 'For Reconciliation'\n\n    setViewList({ ...initialValue, show: true, title, category })\n    ClaimsReconServices.getClaims({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    ClaimsReconServices.getClaims(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'for_recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='row'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: claims.for_recon.count }}\n              sizes={{ sm: 12 }}\n              title='For Reconciliation'\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick={handleOnShowViewList('for-recon')}>\n                  View List\n                </Typography>\n              }\n              onFilterChange={handleFilterChange('for_recon')}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Claim No.</TableCell>\n                    <TableCell>SOA No.</TableCell>\n                    <TableCell>Bundle</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {claims.for_recon.data.map((item, index) => (\n                    <TableRow key={item.claim_number}>\n                      <TableCell>{item.claim_number}</TableCell>\n                      <TableCell>{item.soa.number}</TableCell>\n                      <TableCell>{item.bundle_number}</TableCell>\n                      <TableCell>{DateFormatter(item.date.due)}</TableCell>\n                      <TableCell>{item.facility.name}</TableCell>\n                      <TableCell>\n                        <Typography\n                          variant='caption'\n                          className={`text-link underline`}\n                          onClick={() => handleOnReview(item.claim_number)}\n                        >\n                          View Claim\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticket #</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {claims.ticket.data.map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell>2334324343</TableCell>\n                    <TableCell>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages of Medical Consultant\nimport Dashboard from './Pages/Dashboard/Dashboard'\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsReconServices from 'Services/Api/ClaimsReconServices'\nimport ClaimsAdjudicationServices from 'Services/Api/ClaimsAdjudicationServices'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Claims',\n    icon: 'file-alt',\n    to: '/claims'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  recon: {\n    text: 'Recon',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    reassign: {\n      visible: true,\n      enabled: true,\n      options: { roles: ['CLAIMS_VERIFIER_SUPERVISOR'] }\n    },\n    analysis_sheet: { visible: true, enabled: true, options: {} },\n    letter_of_advice: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsReconcilationRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/recon/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'recon']}\n              {...props}\n              permissions={permissions}\n              ApiService={ClaimsReconServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsReconcilationRoutes\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\n// import { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent'\n\n// Styles\nimport classes from './ViewList.module.scss'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst headCells = [\n  { id: 'claim-number', name: 'Claim Number', sortField: 'latest.claim_number' },\n  { id: 'due-date', name: 'Due Date', sortField: 'latest.date.due' },\n  { id: 'facility-name', name: 'Facility Name', sortField: 'latest.facility.name' }\n]\n\nexport default function CustomizedDialogs ({ viewList, setViewList, onViewListChange, onItemClick }) {\n  const { category } = viewList\n\n  const handleOnClose = () => {\n    setViewList(p => ({ ...p, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  const handleSearchChange = e => {\n    const search = e.target.value\n    clearTimeout(debounce)\n    setDebounce(\n      setTimeout(() => {\n        setViewList(p => ({ ...p, search }))\n        onViewListChange({ search, page: 1 })\n      }, 500)\n    )\n  }\n\n  const handleOnSort = orderBy => e => {\n    setViewList(p => ({ ...p, orderBy, order: !viewList.order }))\n    onViewListChange({ sort: `${orderBy}|${viewList.order ? 'asc' : 'desc'}` })\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewList.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography variant='h6' className={classes.title}>\n            {viewList.title}\n          </Typography>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent dividers className={classes.content}>\n        <div className={classes.search}>\n          <SearchTextComponent\n            id='search'\n            onChange={handleSearchChange}\n            placeholder='Search for claim number, date or facility name'\n          />\n        </div>\n        <Table\n          TableContainerProps={{ style: { height: '100%', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map(headCell => (\n                <TableCell key={headCell.sortField} id={headCell.id}>\n                  <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  >\n                    {headCell.name}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n\n              <TableCell align='center' />\n            </TableRow>\n          }\n          body={viewList.data.map((row, index) => (\n            <TableRow key={row.claim_number}>\n              <TableCell id={`claim-number-${index}`}>{row.claim_number}</TableCell>\n              <TableCell id={`due-date-${index}`}>{DateFormatter(row.date.due)}</TableCell>\n              <TableCell id={`facility-name-${index}`}>{row.facility.name}</TableCell>\n              <TableCell id={`view-claim-${index}`}>\n                <Typography\n                  id={`view-claim-${index}`}\n                  variant='caption'\n                  className={`text-link underline`}\n                  onClick={() => onItemClick({ category, claim_number: row.claim_number })}\n                >\n                  View Claim\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewList.count}\n          page={viewList.page}\n          limit={viewList.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport startCase from 'lodash/startCase'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReconTIle = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services.getItems({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = startCase(`${category} Claims`)\n    if (category === 'recon') title = 'Reconciled Claims'\n\n    setViewList({ ...initialValue, show: true, title, category })\n\n    services.getItems({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reconciled-claim'\n        count={{ color: 3, value: claims.recon['count'], id: 'reconciled-claim-count' }}\n        sizes={{ sm: 12 }}\n        title='Reconciled Claims'\n        viewList={\n          <Typography\n            id='rc-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('recon')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('recon')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='rc-claim-no'>Claim No.</TableCell>\n              <TableCell id='rc-due-date'>Due Date</TableCell>\n              <TableCell id='rc-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.recon.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rc-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`rc-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`rc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReconTIle.displayName = 'DashboardTileComponent'\n\nexport default ReconTIle\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-verifier'\n        count={{ color: 3, value: 0, id: 'claims-verifier-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims Verifier'\n        isFilterShown={false}\n        viewList={\n          <Typography id='cv-view-list' variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='cv-verifier-name'>Verifier Name</TableCell>\n              <TableCell id='cv-total-batches'>Total Batches</TableCell>\n              <TableCell id='cv-total-claims'>Total Claims</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`cv-verifier-name-${index}`}>{item.verifier_name}</TableCell>\n                <TableCell id={`cv-total-batches-${index}`}>{item.total_batches}</TableCell>\n                <TableCell id={`cv-total-claims-${index}`}>{item.total_claims}</TableCell>\n                <TableCell id={`cv-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ClaimsForApprovalTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({ count: 0, data: [] })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  // url: ,\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const claims = claimResponse.data.data.results\n      const claimsCount = claimCountResponse.data.data\n      setClaims({ data: claims, count: claimsCount })\n    })\n  }, [])\n\n  const handleFilterChange = category => value => {\n    services.getItems({ category, range: value, limit: 10, sort: 'latest.due.date|desc' }).then(({ data: res }) => {\n      const { data } = res\n\n      setClaims(prevState => ({ ...prevState, [category]: { ...prevState[category], data: data.results } }))\n    })\n  }\n\n  const handleOnItemClick = claim_number => {\n    props.history.push(`/claims/for-approval/${claim_number}`)\n  }\n\n  const handleOnShowViewList = category => () => {\n    let title = 'Claims For Approval'\n\n    setViewList({ ...initialValue, show: true, title, category: 'for-approval' })\n\n    services.getItems({ category, limit: 10, sort: 'latest.date.due|desc' }).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    // TO BE EDITED, WAITING FOR CLAIMS SUPERVISOR API SERVICES TO BE UP\n    // mock datas from med consultant\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    handleOnItemClick(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='claims-for-approval'\n        count={{ color: 3, value: claims['count'], id: 'claims-for-approval-count' }}\n        sizes={{ sm: 12 }}\n        title='Claims For Approval'\n        isFilterShown={false}\n        viewList={\n          <Typography\n            id='fa-view-list'\n            variant='caption'\n            className='bold text-link'\n            onClick={handleOnShowViewList('for-approval')}\n          >\n            View List\n          </Typography>\n        }\n        onFilterChange={handleFilterChange('for-approval')}\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='fa-claim-no'>Claim No.</TableCell>\n              <TableCell id='fa-due-date'>Due Date</TableCell>\n              <TableCell id='fa-facility-name'>Facility Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {claims.data.map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`fa-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`fa-due-date-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`fa-facility-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`fa-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnItemClick(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nClaimsForApprovalTile.displayName = 'DashboardTileComponent'\n\nexport default ClaimsForApprovalTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst MedicalCollectiblesTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    console.log(claims)\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='medical-collectibles'\n        count={{ color: 3, value: 0, id: 'medical-collectibles-count' }}\n        sizes={{ sm: 12 }}\n        title='Medical Collectibles'\n        isFilterShown={false}\n        viewList={\n          <Typography id='mc-view-list' variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='mc-claim-no'>Claim No.</TableCell>\n              <TableCell id='mc-account-no'>Account No.</TableCell>\n              <TableCell id='mc-account-name'>Account Name</TableCell>\n              <TableCell id='mc-member-name'>Member Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`mc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`mc-account-no-${index}`}>{DateFormatter(item.date.due)}</TableCell>\n                <TableCell id={`mc-account-name-${index}`}>{item.facility.name}</TableCell>\n\n                <TableCell id={`mc-member-name-${index}`}>{item.facility.name}</TableCell>\n                <TableCell id={`mc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nMedicalCollectiblesTile.displayName = 'DashboardTileComponent'\n\nexport default MedicalCollectiblesTile\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport ViewList from '../ViewList/ViewList'\n\n// Utilities\nimport { DateFormatter } from 'Utilities/TextFormatter'\n\nconst ReimbursementClaimTile = props => {\n  const { services } = props\n  const [claims, setClaims] = React.useState({\n    recon: { count: 0, data: [] }\n  })\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [viewList, setViewList] = React.useState(initialValue)\n\n  React.useEffect(() => {\n    Promise.all([\n      services.getItems({\n        limit: 10,\n        sort: 'latest.date.due|desc',\n        range: 'this-week'\n      }),\n      services.getItemCount()\n    ]).then(values => {\n      const [claimResponse, claimCountResponse] = values\n      const allClaims = claimResponse.data.data.results\n      const allClaimsCount = claimCountResponse.data.data\n      setClaims(prevState => ({ ...prevState, recon: { data: allClaims, count: allClaimsCount } }))\n    })\n  }, [])\n\n  const handleOnReview = claim_number => {\n    props.history.push(`/claims/reconciled/${claim_number}`)\n  }\n\n  const handleOnViewListChange = params => {\n    const _params = {\n      category: viewList.category,\n      limit: viewList.limit,\n      page: viewList.page,\n      search: viewList.search,\n      sort: `${viewList.orderBy}|${viewList.order ? 'desc' : 'asc'}`,\n      ...params\n    }\n\n    services.getItems(_params).then(({ data: res }) => {\n      const { results, count, limit, page } = res.data\n      setViewList(state => ({ ...state, data: results, count, limit, page }))\n    })\n  }\n\n  const handleOnClickItemViewList = ({ category, claim_number }) => {\n    if (category === 'recon') handleOnReview(claim_number)\n  }\n\n  return (\n    <React.Fragment>\n      <DashboardTile\n        id='reimbursement-claims'\n        count={{ color: 3, value: 0, id: 'reimbursement-claims-count' }}\n        sizes={{ sm: 12 }}\n        title='Reimbursement Claims'\n        isFilterShown={false}\n        viewList={\n          <Typography id='rmc-view-list' variant='caption' className='bold text-link'>\n            View List\n          </Typography>\n        }\n      >\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell id='rmc-claim-no'>Claim No.</TableCell>\n              <TableCell id='rmc-account-no'>Account No.</TableCell>\n              <TableCell id='rmc-account-name'>Account Name</TableCell>\n              <TableCell id='rmc-member-name'>Member Name</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[].map((item, index) => (\n              <TableRow key={item.claim_number}>\n                <TableCell id={`rmc-claim-no-${index}`}>{item.claim_number}</TableCell>\n                <TableCell id={`rmc-account-no-${index}`}>{item.account_no}</TableCell>\n                <TableCell id={`rmc-account-name-${index}`}>{item.account_name}</TableCell>\n\n                <TableCell id={`rmc-member-name-${index}`}>{item.member_name}</TableCell>\n                <TableCell id={`rmc-view-claim-${index}`}>\n                  <Typography\n                    id={`view-claim-${index}`}\n                    variant='caption'\n                    className={`text-link underline`}\n                    onClick={() => handleOnReview(item.claim_number)}\n                  >\n                    View Claim\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </DashboardTile>\n\n      <ViewList\n        viewList={viewList}\n        setViewList={setViewList}\n        onViewListChange={handleOnViewListChange}\n        onItemClick={handleOnClickItemViewList}\n      />\n    </React.Fragment>\n  )\n}\n\nReimbursementClaimTile.displayName = 'DashboardTileComponent'\n\nexport default ReimbursementClaimTile\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ClaimsAdjudicationServices {\n  static assignClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/assign`,\n      method: 'PUT'\n    })\n  }\n\n  static getLetterOfAdvice ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/letter-of-advice`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getAnalysisSheet ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports/analysis-sheet`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getReports ({ claimNo }) {\n    return axios({\n      url: `/claims/adjudication/${claimNo}/reports`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClaims (params) {\n    return axios({\n      url: '/claims/adjudication',\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaimCount (params) {\n    return axios({\n      url: `/claims/adjudication/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return new Promise(resolve => {\n      Promise.all([\n        axios({\n          url: `/claims/adjudication/${claim_number}`,\n          method: 'GET'\n        }),\n        axios({\n          url: `/claims/adjudication/${claim_number}/analyze`,\n          method: 'GET'\n        })\n      ]).then(values => {\n        const [getClaimResponse, analyzeRespone] = values\n        const res = {\n          data: { data: { ...getClaimResponse.data.data, analysis_results: { result: analyzeRespone.data.data } } }\n        }\n        resolve(res)\n      })\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static analyze ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/analyze`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static getEscalationCount (params) {\n    return axios({\n      url: `/escalations/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getEscalations ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static returnEscalation ({ claim_number }) {\n    return axios({\n      url: `/escalations/${claim_number}/return`,\n      method: 'PATCH'\n    })\n  }\n\n  static getRejectionCount (params) {\n    return axios({\n      url: `/rejections/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getRejections ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static reconsiderRejection ({ claim_number }) {\n    return axios({\n      url: `/rejections/${claim_number}/reconsider`,\n      method: 'PATCH'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/adjudication/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getDropdown (params) {\n    return axios({\n      url: '/lookups/dropdown',\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/adjudication/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './../ClaimsAdjudicationServices'\nimport instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nconst axios = instance('/c/cvs')\n\nexport default class ReconciledServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/reconciled`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/reconciled/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}`,\n      method: 'PUT',\n      data: body\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static escalate ({ claim_number, data }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/escalate`,\n      method: 'POST',\n      data\n    })\n  }\n\n  static reject ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/reject`,\n      method: 'POST'\n    })\n  }\n\n  static lookups ({ on, params }) {\n    return axios({\n      url: `/lookups/${on}`,\n      method: 'GET',\n      params: { limit: 10, ...params },\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getNotes ({ claim_number }) {\n    return axios({\n      url: `/claims/reconciled/${claim_number}/notes`,\n      method: 'GET'\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/reconciled/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/reconciled/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n","import ClaimsAdjudicationServices from './../ClaimsAdjudicationServices'\nimport instance from '../instance'\nconst axios = instance('/c/cvs')\n\nexport default class ForApprovalServices extends ClaimsAdjudicationServices {\n  static getItems (params) {\n    return axios({\n      url: `/claims/for-approval`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getItemCount (params) {\n    return axios({\n      url: `/claims/for-approval/count`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClaim ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}`,\n      method: 'GET'\n    })\n  }\n\n  static approve ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/approve`,\n      method: 'POST'\n    })\n  }\n\n  static getComments ({ claim_number }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/comments`,\n      method: 'GET'\n    })\n  }\n\n  static comment ({ claim_number, data }) {\n    return axios({\n      url: `/claims/for-approval/${claim_number}/comment`,\n      method: 'POST',\n      params: { claim_number },\n      data\n    })\n  }\n\n  static getUtilizations ({ member_account_no, type, icd_code }) {\n    return axios({\n      url: `/claims/for-approval/${member_account_no}/utilizations`,\n      method: 'GET',\n      params: { type, icd_code }\n    })\n  }\n\n  static getPartners ({ member_account_no, params }) {\n    return axios({\n      url: `/claims/for-approval/${member_account_no}/partners`,\n      method: 'GET',\n      params,\n      data: { member_account_no }\n    })\n  }\n\n  static update ({ claim_number, body }) {\n    return new Promise(resolve => resolve())\n  }\n}\n","import instance from './../instance'\nimport { ExcludeErrorConstants } from 'Services/ErrorHandler/exclude'\nimport ClaimsAdjudicationServices from './ClaimsAdjudicationServices'\nimport ReconciledServices from './ReconciledServices'\nimport ForApprovalServices from './ForApprovalServices'\n\nconst axios = instance('/c/cvs')\n\nclass index {\n  // MOCK ENDPOINT\n  static getUsers (params) {\n    return axios({\n      url: `/lookups/users`,\n      method: 'GET',\n      params,\n      headers: { [ExcludeErrorConstants['all']]: 1 }\n    })\n  }\n}\n\nindex.ReconciledServices = ReconciledServices\nindex.ForApprovalServices = ForApprovalServices\nindex.ClaimsAdjudicationServices = ClaimsAdjudicationServices\nexport default index\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\n\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport TaskTray from 'SharedComponents/TaskTrayComponent/TaskTrayComponent'\nimport TicketList from 'SharedComponents/TicketListComponent/TicketListComponent'\nimport ForAdjudicationTile from './../../../Components/ForAdjudicationTile/ForAdjudicationTile'\nimport MyClaimsTile from './../../../Components/MyClaimsTile/MyClaimsTile'\nimport SubmittedClaimsTile from './../../../Components/SubmittedClaimsTile/SubmittedClaimsTile'\nimport ReturnedEscalatedClaimsTile from './../../../Components/ReturnedEscalatedClaimsTile/ReturnedEscalatedClaimsTile'\nimport ReconciledClaimsTile from '../../Components/ReconciledClaimsTile/ReconciledClaimsTile'\nimport ClaimsVerifierTile from '../../Components/ClaimsVerifierTile/ClaimsVerifierTile'\nimport ClaimsForApprovalTile from '../../Components/ClaimsForApprovalTile/ClaimsForApprovalTile'\nimport MedicalCollectiblesTile from '../../Components/MedicalCollectiblesTile/MedicalCollectiblesTile'\nimport ReimbursementClaimTile from '../../Components/ReimbursementClaimTile/ReimbursementClaimTile'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard (props) {\n  React.useEffect(() => {\n    PageTitleService('Dashboard')\n    BreadcrumbsService.setSelectedItems(['dashboard'])\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.tiles} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} title='Claims Adjudication'>\n            <ForAdjudicationTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n            <MyClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n            <SubmittedClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 8 }} title='Items to Monitor'>\n            <ClaimsVerifierTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n\n            <ClaimsForApprovalTile\n              services={ClaimsVerifierSupervisorServices.ForApprovalServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n            {/* <ReturnedEscalatedClaimsTile services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices} sizes={{ sm: 4 }} {...props} /> */}\n          </TaskTray>\n        </Grid>\n\n        <Grid item className={classes['ticket-list']}>\n          <TicketList count={0} title='Open Tickets' viewAllLink={{ to: '/', caption: 'View all' }}>\n            <Table size='small'>\n              <TableHead>\n                <TableRow>\n                  <TableCell id='cvs-ticket-no'>Ticket #</TableCell>\n                  <TableCell id='cvs-date'>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {[1, 2].map((item, index) => (\n                  <TableRow key={index}>\n                    <TableCell id={`cvs-ticket-no-${index}`}>2334324343</TableCell>\n                    <TableCell id={`cvs-date-${index}`}>08/12/2019</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TicketList>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.tiles} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <ReturnedEscalatedClaimsTile\n              services={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n\n            <DashboardTile\n              id='rejected-claims'\n              count={{ color: 3, value: 0, id: 'rejected-claims-count' }}\n              title='Rejected Claims'\n              viewList={\n                <Typography id='rj-view-list' variant='caption' className='bold text-link'>\n                  View List\n                </Typography>\n              }\n              sizes={{ sm: 4 }}\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='rj-batch-no'>Batch No.</TableCell>\n                    <TableCell id='rj-due-date'>Due Date</TableCell>\n                    <TableCell id='rj-facility-name'>Facility Name</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody />\n              </Table>\n            </DashboardTile>\n\n            <ReconciledClaimsTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 4 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n\n      <Grid container className={`${classes.tiles} ${classes.row}`} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <TaskTray sizes={{ xs: 12 }} showTitle={false}>\n            <MedicalCollectiblesTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n\n            <ReimbursementClaimTile\n              services={ClaimsVerifierSupervisorServices.ReconciledServices}\n              sizes={{ sm: 6 }}\n              {...props}\n            />\n          </TaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\n// Pages\nimport Dashboard from './Pages/Dashboard/Dashboard'\n\n// Services\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\n// To be edit\nimport ClaimsVerifierSupervisorServices from 'Services/Api/ClaimsVerifierSupervisorServices'\n\n// Component\nimport ClaimsViewer from '../ClaimsViewer'\n\n// Store\nimport Store from '../ClaimsViewer/Store'\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  }\n]\n\nconst breadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  claims: {\n    text: 'Claims',\n    to: '/claims'\n  },\n  specificClaim: {\n    text: data => data,\n    to: data => `/claims/${data}`\n  },\n  analyze: {\n    text: 'Analyze',\n    to: ''\n  },\n  reconciled: {\n    text: 'Reconciled',\n    to: ''\n  },\n  forApproval: {\n    text: 'For Approval',\n    to: ''\n  }\n}\n\nconst permissions = {\n  base: {\n    create: false,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: {} },\n    save: { visible: true, enabled: true, options: {} },\n    reassign: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forAdjudicationPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {\n        AuthorityMatrix: {\n          InPatient: 45000,\n          other_types: 5000\n        }\n      }\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nconst forApprovalPermissions = {\n  base: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  diagnosis: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  procedures: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  hospital_items: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  professional_fees: {\n    create: false,\n    read: true,\n    update: false,\n    delete: false,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    return: { visible: true, enabled: true, options: {} },\n    approve: { visible: true, enabled: true, options: { checkThreshold: true } }\n  }\n}\n\nconst forReconciledPermissions = {\n  base: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  diagnosis: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  procedures: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  hospital_items: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  professional_fees: {\n    create: true,\n    read: true,\n    update: true,\n    delete: true,\n    options: {}\n  },\n  tabs: {\n    benefits: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    partner: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    utilization: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    contact: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    comments: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n      options: {}\n    },\n    notes: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false\n    }\n  },\n  footer: {\n    visible: true,\n    enabled: true,\n    escalate: { visible: true, enabled: true, options: { roles: ['MEDICAL_CONSULTANT'] } },\n    reject: { visible: true, enabled: true, options: {} },\n    approve: {\n      visible: true,\n      enabled: true,\n      options: {}\n    },\n    save: { visible: true, enabled: true, options: {} }\n  }\n}\n\nfunction ClaimsSupervisorRoutes () {\n  SideBarService.setItems(sideBarItems)\n  BreadcrumbsService.setItems(breadcrumbs)\n\n  return (\n    <Switch>\n      <Route path='/' exact component={Dashboard} />\n      <Provider store={Store}>\n        <Route\n          path='/claims/:claim_number/analyze'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'analyze']}\n              {...props}\n              permissions={forAdjudicationPermissions}\n              ApiService={ClaimsVerifierSupervisorServices.ClaimsAdjudicationServices}\n            />\n          )}\n        />\n\n        <Route\n          path='/claims/reconciled/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'reconciled']}\n              {...props}\n              permissions={forReconciledPermissions}\n              ApiService={ClaimsVerifierSupervisorServices.ReconciledServices}\n            />\n          )}\n        />\n\n        <Route\n          path='/claims/for-approval/:claim_number'\n          exact\n          render={props => (\n            <ClaimsViewer\n              breadCrumbsList={['claims', `specificClaim:${props.match.params.claim_number}`, 'forApproval']}\n              {...props}\n              permissions={forApprovalPermissions}\n              ApiService={ClaimsVerifierSupervisorServices.ForApprovalServices}\n            />\n          )}\n        />\n      </Provider>\n    </Switch>\n  )\n}\n\nexport default ClaimsSupervisorRoutes\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\nimport BatchEncoderRoutes from './BatchEncoder/Routes'\nimport ClaimsDetailsEncoderRoutes from './ClaimsDetailsEncoder/Routes'\nimport ClaimsAnalystRoutes from './ClaimsAnalyst/Routes'\nimport PaymentRequestRoutes from './PaymentRequest/Routes'\nimport MedicalConsultantRoutes from './MedicalConsultant/Routes'\nimport ClaimsReconciliationRoutes from './ClaimsReconciliation/Routes'\nimport ClaimsVerifierSupervisorRoutes from './ClaimsVerifierSupervisor/Routes'\nimport BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nexport default function ClaimsModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Claims'\n    const role = localStorage.getItem('role')\n    setUserRole(role)\n    setIsLoading(false)\n  }, [])\n\n  const batchEncoderLogic = () => {\n    if (localStorage.getItem('from_login')) {\n      BatchEncodingServices.createBundle().then(res => {\n        const { data } = res.data\n        localStorage.removeItem('from_login')\n        history.push(`/bundles/${data}/create`)\n      })\n    } else return <Route path='/' component={BatchEncoderRoutes} />\n  }\n\n  return (\n    <React.Fragment>\n      {!isLoading && (\n        <Switch>\n          {userRole === 'BATCH_ENCODER' && batchEncoderLogic()}\n\n          {userRole === 'CLAIMS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n          {userRole === 'CLAIMS_DETAILS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER' && <Route path='/' component={ClaimsAnalystRoutes} />}\n          {userRole === 'CLAIMS_ANALYST' && <Route path='/' component={ClaimsAnalystRoutes} />}\n\n          {userRole === 'PR_OFFICER' && <Route path='/' component={PaymentRequestRoutes} />}\n\n          {userRole === 'MEDICAL_CONSULTANT' && <Route path='/' component={MedicalConsultantRoutes} />}\n\n          {userRole === 'CLAIMS_RECON' && <Route path='/' component={ClaimsReconciliationRoutes} />}\n\n          {userRole === 'CLAIMS_VERIFIER_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n          {userRole === 'CLAIMS_SUPERVISOR' && <Route path='/' component={ClaimsVerifierSupervisorRoutes} />}\n        </Switch>\n      )}\n    </React.Fragment>\n  )\n}\n","const initialState = []\nconst sidebarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SIDEBAR_ITEMS':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default sidebarReducer\n","const pageTitleReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_DASHBOARD_PAGE_TITLE':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageTitleReducer\n","const initialState = {\n  items: {},\n  selected: []\n}\nconst breadcrumbsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BREADCRUMBS_ITEMS':\n      return {\n        ...state,\n        items: action.payload\n      }\n\n    case 'SET_SELECTED_BREADCRUMBS':\n      return {\n        ...state,\n        selected: [\n          { text: 'Home', to: '/' },\n          ...action.payload.map(_item => {\n            const [item, value] = _item.split(':')\n\n            if (value) {\n              const { text, to } = state.items[item]\n              return {\n                text: text(value),\n                to: to(value)\n              }\n            } else {\n              return state.items[item]\n            }\n          })\n        ]\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default breadcrumbsReducer\n","const pageLoading = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_PAGE_LOADING':\n      return action.payload\n\n    default:\n      return state\n  }\n}\n\nexport default pageLoading\n","const initialState = {\n  open: false,\n  severity: '',\n  message: ''\n}\nconst snackbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_SNACKBAR':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default snackbarReducer\n","const initialState = {}\nconst pdfReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_PDF':\n      return { ...state, ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default pdfReducer\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nconst args = [reducers]\n\nif (process.env.REACT_APP_SELECTED_STORE === 'ROOT') {\n  args.push(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nexport default createStore(...args)\n","import { combineReducers } from 'redux'\nimport sidebarReducer from './sidebarReducer'\nimport pageTitleReducer from './pageTitleReducer'\nimport breadcrumbsReducer from './breadcrumbsReducer'\nimport pageLoadingReducer from './pageLoadingReducer'\nimport snackbarReducer from './snackbarReducer'\nimport pdfReducer from './pdfReducer'\n\nconst reducers = combineReducers({\n  sidebar: sidebarReducer,\n  pageTitle: pageTitleReducer,\n  breadcrumbs: breadcrumbsReducer,\n  pageLoading: pageLoadingReducer,\n  snackbar: snackbarReducer,\n  pdf: pdfReducer\n})\n\nexport default reducers\n","let subscribers = {}\n\nexport default class ProtectedPageScrollEvent {\n  static publish () {\n    for (let key in subscribers) {\n      if (subscribers[key]) subscribers[key]()\n    }\n  }\n\n  static subscribe (name, cb) {\n    setTimeout(() => (subscribers[name] = cb), 10)\n  }\n\n  static unsubscribe (name) {\n    subscribers[name] = undefined\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport CommonServices from 'Services/Api/CommonServices'\nimport { Provider } from 'react-redux'\n\n// Compoents\nimport HeaderComponent from 'SharedComponents/HeaderComponent/HeaderComponent'\nimport { SideBarComponent } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { PageTitleComponent } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsComponent } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { LoadingComponent } from 'SharedComponents/LoadingComponent/LoadingComponent'\nimport { SnackbarComponent } from 'SharedComponents/SnackbarComponent/SnackbarComponent'\nimport { PdfViewer2Component } from 'SharedComponents/PdfViewer2/PdfViewer2'\nimport { IcdCptStatusComponent } from 'SharedComponents/IcdCptStatus/IcdCptStatus'\n\n// Modules\nimport Claims from './Claims'\n\n// Error Page\nimport { ErrorPageInit, ErrorPage } from 'SharedComponents/404/404'\n\n// classes\nimport classes from './Protected.module.scss'\n\n// Store\nimport Store from './Store'\n\n// Services\nimport ProtectedPageScrollEvent from 'Services/ProtectedPageScrollEvent'\n\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nexport default function Protected ({ history }) {\n  const [selectedModule, setSelectedModule] = React.useState('')\n  const [isAauthorized, setIsAuthorized] = React.useState(false)\n  const [containerNode, setContainerNode] = React.useState(null)\n\n  const getMe = async () => {\n    const user_data = await ConfigController2.getUserManagementData()\n\n    if (!user_data) return resetToLogin()\n\n    const { access_token, main_module, main_role, user_id } = user_data\n\n    const module = main_module.toUpperCase()\n\n    window.localStorage.setItem('token', access_token)\n    window.localStorage.setItem('module', module)\n    window.localStorage.setItem('role', main_role)\n    window.localStorage.setItem('user_id', user_id)\n    window.localStorage.setItem('from_login', true)\n\n    setSelectedModule(module)\n    setIsAuthorized(true)\n  }\n\n  React.useEffect(() => {\n    getMe()\n  }, [])\n\n  const routesForModule = () => {\n    switch (selectedModule) {\n      case 'CLAIMS':\n        return <Route path='/' component={Claims} />\n\n      default:\n        break\n    }\n  }\n\n  const resetToLogin = async () => {\n    await ConfigController2.clearUserManagementData()\n\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('me')\n    window.localStorage.removeItem('from_login')\n    window.localStorage.removeItem('api_token')\n    window.localStorage.removeItem('pm_token')\n    window.localStorage.removeItem('user_id')\n    window.localStorage.removeItem('employee_id')\n    window.localStorage.removeItem('first_name')\n    window.localStorage.removeItem('last_name')\n\n    const { href, protocol, origin } = window.location\n    let url = origin\n    if (protocol.includes('file')) url = `${href.split('.html')[0]}.html`\n    window.location.assign(`${url}#/login`)\n  }\n\n  const logout = () => {\n    const accessToken = window.localStorage.getItem('token')\n\n    if (!accessToken) return resetToLogin()\n\n    CommonServices.logout({ access_token: accessToken })\n      .then(data => {\n        resetToLogin()\n      })\n      .catch(({ response }) => {\n        try {\n          const { error } = response.data\n          if (error.statusCode === 428) resetToLogin()\n        } catch (err) {\n          resetToLogin()\n        }\n      })\n  }\n\n  const scrollContainer = event => {\n    const { scrollTop } = containerNode\n    containerNode.scrollTo({ top: scrollTop + event.deltaY })\n  }\n\n  return (\n    <React.Fragment>\n      {isAauthorized && (\n        <div className={classes['main-container']}>\n          <Provider store={Store}>\n            <SideBarComponent />\n            <PdfViewer2Component />\n          </Provider>\n\n          <div className={classes['sub-container']}>\n            <HeaderComponent logout={logout} />\n\n            <Switch>\n              <Route path='/404' exact component={ErrorPage} />\n              <Route\n                path='/'\n                render={props => (\n                  <Grid\n                    item\n                    className={classes.content}\n                    onScroll={ProtectedPageScrollEvent.publish}\n                    ref={setContainerNode}\n                  >\n                    <Provider store={Store}>\n                      <SnackbarComponent />\n                      <PageTitleComponent />\n                      <BreadcrumbsComponent />\n                      <LoadingComponent onScrollContainer={scrollContainer} containerNode={containerNode} />\n                    </Provider>\n                    <Switch>\n                      <React.Fragment>{routesForModule()}</React.Fragment>\n                    </Switch>\n                  </Grid>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      )}\n      <ErrorPageInit />\n      <IcdCptStatusComponent />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport 'typeface-roboto'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport './App.scss'\n\nimport FontAwesomeLibrary from './FontAwesomeLibrary'\n\n// Pages\nimport LoginPage from 'Pages/LoginPage/LoginPage'\nimport Protected from 'Pages/Protected/Protected'\n\n// Utilities\nimport ConfigController2 from 'Controllers/ConfigController2'\n\nFontAwesomeLibrary.init()\n\nConfigController2.initializeBaseUrls()\n\nfunction App () {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path='/login' exact component={LoginPage} />\n          <Route path='/' component={Protected} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimDental_root__piMxu\",\"first-container\":\"ClaimDental_first-container__LmMqT\",\"groups\":\"ClaimDental_groups__2qQWu\",\"input\":\"ClaimDental_input__2SMFL\",\"contract-range\":\"ClaimDental_contract-range__1wxMU\",\"chart\":\"ClaimDental_chart__1dVVV\",\"child-container\":\"ClaimDental_child-container__1kc8d\",\"left-side\":\"ClaimDental_left-side__2rJGi\",\"right-side\":\"ClaimDental_right-side__1qXh4\",\"tables-container\":\"ClaimDental_tables-container__2A37S\",\"wrapper\":\"ClaimDental_wrapper__2ooJP\",\"table\":\"ClaimDental_table__1Tnom\",\"table-header\":\"ClaimDental_table-header__WmMHk\",\"table-description\":\"ClaimDental_table-description__awAYs\",\"add-link\":\"ClaimDental_add-link__3dTLf\",\"row\":\"ClaimDental_row__32w9z\",\"align\":\"ClaimDental_align__1Hx-G\",\"center\":\"ClaimDental_center__3I_Bh\",\"right\":\"ClaimDental_right__3reZO\",\"table-total\":\"ClaimDental_table-total__uCDLB\",\"caption\":\"ClaimDental_caption__26Ik2\",\"amount\":\"ClaimDental_amount__1sb2b\",\"sticky\":\"ClaimDental_sticky__2Stts\",\"grand-total\":\"ClaimDental_grand-total__LWrnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchDetails_root__3Vmeb\",\"groups\":\"BatchDetails_groups__1_QIJ\",\"input\":\"BatchDetails_input__1dPNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimECU_root__12_y0\",\"first-container\":\"ClaimECU_first-container__2xAv8\",\"groups\":\"ClaimECU_groups__2p1Fe\",\"input\":\"ClaimECU_input__QraMd\",\"child-container\":\"ClaimECU_child-container__1Gdnl\",\"tables-container\":\"ClaimECU_tables-container__30mfe\",\"left-side\":\"ClaimECU_left-side__X_Ryh\",\"wrapper\":\"ClaimECU_wrapper__2-n9O\",\"table\":\"ClaimECU_table__38LSn\",\"table-header\":\"ClaimECU_table-header__2XWNc\",\"table-description\":\"ClaimECU_table-description__1Y5e8\",\"add-link\":\"ClaimECU_add-link__2N8RQ\",\"row\":\"ClaimECU_row__mGpqj\",\"align\":\"ClaimECU_align__18Dal\",\"center\":\"ClaimECU_center__1fK8V\",\"right\":\"ClaimECU_right__32blH\",\"table-total\":\"ClaimECU_table-total__90P4P\",\"caption\":\"ClaimECU_caption__1o9Zj\",\"amount\":\"ClaimECU_amount__2Hhdf\",\"right-side\":\"ClaimECU_right-side__3c5GS\",\"sticky\":\"ClaimECU_sticky__14EYz\",\"grand-total\":\"ClaimECU_grand-total__jxFHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-bar\":\"PdfViewer_app-bar__3f5jD\",\"root\":\"PdfViewer_root__2K-e8\",\"controls\":\"PdfViewer_controls__20Y1N\",\"control\":\"PdfViewer_control__skaaD\",\"disabled\":\"PdfViewer_disabled__2WDYA\",\"pdf\":\"PdfViewer_pdf__2EEvF\",\"page-number\":\"PdfViewer_page-number__19qlt\",\"file-name\":\"PdfViewer_file-name__32XTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewBundlePage_root__2uI8s\",\"inputs\":\"NewBundlePage_inputs__2C5KM\",\"input\":\"NewBundlePage_input__8z70X\",\"actions\":\"NewBundlePage_actions__1eP66\",\"save\":\"NewBundlePage_save__3IbSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimPPE_root__vCzHt\",\"first-container\":\"ClaimPPE_first-container__YOvn9\",\"groups\":\"ClaimPPE_groups__8UnV7\",\"input\":\"ClaimPPE_input__2OCOp\",\"packages\":\"ClaimPPE_packages__1mnja\",\"child-container\":\"ClaimPPE_child-container__1hHPa\",\"tables-container\":\"ClaimPPE_tables-container__2GdOv\",\"left-side\":\"ClaimPPE_left-side__3AU6f\",\"wrapper\":\"ClaimPPE_wrapper__bZKtb\",\"table\":\"ClaimPPE_table__2twAn\",\"table-header\":\"ClaimPPE_table-header__1lTtb\",\"table-description\":\"ClaimPPE_table-description__3c6yl\",\"add-link\":\"ClaimPPE_add-link__ULei2\",\"row\":\"ClaimPPE_row__2bU8T\",\"align\":\"ClaimPPE_align__3Hzne\",\"center\":\"ClaimPPE_center__id_a_\",\"right\":\"ClaimPPE_right__1EdE_\",\"table-total\":\"ClaimPPE_table-total__3LI2J\",\"caption\":\"ClaimPPE_caption__2owlw\",\"amount\":\"ClaimPPE_amount__3wkC6\",\"right-side\":\"ClaimPPE_right-side__2zQxe\",\"sticky\":\"ClaimPPE_sticky__KlhLw\",\"grand-total\":\"ClaimPPE_grand-total__2c6a4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfessionalFeeForm_root__dmj-f\",\"groups\":\"ProfessionalFeeForm_groups__2HYi5\",\"first-item\":\"ProfessionalFeeForm_first-item__2xz1G\",\"input\":\"ProfessionalFeeForm_input__3T9ZD\",\"buttons\":\"ProfessionalFeeForm_buttons__2lHCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__33_jP\",\"first-container\":\"ClaimAPE_first-container__2GhQb\",\"groups\":\"ClaimAPE_groups__1so6S\",\"input\":\"ClaimAPE_input__3YCJP\",\"contract-range\":\"ClaimAPE_contract-range__3ndpi\",\"child-container\":\"ClaimAPE_child-container__3K1NT\",\"tables-container\":\"ClaimAPE_tables-container__3FZpM\",\"left-side\":\"ClaimAPE_left-side__Dn2r2\",\"wrapper\":\"ClaimAPE_wrapper__1o-j6\",\"table\":\"ClaimAPE_table__1712c\",\"table-header\":\"ClaimAPE_table-header__3Wtai\",\"table-description\":\"ClaimAPE_table-description__3Th5T\",\"add-link\":\"ClaimAPE_add-link__164II\",\"row\":\"ClaimAPE_row__2SFXN\",\"align\":\"ClaimAPE_align__zZw0w\",\"center\":\"ClaimAPE_center__2vDr-\",\"right\":\"ClaimAPE_right__33hqW\",\"table-total\":\"ClaimAPE_table-total__3QUPH\",\"caption\":\"ClaimAPE_caption__3fFSz\",\"amount\":\"ClaimAPE_amount__VNmzU\",\"right-side\":\"ClaimAPE_right-side__1KdqK\",\"sticky\":\"ClaimAPE_sticky__2Gc6m\",\"grand-total\":\"ClaimAPE_grand-total__17ewH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimAPE_root__2m8Lu\",\"first-container\":\"ClaimAPE_first-container__3PWnI\",\"groups\":\"ClaimAPE_groups__vIfIX\",\"input\":\"ClaimAPE_input__farwF\",\"contract-range\":\"ClaimAPE_contract-range__2nau5\",\"child-container\":\"ClaimAPE_child-container__3Htma\",\"left-side\":\"ClaimAPE_left-side__25eyc\",\"right-side\":\"ClaimAPE_right-side__RtqaO\",\"tables-container\":\"ClaimAPE_tables-container__2sIPf\",\"wrapper\":\"ClaimAPE_wrapper__39pqO\",\"table\":\"ClaimAPE_table__h9OzX\",\"table-header\":\"ClaimAPE_table-header__ZlR0k\",\"table-description\":\"ClaimAPE_table-description__3Tdg7\",\"add-link\":\"ClaimAPE_add-link__3Ex_N\",\"row\":\"ClaimAPE_row__3kZSx\",\"align\":\"ClaimAPE_align__1JCc1\",\"center\":\"ClaimAPE_center__3Oe4M\",\"right\":\"ClaimAPE_right__NwB2D\",\"table-total\":\"ClaimAPE_table-total__2thd4\",\"caption\":\"ClaimAPE_caption__3SapE\",\"amount\":\"ClaimAPE_amount__1w3nh\",\"sticky\":\"ClaimAPE_sticky__NJ87e\",\"grand-total\":\"ClaimAPE_grand-total__rC9eR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BatchForm_root__2X3T0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProviderSchedule_root__3SqG4\",\"header-container\":\"ProviderSchedule_header-container__2r94G\",\"header1\":\"ProviderSchedule_header1__1HzhR\",\"title\":\"ProviderSchedule_title__2kBP5\",\"body\":\"ProviderSchedule_body__3cLok\",\"content\":\"ProviderSchedule_content__2bgfD\",\"table\":\"ProviderSchedule_table__1mxLb\",\"groups\":\"ProviderSchedule_groups__3BR0S\",\"partition\":\"ProviderSchedule_partition__2GvSx\",\"action\":\"ProviderSchedule_action__3-dj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContractRange_root__3nD_-\",\"container\":\"ContractRange_container__1yYoI\",\"focus\":\"ContractRange_focus__209RV\",\"has-error\":\"ContractRange_has-error__26k8I\",\"label\":\"ContractRange_label__16qj0\",\"values\":\"ContractRange_values__1s186\",\"suggestions\":\"ContractRange_suggestions__3mNVu\",\"add-margin\":\"ContractRange_add-margin__36OMI\",\"header\":\"ContractRange_header__2vYoG\",\"values-container\":\"ContractRange_values-container__2mlE7\",\"message\":\"ContractRange_message__1DGJU\",\"list\":\"ContractRange_list__12tdX\",\"item\":\"ContractRange_item__WiBsw\",\"error\":\"ContractRange_error__19pL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimClinicManagement_root__3-pXP\",\"first-container\":\"ClaimClinicManagement_first-container__2A7Vg\",\"groups\":\"ClaimClinicManagement_groups__3IK3C\",\"input\":\"ClaimClinicManagement_input__LASyG\",\"child-container\":\"ClaimClinicManagement_child-container__3vVN_\",\"tables-container\":\"ClaimClinicManagement_tables-container__C0Tks\",\"left-side\":\"ClaimClinicManagement_left-side__3tU8J\",\"wrapper\":\"ClaimClinicManagement_wrapper__1wYq3\",\"table\":\"ClaimClinicManagement_table__3RTGB\",\"table-header\":\"ClaimClinicManagement_table-header__3srgG\",\"table-description\":\"ClaimClinicManagement_table-description__2teCY\",\"add-link\":\"ClaimClinicManagement_add-link__2o3Ds\",\"row\":\"ClaimClinicManagement_row__pYD5k\",\"align\":\"ClaimClinicManagement_align__32npC\",\"center\":\"ClaimClinicManagement_center__66Zig\",\"right\":\"ClaimClinicManagement_right__epIYQ\",\"table-total\":\"ClaimClinicManagement_table-total__2hmFl\",\"caption\":\"ClaimClinicManagement_caption__2hvlp\",\"amount\":\"ClaimClinicManagement_amount__1AjZw\",\"right-side\":\"ClaimClinicManagement_right-side__2zlmc\",\"sticky\":\"ClaimClinicManagement_sticky__3ZbxS\",\"grand-total\":\"ClaimClinicManagement_grand-total__2Yeg7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClaimMedicineAllowance_root__4parl\",\"first-container\":\"ClaimMedicineAllowance_first-container__r8g7f\",\"groups\":\"ClaimMedicineAllowance_groups__aB3Az\",\"input\":\"ClaimMedicineAllowance_input__K79tw\",\"child-container\":\"ClaimMedicineAllowance_child-container__1SnGP\",\"left-side\":\"ClaimMedicineAllowance_left-side__1b3Wi\",\"right-side\":\"ClaimMedicineAllowance_right-side__3zBkr\",\"tables-container\":\"ClaimMedicineAllowance_tables-container__3L0e-\",\"wrapper\":\"ClaimMedicineAllowance_wrapper__35UBn\",\"table\":\"ClaimMedicineAllowance_table__Ul5CP\",\"table-header\":\"ClaimMedicineAllowance_table-header__355yM\",\"table-description\":\"ClaimMedicineAllowance_table-description__3YS1q\",\"add-link\":\"ClaimMedicineAllowance_add-link__2vUUq\",\"row\":\"ClaimMedicineAllowance_row__1tIZ1\",\"align\":\"ClaimMedicineAllowance_align__29eIS\",\"center\":\"ClaimMedicineAllowance_center__2kZIo\",\"right\":\"ClaimMedicineAllowance_right__1_810\",\"table-total\":\"ClaimMedicineAllowance_table-total__3TMUK\",\"caption\":\"ClaimMedicineAllowance_caption__3n1fs\",\"amount\":\"ClaimMedicineAllowance_amount__2bUXu\",\"sticky\":\"ClaimMedicineAllowance_sticky__2shXK\",\"grand-total\":\"ClaimMedicineAllowance_grand-total__1NbR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SideBarComponent_root__3Etcc\",\"menu\":\"SideBarComponent_menu__3zk9I\",\"item\":\"SideBarComponent_item__NPnMw\",\"circle\":\"SideBarComponent_circle__3uyWE\",\"icon\":\"SideBarComponent_icon__2aPgO\",\"text\":\"SideBarComponent_text__2tI7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TicketListComponent_root__aFbrR\",\"title\":\"TicketListComponent_title__1ySxt\",\"wrapper\":\"TicketListComponent_wrapper__19DvO\",\"content\":\"TicketListComponent_content__2qWWX\",\"header\":\"TicketListComponent_header__1OiZt\",\"input\":\"TicketListComponent_input__1VLul\",\"count\":\"TicketListComponent_count__3DIoE\",\"filter\":\"TicketListComponent_filter__1CeKK\",\"list\":\"TicketListComponent_list__314I6\",\"action\":\"TicketListComponent_action__Ufizk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DatePicker_root__MX4vO\",\"label\":\"DatePicker_label__2BW98\",\"wrapper\":\"DatePicker_wrapper__3veK8\",\"read-only-value\":\"DatePicker_read-only-value__2RKjx\",\"text-field\":\"DatePicker_text-field__2A671\",\"input\":\"DatePicker_input__2NmuO\",\"date-button\":\"DatePicker_date-button__NIXXn\",\"focus\":\"DatePicker_focus__QzQPi\",\"has-error\":\"DatePicker_has-error__dQMqm\",\"error\":\"DatePicker_error__3kYtU\",\"date\":\"DatePicker_date__3vBBF\"};"],"sourceRoot":""}