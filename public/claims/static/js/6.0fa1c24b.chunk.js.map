{"version":3,"sources":["Utilities/TextFormatter.js","Services/ExtractValidationResult.js","SharedComponents/Table/Table.js","SharedComponents/Alert/Alert.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.js","SharedComponents/SearchTextComponent/SearchTextComponent.js","SharedComponents/TextFieldCurrency/TextFieldCurrency.js","SharedComponents/EnhancedTable/EnhancedTable.js","SharedComponents/DashboardTileComponent/DashboardTileComponent.module.scss","SharedComponents/Table/Table.module.scss","SharedComponents/TextFieldCurrency/TextFieldCurrency.module.scss","StandardComponents/ContentPageComponent/ContentPageComponent.module.scss","Pages/Protected/BillingAndCollection/BillingPages/SOAPage/SOAPage.module.scss","StandardComponents/TreeViewTable/TreeViewTable.module.scss","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/CreateTransactionCreditNotePage.module.scss","Pages/Protected/BillingAndCollection/Components/CustomTaskTrayComponent/CustomTaskTrayComponent.module.scss","Pages/Protected/BillingAndCollection/Components/CustomSearchTextComponent/CustomSearchTextComponent.module.scss","Pages/Protected/BillingAndCollection/Components/CustomEnhancedTable/CustomEnhancedTable.module.scss","Pages/Protected/BillingAndCollection/Components/ViewAll/ViewAll.module.scss","Pages/Protected/BillingAndCollection/BillingPages/DashboardAnalyst/Dashboard.module.scss","Pages/Protected/BillingAndCollection/BillingPages/DashboardSupervisor/Dashboard.module.scss","StandardComponents/CustomTabs/CustomTabs.module.scss","Pages/Protected/BillingAndCollection/Components/ViewMore/ViewMore.module.scss","Pages/Protected/BillingAndCollection/Components/AssignAnalystConfirmDialogue/ConfirmDialog.module.scss","Pages/Protected/BillingAndCollection/Components/BillingAnalystTab/BillingAnalystTab.module.scss","Pages/Protected/BillingAndCollection/Components/BillingInstructionsTab/BillingInstructionsTab.module.scss","Pages/Protected/BillingAndCollection/BillingPages/AssignAnalystPage/AssignClientPage.module.scss","StandardComponents/HeaderDetails/HeaderDetails.module.scss","StandardComponents/TextField/CustomTextField.module.scss","StandardComponents/Void/Void.module.scss","Pages/Protected/BillingAndCollection/Components/Void/Void.module.scss","Pages/Protected/BillingAndCollection/Components/ContentPageComponent/ContentPageComponent.module.scss","StandardComponents/PdfViewer/PdfViewer.module.scss","StandardComponents/Submit/Submit.module.scss","StandardComponents/Disapprove/Disapprove.module.scss","StandardComponents/Approve/Approve.module.scss","StandardComponents/ContentHeader/ContentHeader.module.scss","StandardComponents/Analyze/Analyze.module.scss","Pages/Protected/BillingAndCollection/Components/TabPanelComponent/TabPanelComponent.module.scss","Pages/Protected/BillingAndCollection/Components/CustomPropertyText/CustomPropertyText.module.scss","Pages/Protected/BillingAndCollection/Components/AnalystTab/BillingAnalystTab.module.scss","Pages/Protected/BillingAndCollection/Components/ConfirmDialog/ConfirmDialog.module.scss","StandardComponents/DropDown/DropDown.module.scss","Pages/Protected/BillingAndCollection/Components/BillingCycleTab/BillingCycleTab.module.scss","Pages/Protected/BillingAndCollection/Components/BillingTermsAndConditionsTab/BillingTermsAndConditionsTab.module.scss","Pages/Protected/BillingAndCollection/BillingPages/BillingCycleSetupPage/AnalyzeClientPage.module.scss","Pages/Protected/BillingAndCollection/Components/ViewList/ViewList.module.scss","SharedComponents/TableFooterComponent/TableFooterComponent.module.scss","Pages/Protected/BillingAndCollection/BillingPages/ClientTransactionSetupPage/ClientTransactionSetupPage.module.scss","Pages/Protected/BillingAndCollection/Components/HeaderDetails/HeaderDetails.module.scss","Pages/Protected/BillingAndCollection/Components/ContentPage/ContentPage.module.scss","Pages/Protected/BillingAndCollection/BillingPages/InvoiceApprovedPage/InvoiceApprovedPage.module.scss","Pages/Protected/BillingAndCollection/Components/EnhancedSearchComponent/EnhancedSearchComponent.module.scss","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/CreateTransactionPage.module.scss","Pages/Protected/BillingAndCollection/BillingPages/ListOfAccountsPage/ListOfAccountsPage.module.scss","../node_modules/typescript/lib sync","Pages/Protected/BillingAndCollection/BillingPages/ClientTransactionJournalPage/ClientTransactionJournalPage.module.scss","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/EnhacedSearchReferenceNo.module.scss","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/CreateTransactionTypePage.module.scss","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/TempTableForMemo.module.scss","Pages/Protected/BillingAndCollection/BillingPages/InvoicePendingPage/InvoicePendingPage.module.scss","Pages/Protected/SecurityConfig/rbac-config.js","Pages/Protected/SecurityConfig/Can.js","Pages/Protected/BillingAndCollection/Components/CustomTaskTrayComponent/CustomTaskTrayComponent.js","Pages/Protected/BillingAndCollection/Components/CustomSearchTextComponent/CustomSearchTextComponent.js","Pages/Protected/BillingAndCollection/Components/CustomEnhancedTable/CustomEnhancedTable.js","Utilities/GrabObject.js","Pages/Protected/BillingAndCollection/Components/ViewAll/ViewAll.js","Services/Api/BillingAnalystServices.js","Services/Api/BillingClientInvoicesServices.js","Pages/Protected/BillingAndCollection/BillingPages/DashboardAnalyst/ViewAllConfig.js","Pages/Protected/BillingAndCollection/BillingPages/DashboardAnalyst/DashboardAnalyst.js","Services/Api/BillingSupervisorServices.js","Pages/Protected/BillingAndCollection/BillingPages/DashboardSupervisor/ViewAllConfig.js","Pages/Protected/BillingAndCollection/BillingPages/DashboardSupervisor/DashboardSupervisor.js","StandardComponents/CustomTabs/CustomTabs.js","Pages/Protected/BillingAndCollection/Components/ViewMore/ViewMore.js","Pages/Protected/BillingAndCollection/Components/AssignAnalystConfirmDialogue/ConfirmDialog.js","Pages/Protected/BillingAndCollection/Components/BillingAnalystTab/BillingAnalystTab.js","Utilities/TextLengthFormatter.js","Pages/Protected/BillingAndCollection/Components/BillingInstructionsTab/BillingInstructionsTab.js","Pages/Protected/BillingAndCollection/BillingPages/AssignAnalystPage/AssignAnalystPage.js","StandardComponents/HeaderDetails/HeaderDetails.js","StandardComponents/TextField/CustomTextField.js","StandardComponents/Void/VoidValidator.js","StandardComponents/Void/Void.js","StandardComponents/ContentPageComponent/ContentPageComponent.js","StandardComponents/FormDrawer/FormDrawer.js","Pages/Protected/BillingAndCollection/Components/Void/VoidValidator.js","Pages/Protected/BillingAndCollection/Components/Void/Void.js","Pages/Protected/BillingAndCollection/Components/ContentPageComponent/ContentPageComponent.js","Pages/Protected/BillingAndCollection/Components/SoaSupervisorFormDrawer/FormDrawer.js","Services/Api/BillingSOAReportService.js","StandardComponents/PdfViewer/Fullscreen.js","StandardComponents/PdfViewer/getPreviewReport.js","StandardComponents/PdfViewer/downloadServices.js","StandardComponents/PdfViewer/PdfViewer.js","StandardComponents/PdfViewer/showReport.js","StandardComponents/BIR/BIR.js","StandardComponents/Corporate/Corporate.js","StandardComponents/Submit/Submit.js","StandardComponents/Disapprove/DisapproveValidator.js","StandardComponents/Disapprove/Disapprove.js","StandardComponents/Approve/ApproveValidator.js","StandardComponents/Approve/Approve.js","StandardComponents/Attachment/Attachment.js","StandardComponents/ContentHeader/ContentHeader.js","StandardComponents/EnhancedTable/EnhancedTable.js","Services/Api/BillingSOAServices.js","StandardComponents/Analyze/Analyze.js","Constant/TermsAndConditions.js","Pages/Protected/BillingAndCollection/Components/TabPanelComponent/TabPanelComponent.js","Pages/Protected/BillingAndCollection/BillingPages/SOAPage/SOAPage.js","Pages/Protected/BillingAndCollection/Components/CustomPropertyText/CustomPropertyText.js","Pages/Protected/BillingAndCollection/Components/AnalystTab/BillingAnalystTab.js","Pages/Protected/BillingAndCollection/Components/ConfirmDialog/ConfirmDialog.js","StandardComponents/DropDown/DropDown.js","Pages/Protected/BillingAndCollection/Components/BillingCycleTab/BillingCycleTab.js","Pages/Protected/BillingAndCollection/Components/BillingTermsAndConditionsTab/BillingTermsAndConditionsTab.js","Pages/Protected/BillingAndCollection/BillingPages/BillingCycleSetupPage/BillingCycleSetupPage.js","Pages/Protected/BillingAndCollection/BillingPages/ClientTransactionSetupPage/ClientTransactionSetupPage.js","Pages/Protected/BillingAndCollection/Components/HeaderDetails/HeaderDetails.js","Pages/Protected/BillingAndCollection/Components/ContentPage/ContentPage.js","Pages/Protected/BillingAndCollection/Components/FormDrawer/FormDrawer.js","Pages/Protected/BillingAndCollection/BillingPages/InvoiceApprovedPage/InvoiceApprovedPage.js","Pages/Protected/BillingAndCollection/Components/EnhancedSearchComponent/EnhancedSearchComponent.js","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/CreateTransactionPage.js","StandardComponents/TreeViewTable/TreeViewTable.js","StandardComponents/TreeViewTable/CollapsibleRow.js","StandardComponents/TreeViewTable/NormalRow.js","Pages/Protected/BillingAndCollection/BillingPages/ListOfAccountsPage/ListOfAccountsPage.js","StandardComponents/SearchTextComponent/SearchTextComponent.js","Pages/Protected/BillingAndCollection/BillingPages/ClientTransactionJournalPage/ClientTransactionJournalPage.js","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/EnhacedSearchReferenceNo.js","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/CreateTransactionTypePage.js","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/TempTableForMemo.js","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/CreateTransactionCreditNotePage.js","Pages/Protected/BillingAndCollection/BillingPages/CreateTransactionPage/CreateTransactionDebitNotePage.js","Pages/Protected/BillingAndCollection/BillingPages/InvoicePendingPage/InvoicePendingPage.js","Pages/Protected/SecurityConfig/RbacConfig.js","StandardComponents/ContentPageComponent/ContentPageForValidatedSOA.js","StandardComponents/FormDrawer/FormOnly.js","Pages/Protected/BillingAndCollection/BillingPages/SOAPage/ValidatedSOAPage.js","Pages/Protected/BillingAndCollection/Routes.js","Pages/Protected/BillingAndCollection/index.js"],"names":["CurrencyFormatter","value","numeral","format","UpperWord","sentence","charAt","toUpperCase","slice","DigitFormatter","DateFormatter","_value","moment","isValid","DateFormatterByAbbreviation","LargeNumberFormatter","parseFloat","NameFormatter","args","initial","abr","lastName","firstName","middleName","last_name","first_name","middle_name","format1","filter","Boolean","join","format2","extract","_errors","error","details","e","field","path","message","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","onClick","event","disabled","aria-label","direction","Math","ceil","max","CustomTable","id","TableContainerProps","TableProps","head","body","footer","pagination","limit","rowsPerPageOptions","onChange","footerComponent","Fragment","component","Paper","table","float","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","Alert","defaultFunction","open","cancelLabel","okLabel","onOk","onCancel","onClose","aria-labelledby","aria-describedby","variant","color","autoFocus","DashboardTileComponent","children","header","title","viewList","actionHeader","onFilterChange","isFilterShown","React","useState","setFilter","wrapper","input","selected","action","list","Children","map","child","displayName","useStyles","display","alignItems","minWidth","border","focus","borderColor","flex","iconButton","padding","divider","width","height","margin","SearchTextComponent","placeholder","setFocus","onBlur","autoComplete","onFocus","TextFieldCurrency","label","required","currency","readOnly","other","customInput","InputBase","isNumericString","displayType","thousandSeparator","decimalScale","allowEmptyFormatting","fixedDecimalScale","allowLeadingZeros","onValueChange","floatValue","isAllowed","values","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","actions","marginTop","paper","marginBottom","analystTable","tableWrapper","overflowX","visuallyHidden","clip","overflow","position","top","EnhancedTable","headCells","handleRequestSort","handleSelectAllClick","order","orderBy","checkAll","sorter","size","indeterminate","checked","checkboxColor","analyst","allowCheck","allowCheckDisabled","selectStatus","headCell","key","align","center","numeric","disablePadding","sortDirection","active","module","exports","webpackEmptyContext","req","Error","code","keys","resolve","userPolicies","RbacController","getPolicyData","then","res","console","log","username","JSON","parse","localStorage","getItem","userLogged","User","user","login","rbac","i","length","push","method","element","element_id","policy_id","defineAbility","can","cannot","createCanBoundTo","ability","CustomTaskTrayComponent","sizes","items","toArray","item","index","cloneElement","_sizes","xs","sm","md","lg","Grid","container","Typography","itemSize","s","CustomSearchTextComponent","style","CustomEnhancedTable","changeView","search","tableHeaders","tableHeight","sort","setPage","setRowsPerPage","Table","stickyHeader","TableHead","TableRow","TableCell","icon","faSort","TablePagination","Box","m","IconButton","q","GrabByString","o","a","replace","split","n","k","CustomizedDialogs","config","tile","contents","route","linkCaption","viewAll","setViewAll","passProperty","subProperty","subSubProperty","changeViewList","modal","preSoa","preSoaAnalyst","history","useHistory","headers","tableColumnSequence","sequence","handleOnClose","Dialog","fullWidth","maxWidth","PaperProps","DialogTitle","disableTypography","clear","DialogContent","to","justify","grids","name","smtext","params","TableBody","row","contentsIndex","hover","tabIndex","columnName","RegExp","test","toString","toLowerCase","includes","ISO_8601","axios","instance","axiosCC","axiosSOA","axiosCTL","BillingAnalystServices","url","responseType","Accept","clientId","data","currentUserId","status","account_number","userID","role","corporate_id","soaNumber","transaction_date","invoice_number","corporate_name","approved_by","date_approved","amount","invoice_id","transaction_type","member_account_id","member_name","description","tax_type","BillingClientInvoicesServices","transaction_number","transaction_status","condition","transactionNumber","approvedInvoices","pendingInvoices","clientTransactions","clientPreSoaToAnalyze","memberPreSoaToAnalyze","invoicesSubmittedForApproval","Dashboard","PageTitleService","BreadcrumbsService","setSelectedItems","clientList","setClientList","clientListForApproval","setClientListForApproval","clients","setClients","clientsAssignedCount","setClientsAssignedCount","clientsAssignedList","setClientsAssignedList","clientSOAs","setClientSOAs","savedClientSOAs","setSavedClientSOAs","submittedClientSOAs","setSubmittedClientSOAs","setApprovedInvoices","approvedClientSOAs","setApprovedClientSOAs","pendingInvoiceViewAll","setPendingInvoiceViewAll","invoicesSubmittedForApprovalViewAll","setInvoicesSubmittedForApprovalViewAll","clientViewAll","setClientViewAll","clientPreSoaToAnalyzeViewAll","setClientPreSoaToAnalyzeViewAll","memberPreSoaToAnalyzeViewAll","setMemberPreSoaToAnalyzeViewAll","useEffect","current_user_id","_id","Promise","all","getClientsAssigned","getClientsAssignedCount","clientCount","clientsData","results","prevState","getClientSOAs","group","groupEnd","getSavedClientSOAs","getApprovedClientSOAs","getSubmittedClientSOAs","getTobeRevisedInvoices","invoices","reverse","assignSOA","assignClientSOA","account_name","billing_cycle","soa_number","client","textDecoration","window","location","hash","isTpaFilterShown","isTicketFilterShown","transaction","number","billing","cycle","date","due","axios_root","BillingSupervisorServices","analystId","validatedSOAs","clientListApprove","setClientListApprove","validatedClientSOAs","setValidatedClientSOAs","toAssignAnalystCount","setToAssignAnalystCount","BillingInvoiceServices","getValidatedSOAs","getClientLedgersToSetup","clientLedgers","cheaders2","header_text","mheaders1","tickets","duedate","handleAssignSOA","viewAllLink","caption","due_date","TabPanel","hidden","useStyle","indicator","CustomTabs","defaultIndex","containerSyles","setValue","overrideClass","Tabs","newValue","textColor","scrollButtons","Tab","CustomTab","viewMore","setViewMore","onViewMoreChange","state","show","button","subtitle","contract","payment_terms","SuccessDialog","openSuccessDialog","setOpenSuccessDialog","handleOnCloseSuccessDialog","Button","assign","setAssign","text2","assignBillingAnalyst","AssignClientPageFooter","clientInfo","setAnalyst","BillingAnalystTab","users","onShowViewMore","selectedAnalyst","setSelectedAnalyst","handleOnChangeAnalyst","assignedCount","account","tolerance","concat","BillingInstructionsTab","header_items","ClientInformation","hmoinfo","client_details","segment","payment_term","tin","account_status","plan_type","effectivity","expiration","ActionTabs","AssignClientPage","initialValue","setUsers","clientContract","setClientContract","setPagination","match","getClientLedgerToSetup","client_contract","getUsersByRole","userData","HeaderDetails","ledger","activeStep","steps","QontoConnector","withStyles","alternativeLabel","left","right","completed","line","borderTopWidth","borderRadius","StepConnector","useQontoStepIconStyles","circle","zIndex","QontoStepIcon","clsx","journal","Stepper","connector","stepper","Step","StepLabel","StepIconComponent","pre_soa_details","soa","modified","CustomTextField","constainerStyle","_error","setError","trim","schema","Joi","object","remarks","string","messages","options","abortEarly","validate","ExtractValidationResult","submitFunction","setOpenDialog","openDialog","disapprove","errors","setErrors","allowedFields","setAllowedFields","_allowedFields","setTimeout","doValidateAll","VoidValidator","doValidatedisapprove","defaultValue","handleOnchange","f","ContentPage","voidFunction","shift","soaPage","getStepContent","save","nextStep","stepBack","content","reset","contentShift","instructions","stepIndex","sideBarWrapper","menuButton","iconWrapper","marginRight","hide","drawer","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","drawerHeaderContent","drawerContentContainer","flexGrow","paddingTop","PersistentDrawerLeft","edit","drawerContent","drawerHeight","permanent","setOpen","CssBaseline","edge","faCaretSquareDown","Drawer","anchor","drawerHeaderColseButton","faCaretSquareLeft","Divider","voided","handleVoid","BillingSOAReportService","appBar","Transition","forwardRef","ref","Slide","Fullscreen","close","file","setFile","getReports","getReport","response","blob","Blob","getPreviewReport","fullScreen","TransitionComponent","AppBar","Toolbar","PdfViewer","download","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","downloadServices","rotate","fileName","initialPageNumber","initialScale","scale","setScale","pageNumber","setPageNumber","numPages","setNumPages","isShowReport","setIsShowReport","setOption","selectedClaimReport","setSelectedSoaReport","pdf","onLoadSuccess","controls","Tooltip","controlLeft","control","back","zoom","autozoom","onClickEvent","fullscreen","showReport","printWindow","claimNo","pdfjs","GlobalWorkerOptions","workerSrc","version","BIR","Corporate","onShowSuccessDialog","SuccessDialogDisapprove","setOpenDisapproveDialog","openSuccessDisapproveDialog","setOpenSuccessDisapproveDialog","openDisapproveDialog","DisapproveValidator","disapproveFunction","ApproveValidator","Attachment","submit","setNumber","setClientSOAApprove","approveFunction","setClientSOADisapprove","submitClientSOA","ContentHeader","summaryFields","summaryValues","fieldsWidth","highestValue","b","valuesWidth","fields","bottom","Checkbox","TableSortLabel","BillingSOAServices","journalId","memberId","Analyze","soaDetails","setSOADetails","membershipFees","setMembershipFees","processingFees","setProcessingFees","getMembershipFees","getProcessingFees","member","removeIcon","account_no","effectivity_date","renewal_date","end_date","fees","Link","summary","sub_total","tax_amount","period","start","end","p","tabs","fontSize","tabContent","SimpleTabs","soa_attachment_addtl_fields","fontWeight","field_name","soa_generation","soa_sorting","soa_send_to","soa_send_to_address","floor","unit","bldg_no","bldg_name","street","brgy","region","province","city","zip_code","soa_send_on_days","terms_and_conditions","field_section","field_values","v","FieldType","val","a11yProps","SOAPage","setLedger","setSOAPage","tabClasses","setActiveStep","handleChange","getClientSOA","setClientSOAVoid","handleNext","prevActiveStep","handleBack","handleReset","saveClientSOA","CustomPropertyText","label_container","value_container","onOK","positive_label","negative_label","preGenConflict","DropDown","disableComponents","setShowInfo","Select","select","MenuItem","billingCycleSelected","hasConflict","dateIsEqual","initialDateAndEffectivityIsEqual","FooterBar","processingRule","updateBillingCycle","ruleExcludeZero","preGenEqualConflict","AnalyzeClientPage","selectedBillingCycle","setSelectedBillingCycle","showInfo","checkProcessingRule","setCheckProcessingRule","billingCycles","setBillingCycles","infoRef","useRef","getBillingCycleList","catch","FormControlLabel","effectivityDate","subtract","substring","_d","billingCycleFrequency","frequency","possibleInitialDate","criterias","criteria","Date","toISOString","add","preGen","pre_generate_formula","current","innerText","checkbox_option","billingCycle","BillingTermsAndConditionsTab","hmoInfo","customText","customTextComponent","annual_benefit_limit","drawerWidth","FormGroup","form_right","form_divider","searchAndAddContainer","addButton","tableCaption","ClientTransactionSetupPage","metadata","String","getClientConfig","clientData","SearchAndAdd","searchBar","wrap","ClientTable","table_caption","table_pagination","drawerWrapper","FormDrawer","InvoicePage","approvedInvoice","setApprovedInvoice","invoiceDetail","setInvoiceDetail","getTobeRevisedInvoice","invoice","getInvoiceDetails","detail","transactionInfo","billingInfo","contractInfo","summaryInfo","invoiceInfo","case_number","detailIndex","billingCodeType","memberAccountId","memberName","taxableAmount","taxAmount","listbox","listStyle","background","maxHeight","StyledMenu","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","textAlign","client_info_no","EnhancedSearchComponent","menuItems","anchorEl","setAnchorEl","currentSelected","setCurrentSelected","useAutocomplete","getOptionLabel","option","getInputProps","getRootProps","getInputLabelProps","getListboxProps","getOptionProps","groupedOptions","autoCompClasses","aria-controls","aria-haspopup","currentTarget","endIcon","faAngleDown","keepMounted","ListItemText","FormControl","withoutLabel","textField","borderBottom","faCircle","minHeight","TreeViewTable","handleCollapseEvent","isViewTree","actionText","actionTo","TableContainer","headerbar","Exposure","sidescroll_button","headerCell","ArrowForwardIos","CollapsibleRow","objectKey","tableColumnOrder","subColumnOrder","offset","collapseAllState","collapseFunction","param","collapse","setCollapse","iconImage","setIconImage","offsetCells","colspan","collapse_button","rowItem","rowIndex","cell","subItem","subIndex","colItem","colindex","NormalRow","table_columns","column","iteration","header_items_collapsed","mainColumn","mainColumn_collapsed","subColumn","AccountListPage","collapseAll","setCollapseAll","header_collapsed","setHeaderState","setHeaders","tableData","setTableData","setColumns","sub_columns","handleHeaders","current_user_role","queryString","BillAnalystServices","getClientTransactionLedgerEntries","transactions","Array","isArray","members","ClientTransactionJournalPage","setClientData","sourceData","getSelectedClient","pop","getClientTransactionLedgerEntryContents","accountNumber","accountEffectivity","accountExpiry","paymentTerm","account_info","info_text_left","info_text_right","dropDownAnchor","setDropDownAnchor","handleDropDownClose","ListItemIcon","faFileInvoice","faMoneyBillWaveAlt","faFileAlt","faFileSignature","selectedItem","labelwidth","TempTableForMemo","popOverAnchor","setPopOverAnchor","undefined","setSubmit","handlePopOverClose","faEdit","Popover","InvoiceToBeRevised","disabledSave","setDisabledSave","dateInfo","created","saveRevisedInvoices","handleSaved","submitRevisedInvoices","handleSubmitted","Rbac","sideBarItems","analystBreadcrumbs","dashboard","createTransaction","createTransactionType","createTransactionMemo","createTransactionMemoDebit","clientSetup","clientBillingCycle","invoiceID","accountList","clientJournal","ledgers","ledgerId","transactionLedger","specificPaymentRequest","supervisorBreadcrumbs","reports","assignId","BillingAnalystRoutes","userRole","setUserRole","setIsLoading","SideBarService","setItems","exact","DashboardAnalyst","DashboardSupervisor","BillingCycleSetupPage","InvoicePendingPage","ValidatedSOAPage","ListOfAccountsPage","InvoiceApprovedPage","CreateTransactionPage","CreateTransactionTypePage","CreateTransactionCreditNotePage","CreateTransactionDebiNotetPage","AssignAnalystPage","BillingModule","isLoading","billingModuleLogic","BillingModuleRoutes"],"mappings":"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","file":"static/js/6.0fa1c24b.chunk.js","sourcesContent":["import numeral from 'numeral'\nimport moment from 'moment'\n\nconst CurrencyFormatter = value => {\n  return numeral(value).format('0,0.00')\n}\n\nconst UpperWord = sentence => {\n  return sentence.charAt(0).toUpperCase() + sentence.slice(1)\n}\n\nconst DigitFormatter = value => {\n  return numeral(value).format('0,0')\n}\n\nconst DateFormatter = (value, format = 'MM/DD/YYYY') => {\n  const _value = moment(value)\n  return _value.isValid() ? moment(value).format(format) : ''\n}\n\nconst DateFormatterByAbbreviation = (value, format = 'MMM DD, YYYY') => {\n  return moment(value).format(format)\n}\n\nconst DateFormatterFromNow = value => {\n  return moment(value).fromNow()\n}\n\nconst LargeNumberFormatter = value => {\n  return parseFloat(numeral(value).format('0,0.00'))\n}\n\nconst NameFormatter = args => {\n  const { initial, abr } = args\n  const { lastName, firstName, middleName } = args\n  const { last_name, first_name, middle_name } = args\n\n  return {\n    format1: [lastName || last_name, ',', firstName || first_name, middleName || middle_name, initial, abr]\n      .filter(Boolean)\n      .join(' '),\n    format2: [abr, firstName || first_name, middleName || middle_name, lastName || last_name, initial]\n      .filter(Boolean)\n      .join(' ')\n  }\n}\n\nexport {\n  CurrencyFormatter,\n  DigitFormatter,\n  UpperWord,\n  DateFormatter,\n  DateFormatterByAbbreviation,\n  DateFormatterFromNow,\n  LargeNumberFormatter,\n  NameFormatter\n}\n","const extract = args => {\n  let { value, error = {} } = args\n\n  let _errors\n\n  error = error || {}\n\n  if (error.details) {\n    _errors = {}\n    for (let e of error.details) {\n      const [field] = e.path\n      const message = e.message\n      _errors[field] = message\n    }\n  }\n\n  return { value, error: _errors }\n}\n\nexport default extract\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\n// Styles\nimport classes from './Table.module.scss'\nimport { TableCell } from '@material-ui/core'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions (props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default function CustomTable ({\n  id = '',\n  TableContainerProps,\n  TableProps,\n  head,\n  body,\n  footer,\n  pagination = true,\n  count = 0,\n  page = 1,\n  limit = 10,\n  rowsPerPageOptions = [5, 10, 25],\n  onChange,\n  footerComponent\n}) {\n  // const emptyRows = limit - Math.min(limit, count - (page - 1) * limit)\n\n  const handleChangePage = (event, newPage) => {\n    onChange({ page: newPage + 1 })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    const value = parseInt(event.target.value)\n    onChange({ limit: value, page: 1 })\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper} className={classes.root} {...TableContainerProps}>\n        <Table id={id} className={classes.table} aria-label='custom pagination table' {...TableProps}>\n          <TableHead>{head}</TableHead>\n          <TableBody>\n            {body}\n\n            {/* {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows, backgroundColor: 'white' }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )} */}\n          </TableBody>\n          <TableFooter>{footer}</TableFooter>\n        </Table>\n      </TableContainer>\n\n      <Table className={classes.footer}>\n        <TableBody>\n          <TableRow>\n            <TableCell className={classes.float}>{footerComponent}</TableCell>\n            {pagination && (\n              <React.Fragment>\n                <TablePagination\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  count={count}\n                  rowsPerPage={limit}\n                  page={page - 1}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </React.Fragment>\n            )}\n          </TableRow>\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function Alert (props) {\n  const defaultFunction = () => {}\n  const {\n    message,\n    open = false,\n    cancelLabel,\n    okLabel,\n    onOk = defaultFunction,\n    onCancel = defaultFunction,\n    onClose = defaultFunction\n  } = props\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{message}</DialogTitle>\n        <DialogActions>\n          {cancelLabel && (\n            <Button\n              id='alert-dialog-cancel'\n              onClick={onCancel}\n              variant='contained'\n              color='primary'\n              className='button-negative'\n            >\n              {cancelLabel}\n            </Button>\n          )}\n\n          {okLabel && (\n            <Button\n              id='alert-dialog-ok'\n              onClick={onOk}\n              variant='contained'\n              color='primary'\n              className='button-positive'\n              autoFocus\n            >\n              {okLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\n// CSS Classes\nimport classes from './DashboardTileComponent.module.scss'\n\n/**\n * Create dashboard tile component\n *\n * @param children child components\n * @param count count value to be displayed; keys: color, value\n * @param header tile header label; keys: color, value\n * @param title title string\n * @param viewList view list\n * @param onFilterChange change filter handler\n * @param isFilterShown flag for showing filter\n */\nconst DashboardTileComponent = ({\n  children,\n  count,\n  header,\n  title,\n  viewList,\n  actionHeader = null,\n  onFilterChange,\n  isFilterShown = true,\n  id\n}) => {\n  const [filter, setFilter] = React.useState('this-week')\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    if (typeof onFilterChange === 'function') onFilterChange(event.target.value)\n  }\n\n  return (\n    <Paper className={classes.root} id={id}>\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          {header && (\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${header.color}`}>\n                {header.value}\n              </Typography>\n            </div>\n          )}\n\n          <div className={classes['first-row']}>\n            <div className={classes.count}>\n              <Typography variant='h5' className={`color-${count.color}`} id={count.id}>\n                {count.value || 0}\n              </Typography>\n            </div>\n            {isFilterShown && (\n              <div className={classes.filter}>\n                <span>\n                  <FormControl>\n                    <Select\n                      className={classes['select']}\n                      value={filter}\n                      onChange={handleFilterChange}\n                      id={`${id}-filter`}\n                    >\n                      <MenuItem value='today' id={`${id}-today`}>\n                        <Typography className={classes.input}>Today</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-week' id={`${id}-this-week`} selected>\n                        <Typography className={classes.input}>This Week</Typography>\n                      </MenuItem>\n                      <MenuItem value='this-month' id={`${id}-this-month`}>\n                        <Typography className={classes.input}>This Month</Typography>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={classes['second-row']}>\n            <div className={classes.title}>\n              <Typography variant='subtitle2'>{title}</Typography>\n            </div>\n            <div className={classes.action}>{actionHeader || ''}</div>\n          </div>\n        </div>\n\n        <div className={classes.list}>\n          {React.Children.map(children, child => {\n            return child\n          })}\n        </div>\n\n        <div className={classes.action}>{viewList || ''}</div>\n      </div>\n    </Paper>\n  )\n}\n\nDashboardTileComponent.displayName = 'DashboardTileComponent'\n\nexport default DashboardTileComponent\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400,\n    border: '1px solid transparent'\n  },\n  focus: {\n    borderColor: 'green'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ value, onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  const [focus, setFocus] = React.useState()\n\n  return (\n    <Paper className={`${classes.root} ${focus && classes.focus} box-shadow-field`} onBlur={() => setFocus(false)}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        value={value || null}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n        onFocus={() => setFocus(true)}\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './TextFieldCurrency.module.scss'\nexport default function TextFieldCurrency (props) {\n  const { label = '', required, currency = true, readOnly, error, onChange, ...other } = props\n\n  const [focus, setFocus] = React.useState()\n\n  const handleOnChange = e => {\n    if (typeof onChange === 'function') onChange({ target: { value: e.floatValue } })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography\n            readOnly\n            id={props.id}\n            variant='subtitle2'\n            className={`${classes.label} ${classes['read-only-value']}`}\n          >\n            {CurrencyFormatter(other.value)}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['text-field']} ${\n                error ? classes['has-error'] : focus && classes.focus\n              } box-shadow-field`}\n            >\n              <NumberFormat\n                id={props.id}\n                className={classes.input}\n                required\n                customInput={InputBase}\n                isNumericString\n                displayType={'input'}\n                thousandSeparator\n                decimalScale={2}\n                allowEmptyFormatting\n                fixedDecimalScale\n                allowLeadingZeros={false}\n                value={other.value}\n                onValueChange={handleOnChange}\n                isAllowed={values => {\n                  const { floatValue } = values\n                  return floatValue <= 10000000000000\n                }}\n                autoComplete='off'\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                // {...other}\n              />\n              {currency && (\n                <div className={classes.currency}>\n                  <Typography variant='subtitle2' className={classes.label}>\n                    PHP\n                  </Typography>\n                </div>\n              )}\n            </Paper>\n            {error && <span className={classes.error}>{error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark\n      },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'hidden'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst,\n    allowCheck = true,\n    allowCheckDisabled = false,\n    selectStatus = false\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {selectStatus\n                  ? checkAll && (\n                    <TableCell padding='checkbox'>\n                      {allowCheck ? (\n                        <Checkbox\n                          disabled={allowCheckDisabled}\n                          indeterminate={indeterminate}\n                          checked={checked}\n                          onChange={handleSelectAllClick}\n                          color={checkboxColor}\n                        />\n                      ) : null}\n                    </TableCell>\n                  )\n                  : null}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                    id={headCell.id}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DashboardTileComponent_root__3ZFup\",\"wrapper\":\"DashboardTileComponent_wrapper__1hVRB\",\"header\":\"DashboardTileComponent_header__2_IQZ\",\"input\":\"DashboardTileComponent_input__sFY_A\",\"first-row\":\"DashboardTileComponent_first-row__KbzvW\",\"count\":\"DashboardTileComponent_count__NJO1q\",\"filter\":\"DashboardTileComponent_filter__3FsXI\",\"second-row\":\"DashboardTileComponent_second-row__1xXpk\",\"title\":\"DashboardTileComponent_title__1vnM-\",\"list\":\"DashboardTileComponent_list__38Z1j\",\"action\":\"DashboardTileComponent_action__2L_x5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Table_root__1yDG4\",\"loader\":\"Table_loader__jTLoL\",\"footer\":\"Table_footer__3Si1n\",\"float\":\"Table_float__3dNhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextFieldCurrency_root__fkWBS\",\"label\":\"TextFieldCurrency_label__3VB-Y\",\"wrapper\":\"TextFieldCurrency_wrapper__2DwLz\",\"read-only-value\":\"TextFieldCurrency_read-only-value__3klW0\",\"text-field\":\"TextFieldCurrency_text-field__2ZFkS\",\"input\":\"TextFieldCurrency_input__3v0Q_\",\"currency\":\"TextFieldCurrency_currency__20Xbk\",\"focus\":\"TextFieldCurrency_focus__3OqZJ\",\"has-error\":\"TextFieldCurrency_has-error__fUhVi\",\"error\":\"TextFieldCurrency_error__3bHzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContentPageComponent_root__28vtc\",\"contentShift\":\"ContentPageComponent_contentShift__2dbX-\",\"button\":\"ContentPageComponent_button__3QYBv\",\"item-right-side\":\"ContentPageComponent_item-right-side__3kZKN\",\"button-positive\":\"ContentPageComponent_button-positive__2DZdL\",\"button-void\":\"ContentPageComponent_button-void__27uNr\",\"button-negative\":\"ContentPageComponent_button-negative__2Bh-K\",\"clear\":\"ContentPageComponent_clear__rNgjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SOAPage_root__1utSy\",\"text-fields\":\"SOAPage_text-fields__26BxQ\",\"sub-container\":\"SOAPage_sub-container__Awzi9\",\"input-container\":\"SOAPage_input-container__FscXP\",\"ellipsis-container\":\"SOAPage_ellipsis-container__NpzRs\",\"table-container\":\"SOAPage_table-container__2ELKp\",\"headers\":\"SOAPage_headers___oGVn\",\"header\":\"SOAPage_header__11cRD\",\"dialog-container\":\"SOAPage_dialog-container__1pLrR\",\"buttonWrapper\":\"SOAPage_buttonWrapper__ey5ee\",\"button\":\"SOAPage_button__1R9Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_table\":\"TreeViewTable_root_table__WN0Pq\",\"cell\":\"TreeViewTable_cell__XzgTX\",\"headerbar\":\"TreeViewTable_headerbar__3XAa2\",\"link\":\"TreeViewTable_link__2V0bQ\",\"collapseButton\":\"TreeViewTable_collapseButton__2GhF6\",\"sidescrollButton\":\"TreeViewTable_sidescrollButton__2jZbJ\",\"headerCells\":\"TreeViewTable_headerCells__2RWYp\",\"headerCollapseButton\":\"TreeViewTable_headerCollapseButton__3IzC2\",\"rowCollapseButton\":\"TreeViewTable_rowCollapseButton__1UXF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remove-icon\":\"CreateTransactionCreditNotePage_remove-icon__3mpgi\",\"drawer-content\":\"CreateTransactionCreditNotePage_drawer-content__2G4cU\",\"export-modify-billing-cycle-wrapper\":\"CreateTransactionCreditNotePage_export-modify-billing-cycle-wrapper__3NJa_\",\"export-modify-content\":\"CreateTransactionCreditNotePage_export-modify-content__2rBEj\",\"export-icon\":\"CreateTransactionCreditNotePage_export-icon__1Qx3g\",\"export-link\":\"CreateTransactionCreditNotePage_export-link__17sGi\",\"modify-billing-cycle-icon\":\"CreateTransactionCreditNotePage_modify-billing-cycle-icon__bvzk7\",\"modify-billing-cycle-link\":\"CreateTransactionCreditNotePage_modify-billing-cycle-link__196rR\",\"pop-over-wrapper\":\"CreateTransactionCreditNotePage_pop-over-wrapper__2aLBW\",\"popover-container\":\"CreateTransactionCreditNotePage_popover-container__2x13X\",\"pop-over-close-button\":\"CreateTransactionCreditNotePage_pop-over-close-button__16JVM\",\"modify-billing-cycle-button\":\"CreateTransactionCreditNotePage_modify-billing-cycle-button__20Ah0\",\"modify-billing-cycle-button-icon\":\"CreateTransactionCreditNotePage_modify-billing-cycle-button-icon__3HOv1\",\"modify-billing-cycle-menu\":\"CreateTransactionCreditNotePage_modify-billing-cycle-menu__2_RTV\",\"pop-over-apply-close-button-container\":\"CreateTransactionCreditNotePage_pop-over-apply-close-button-container__28CyL\",\"pop-over-close-button-wrapper\":\"CreateTransactionCreditNotePage_pop-over-close-button-wrapper__2Lkk7\",\"pop-over-cancel-button\":\"CreateTransactionCreditNotePage_pop-over-cancel-button__35_Ul\",\"pop-over-apply-button-wrapper\":\"CreateTransactionCreditNotePage_pop-over-apply-button-wrapper__zcN-V\",\"pop-over-apply-button\":\"CreateTransactionCreditNotePage_pop-over-apply-button__1hV7Y\",\"content-header-details\":\"CreateTransactionCreditNotePage_content-header-details__LyOR6\",\"fields\":\"CreateTransactionCreditNotePage_fields__17Nfk\",\"values\":\"CreateTransactionCreditNotePage_values__2A_qm\",\"status\":\"CreateTransactionCreditNotePage_status__2eheQ\",\"button-wrapper\":\"CreateTransactionCreditNotePage_button-wrapper__1j2OO\",\"button\":\"CreateTransactionCreditNotePage_button__Het66\",\"cancel-link\":\"CreateTransactionCreditNotePage_cancel-link__364Gh\",\"cancel-button\":\"CreateTransactionCreditNotePage_cancel-button__1XTQr\",\"submit-button\":\"CreateTransactionCreditNotePage_submit-button__Xvwge\",\"clear\":\"CreateTransactionCreditNotePage_clear__3s2Al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTaskTrayComponent_root__1dtgO\",\"title\":\"CustomTaskTrayComponent_title__2f-3r\",\"wrapper\":\"CustomTaskTrayComponent_wrapper__325q4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomSearchTextComponent_root__2ChW-\",\"input\":\"CustomSearchTextComponent_input__Ekyrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomEnhancedTable_root__UuJ7g\",\"paper\":\"CustomEnhancedTable_paper__FmG9o\",\"pagination\":\"CustomEnhancedTable_pagination__3b1-i\",\"table-wrapper\":\"CustomEnhancedTable_table-wrapper__1cXGt\",\"table\":\"CustomEnhancedTable_table__2cctL\",\"sort-icon\":\"CustomEnhancedTable_sort-icon__1JrIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewAll_root__2tLtc\",\"header-container\":\"ViewAll_header-container__1PCMO\",\"header\":\"ViewAll_header__2KmJP\",\"title\":\"ViewAll_title__pdiO_\",\"close-button\":\"ViewAll_close-button__p9E2R\",\"clear\":\"ViewAll_clear__JqlZA\",\"content-container\":\"ViewAll_content-container__1IR4J\",\"search-container\":\"ViewAll_search-container__l5x2-\",\"search-field\":\"ViewAll_search-field__1UHnm\",\"display-settings\":\"ViewAll_display-settings__2jzqq\",\"display-settings-icon\":\"ViewAll_display-settings-icon__1Sr7i\",\"content\":\"ViewAll_content__2lfF_\",\"search\":\"ViewAll_search__2BEsR\",\"count\":\"ViewAll_count__3grBp\",\"grids\":\"ViewAll_grids__2EhGG\",\"smtext\":\"ViewAll_smtext__kqHef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__zhj_i\",\"tiles\":\"Dashboard_tiles__1Wqsq\",\"task-tray\":\"Dashboard_task-tray__3YzQG\",\"list-item\":\"Dashboard_list-item__2qD7u\",\"details\":\"Dashboard_details__AMG26\",\"detail-item\":\"Dashboard_detail-item__3FeTb\",\"label\":\"Dashboard_label__BKUxF\",\"content\":\"Dashboard_content__3W_xR\",\"action\":\"Dashboard_action__Uaooa\",\"smtext\":\"Dashboard_smtext__1vISH\",\"ticket-list\":\"Dashboard_ticket-list__WKWaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Dashboard_root__1yUUX\",\"tiles\":\"Dashboard_tiles__2t_ct\",\"task-tray\":\"Dashboard_task-tray__pJ7FP\",\"list-item\":\"Dashboard_list-item__3Hrxd\",\"details\":\"Dashboard_details__26jRk\",\"detail-item\":\"Dashboard_detail-item__2GrZz\",\"label\":\"Dashboard_label__2ygEw\",\"content\":\"Dashboard_content__2748B\",\"action\":\"Dashboard_action__28USX\",\"ticket-list\":\"Dashboard_ticket-list__26Qtq\",\"task-tray-col\":\"Dashboard_task-tray-col__2dZRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTabs_root__Idjbc\",\"header\":\"CustomTabs_header__6ZMGw\",\"item\":\"CustomTabs_item__3-IH6\",\"active\":\"CustomTabs_active__1ZHph\",\"divider\":\"CustomTabs_divider__Z9xq_\",\"panels\":\"CustomTabs_panels__2Hctk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewMore_root__2gJCE\",\"header-container\":\"ViewMore_header-container__2kXpg\",\"header\":\"ViewMore_header__K9RyB\",\"button\":\"ViewMore_button__2aTh2\",\"title\":\"ViewMore_title__MD0CX\",\"subtitle\":\"ViewMore_subtitle__3NH1v\",\"content\":\"ViewMore_content__-y_vq\",\"search\":\"ViewMore_search__X8OkP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmDialog_button__1FN87\",\"button-positive\":\"ConfirmDialog_button-positive__7vGCT\",\"button-negative\":\"ConfirmDialog_button-negative__3bOke\",\"clear\":\"ConfirmDialog_clear__3oTDd\",\"header-container\":\"ConfirmDialog_header-container__tNo6n\",\"header\":\"ConfirmDialog_header__3unys\",\"success-close-button\":\"ConfirmDialog_success-close-button__13y0i\",\"title\":\"ConfirmDialog_title__35cvg\",\"subtitle\":\"ConfirmDialog_subtitle__KVk2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"BillingAnalystTab_button__2F8Mn\",\"button-positive\":\"BillingAnalystTab_button-positive__ApHKL\",\"button-negative\":\"BillingAnalystTab_button-negative__2N_6L\",\"clear\":\"BillingAnalystTab_clear__3OHKu\",\"view-more\":\"BillingAnalystTab_view-more__3b3_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BillingInstructionsTab_root__43HXf\",\"header-container\":\"BillingInstructionsTab_header-container__1jGGp\",\"header\":\"BillingInstructionsTab_header__2ZUSY\",\"title\":\"BillingInstructionsTab_title__L1eY5\",\"content\":\"BillingInstructionsTab_content__22u8p\",\"search\":\"BillingInstructionsTab_search__2Y5gH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AssignClientPage_root__2fB8x\",\"tiles\":\"AssignClientPage_tiles__2d0Qr\",\"task-tray\":\"AssignClientPage_task-tray__3p2at\",\"list-item\":\"AssignClientPage_list-item__1Z2lQ\",\"details\":\"AssignClientPage_details__2Xnn2\",\"detail-item\":\"AssignClientPage_detail-item__2SKu0\",\"label\":\"AssignClientPage_label__31i4B\",\"content\":\"AssignClientPage_content__3JZuU\",\"action\":\"AssignClientPage_action__1tf0a\",\"ticket-list\":\"AssignClientPage_ticket-list__2HYGE\",\"client_details\":\"AssignClientPage_client_details__3Wb8W\",\"client-details-wrapper\":\"AssignClientPage_client-details-wrapper__slRu7\",\"corporate-name-wrapper\":\"AssignClientPage_corporate-name-wrapper__2z_sM\",\"corporate-name-value\":\"AssignClientPage_corporate-name-value__1BZ4q\",\"basic-hmo-information-wrapper\":\"AssignClientPage_basic-hmo-information-wrapper__fEw-r\",\"left-container\":\"AssignClientPage_left-container__3myh2\",\"information-title\":\"AssignClientPage_information-title__2WKK9\",\"basic-information-wrapper\":\"AssignClientPage_basic-information-wrapper__wiUPQ\",\"field\":\"AssignClientPage_field__L6gEF\",\"text\":\"AssignClientPage_text__1sEP1\",\"value\":\"AssignClientPage_value__2NLiU\",\"center-container\":\"AssignClientPage_center-container__156BU\",\"right-container\":\"AssignClientPage_right-container__-K_4O\",\"hmo-information-wrapper\":\"AssignClientPage_hmo-information-wrapper__12Hka\",\"title\":\"AssignClientPage_title__2b4GW\",\"subtitle\":\"AssignClientPage_subtitle__19rY9\",\"table_caption\":\"AssignClientPage_table_caption__1q2yl\",\"pagination\":\"AssignClientPage_pagination__1LNzr\",\"searchbar\":\"AssignClientPage_searchbar__1Yil9\",\"button\":\"AssignClientPage_button__lozIe\",\"button-positive\":\"AssignClientPage_button-positive__1o_mD\",\"button-negative\":\"AssignClientPage_button-negative__2kcuz\",\"clear\":\"AssignClientPage_clear__2tidE\",\"view-more\":\"AssignClientPage_view-more__2n7aH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HeaderDetails_root__2lhYV\",\"container\":\"HeaderDetails_container__2wsf5\",\"pre_soa_details\":\"HeaderDetails_pre_soa_details__3Mvs6\",\"values\":\"HeaderDetails_values__3xlnV\",\"stepper\":\"HeaderDetails_stepper__2GPix\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomTextField_root__1ZTvy\",\"label\":\"CustomTextField_label__2IKJI\",\"wrapper\":\"CustomTextField_wrapper__3cqVF\",\"read-only-value\":\"CustomTextField_read-only-value__20Bzh\",\"text-field\":\"CustomTextField_text-field__2u8sR\",\"form-control\":\"CustomTextField_form-control__3PI2P\",\"discrepancy\":\"CustomTextField_discrepancy__36mVo\",\"divider\":\"CustomTextField_divider__REPw3\",\"end-adornment\":\"CustomTextField_end-adornment__2Hgta\",\"input\":\"CustomTextField_input__1L0Of\",\"input-amount\":\"CustomTextField_input-amount__a_TKj\",\"select\":\"CustomTextField_select__1-981\",\"has-error\":\"CustomTextField_has-error__2f6K4\",\"error\":\"CustomTextField_error__1Dd--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Void_root__1W_PJ\",\"header-container\":\"Void_header-container__cYyfV\",\"header\":\"Void_header__IaL3L\",\"button\":\"Void_button__3416p\",\"title\":\"Void_title__UU8Yn\",\"subtitle\":\"Void_subtitle__zJeOj\",\"content\":\"Void_content__38g7f\",\"search\":\"Void_search__3zo1Q\",\"button-positive\":\"Void_button-positive__2KHOy\",\"button-negative\":\"Void_button-negative__Tixao\",\"clear\":\"Void_clear__1E_-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Void_root__1ZXyE\",\"header-container\":\"Void_header-container__3oMcP\",\"header\":\"Void_header__2dXDB\",\"button\":\"Void_button___8-c4\",\"title\":\"Void_title__1cFaH\",\"subtitle\":\"Void_subtitle__3oA3J\",\"content\":\"Void_content__3IXW7\",\"search\":\"Void_search__2sm0v\",\"button-positive\":\"Void_button-positive__3KQAw\",\"button-negative\":\"Void_button-negative__2NyMo\",\"clear\":\"Void_clear__2_eno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContentPageComponent_root__3THHr\",\"contentShift\":\"ContentPageComponent_contentShift__2Jyf7\",\"button\":\"ContentPageComponent_button__2Bg6f\",\"item-right-side\":\"ContentPageComponent_item-right-side__25aOr\",\"button-positive\":\"ContentPageComponent_button-positive__3nhJB\",\"button-void\":\"ContentPageComponent_button-void__39Na9\",\"button-negative\":\"ContentPageComponent_button-negative__3Lq22\",\"clear\":\"ContentPageComponent_clear__u8R6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PdfViewer_root__2jAst\",\"controls\":\"PdfViewer_controls__dbors\",\"control\":\"PdfViewer_control__3h5ju\",\"zoom\":\"PdfViewer_zoom__3Sw_I\",\"back\":\"PdfViewer_back__1cWbA\",\"autozoom\":\"PdfViewer_autozoom__3RKH7\",\"fullscreen\":\"PdfViewer_fullscreen__1429V\",\"pdf\":\"PdfViewer_pdf__1y5wQ\",\"page-number\":\"PdfViewer_page-number__2-rgn\",\"file-name\":\"PdfViewer_file-name__3Xw6X\",\"pdfDocument\":\"PdfViewer_pdfDocument__QTDmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Submit_root__1Ww8w\",\"header-container\":\"Submit_header-container__OjdKW\",\"header\":\"Submit_header__3WkDg\",\"button\":\"Submit_button__2-IaZ\",\"title\":\"Submit_title__34pFe\",\"subtitle\":\"Submit_subtitle__2kIop\",\"content\":\"Submit_content__2_FQg\",\"search\":\"Submit_search__S-kBU\",\"button-positive\":\"Submit_button-positive__2C2Be\",\"button-negative\":\"Submit_button-negative__2IVFW\",\"clear\":\"Submit_clear__2cux9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Disapprove_root__1aYo2\",\"header-container\":\"Disapprove_header-container__1-Ruk\",\"header\":\"Disapprove_header__3rpVL\",\"button\":\"Disapprove_button__2n8g5\",\"title\":\"Disapprove_title__awfMB\",\"subtitle\":\"Disapprove_subtitle__2apN0\",\"content\":\"Disapprove_content__2O3yG\",\"search\":\"Disapprove_search__H7T70\",\"button-positive\":\"Disapprove_button-positive__66C3Q\",\"button-negative\":\"Disapprove_button-negative__2wmHB\",\"clear\":\"Disapprove_clear__3urXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Approve_root__8JU7V\",\"header-container\":\"Approve_header-container__24BzK\",\"header\":\"Approve_header__TXIYk\",\"button\":\"Approve_button__3SSBq\",\"title\":\"Approve_title__3HI3s\",\"subtitle\":\"Approve_subtitle__3lh8e\",\"content\":\"Approve_content__2D7iw\",\"search\":\"Approve_search__2rgWw\",\"button-positive\":\"Approve_button-positive__2aOHj\",\"button-negative\":\"Approve_button-negative__3RLcA\",\"clear\":\"Approve_clear__1WiHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContentHeader_root__1TqzK\",\"container\":\"ContentHeader_container__jCZHH\",\"content-header-details\":\"ContentHeader_content-header-details__235tF\",\"content-header-summary\":\"ContentHeader_content-header-summary__Ph1Vd\",\"summary-wrapper\":\"ContentHeader_summary-wrapper__1_l2y\",\"summary-header\":\"ContentHeader_summary-header__3m1rj\",\"summary-content\":\"ContentHeader_summary-content__vkhfk\",\"top\":\"ContentHeader_top__2J_Od\",\"fields\":\"ContentHeader_fields__3NLmJ\",\"values\":\"ContentHeader_values__HLi5H\",\"php-text\":\"ContentHeader_php-text__3BIwK\",\"value\":\"ContentHeader_value__kNqkx\",\"bottom\":\"ContentHeader_bottom__1F6US\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Analyze_root__3A1mo\",\"removeIcon\":\"Analyze_removeIcon__xjXwk\",\"content-header-details\":\"Analyze_content-header-details__2VuVq\",\"fields\":\"Analyze_fields__1btUC\",\"values\":\"Analyze_values__15wRc\",\"display-settings-wrapper\":\"Analyze_display-settings-wrapper__1XBUQ\",\"display-settings-content\":\"Analyze_display-settings-content__TWCDV\",\"display-settings-icon\":\"Analyze_display-settings-icon__1tK5u\",\"display-settings-link\":\"Analyze_display-settings-link__3nwbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TabPanelComponent_root__6FBFS\",\"tabs\":\"TabPanelComponent_tabs__3vncx\",\"tabContent\":\"TabPanelComponent_tabContent__1aFqb\",\"currency\":\"TabPanelComponent_currency__3-_QR\",\"fields\":\"TabPanelComponent_fields__2UmgD\",\"values\":\"TabPanelComponent_values__aLom6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomPropertyText_root__3YXdm\",\"label_container\":\"CustomPropertyText_label_container__1zaMY\",\"label\":\"CustomPropertyText_label__fJ0Qb\",\"value_container\":\"CustomPropertyText_value_container__2Wy3Y\",\"value\":\"CustomPropertyText_value__1Av-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"BillingAnalystTab_button__qRYus\",\"button-positive\":\"BillingAnalystTab_button-positive__3ocP4\",\"button-negative\":\"BillingAnalystTab_button-negative__2uO9q\",\"clear\":\"BillingAnalystTab_clear__146EK\",\"view-more\":\"BillingAnalystTab_view-more__2RR6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ConfirmDialog_button__gYG7D\",\"button-positive\":\"ConfirmDialog_button-positive__374XQ\",\"button-negative\":\"ConfirmDialog_button-negative__2ZozN\",\"clear\":\"ConfirmDialog_clear__35IbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"DropDown_root__27vQA\",\"label\":\"DropDown_label__14MRw\",\"wrapper\":\"DropDown_wrapper__1DYKi\",\"read-only-value\":\"DropDown_read-only-value__3LWKg\",\"select-container\":\"DropDown_select-container__56JWz\",\"select\":\"DropDown_select__3gGAJ\",\"input\":\"DropDown_input__pA_1P\",\"has-error\":\"DropDown_has-error__nPwRl\",\"disabled\":\"DropDown_disabled__2heCV\",\"error\":\"DropDown_error__1zazi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown-option\":\"BillingCycleTab_dropdown-option__2YIvI\",\"show-info\":\"BillingCycleTab_show-info__10r5r\",\"content-header-details\":\"BillingCycleTab_content-header-details__3w_V_\",\"fields\":\"BillingCycleTab_fields__3wERr\",\"values\":\"BillingCycleTab_values__2SCGo\",\"footer-divider\":\"BillingCycleTab_footer-divider__1CdoP\",\"checkbox_option\":\"BillingCycleTab_checkbox_option__2quUR\",\"checkbox_option2\":\"BillingCycleTab_checkbox_option2__CPACd\",\"form-bar\":\"BillingCycleTab_form-bar__1gQOs\",\"button\":\"BillingCycleTab_button__n0Z0c\",\"button-positive\":\"BillingCycleTab_button-positive__3hssc\",\"button-negative\":\"BillingCycleTab_button-negative__2lRmw\",\"clear\":\"BillingCycleTab_clear__1ucAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BillingTermsAndConditionsTab_root__2CpAz\",\"header-container\":\"BillingTermsAndConditionsTab_header-container__2gy6E\",\"header\":\"BillingTermsAndConditionsTab_header__1J2dC\",\"title\":\"BillingTermsAndConditionsTab_title__PiJff\",\"content\":\"BillingTermsAndConditionsTab_content__CEsTz\",\"search\":\"BillingTermsAndConditionsTab_search__QH5dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AnalyzeClientPage_root__3cJxZ\",\"tiles\":\"AnalyzeClientPage_tiles__13qwy\",\"task-tray\":\"AnalyzeClientPage_task-tray__MMUpC\",\"list-item\":\"AnalyzeClientPage_list-item__1p-65\",\"details\":\"AnalyzeClientPage_details__2hW98\",\"detail-item\":\"AnalyzeClientPage_detail-item__1CtB-\",\"label\":\"AnalyzeClientPage_label__2Zfu7\",\"content\":\"AnalyzeClientPage_content__HWr8N\",\"action\":\"AnalyzeClientPage_action__36Omh\",\"ticket-list\":\"AnalyzeClientPage_ticket-list__2BzoL\",\"client_details\":\"AnalyzeClientPage_client_details__1Il6S\",\"title\":\"AnalyzeClientPage_title__1lJIj\",\"subtitle\":\"AnalyzeClientPage_subtitle__27-MQ\",\"table_caption\":\"AnalyzeClientPage_table_caption__4tvt9\",\"pagination\":\"AnalyzeClientPage_pagination__1JvVD\",\"searchbar\":\"AnalyzeClientPage_searchbar__1Zh0B\",\"button\":\"AnalyzeClientPage_button__2bb-R\",\"button-positive\":\"AnalyzeClientPage_button-positive__3Fqne\",\"button-negative\":\"AnalyzeClientPage_button-negative__3kn54\",\"clear\":\"AnalyzeClientPage_clear__1XAba\",\"customText\":\"AnalyzeClientPage_customText__7LLPw\",\"MuiTypography-subtitle2\":\"AnalyzeClientPage_MuiTypography-subtitle2__2qN6N\",\"buttonWrapper\":\"AnalyzeClientPage_buttonWrapper__38mtq\",\"dropdown_option\":\"AnalyzeClientPage_dropdown_option__16VhN\",\"checkbox_option\":\"AnalyzeClientPage_checkbox_option__3X9u_\",\"form_right\":\"AnalyzeClientPage_form_right__pgSjS\",\"form_left\":\"AnalyzeClientPage_form_left__skwAE\",\"form_bar\":\"AnalyzeClientPage_form_bar__1rKVO\",\"divider\":\"AnalyzeClientPage_divider__1GJDB\",\"form_divider\":\"AnalyzeClientPage_form_divider__2HbsY\",\"footer_divider\":\"AnalyzeClientPage_footer_divider__3VMiD\",\"tabs\":\"AnalyzeClientPage_tabs__UOno2\",\"showInfo\":\"AnalyzeClientPage_showInfo__GAg1b\",\"content-header-details\":\"AnalyzeClientPage_content-header-details__9MHYD\",\"fields\":\"AnalyzeClientPage_fields__1tazP\",\"values\":\"AnalyzeClientPage_values__10UGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ViewList_root__1YFtE\",\"header-container\":\"ViewList_header-container__2nZLx\",\"header\":\"ViewList_header__1Wd64\",\"title\":\"ViewList_title__1EUlm\",\"content\":\"ViewList_content__2Cref\",\"search\":\"ViewList_search__14hRS\",\"count\":\"ViewList_count__2NHwe\",\"grids\":\"ViewList_grids__1SVHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TableFooterComponent_root__FICsV\",\"text\":\"TableFooterComponent_text__3VtIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientTransactionSetupPage_root__qxS7D\",\"tiles\":\"ClientTransactionSetupPage_tiles__11T60\",\"task-tray\":\"ClientTransactionSetupPage_task-tray__1EmiN\",\"list-item\":\"ClientTransactionSetupPage_list-item__9czs9\",\"details\":\"ClientTransactionSetupPage_details__2zoyV\",\"detail-item\":\"ClientTransactionSetupPage_detail-item__34sv5\",\"label\":\"ClientTransactionSetupPage_label__3t4AB\",\"content\":\"ClientTransactionSetupPage_content__2sk64\",\"action\":\"ClientTransactionSetupPage_action__2H4h2\",\"ticket-list\":\"ClientTransactionSetupPage_ticket-list__3ngLd\",\"searchBar\":\"ClientTransactionSetupPage_searchBar__1-0NS\",\"table_caption\":\"ClientTransactionSetupPage_table_caption__1mHtp\",\"table_pagination\":\"ClientTransactionSetupPage_table_pagination__mQTxy\",\"pagination\":\"ClientTransactionSetupPage_pagination__1ZHIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-wrapper\":\"HeaderDetails_header-wrapper__3QyjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContentPage_root__327l0\",\"content-shift\":\"ContentPage_content-shift__3shMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InvoiceApprovedPage_root__162XN\",\"drawer-content\":\"InvoiceApprovedPage_drawer-content__3KOTR\",\"content-header-details\":\"InvoiceApprovedPage_content-header-details__3pq2j\",\"fields\":\"InvoiceApprovedPage_fields__t2lRc\",\"values\":\"InvoiceApprovedPage_values__AMTHZ\",\"status\":\"InvoiceApprovedPage_status__2AyLW\",\"export-view-billing-cycle-wrapper\":\"InvoiceApprovedPage_export-view-billing-cycle-wrapper__2jJDz\",\"export-view-content\":\"InvoiceApprovedPage_export-view-content__jJe49\",\"export-icon\":\"InvoiceApprovedPage_export-icon__3999-\",\"export-link\":\"InvoiceApprovedPage_export-link__3y5hU\",\"view-icon\":\"InvoiceApprovedPage_view-icon__1o7QL\",\"view-link\":\"InvoiceApprovedPage_view-link__FqBk1\",\"button-tr\":\"InvoiceApprovedPage_button-tr__35WAV\",\"td\":\"InvoiceApprovedPage_td__16itZ\",\"button-wrapper\":\"InvoiceApprovedPage_button-wrapper__1__lv\",\"button\":\"InvoiceApprovedPage_button__sLkXH\",\"close-button\":\"InvoiceApprovedPage_close-button__1F2IK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"EnhancedSearchComponent_root__3oH42\",\"menu-button\":\"EnhancedSearchComponent_menu-button__3LM0n\",\"input\":\"EnhancedSearchComponent_input__1wva3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advanced-search-link\":\"CreateTransactionPage_advanced-search-link__2-JkL\",\"button-wrapper\":\"CreateTransactionPage_button-wrapper__2ThIh\",\"button\":\"CreateTransactionPage_button__1PLoN\",\"cancel-link\":\"CreateTransactionPage_cancel-link__VpFDO\",\"cancel-button\":\"CreateTransactionPage_cancel-button__112Qx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ListOfAccountsPage_root__20bCp\",\"header-container\":\"ListOfAccountsPage_header-container__2W184\",\"header\":\"ListOfAccountsPage_header__3EtCc\",\"title\":\"ListOfAccountsPage_title__hF8f9\",\"close-button\":\"ListOfAccountsPage_close-button__V7pWL\",\"clear\":\"ListOfAccountsPage_clear__x387y\",\"search-container\":\"ListOfAccountsPage_search-container__2e8-F\",\"search-field\":\"ListOfAccountsPage_search-field__2eFlm\",\"display-settings\":\"ListOfAccountsPage_display-settings__3aUT5\",\"display-settings-icon\":\"ListOfAccountsPage_display-settings-icon__1VGAG\",\"export-icon\":\"ListOfAccountsPage_export-icon__y_R7A\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 940;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ClientTransactionJournalPage_root__b667C\",\"header-container\":\"ClientTransactionJournalPage_header-container__3pYB6\",\"header\":\"ClientTransactionJournalPage_header__1n3sd\",\"title\":\"ClientTransactionJournalPage_title__1TFxg\",\"close-button\":\"ClientTransactionJournalPage_close-button__1Ti3S\",\"clear\":\"ClientTransactionJournalPage_clear__3rSOH\",\"search-container\":\"ClientTransactionJournalPage_search-container__3IfuC\",\"search-field\":\"ClientTransactionJournalPage_search-field__3Tdt8\",\"display-settings\":\"ClientTransactionJournalPage_display-settings__ywMYg\",\"display-settings-icon\":\"ClientTransactionJournalPage_display-settings-icon__U6QXT\",\"export-icon\":\"ClientTransactionJournalPage_export-icon__3HTjk\",\"account_info\":\"ClientTransactionJournalPage_account_info__2_z70\",\"info_text_left\":\"ClientTransactionJournalPage_info_text_left__2Nqnz\",\"info_text_right\":\"ClientTransactionJournalPage_info_text_right__3ekSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"EnhacedSearchReferenceNo_root__1Laa8\",\"menu-button\":\"EnhacedSearchReferenceNo_menu-button__l_YtQ\",\"input\":\"EnhacedSearchReferenceNo_input__Xbf8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-type-item-icon-invoice\":\"CreateTransactionTypePage_transaction-type-item-icon-invoice__2SHqA\",\"transaction-type-item-icon-credit-memo\":\"CreateTransactionTypePage_transaction-type-item-icon-credit-memo__humml\",\"transaction-type-item-icon-debit-note\":\"CreateTransactionTypePage_transaction-type-item-icon-debit-note__3ot7S\",\"transaction-type-item-icon-credit-note\":\"CreateTransactionTypePage_transaction-type-item-icon-credit-note__3412q\",\"remove-icon\":\"CreateTransactionTypePage_remove-icon__1IJf4\",\"drawer-content\":\"CreateTransactionTypePage_drawer-content__2WKut\",\"main-content-wrapper\":\"CreateTransactionTypePage_main-content-wrapper__2lI9W\",\"transaction-type-container\":\"CreateTransactionTypePage_transaction-type-container__1MrL0\",\"transaction-type-field\":\"CreateTransactionTypePage_transaction-type-field__1Udwm\",\"transaction-type-value\":\"CreateTransactionTypePage_transaction-type-value__QjERg\",\"transaction-type-button\":\"CreateTransactionTypePage_transaction-type-button__-q2_Z\",\"reference-number-container\":\"CreateTransactionTypePage_reference-number-container__1HUH1\",\"reference-number-field\":\"CreateTransactionTypePage_reference-number-field__2b-NG\",\"reference-number-value\":\"CreateTransactionTypePage_reference-number-value__vXg9g\",\"advanced-search-link\":\"CreateTransactionTypePage_advanced-search-link__9qv0x\",\"button-wrapper\":\"CreateTransactionTypePage_button-wrapper__3aNlO\",\"button\":\"CreateTransactionTypePage_button__KXy31\",\"cancel-link\":\"CreateTransactionTypePage_cancel-link__29flk\",\"cancel-button\":\"CreateTransactionTypePage_cancel-button__wO5Fc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TempTableForMemo_root__1SMvE\",\"paper\":\"TempTableForMemo_paper__28CvT\",\"table-wrapper\":\"TempTableForMemo_table-wrapper__2Znd4\",\"table\":\"TempTableForMemo_table__2-AdS\",\"sort-icon\":\"TempTableForMemo_sort-icon__3TElO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer-content\":\"InvoicePendingPage_drawer-content__2oK0w\",\"content-header-details\":\"InvoicePendingPage_content-header-details__2Q8bz\",\"fields\":\"InvoicePendingPage_fields__2INyt\",\"values\":\"InvoicePendingPage_values__da9Ta\",\"status\":\"InvoicePendingPage_status__3pVhF\",\"export-view-billing-cycle-wrapper\":\"InvoicePendingPage_export-view-billing-cycle-wrapper__3Lk2_\",\"export-view-content\":\"InvoicePendingPage_export-view-content__2F6s7\",\"export-icon\":\"InvoicePendingPage_export-icon__iyN8O\",\"export-link\":\"InvoicePendingPage_export-link__3ss22\",\"view-icon\":\"InvoicePendingPage_view-icon__h6Faq\",\"view-link\":\"InvoicePendingPage_view-link__O1xim\",\"button\":\"InvoicePendingPage_button__30OoT\",\"button-positive\":\"InvoicePendingPage_button-positive__1WXOi\",\"button-negative\":\"InvoicePendingPage_button-negative__168vl\"};","import { defineAbility } from '@casl/ability'\nimport billingData from './data/billing-policies'\nimport collectionData from './data/collection-policies'\nimport claimsData from './data/claims-policies'\nimport partnerData from './data/partner-network-policies'\nimport User from './data/billing-user-mock.json'\nimport RbacController from '../../../Controllers/RbacController'\n\nconst userPolicies = []\n\nRbacController.getPolicyData().then(res => {\n  console.log(res)\n})\n\n// Temporary! Mock data used for deriving policies\ntry {\n  const { username } = JSON.parse(localStorage.getItem('me'))\n  const userLogged = User.filter(user => user.login.username === username)[0].login.rbac\n\n  for (let i = 0; i < userLogged.length; i++) {\n    console.log('test')\n    userPolicies.push({\n      method: userLogged[i].method,\n      element: userLogged[i].element_id,\n      policy_id: userLogged[i].policy_id\n    })\n  }\n} catch (error) {}\n\nexport default defineAbility((can, cannot) => {\n  for (let i = 0; i < userPolicies.length; i++) {\n    can(userPolicies[i].method, userPolicies[i].element)\n  }\n})\n","import { createCanBoundTo } from '@casl/react'\nimport ability from './rbac-config'\n\nexport default createCanBoundTo(ability)\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// CSS Classes\nimport classes from './CustomTaskTrayComponent.module.scss'\n\nexport default function CustomTaskTrayComponent (props) {\n  const { children, sizes, title } = props\n  let items = React.Children.toArray(children)\n\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'DashboardTileComponent') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n\n  const _sizes = sizes || {\n    xs: 12,\n    sm: 6,\n    md: 8,\n    lg: 4\n  }\n  if (title === ' ') {\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        <Typography variant='subtitle1' className={classes.title}>\n          {title}\n        </Typography>\n        <Grid container className={classes.wrapper} spacing={3}>\n          {items.map((item, index) => {\n            let itemSize = item.props.sizes || {}\n            let s = { ..._sizes, ...itemSize }\n            return (\n              <Grid item {...s} key={index}>\n                {item}\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\n\nimport classes from './CustomSearchTextComponent.module.scss'\n\nexport default function CustomSearchTextComponent (props) {\n  const { id, onChange, placeholder = '', width } = props\n\n  return (\n    <Paper style={{ width: width }} className={classes.root}>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        inputProps={{ 'aria-label': 'search google maps' }}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='no'\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\nimport Box from '@material-ui/core/Box'\nimport CustomSearchTextComponent from '../CustomSearchTextComponent/CustomSearchTextComponent'\n\nimport classes from './CustomEnhancedTable.module.scss'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport default function CustomEnhancedTable (props) {\n  const { count, changeView, search, tableHeaders, tableHeight, children, pagination, size, sort } = props\n\n  const [newPage, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n    changeView({ page: newPage, limit: rowsPerPage })\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value))\n    changeView({ page: newPage, limit: event.target.value })\n  }\n\n  function TablePaginationActions (props) {\n    const { onChangePage } = props\n\n    const handleFirstPageButtonClick = event => {\n      onChangePage(event, 0)\n    }\n\n    const handleBackButtonClick = event => {\n      onChangePage(event, newPage - 1)\n    }\n\n    const handleNextButtonClick = event => {\n      onChangePage(event, newPage + 1)\n    }\n\n    const handleLastPageButtonClick = event => {\n      onChangePage(event, Math.max(0, Math.ceil(pagination.count / 10) - 1))\n    }\n\n    return (\n      <Box component='div' m={1} display='flex'>\n        <IconButton onClick={handleFirstPageButtonClick} disabled={newPage === 0} aria-label='first page'>\n          <FirstPageIcon />\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={newPage === 0} aria-label='previous page'>\n          <KeyboardArrowLeft />\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={newPage >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label='next page'\n          q\n        >\n          <KeyboardArrowRight />\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={newPage >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label='last page'\n        >\n          <LastPageIcon />\n        </IconButton>\n      </Box>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper style={{ height: tableHeight }} className={classes.paper}>\n        <div className={classes['table-wrapper']}>\n          <Table\n            stickyHeader\n            aria-label='sticky table'\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {tableHeaders.map(header => (\n                  <TableCell\n                    id={header.id}\n                    key={header.id}\n                    align={header.center ? 'center' : header.numeric ? 'right' : 'left'}\n                    padding={header.disablePadding ? 'none' : 'default'}\n                    sortDirection={false}\n                    width={header.width}\n                  >\n                    {header.label}\n                    {header.label !== '' && sort ? (\n                      <FontAwesomeIcon className={classes['sort-icon']} style={{ float: 'right' }} icon={faSort} />\n                    ) : (\n                      ''\n                    )}\n                    {header.label !== '' && search ? <CustomSearchTextComponent width={header.width} /> : ''}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && (\n          <TablePagination\n            className={classes.pagination}\n            rowsPerPageOptions={count >= 5 ? (newPage === Math.ceil(count / rowsPerPage) - 1 ? 10 : [5, 10, 20]) : 5}\n            // colSpan={3}\n            count={pagination.count}\n            rowsPerPage={pagination.count >= 5 ? rowsPerPage : 5}\n            page={newPage}\n            ActionsComponent={TablePaginationActions}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        )}\n      </Paper>\n    </div>\n  )\n}\n","const GrabByString = (o, s) => {\n  s = s.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  s = s.replace(/^\\./, '') // strip a leading dot\n  var a = s.split('.')\n  for (var i = 0, n = a.length; i < n; ++i) {\n    var k = a[i]\n    if (k in o) {\n      o = o[k]\n    } else {\n      return\n    }\n  }\n  return o\n}\nexport { GrabByString }\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport moment from 'moment'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded'\n\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { CurrencyFormatter, DateFormatterByAbbreviation } from 'Utilities/TextFormatter'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport CustomEnhancedTable from '../CustomEnhancedTable/CustomEnhancedTable'\nimport { GrabByString } from 'Utilities/GrabObject'\n\nimport classes from './ViewAll.module.scss'\n\nexport default function CustomizedDialogs (props) {\n  const {\n    config,\n    tile,\n    title,\n    contents,\n    route,\n    linkCaption,\n    viewAll,\n    setViewAll,\n    passProperty,\n    subProperty,\n    subSubProperty,\n    changeViewList,\n    count,\n    modal,\n    preSoa,\n    preSoaAnalyst\n  } = props\n\n  const history = useHistory()\n\n  const tableHeaders = config[tile].headers\n  const tableColumnSequence = config[tile].sequence\n  const pagination = { count: count, rowsPerPage: 10, page: Math.ceil(count / 10) }\n  const handleOnClose = () => {\n    setViewAll(false)\n    history.push('/')\n  }\n\n  const changeView = params => {\n    changeViewList(params)\n    pagination.page = 6\n    console.log(pagination)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='lg'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewAll}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex', backgroundColor: '#f4f6f8' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <Typography id='modal-title' variant='h6' className={classes.title}>\n            {title}\n          </Typography>\n          <IconButton\n            id='modal-close-button'\n            aria-label='close'\n            className={classes['close-button']}\n            onClick={handleOnClose}\n          >\n            <CloseIcon />\n          </IconButton>\n          <div className={classes.clear} />\n        </div>\n      </DialogTitle>\n      <DialogContent className={classes['content-container']}>\n        <div className={classes['search-container']}>\n          <div id='modal-search-field' className={classes['search-field']}>\n            <SearchTextComponent />\n          </div>\n          <Link id='display-settings-link' className={classes['display-settings']} to='/' color='primary' size='medium'>\n            <IconButton id='display-settings-icon'>\n              <ViewListRoundedIcon className={classes['display-settings-icon']} />\n              <Typography className='text-link underline'>Display Settings</Typography>\n            </IconButton>\n          </Link>\n        </div>\n        {/* For Pre Soa to Analyze Modal */}\n        {preSoa ? (\n          <div className={classes.count}>\n            <Grid container spacing={2} direction='row'>\n              <Grid item xs={12}>\n                <Grid container justify='center' spacing={10}>\n                  <Grid item className={classes.grids}>\n                    <Typography variant='h4' align='center' className={classes.name}>\n                      0\n                    </Typography>\n                    <Typography variant='h6'>TO ANALYZE</Typography>\n                  </Grid>\n                  <Grid item className={classes.grids}>\n                    <Typography variant='h4' align='center' className={classes.name}>\n                      0\n                    </Typography>\n                    <Typography variant='h6' align='center'>\n                      APPROVED\n                    </Typography>\n                  </Grid>\n                  <Grid item className={classes.grids}>\n                    <Typography variant='h4' align='center' className={classes.name}>\n                      0\n                    </Typography>\n                    <Typography variant='h6' align='center'>\n                      DISAPPROVED\n                    </Typography>\n                    <Typography className={classes.smtext} align='center'>\n                      (FOR REVISION)\n                    </Typography>\n                  </Grid>\n                  <Grid item className={classes.grids}>\n                    <Typography variant='h4' align='center' className={classes.name}>\n                      0\n                    </Typography>\n                    <Typography variant='h6' align='center'>\n                      VOID\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          ''\n        )}\n        {/* end of for pre soa to Analyze Modal */}\n        <CustomEnhancedTable\n          count={count}\n          changeView={changeView}\n          tableHeaders={tableHeaders}\n          pagination={pagination}\n          search\n          sort\n        >\n          <TableBody>\n            {contents.map((row, contentsIndex) => (\n              <TableRow hover tabIndex={-1} key={contentsIndex}>\n                {tableColumnSequence.map((columnName, index) => (\n                  <TableCell\n                    id={`${columnName}-${contentsIndex}`}\n                    key={index}\n                    align={\n                      new RegExp(['amount', 'sub_total'].join('|')).test(columnName.toString().toLowerCase())\n                        ? 'right'\n                        : 'left'\n                    }\n                  >\n                    {columnName.includes('.') &&\n                    new RegExp(['amount', 'sub_total'].join('|')).test(columnName.toString().toLowerCase())\n                      ? CurrencyFormatter(GrabByString(row, columnName))\n                      : columnName.includes('.')\n                        ? moment(GrabByString(row, columnName), moment.ISO_8601).isValid()\n                          ? DateFormatterByAbbreviation(row[columnName])\n                          : GrabByString(row, columnName)\n                        : row[columnName]}\n                  </TableCell>\n                ))}\n                {linkCaption ? (\n                  <TableCell id={`${linkCaption.toLowerCase()}-cell-${contentsIndex}-modal`} align='center'>\n                    <Link\n                      id={`${linkCaption.toLowerCase()}-link-${contentsIndex}-modal`}\n                      to={\n                        passProperty\n                          ? passProperty.includes('.') || subProperty\n                            ? subProperty\n                              ? subSubProperty\n                                ? route + row[passProperty] + '/' + row[subProperty][subSubProperty] + modal\n                                : route + GrabByString(row, passProperty) + '/' + GrabByString(row, subProperty)\n                              : route + GrabByString(row, passProperty)\n                            : route + GrabByString(row, passProperty) + (preSoaAnalyst === true ? '/analyst' : '')\n                          : route\n                      }\n                    >\n                      <Typography\n                        id={`${linkCaption.toLowerCase()}-text-${contentsIndex}-modal`}\n                        variant='caption'\n                        className='text-link underline'\n                      >\n                        {linkCaption}\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                ) : (\n                  ''\n                )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </CustomEnhancedTable>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/b/cls')\nconst axiosCC = instance('/b/cc')\nconst axiosSOA = instance('/b/cs')\nconst axiosCTL = instance('/b/ctl')\n\nexport default class BillingAnalystServices {\n  static getBillingCycleList () {\n    return axios({\n      url: `/billing/client-ledger-setup/cycle-list`,\n      method: 'GET'\n    })\n  }\n\n  static getReport ({ type }) {\n    return axios({\n      url: `/billing/reports?category=${type}`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n\n  static getClientsAssigned (params) {\n    return axios({\n      url: `/billing/client-ledger-setup/analyst/${params.id}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getClientsAssignedCount (params) {\n    return axios({\n      url: `/billing/client-ledger-setup/analyst/count/${params.id}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static updateBillingCycle ({ clientId, data }) {\n    return axios({\n      url: `/billing/client-ledger-setup/${clientId}/cycle`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static getClientSOAs ({ currentUserId }) {\n    return axiosSOA({\n      url: `/billing/client-soa/list/${currentUserId}/pre-generate-soa`,\n      method: 'GET'\n    })\n  }\n\n  static getSavedClientSOAs ({ currentUserId }) {\n    return axiosSOA({\n      url: `/billing/client-soa/list-save/${currentUserId}/pre-generate-soa`,\n      method: 'GET'\n    })\n  }\n\n  static getApprovedClientSOAs ({ currentUserId }) {\n    return axiosSOA({\n      url: `/billing/client-soa/list-approve/${currentUserId}/pre-generate-soa`,\n      method: 'GET'\n    })\n  }\n\n  static getDisapprovedClientSOAs ({ currentUserId }) {\n    return axiosSOA({\n      url: `/billing/client-soa/list-disapprove/${currentUserId}/pre-generate-soa`,\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedClientSOAs ({ currentUserId }) {\n    return axiosSOA({\n      url: `/billing/client-soa/list-submit/${currentUserId}/pre-generate-soa`,\n      method: 'GET'\n    })\n  }\n\n  static getClientSOAsCount ({ status }) {\n    return axiosSOA({\n      url: `/billing/client-soa/list-count/${status}/pre-generate-soa`,\n      method: 'GET'\n    })\n  }\n\n  static getSelectedClient ({ clientId }) {\n    return axiosCC({\n      url: `/billing/client-contract/search/`,\n      params: { account_number: clientId },\n      method: 'GET'\n    })\n  }\n\n  static getClientTransactionLedgerEntries ({ userID, role }) {\n    return axiosCTL({\n      url: `/billing/client/transaction/entries/`,\n      params: { userID: userID, role: role },\n      method: 'GET'\n    })\n  }\n\n  static getClientTransactionLedgerEntryContents (clientId) {\n    return axiosCTL({\n      url: `/billing/client/transaction/entries/view`,\n      params: { corporate_id: clientId },\n      method: 'GET'\n    })\n  }\n\n  static getClientSOA ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/${soaNumber}/pre-generate-soa`,\n      method: 'GET'\n    })\n  }\n\n  static saveClientSOA ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/save/${soaNumber}/pre-generate-soa`,\n      method: 'PUT'\n    })\n  }\n\n  static submitClientSOA ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/submit/${soaNumber}/pre-generate-soa`,\n      method: 'PUT'\n    })\n  }\n\n  static assignClientSOA ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/assign/${soaNumber}/pre-generate-soa`,\n      method: 'PUT'\n    })\n  }\n\n  static getApprovedInvoices () {\n    const approvedInvoices = [\n      {\n        id: 0,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000005',\n        corporate_name: 'Metro Retail Stores Group',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 6000\n      },\n      {\n        id: 1,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000004',\n        corporate_name: 'Metro Retail Stores Group',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 3000\n      },\n      {\n        id: 2,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000003',\n        corporate_name: 'Ever Gotesco Malls',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 9000\n      },\n      {\n        id: 3,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000002',\n        corporate_name: 'Ever Gotesco Malls',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 9000\n      },\n      {\n        id: 4,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000001',\n        corporate_name: 'All Youth',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 9000\n      }\n    ]\n\n    return approvedInvoices\n  }\n\n  static getApprovedInvoice ({ invoice_id }) {\n    const approvedInvoices = [\n      {\n        id: 0,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000005',\n        corporate_name: 'Metro Retail Stores Group',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 6000\n      },\n      {\n        id: 1,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000004',\n        corporate_name: 'Metro Retail Stores Group',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 3000\n      },\n      {\n        id: 2,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000003',\n        corporate_name: 'Ever Gotesco Malls',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 9000\n      },\n      {\n        id: 3,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000002',\n        corporate_name: 'Ever Gotesco Malls',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 9000\n      },\n      {\n        id: 4,\n        transaction_date: 'Dec 31, 2019',\n        invoice_number: 'INV000001',\n        corporate_name: 'All Youth',\n        approved_by: 'System Generated',\n        date_approved: 'Dec 31, 2019',\n        amount: 9000\n      }\n    ]\n\n    return approvedInvoices[invoice_id]\n  }\n\n  static getInvoiceTransactions () {\n    const invoiceTransactions = [\n      {\n        transaction_type: 'BC01-1 Premium',\n        member_account_id: '7012643803-7398151111',\n        member_name: 'Harry D. Reynes',\n        description: 'Additional Enrolle',\n        tax_type: 'VAT Exempt',\n        amount: '2,800.00'\n      },\n      {\n        transaction_type: 'BC01-1 Premium',\n        member_account_id: '7012643803-7398154496',\n        member_name: 'Angel D. Reyes',\n        description: 'Additional Enrolle',\n        tax_type: 'VAT Exempt',\n        amount: '2,800.00'\n      },\n      {\n        transaction_type: 'BC03 Processing',\n        member_account_id: '7012643803-7398151111',\n        member_name: 'Harry D. Reynes',\n        description: 'Additional Enrolle',\n        tax_type: 'VAT Exempt',\n        amount: '200.00'\n      },\n      {\n        transaction_type: 'BC03 Processing',\n        member_account_id: '7012643803-7398154496',\n        member_name: 'Angel D. Reyes',\n        description: 'Additional Enrolle',\n        tax_type: 'VAT Exempt',\n        amount: '200.00'\n      },\n      {\n        transaction_type: 'BC03 Processing',\n        member_account_id: '7012643803-7398154123',\n        member_name: 'Jake D. Santos',\n        description: 'Additional Enrolle',\n        tax_type: 'VAT Exempt',\n        amount: '200.00'\n      }\n    ]\n\n    return invoiceTransactions\n  }\n}\n","import instance from './instance'\nconst axios = instance('/b/ci')\n\nexport default class BillingClientInvoicesServices {\n  static getInvoiceDetails ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice-details/${transaction_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getTobeRevisedInvoice ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice-get/${transaction_number}`,\n      method: 'GET'\n    })\n  }\n\n  static getTobeRevisedInvoices ({ transaction_status, condition }) {\n    return axios({\n      url: `/billing/invoice-getall/${transaction_status}/${condition}`,\n      method: 'GET'\n    })\n  }\n  static saveRevisedInvoices ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice/invoice-save/${transaction_number}`,\n      method: 'PUT'\n    })\n  }\n\n  static submitRevisedInvoices ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice/invoice-submit/${transaction_number}`,\n      method: 'PUT'\n    })\n  }\n\n  static getRevisedInvoice ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice/${transaction_number}`,\n      method: 'GET'\n    })\n  }\n\n  static assign ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice/invoice-assign/${transaction_number}`,\n      method: 'PUT'\n    })\n  }\n\n  static approve ({ transactionNumber }) {\n    console.log('??????????????????????????????????', transactionNumber)\n    return axios({\n      url: `/billing/invoice/invoice-approve/${transactionNumber}`,\n      method: 'PUT'\n    })\n  }\n\n  static disapprove ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice/invoice-disapprove/${transaction_number}`,\n      method: 'PUT'\n    })\n  }\n\n  static void ({ transaction_number }) {\n    return axios({\n      url: `/billing/invoice/invoice-void/${transaction_number}`,\n      method: 'PUT'\n    })\n  }\n}\n","const config = {\n  approvedInvoices: {\n    headers: [\n      {\n        id: 'approved-invoices-transaction-date',\n        numeric: false,\n        disablePadding: false,\n        label: 'Transaction Date',\n        width: 161\n      },\n      {\n        id: 'approved-invoices-number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Transaction No.',\n        width: 120\n      },\n      {\n        id: 'approved-invoices-corporate-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Name',\n        width: 236\n      },\n      {\n        id: 'approved-invoices-approved-by',\n        numeric: false,\n        disablePadding: false,\n        label: 'Approved By',\n        width: 170\n      },\n      {\n        id: 'approved-invoices-date-approved',\n        numeric: false,\n        disablePadding: false,\n        label: 'Date Approved',\n        width: 140\n      },\n      {\n        id: 'approved-invoices-amount',\n        numeric: false,\n        disablePadding: false,\n        label: 'Amount',\n        width: 77\n      },\n      {\n        id: 'approved-invoices-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: '',\n        width: 0\n      }\n    ],\n    sequence: [\n      'date.created',\n      'transaction.number',\n      'client.account_name',\n      'approved_by',\n      'date.created',\n      'summary.sub_total'\n    ]\n  },\n  pendingInvoices: {\n    headers: [\n      {\n        id: 'approved-invoices-transaction-date',\n        numeric: false,\n        disablePadding: false,\n        label: 'Transaction Date',\n        width: 161\n      },\n      {\n        id: 'approved-invoices-number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Transaction No.',\n        width: 120\n      },\n      {\n        id: 'approved-invoices-corporate-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Name',\n        width: 300\n      },\n      {\n        id: 'approved-invoices-date-approved',\n        numeric: false,\n        disablePadding: false,\n        label: 'Date Approved',\n        width: 140\n      },\n      {\n        id: 'approved-invoices-amount',\n        numeric: false,\n        disablePadding: false,\n        label: 'Amount',\n        width: 120\n      },\n      {\n        id: 'approved-invoices-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: '',\n        width: 0\n      }\n    ],\n    sequence: ['date.created', 'transaction.number', 'client.account_name', 'date.created', 'summary.sub_total']\n  },\n  clientTransactions: {\n    headers: [\n      {\n        id: 'account-number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account No.'\n      },\n      {\n        id: 'account-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Name'\n      },\n      {\n        id: 'contract-type',\n        numeric: false,\n        disablePadding: false,\n        label: 'Contract Type'\n      },\n      {\n        id: 'contract-effectivity',\n        numeric: false,\n        disablePadding: false,\n        label: 'Effectivity Date'\n      },\n      {\n        id: 'client-transaction-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: ''\n      }\n    ],\n    sequence: ['client.account_number', 'client.account_name', 'contract.plan_type', 'contract.effectivity']\n  },\n  clientPreSoaToAnalyze: {\n    headers: [\n      {\n        id: 'account-number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Number'\n      },\n      {\n        id: 'account-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Name'\n      },\n      {\n        id: 'billing-cycle',\n        numeric: false,\n        disablePadding: false,\n        label: 'Billing Cycle'\n      },\n      {\n        id: 'due-date',\n        numeric: false,\n        disablePadding: false,\n        label: 'Due Date'\n      },\n      {\n        id: 'client-pre-soas-to-anaylze-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: ''\n      }\n    ],\n    sequence: ['soa_number', 'account_name', `billing_cycle`, 'due_date']\n  },\n  memberPreSoaToAnalyze: {\n    headers: [\n      {\n        id: 'account-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Name'\n      },\n      {\n        id: 'member-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Member Name'\n      },\n      {\n        id: 'submitted-by',\n        numeric: false,\n        disablePadding: false,\n        label: 'Submitted By'\n      },\n      {\n        id: 'date-submitted',\n        numeric: false,\n        disablePadding: false,\n        label: 'Date Submitted'\n      },\n      {\n        id: 'amount',\n        numeric: false,\n        disablePadding: false,\n        label: 'Amount'\n      },\n      {\n        id: 'member-pre-soas-to-analyze-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: ''\n      }\n    ],\n    sequence: ['client.account_name', 'member.name', `submitted_by`, 'date_submitted', 'amount']\n  },\n  invoicesSubmittedForApproval: {\n    headers: [\n      {\n        id: 'transaction-date',\n        numeric: false,\n        disablePadding: false,\n        label: 'Transaction Date'\n      },\n      {\n        id: 'transaction-number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Transaction Number'\n      },\n      {\n        id: 'account-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Name'\n      },\n      {\n        id: 'date-submitted',\n        numeric: false,\n        disablePadding: false,\n        label: 'Date Submitted'\n      },\n      {\n        id: 'amount',\n        numeric: false,\n        disablePadding: false,\n        label: 'Amount'\n      },\n      {\n        id: 'invoices-submitted-for-approval-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: ''\n      }\n    ],\n    sequence: ['date.created', 'transaction.number', 'client.account_name', 'date.created', 'summary.sub_total']\n  }\n}\n\nexport { config }\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link, useHistory, useParams } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Can from '../../../SecurityConfig/Can'\nimport ability from '../../../SecurityConfig/rbac-config'\n\nimport * as moment from 'moment'\n\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport CustomTaskTray from '../../Components/CustomTaskTrayComponent/CustomTaskTrayComponent'\nimport ViewAll from '../../Components/ViewAll/ViewAll'\n\nimport BillingAnalystServices from 'Services/Api/BillingAnalystServices'\nimport BillingClientInvoicesServices from 'Services/Api/BillingClientInvoicesServices'\n\nimport { config } from './ViewAllConfig'\n\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard () {\n  const history = useHistory()\n  PageTitleService('Dashboard')\n  BreadcrumbsService.setSelectedItems(['dashboard'])\n\n  const initialValue = {\n    show: false,\n    title: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'latest.date.due',\n    order: true\n  }\n\n  const [clientList, setClientList] = React.useState([])\n\n  const [clientListForApproval, setClientListForApproval] = React.useState([])\n\n  const [clients, setClients] = React.useState({\n    data: []\n  })\n\n  const [clientsAssignedCount, setClientsAssignedCount] = React.useState(0)\n  const [clientsAssignedList, setClientsAssignedList] = React.useState({\n    data: []\n  })\n\n  const [clientSOAs, setClientSOAs] = React.useState({\n    data: []\n  })\n  // same as clientSOAs, setClientSOAs\n  const [clientpreSOAs, setClientpreSOAs] = React.useState({\n    data: []\n  })\n  const [savedClientSOAs, setSavedClientSOAs] = React.useState({\n    data: []\n  })\n  const [submittedClientSOAs, setSubmittedClientSOAs] = React.useState({\n    data: []\n  })\n  const [approvedInvoices, setApprovedInvoices] = React.useState({\n    data: []\n  })\n  const [approvedClientSOAs, setApprovedClientSOAs] = React.useState({\n    data: []\n  })\n\n  const [viewAll, setViewAll] = React.useState(false)\n  const [pendingInvoiceViewAll, setPendingInvoiceViewAll] = React.useState(false)\n  const [invoicesSubmittedForApprovalViewAll, setInvoicesSubmittedForApprovalViewAll] = React.useState(false)\n  const [soaToAnalyzeViewAll, setSoaToAnalyzeViewAll] = React.useState(false)\n  const [clientViewAll, setClientViewAll] = React.useState(false)\n\n  const [clientPreSoaToAnalyzeViewAll, setClientPreSoaToAnalyzeViewAll] = React.useState(false)\n  const [memberPreSoaToAnalyzeViewAll, setMemberPreSoaToAnalyzeViewAll] = React.useState(false)\n  React.useEffect(() => {\n    const current_user_id = JSON.parse(localStorage.getItem('me'))._id\n    Promise.all([\n      BillingAnalystServices.getClientsAssigned({\n        id: current_user_id,\n        limit: 10,\n        page: 1\n      }),\n      BillingAnalystServices.getClientsAssignedCount({\n        id: current_user_id\n      })\n    ]).then(values => {\n      console.log(values)\n      const [clients, clientCount] = values\n      const clientsData = clients.data.data.results\n      setClients(prevState => ({\n        ...prevState,\n        data: clientsData\n      }))\n      setClientsAssignedList(prevState => ({\n        ...prevState,\n        data: clientsData\n      }))\n\n      setClientsAssignedCount(clientCount.data.data)\n    })\n\n    // TODO API CALL FOR CLIENT SOAS\n    Promise.all([BillingAnalystServices.getClientSOAs({ currentUserId: current_user_id })]).then(values => {\n      setClientSOAs(prevState => ({\n        ...prevState,\n        data: values[0].data.data\n      }))\n      console.group('SOAs')\n      console.log(values[0].data.data)\n      console.groupEnd()\n    })\n\n    Promise.all([BillingAnalystServices.getSavedClientSOAs({ currentUserId: current_user_id })]).then(values => {\n      setSavedClientSOAs(prevState => ({\n        ...prevState,\n        data: values[0].data.data\n      }))\n      console.group('Saved SOAs')\n      console.log(values[0].data.data)\n      console.groupEnd()\n    })\n\n    Promise.all([BillingAnalystServices.getApprovedClientSOAs({ currentUserId: current_user_id })]).then(values => {\n      setApprovedClientSOAs(prevState => ({\n        ...prevState,\n        data: values[0].data.data\n      }))\n      console.group('APPROVED SOAs')\n      console.log(values[0].data.data)\n      console.groupEnd()\n    })\n\n    Promise.all([BillingAnalystServices.getSubmittedClientSOAs({ currentUserId: current_user_id })]).then(values => {\n      setSubmittedClientSOAs(prevState => ({\n        ...prevState,\n        data: values[0].data.data\n      }))\n    })\n\n    Promise.all([\n      BillingClientInvoicesServices.getTobeRevisedInvoices({ transaction_status: 'Approved', condition: 'analyst' })\n    ]).then(values => {\n      const [invoices] = values\n      setApprovedInvoices(prevState => ({\n        ...prevState,\n        data: invoices.data.data.reverse()\n      }))\n    })\n  }, [])\n\n  // API CALL FOR NEW INVOICES\n  React.useEffect(() => {\n    BillingClientInvoicesServices.getTobeRevisedInvoices({ transaction_status: 'New', condition: 'analyst' }).then(\n      res => {\n        setClientList(res.data.data)\n      }\n    )\n    BillingClientInvoicesServices.getTobeRevisedInvoices({\n      transaction_status: 'For Approval',\n      condition: 'analyst'\n    }).then(res => {\n      setClientListForApproval(res.data.data)\n    })\n  }, [])\n\n  const changeView = params => {\n    // console.log(params)\n    const current_user_id = JSON.parse(localStorage.getItem('me'))._id\n    Promise.all([\n      BillingAnalystServices.getClientsAssigned({\n        id: current_user_id,\n        limit: params.limit,\n        page: params.page + 1\n      })\n    ]).then(values => {\n      const [clients] = values\n      const clientsData = clients.data.data.results\n      setClientsAssignedList(prevState => ({\n        ...prevState,\n        data: clientsData\n      }))\n    })\n  }\n  const assignSOA = soaNumber => {\n    BillingAnalystServices.assignClientSOA({ soaNumber: soaNumber })\n  }\n\n  // if (ability.can('GET', 'E-0001')) {\n  //   console.log('Has access to this page')\n  // } else {\n  //   console.log('No Access to this page')\n  //   history.replace('/Supervisor')\n  // }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray']}>\n          <CustomTaskTray sizes={{ xs: 12 }} title='Your Task Tray'>\n            <DashboardTile\n              id='analyze-client-soas'\n              count={{ color: 7, value: clientSOAs.data ? clientSOAs.data[1] : 0 }}\n              title='Client Pre-SOAs to Analyze'\n              sizes={{ xs: 4 }}\n              // isFilterShown={false}\n              viewList={\n                <Typography\n                  id={'analyze-client-soas-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={() => {\n                    setClientPreSoaToAnalyzeViewAll(true)\n                  }}\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id='analyze-client-soas-corporate-account-header'>Account Name</TableCell>\n                    <TableCell id='analyze-client-soas-billing-cycle-header'>Billing Cycle</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {clientSOAs.data &&\n                    clientSOAs.data[0] &&\n                    clientSOAs.data[0].slice(0, 5).map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`analyze-client-soas-corporate-name-${index}`}>{item.account_name}</TableCell>\n                        <TableCell id={`analyze-client-soas-billing-cycle-${index}`}>{item.billing_cycle}</TableCell>\n                        <TableCell id={`analyze-client-soas-corporate-id-${index}`}>\n                          <Link\n                            to={`/billing/ledgers/${item.soa_number}/${'analyst'}`}\n                            onClick={() => assignSOA(item.soa_number)}\n                          >\n                            <Typography variant='caption' className='text-link underline'>\n                              Analyze\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  <ViewAll\n                    id={'client-pre-soa-to-analyze-modal'}\n                    config={config}\n                    tile={'clientPreSoaToAnalyze'}\n                    title='List of Client Pre-SOAs To Analyze'\n                    contents={clientSOAs.data[0] ? clientSOAs.data[0] : []}\n                    count={clientSOAs.data[0] ? clientSOAs.data[0].length : 0}\n                    viewAll={clientPreSoaToAnalyzeViewAll}\n                    setViewAll={setClientPreSoaToAnalyzeViewAll}\n                    linkCaption='Analyze'\n                    passProperty='soa_number'\n                    preSoa\n                    preSoaAnalyst\n                    // not yet implemented\n                    // modal='/#from_modal'\n                    changeViewList={changeView}\n                    route={`/billing/ledgers/`}\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 7, value: 0 }}\n              title='Member Pre-SOAs to Analyze'\n              sizes={{ xs: 4 }}\n              isFilterShown\n              viewList={\n                <Typography\n                  id={'analyze-client-soas-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={() => {\n                    setMemberPreSoaToAnalyzeViewAll(true)\n                  }}\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Member Name</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Setup\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                  <ViewAll\n                    id={'member-pre-soa-to-analyze-modal'}\n                    config={config}\n                    tile={'memberPreSoaToAnalyze'}\n                    title='List of Member Pre-SOAs To Analyze'\n                    contents={clientList}\n                    count={clientsAssignedCount}\n                    viewAll={memberPreSoaToAnalyzeViewAll}\n                    setViewAll={setMemberPreSoaToAnalyzeViewAll}\n                    linkCaption='Analyze'\n                    passProperty='_id'\n                    preSoa\n                    // not yet implemented\n                    // modal='/#from_modal'\n                    subSubProperty='account_number'\n                    changeViewList={changeView}\n                    route={`/billing/ledgers/`}\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: clientsAssignedCount }}\n              title='Client Transaction Journals to Setup'\n              sizes={{ xs: 4 }}\n              viewList={\n                // <Can I='GET' a='E-0008'>\n                <Typography\n                  id={'client-transaction-ledgers-to-setup-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={() => {\n                    setClientViewAll(true)\n                  }}\n                >\n                  View All\n                </Typography>\n                // </Can>\n              }\n            >\n              <Table size='small'>\n                <TableBody>\n                  {clients.data.slice(0, 6).map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.client.account_name}</TableCell>\n                      <TableCell>\n                        <Link\n                          to={`/clients/analyze/${item._id}/${item.client.account_number}`}\n                          style={{ textDecoration: 'none' }}\n                        >\n                          {/* <Can I='GET' a='E-0008'> */}\n                          <Typography variant='caption' className='text-link underline'>\n                            Setup\n                          </Typography>\n                          {/* </Can> */}\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n\n                  <ViewAll\n                    id={'client-transaction-ledgers-to-setup-modal'}\n                    config={config}\n                    tile={'clientTransactions'}\n                    title='List of Client Transaction Journals to Setup'\n                    contents={clientsAssignedList.data}\n                    count={clientsAssignedCount}\n                    viewAll={window.location.hash.replace(/[#/]/g, '') === 'Client-Ledger-Setup' ? true : clientViewAll}\n                    setViewAll={setClientViewAll}\n                    linkCaption='Setup'\n                    passProperty='_id'\n                    modal='/#from_modal'\n                    subProperty='client'\n                    subSubProperty='account_number'\n                    changeViewList={changeView}\n                    route={`/clients/analyze/`}\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n        <Grid item className={classes['task-tray']}>\n          <CustomTaskTray sizes={{ xs: 12 }} title='Items to Monitor'>\n            <DashboardTile\n              count={{ color: 6, value: 0 }}\n              title='Client TPAs to be Replenished'\n              sizes={{ xs: 6 }}\n              isFilterShown={false}\n              isTpaFilterShown\n              viewList={\n                <Typography\n                  id={'client-tpas-to-be-replenished-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Account Name</TableCell>\n                    <TableCell>\n                      <Typography align='center'>Budget %</Typography>\n                      <Typography align='center' className={classes['smtext']}>\n                        (as of Jan 01, 2020)\n                      </Typography>\n                    </TableCell>\n                    <TableCell>Date Last Billed</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            View Journal\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 7, value: 0 }}\n              title='Tickets Waiting for Response'\n              sizes={{ xs: 6 }}\n              isFilterShown={false}\n              isTicketFilterShown\n              viewList={\n                <Typography id={'tickets-waiting-for-response-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Ticket Type</TableCell>\n                    <TableCell>Account Name</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Setup\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n        <Grid item className={classes['task-tray']}>\n          <CustomTaskTray sizes={{ xs: 12 }}>\n            <DashboardTile\n              count={{ color: 3, value: savedClientSOAs.data ? savedClientSOAs.data[1] : 0 }}\n              title='Pending Pre-SOAs'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography id={'pre-soa-to-be-revised-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Account Name</TableCell>\n                    <TableCell>Billing Cycle</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {savedClientSOAs.data &&\n                    savedClientSOAs.data[0] &&\n                    savedClientSOAs.data[0].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`analyze-client-soas-corporate-name-${index}`}>{item.account_name}</TableCell>\n                        <TableCell id={`analyze-client-soas-billing-cycle-${index}`}>{item.billing_cycle}</TableCell>\n                        <TableCell id={`analyze-client-soas-corporate-id-${index}`}>\n                          <Link\n                            to={`/billing/ledgers/${item.soa_number}/${'analyst'}`}\n                            onClick={() => assignSOA(item.soa_number)}\n                          >\n                            <Typography variant='caption' className='text-link underline'>\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: submittedClientSOAs.data ? submittedClientSOAs.data[1] : 0 }}\n              title='Pre-SOAs Submitted for Approval'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography id={'soas-submitted-for-approval-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Account Name</TableCell>\n                    <TableCell>Billing Cycle</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {submittedClientSOAs.data &&\n                    submittedClientSOAs.data[0] &&\n                    submittedClientSOAs.data[0].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`analyze-client-soas-corporate-name-${index}`}>{item.account_name}</TableCell>\n                        <TableCell id={`analyze-client-soas-billing-cycle-${index}`}>{item.billing_cycle}</TableCell>\n                        <TableCell id={`analyze-client-soas-corporate-id-${index}`}>\n                          <Link to={`/billing/ledgers/${item.soa_number}/${'analyst'}`}>\n                            <Typography variant='caption' className='text-link underline'>\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: approvedClientSOAs.data ? approvedClientSOAs.data[1] : 0 }}\n              title='Approved Pre-SOAs'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography id={'approved-soas-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Account Name</TableCell>\n                    <TableCell>Billing Cycle</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {approvedClientSOAs.data &&\n                    approvedClientSOAs.data[0] &&\n                    approvedClientSOAs.data[0].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell>{item.account_name}</TableCell>\n                        <TableCell>{item.billing_cycle}</TableCell>\n                        <TableCell>\n                          <Link to={`/billing/ledgers/${item.soa_number}/${'analyst'}`}>\n                            <Typography variant='caption' className='text-link underline'>\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n        <Grid item className={classes['task-tray']}>\n          <CustomTaskTray sizes={{ xs: 12 }} title='Invoice Tasks'>\n            <DashboardTile\n              count={{ color: 6, value: clientList ? clientList.length : 0 }}\n              title='Pending Invoices'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography\n                  id={'pending-invoices-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={() => {\n                    setPendingInvoiceViewAll(true)\n                  }}\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Billing Cycle</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {clientList.slice(0, 5).map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.transaction.number}</TableCell>\n                      <TableCell>{item.billing.cycle.code}</TableCell>\n                      <TableCell>\n                        <Link to={`/billing/invoice/form/${item.transaction.number}/${item.transaction.status}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Edit\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  <ViewAll\n                    id={'pending-invoices-modal'}\n                    config={config}\n                    tile={'pendingInvoices'}\n                    title='List of Pending Invoices'\n                    contents={clientList}\n                    viewAll={pendingInvoiceViewAll}\n                    setViewAll={setPendingInvoiceViewAll}\n                    count={clientList ? clientList.length : 0}\n                    linkCaption='Edit'\n                    passProperty={'transaction.number'}\n                    subProperty={'transaction.status'}\n                    route='/billing/invoice/form/'\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: 0 }}\n              title='Invoices Submitted for Approval'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography\n                  id={'invoices-submitted-for-approval-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={() => {\n                    setInvoicesSubmittedForApprovalViewAll(true)\n                  }}\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Submitted Date</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {clientListForApproval.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.transaction_number}</TableCell>\n                      <TableCell>{moment(item.date.due).format('MM/DD/YYYY')}</TableCell>\n                      <TableCell>\n                        <Link to={`/billing/invoice/form/${item.transaction_number}/${item.transaction_status}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  <ViewAll\n                    id={'invoices-submitted-for-approval-modal'}\n                    config={config}\n                    tile={'invoicesSubmittedForApproval'}\n                    title='List of Invoices Submitted for Approval'\n                    contents={clientListForApproval}\n                    count={clientListForApproval ? clientListForApproval.length : 0}\n                    viewAll={invoicesSubmittedForApprovalViewAll}\n                    setViewAll={setInvoicesSubmittedForApprovalViewAll}\n                    linkCaption='Analyze'\n                    passProperty='_id'\n                    subSubProperty='account_number'\n                    changeViewList={changeView}\n                    route={`/billing/ledgers/`}\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              id={'approved-invoices'}\n              count={{ color: 3, value: approvedInvoices.data.length }}\n              title='Approved Invoices'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography\n                  variant='caption'\n                  className='bold text-link'\n                  id={'approved-invoices-modal-link'}\n                  onClick={() => {\n                    setViewAll(true)\n                  }}\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell id={'approved-invoices-number-header'}>Transaction No.</TableCell>\n                    <TableCell id={'approved-invoices-due-date-header'}>Date Approved</TableCell>\n                    <TableCell id={'approved-invoices-view-link-header'} />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {approvedInvoices.data.slice(0, 5).map((item, index) => (\n                    <TableRow id={`approved-invoices-${index}`} key={index}>\n                      <TableCell id={`approved-invoice-number-${index}`}>{item.transaction.number}</TableCell>\n                      <TableCell id={`approved-invoice-date-approved-${index}`}>\n                        {moment(item.date.due).format('MMM DD, YYYY')}\n                      </TableCell>\n                      <TableCell id={`approved-invoice-view-link-cell-${index}`}>\n                        <Link\n                          id={`approved-invoice-view-link-${index}`}\n                          to={`/billing/invoice/approved/${item.transaction.number}`}\n                        >\n                          <Typography\n                            id={`approved-invoice-view-link-text-${index}`}\n                            variant='caption'\n                            className='text-link underline'\n                          >\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  <ViewAll\n                    id={'approved-invoices-modal'}\n                    config={config}\n                    tile={'approvedInvoices'}\n                    title='List of Approved Invoices'\n                    contents={approvedInvoices.data}\n                    viewAll={viewAll}\n                    setViewAll={setViewAll}\n                    count={approvedInvoices.data ? approvedInvoices.data.length : 0}\n                    linkCaption='View'\n                    passProperty={'transaction.number'}\n                    route='/billing/invoice/approved/'\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n        <Grid item className={classes['task-tray']}>\n          <CustomTaskTray sizes={{ xs: 12 }} title='Credit Memo Tasks'>\n            <DashboardTile\n              count={{ color: 6, value: 0 }}\n              title='Pending Credit Memos'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography id={'credit-memo-to-be-revised-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Billing Cycle</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Edit\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: 0 }}\n              title='Credit Memos Submitted for Approval'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography\n                  id={'credit-memo-submitted-for-approval-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Submitted Date</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Setup\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: 0 }}\n              title='Approved Credit Memos'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography id={'approved-credit-memo-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Date Approved</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n        <Grid item className={classes['task-tray']}>\n          <CustomTaskTray sizes={{ xs: 12 }} title='Debit Memo Tasks'>\n            <DashboardTile\n              count={{ color: 6, value: 0 }}\n              title='Pending Debit Memos'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography id={'debit-notes-to-be-revised-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Billing Cycle</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Edit\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: 0 }}\n              title='Debit Memos Submitted for Approval'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography\n                  id={'debit-notes-submitted-for-approval-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Submitted Date</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Setup\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: 0 }}\n              title='Approved Debit Memos'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography id={'approved-debit-notes-modal-link'} variant='caption' className='bold text-link'>\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Transaction No.</TableCell>\n                    <TableCell>Date Approved</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientList.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.corporate_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Setup\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/b/cls')\nconst axios_root = instance('/')\nconst axiosSOA = instance('/b/cs')\nconst axiosCTL = instance('/b/ctl')\n\nexport default class BillingSupervisorServices {\n  static getClientLedgersToSetup (params) {\n    return axios({\n      url: '/billing/client-ledger-setup',\n      method: 'GET',\n      params\n    })\n  }\n\n  static assignBillingAnalyst ({ analystId, data }) {\n    return axios({\n      url: `/billing/client-ledger-setup/assign/${analystId}/client`,\n      method: 'PUT',\n      data\n    })\n  }\n\n  static getClientLedgerToSetup ({ _id }, params) {\n    return axios({\n      url: `/billing/client-ledger-setup/${_id}`,\n      method: 'GET',\n      params\n    })\n  }\n\n  static getUsersByRole (role) {\n    return axios_root({\n      url: `/users/${role}`,\n      method: 'GET'\n    })\n  }\n\n  static getClientTransactionLedgerEntries ({ userID, role }) {\n    return axiosCTL({\n      url: `/billing/client/transaction/entries/`,\n      params: { userID: userID, role: role },\n      method: 'GET'\n    })\n  }\n\n  static getClientTransactionLedgerEntryContents (clientId) {\n    return axiosCTL({\n      url: `/billing/client/transaction/entries/view`,\n      params: { corporate_id: clientId },\n      method: 'GET'\n    })\n  }\n\n  static getValidatedSOAs () {\n    return axiosSOA({\n      url: 'billing/client-soa/list-validated/pre-generate-soa',\n      method: 'GET'\n    })\n  }\n\n  static getSubmittedClientSOAs () {\n    return axiosSOA({\n      url: '/billing/client-soa/list-submitted-for-approval/pre-generate-soa',\n      method: 'GET'\n    })\n  }\n\n  static assignClientSOA ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/assign/${soaNumber}/pre-generate-soa`,\n      method: 'PUT'\n    })\n  }\n\n  static setClientSOADisapprove ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/disapprove/${soaNumber}/pre-generate-soa`,\n      method: 'PUT'\n    })\n  }\n\n  static setClientSOAApprove ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/approve/${soaNumber}/pre-generate-soa`,\n      method: 'PUT'\n    })\n  }\n\n  static setClientSOAVoid ({ soaNumber }) {\n    return axiosSOA({\n      url: `/billing/client-soa/void/${soaNumber}/pre-generate-soa`,\n      method: 'PUT'\n    })\n  }\n}\n","const config = {\n  clientTransactions: {\n    headers: [\n      {\n        id: 'account-number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Corporate Account ID',\n        width: 269\n      },\n      {\n        id: 'account-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Corporate Account Name',\n        width: 310\n      },\n      {\n        id: 'plan-type',\n        numeric: false,\n        disablePadding: false,\n        label: 'Plan Type',\n        width: 138\n      },\n      {\n        id: 'contract-effectivity',\n        numeric: false,\n        disablePadding: false,\n        label: 'Effectivity Date',\n        width: 199\n      },\n      {\n        id: 'client-transaction-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: '',\n        width: 73\n      }\n    ],\n    sequence: ['client.account_number', 'client.account_name', 'contract.type', 'contract.effectivity']\n  },\n  validatedSOAs: {\n    headers: [\n      {\n        id: 'account-number',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Number'\n      },\n      {\n        id: 'account-name',\n        numeric: false,\n        disablePadding: false,\n        label: 'Account Name'\n      },\n      {\n        id: 'billing-cycle',\n        numeric: false,\n        disablePadding: false,\n        label: 'Billing Cycle'\n      },\n      {\n        id: 'due-date',\n        numeric: false,\n        disablePadding: false,\n        label: 'Due Date'\n      },\n      {\n        id: 'client-pre-soas-to-anaylze-view-link',\n        numeric: false,\n        disablePadding: false,\n        label: ''\n      }\n    ],\n    sequence: ['_id', 'account_name', `billing_cycle`, 'due_date']\n  }\n}\n\nexport { config }\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport * as moment from 'moment'\n\n// Components\nimport DashboardTile from 'SharedComponents/DashboardTileComponent/DashboardTileComponent'\nimport CustomTaskTray from '../../Components/CustomTaskTrayComponent/CustomTaskTrayComponent'\nimport ViewAll from '../../Components/ViewAll/ViewAll'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\nimport BillingInvoiceServices from 'Services/Api/BillingClientInvoicesServices'\n// import BillingAnalystServices from 'Services/Api/BillingAnalystServices'\n\nimport { config } from './ViewAllConfig'\n\n// Styles\nimport classes from './Dashboard.module.scss'\n\nexport default function Dashboard () {\n  PageTitleService('Dashboard')\n  BreadcrumbsService.setSelectedItems(['dashboard'])\n\n  const [clientPreSoaToAnalyzeViewAll, setClientPreSoaToAnalyzeViewAll] = React.useState(false)\n\n  const [clientListApprove, setClientListApprove] = React.useState([])\n\n  const [clientListForApproval, setClientListForApproval] = React.useState([])\n\n  const [clients, setClients] = React.useState({\n    data: [],\n    count: 0\n  })\n\n  const [submittedClientSOAs, setSubmittedClientSOAs] = React.useState({\n    data: []\n  })\n  const [validatedClientSOAs, setValidatedClientSOAs] = React.useState({\n    data: []\n  })\n\n  const [viewAll, setViewAll] = React.useState(false)\n  const [toAssignAnalystCount, setToAssignAnalystCount] = React.useState(0)\n\n  React.useEffect(() => {\n    // if (ability.can('GET', 'E-0002')) {\n    //   console.log('Has access to this page')\n    // } else {\n    //   console.log('No Access to this page')\n    //   history.replace('/Analyst')\n    // }\n    const current_user_id = JSON.parse(localStorage.getItem('me'))._id\n\n    // Promise.all([BillingAnalystServices.getClientSOAs({ currentUserId: current_user_id })]).then(values => {\n    //   setClientSOAs(prevState => ({\n    //     ...prevState,\n    //     data: values[0].data.data\n    //   }))\n    // })\n\n    // TODO used for tables\n    BillingInvoiceServices.getTobeRevisedInvoices({ transaction_status: 'Approved', condition: 'supervisor' }).then(\n      res => {\n        setClientListApprove(res.data.data)\n      }\n    )\n\n    Promise.all([BillingSupervisorServices.getSubmittedClientSOAs()]).then(values => {\n      setSubmittedClientSOAs(prevState => ({\n        ...prevState,\n        data: values[0].data.data\n      }))\n      console.group('SOAs For Validation')\n      console.log(values[0].data.data)\n      console.groupEnd()\n    })\n\n    Promise.all([BillingSupervisorServices.getValidatedSOAs()]).then(values => {\n      setValidatedClientSOAs(prevState => ({\n        ...prevState,\n        data: values[0].data.data\n      }))\n      console.group('SOAs Validated')\n      console.log(values[0].data.data)\n      console.groupEnd()\n    })\n  }, [])\n\n  React.useEffect(() => {\n    Promise.all([\n      BillingSupervisorServices.getClientLedgersToSetup({\n        limit: 10,\n        page: 1\n      })\n      // getClientLedgerCount\n    ]).then(values => {\n      const [clients] = values\n      const clientLedgers = clients.data.data.results\n      console.log(values[0].data.data.count)\n      setClients(prevState => ({\n        ...prevState,\n        data: clientLedgers\n        // count: clientDataCount\n      }))\n      setToAssignAnalystCount(values[0].data.data.count)\n    })\n  }, [])\n\n  const changeViewValidatedTile = params => {\n    Promise.all([\n      BillingSupervisorServices.getValidatedSOAs({\n        limit: params.limit,\n        page: params.page + 1\n      })\n    ]).then(values => {\n      const [clients] = values\n      const clientsData = clients.data.data.results\n      setValidatedClientSOAs(prevState => ({\n        ...prevState,\n        data: clientsData\n      }))\n    })\n  }\n\n  var cheaders1 = [{ header_text: 'Corporate Account' }, { header_text: 'Billing Cycle' }, { header_text: 'Due Date' }]\n\n  var cheaders2 = [{ header_text: 'Corporate Account' }, { header_text: 'Billing Cycle' }]\n\n  var cheaders3 = [{ header_text: 'Corporate Account' }, { header_text: 'Billing Schedule' }]\n\n  var mheaders1 = [{ header_text: 'Member Name' }, { header_text: 'Corporate Account' }, { header_text: 'Due Date' }]\n\n  var mheaders2 = [{ header_text: 'Member Name' }, { header_text: 'Corporate Account' }, { header_text: 'Bill Type' }]\n\n  var headers_accinfo = [{ header_text: 'Corporate Account' }]\n\n  var headers_tinfo = [{ header_text: 'Corporate Account' }, { header_text: 'Transaction type' }]\n\n  var headers_vsinfo = [{ header_text: 'Corporate Account' }, { header_text: 'SOA No.' }]\n\n  var tickets = [\n    { id: 'Dec 01, 2019', duedate: 'Dec 05, 2019' },\n    { id: 'Dec 01, 2019', duedate: 'Dec 05, 2019' },\n    { id: 'Dec 01, 2019', duedate: 'Dec 05, 2019' }\n  ]\n\n  var data = []\n\n  var clientLedgers = clients.data\n\n  const changeView = params => {\n    console.log(params)\n    Promise.all([\n      BillingSupervisorServices.getClientLedgersToSetup({\n        limit: params.limit,\n        page: params.page + 1\n      })\n      // getClientLedgerCount\n    ]).then(values => {\n      const [clients] = values\n      const clientLedgers = clients.data.data.results\n      console.log(values[0].data.data.count)\n      setClients(prevState => ({\n        ...prevState,\n        data: clientLedgers\n        // count: clientDataCount\n      }))\n    })\n  }\n\n  const handleAssignSOA = soaNumber => {\n    BillingSupervisorServices.assignClientSOA({ soaNumber: soaNumber })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes['tiles']} spacing={3} direction='column'>\n        <Grid item className={classes['task-tray-col']}>\n          <CustomTaskTray sizes={{ xs: 8 }} title='Your Ticket List'>\n            <DashboardTile\n              count={{ color: 7, value: tickets.length }}\n              title='Tickets waiting response'\n              sizes={{ xs: 8 }}\n              viewAllLink={{\n                to: '/',\n                caption: 'View All'\n              }}\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick='/'>\n                  View List\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell>Ticket Type</TableCell>\n                    <TableCell>Corporate Account</TableCell>\n                    <TableCell>Billing Analyst</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {tickets.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>temp</TableCell>\n                      <TableCell>temp</TableCell>\n                      <TableCell>temp</TableCell>\n                      <TableCell>temp</TableCell>\n                      <TableCell>temp</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: toAssignAnalystCount }}\n              title='Client Transaction Journals to Setup'\n              sizes={{ xs: 4 }}\n              viewList={\n                <Typography\n                  id={'client-transaction-ledgers-to-setup-modal-link'}\n                  variant='caption'\n                  className='bold text-link'\n                  onClick={() => setViewAll(true)}\n                >\n                  View All\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableBody>\n                  {clientLedgers.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.client.account_name}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item._id}/${item.client.account_number}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Setup\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  <ViewAll\n                    id={'client-transaction-ledger-to-setup-modal'}\n                    config={config}\n                    tile={'clientTransactions'}\n                    title='List of Client Transaction Journals to Setup'\n                    contents={clientLedgers}\n                    viewAll={window.location.hash.replace(/[#/]/g, '') === 'Assign-Billing-Analyst' ? true : viewAll}\n                    setViewAll={setViewAll}\n                    linkCaption='Setup'\n                    passProperty={'_id'}\n                    modal='/#from_modal'\n                    subProperty={'client'}\n                    subSubProperty={'account_number'}\n                    route={'/clients/assign/'}\n                    count={toAssignAnalystCount}\n                    changeViewList={changeView}\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n        {/* <Grid item className={classes['task-tray-col']}> */}\n        {/* <CustomTaskTray sizes={{ xs: 6 }} title='Your Task Tray'> */}\n\n        {/* </CustomTaskTray> */}\n        {/* </Grid> */}\n\n        <Grid item className={classes['task-tray']}>\n          <CustomTaskTray sizes={{ xs: 12 }} title='Client Tasks'>\n            <DashboardTile\n              count={{ color: 7, value: submittedClientSOAs.data ? submittedClientSOAs.data[1] : 0 }}\n              title='Client Pre-SOAs to Validate'\n              sizes={{ xs: 6 }}\n              viewAllLink={{\n                to: '/',\n                caption: 'View All'\n              }}\n              viewList={\n                <Typography variant='caption' className='bold text-link' onClick='/'>\n                  View List\n                </Typography>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Account Name</TableCell>\n                    <TableCell>Billing Cycle</TableCell>\n                    <TableCell>Due Date</TableCell>\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {submittedClientSOAs.data &&\n                    submittedClientSOAs.data[0] &&\n                    submittedClientSOAs.data[0].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`analyze-client-soas-corporate-name-${index}`}>{item.account_name}</TableCell>\n                        <TableCell id={`analyze-client-soas-billing-cycle-${index}`}>{item.billing_cycle}</TableCell>\n                        <TableCell id={`analyze-client-soas-billing-cycle-${index}`}>\n                          {moment(item.due_date).format('MMM DD, YYYY')}\n                        </TableCell>\n                        <TableCell id={`analyze-client-soas-corporate-id-${index}`}>\n                          <Link\n                            to={`/billing/ledgers/${item.soa_number}/${'supervisor'}`}\n                            onClick={() => handleAssignSOA(item.soa_number)}\n                          >\n                            <Typography variant='caption' className='text-link underline'>\n                              Setup\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 7, value: data.length }}\n              title='Client SOAs to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {cheaders1.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {/* {clientListForApproval.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.location}</TableCell>\n                      <TableCell>CY02</TableCell>\n                      <TableCell>{moment(item.date.due).format('MMM, DD, YYYY')}</TableCell>\n                      <TableCell>\n                        <Link to={`/billing/invoice/form/${item.transaction_number}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))} */}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 6, value: data.length }}\n              title='Client Invoices to Validate '\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {cheaders2.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {clientListForApproval.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.client.account_number}</TableCell>\n                      <TableCell>CY02</TableCell>\n                      <TableCell>{moment(item.date.due).format('MMM, DD, YYYY')}</TableCell>\n                      <TableCell>\n                        <Link to={`/billing/invoice/form/${item.transaction_number}/${item.status}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 3, value: data.length }}\n              title='Client Credit Memos to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {cheaders2.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 3, value: data.length }}\n              title='Client Debit Notes to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {cheaders3.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n\n          <CustomTaskTray sizes={{ xs: 12 }} title='Members Tasks'>\n            <DashboardTile\n              count={{ color: 7, value: data.length }}\n              title='Member SOAs to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {mheaders1.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 6, value: data.length }}\n              title='Member Invoices to Validate '\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {mheaders2.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 3, value: data.length }}\n              title='Member Credit Memos to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {mheaders1.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 3, value: data.length }}\n              title='Member Debit Notes to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {mheaders1.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n\n          <CustomTaskTray sizes={{ xs: 12 }} title='Other Tasks'>\n            <DashboardTile\n              count={{ color: 7, value: data.length }}\n              title='Client Penalties to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {cheaders2.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n\n            <DashboardTile\n              count={{ color: 6, value: data.length }}\n              title='Member Penalties to Validate'\n              sizes={{ sm: 6 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {mheaders1.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            View\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n\n          <CustomTaskTray sizes={{ xs: 12 }} title='Items to Monitor'>\n            <DashboardTile\n              count={{ color: 3, value: data.length }}\n              title='Clients with Updated Account Information'\n              sizes={{ sm: 4 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {headers_accinfo.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{}</TableCell>\n                      <TableCell>\n                        <Link to={`/clients/assign/${item.corporate_id}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: data.length }}\n              title='Validated Transactions'\n              sizes={{ sm: 4 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography variant='caption' className='bold text-link'>\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {headers_tinfo.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {clientListApprove.map((item, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{item.client.account_number}</TableCell>\n                      <TableCell>CY02</TableCell>\n                      <TableCell>{moment(item.date.due).format('MMM, DD, YYYY')}</TableCell>\n                      <TableCell>\n                        <Link to={`/billing/invoice/form/${item.transaction_number}/${item.transaction_status}`}>\n                          <Typography variant='caption' className='text-link underline'>\n                            Validate\n                          </Typography>\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </DashboardTile>\n            <DashboardTile\n              count={{ color: 3, value: validatedClientSOAs.data ? validatedClientSOAs.data[1] : 0 }}\n              title='Validated SOAs'\n              sizes={{ sm: 4 }}\n              viewList={\n                <Link to={'/'}>\n                  <Typography\n                    variant='caption'\n                    className='bold text-link'\n                    onClick={() => setClientPreSoaToAnalyzeViewAll(true)}\n                  >\n                    View All\n                  </Typography>\n                </Link>\n              }\n            >\n              <Table size='small'>\n                <TableHead>\n                  <TableRow>\n                    {headers_vsinfo.map((item, index) => (\n                      <TableCell>{item.header_text}</TableCell>\n                    ))}\n                    <TableCell />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {validatedClientSOAs.data &&\n                    validatedClientSOAs.data[0] &&\n                    validatedClientSOAs.data[0].map((item, index) => (\n                      <TableRow key={index}>\n                        <TableCell id={`analyze-client-soas-corporate-name-${index}`}>{item.account_name}</TableCell>\n                        <TableCell id={`analyze-client-soas-billing-cycle-${index}`}>{item.soa_number}</TableCell>\n                        <TableCell id={`analyze-client-soas-corporate-id-${index}`}>\n                          <Link\n                            to={`/billing/ledgers-validated/${item.soa_number}/${'validated'}`}\n                            onClick={() => handleAssignSOA(item.soa_number)}\n                          >\n                            <Typography variant='caption' className='text-link underline'>\n                              View\n                            </Typography>\n                          </Link>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  <ViewAll\n                    id={'client-pre-soa-to-analyze-modal'}\n                    config={config}\n                    tile={'validatedSOAs'}\n                    title='List of Validated Pre-SOA'\n                    contents={validatedClientSOAs.data[0] ? validatedClientSOAs.data[0] : []}\n                    count={validatedClientSOAs.data[0] ? validatedClientSOAs.data[0].length : 0}\n                    viewAll={clientPreSoaToAnalyzeViewAll}\n                    setViewAll={setClientPreSoaToAnalyzeViewAll}\n                    linkCaption='View'\n                    passProperty='_id'\n                    preSoa\n                    // not yet implemented\n                    // modal='/#from_modal'\n                    subSubProperty='account_number'\n                    changeViewList={changeViewValidatedTile}\n                    route={`/billing/ledgers-validated/`}\n                  />\n                </TableBody>\n              </Table>\n            </DashboardTile>\n          </CustomTaskTray>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\n// Styles\nimport classes from './CustomTabs.module.scss'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      key={`tab-${index}`}\n      {...other}\n    >\n      <div>{children}</div>\n    </Typography>\n  )\n}\n\nconst useStyle = makeStyles(theme => ({\n  indicator: {\n    backgroundColor: '#3ab77d'\n  }\n}))\nconst CustomTabs = props => {\n  const { children, defaultIndex = 0, containerSyles = {} } = props\n  const [value, setValue] = React.useState(defaultIndex)\n  const overrideClass = useStyle()\n\n  let items = React.Children.toArray(children)\n  items = items.filter((item, index) => {\n    if (item.type.displayName === 'CustomTab') {\n      return React.cloneElement(item, {\n        key: index\n      })\n    }\n  })\n  function handleChange (event, newValue) {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root} style={containerSyles}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='auto'\n        aria-label='scrollable auto tabs example'\n        className={classes['header']}\n        classes={{ indicator: overrideClass.indicator }}\n      >\n        {items.map((item, index) => (\n          <Tab key={`${item.props.label}-tab-label`} className={classes['item']} label={item.props.label} />\n        ))}\n      </Tabs>\n\n      {items.map((item, index) => (\n        <TabPanel key={`${item.props.label}-tab-content`} className={classes['panels']} value={value} index={index}>\n          {item}\n        </TabPanel>\n      ))}\n    </div>\n  )\n}\n\nconst CustomTab = ({ children }) => {\n  return children\n}\nCustomTab.displayName = 'CustomTab'\n\nexport { CustomTabs, CustomTab }\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\n\n// Styles\nimport classes from './ViewMore.module.scss'\n\n// const headCells = [\n//   { id: 'accounts', numeric: false, center: false, disablePadding: true, label: 'Assigned Accounts' },\n//   { id: 'terms', numeric: false, center: true, disablePadding: true, label: 'Payment Terms' },\n//   { id: 'cycle', numeric: false, center: false, disablePadding: true, label: 'Billing Cycle' }\n// ]\nconst headCells = [{ name: 'Assigned Accounts' }, { name: 'Payment Terms' }, { name: 'Billing Cycle' }]\n\nexport default function CustomizedDialogs (props) {\n  const { viewMore, setViewMore, onViewMoreChange } = props\n\n  const handleOnClose = () => {\n    setViewMore(state => ({ ...state, show: false }))\n  }\n\n  const [debounce, setDebounce] = React.useState(null)\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='sm'\n      onClose={handleOnClose}\n      aria-labelledby='customized-dialog-title'\n      open={viewMore.show}\n      className={classes.root}\n      PaperProps={{ style: { height: '100%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <IconButton aria-label='close' className={classes.button} onClick={handleOnClose}>\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' className={classes.title}>\n            {viewMore.title}\n          </Typography>\n          <Typography variant='subtitle1' className={classes.subtitle}>\n            {viewMore.subtitle}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <Table\n          TableContainerProps={{ style: { height: '320px', overflow: 'auto', position: 'relative' } }}\n          TableProps={{ stickyHeader: true }}\n          head={\n            <TableRow>\n              {headCells.map((headCell, index) => (\n                <TableCell key={index}>\n                  {/* <TableSortLabel\n                    active={viewList.orderBy === headCell.sortField}\n                    direction={viewList.order ? 'asc' : 'desc'}\n                    onClick={handleOnSort(headCell.sortField)}\n                  > */}\n                  {headCell.name}\n                  {/* </TableSortLabel> */}\n                </TableCell>\n              ))}\n            </TableRow>\n          }\n          body={viewMore.data.map((row, index) => (\n            <TableRow key={index}>\n              <TableCell>{row.client.account_name}</TableCell>\n              <TableCell>{row.contract.payment_terms}</TableCell>\n              <TableCell>\n                {row.billing.cycle.code ? row.billing.cycle.code + ' - ' + row.billing.cycle.name : ''}\n              </TableCell>\n            </TableRow>\n          ))}\n          count={viewMore.count}\n          page={viewMore.page}\n          limit={viewMore.limit}\n          rowsPerPageOptions={[10, 15, 20]}\n          // onChange={onViewListChange}\n        />\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Styles\nimport classes from './ConfirmDialog.module.scss'\nimport { Typography, DialogContent, Button } from '@material-ui/core'\n\n// Services\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\n\nconst SuccessDialog = props => {\n  const { openSuccessDialog, setOpenSuccessDialog } = props\n  const history = useHistory()\n\n  const handleOnCloseSuccessDialog = () => {\n    setOpenSuccessDialog(false)\n    history.push('/')\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='xs'\n      onClose={handleOnCloseSuccessDialog}\n      aria-labelledby='customized-dialog-title'\n      open={openSuccessDialog}\n      className={classes.root}\n      PaperProps={{ style: { height: '40%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <IconButton\n            aria-label='close'\n            id='success-close-button'\n            className={classes['success-close-button']}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' id='assign-title' className={classes.title}>\n            Account Successfully Assigned\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        Account was successfully assigned to Billing Analyst and sent for billing cycle setup.\n        <div className={classes.button}>\n          <Button\n            variant='contained'\n            id='ok-button'\n            className={classes['button-positive']}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            OK\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default function CustomizedDialogs (props) {\n  const { assign, setAssign, onCancel } = props\n  const [openSuccessDialog, setOpenSuccessDialog] = React.useState(false)\n\n  const handleOnClose = () => {\n    setAssign(state => ({ ...state, show: false }))\n  }\n\n  const onShowSuccessDialog = () => {\n    setAssign(state => ({ ...state, show: false }))\n    BillingSupervisorServices.assignBillingAnalyst({\n      analystId: assign.analyst,\n      data: { clientId: assign.clientId }\n    }).then(res => {\n      setOpenSuccessDialog(true)\n    })\n  }\n\n  return (\n    <>\n      <Dialog\n        maxWidth='xs'\n        open={assign.show}\n        className={classes.root}\n        PaperProps={{ style: { display: 'flex' } }}\n        onClose={handleOnClose}\n      >\n        <DialogTitle disableTypography>\n          <Typography>{assign.title}</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Typography>{assign.text}</Typography>\n          <br />\n          <Typography>{assign.text2}</Typography>\n\n          <div className={classes.button}>\n            <Button variant='outlined' className={classes['button-negative']} onClick={onCancel}>\n              Cancel\n            </Button>\n            <Button variant='contained' className={classes['button-positive']} onClick={onShowSuccessDialog}>\n              Assign\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <SuccessDialog openSuccessDialog={openSuccessDialog} setOpenSuccessDialog={setOpenSuccessDialog} />\n    </>\n  )\n}\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport RadioButton from '@material-ui/core/Radio/Radio'\nimport Button from '@material-ui/core/Button'\n\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\n\n// Components\nimport { EllipsisFormatter } from 'Utilities/TextLengthFormatter'\nimport EnhancedTable from 'SharedComponents/EnhancedTable/EnhancedTable'\nimport ViewMore from '../ViewMore/ViewMore'\nimport ConfirmDialog from '../AssignAnalystConfirmDialogue/ConfirmDialog'\n\n// Styles\nimport classes from './BillingAnalystTab.module.scss'\n\nconst AssignClientPageFooter = props => {\n  const history = useHistory()\n  const { analyst, clientInfo, setAnalyst } = props\n\n  const [assign, setAssign] = React.useState({ show: false, title: '', text: '', text2: '' })\n\n  const handleOnClickAssign = () => {\n    const title = 'Assign Client to Billing Analyst'\n    const text = 'Are you sure you want to assign the Account to the selected Billing Analyst?'\n    const text2 = 'The account will be sent to the assigned Billing Analyst for processing and setup of billing cycle.'\n\n    setAssign(state => ({ ...state, show: true, title, text, text2, analyst: analyst, clientId: clientInfo._id }))\n  }\n\n  const handleOnCLickCancel = () => {\n    setAssign(state => ({ ...state, show: false }))\n    setAnalyst(null)\n  }\n\n  const handleOnCLickCancelAssign = () => {\n    if (history.location.hash.replace(/[#/]/g, '') === 'from_modal') {\n      history.push('/#Assign-Billing-Analyst')\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    // <React.Fragment>\n    <div className={classes.button}>\n      <Button variant='contained' className={classes['button-negative']} onClick={handleOnCLickCancelAssign}>\n        Cancel\n      </Button>\n      <Button variant='contained' className={classes['button-positive']} onClick={handleOnClickAssign}>\n        Assign\n      </Button>\n      <ConfirmDialog assign={assign} setAssign={setAssign} onCancel={handleOnCLickCancel} />\n    </div>\n    // </React.Fragment>\n  )\n}\n\nexport default function BillingAnalystTab (props) {\n  const { headCells, users, clientInfo, onShowViewMore, viewMore, setViewMore } = props\n  console.log(users)\n\n  const [selectedAnalyst, setSelectedAnalyst] = React.useState(null)\n  const handleOnChangeAnalyst = e => {\n    setSelectedAnalyst(e.target.value)\n  }\n\n  return (\n    <>\n      <EnhancedTable headCells={headCells}>\n        <TableBody>\n          {users.data\n            ? users.data.results.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell>\n                    <RadioButton\n                      id={`analyst-radio-${item._id}`}\n                      color='primary'\n                      checked={selectedAnalyst === item._id}\n                      onChange={handleOnChangeAnalyst}\n                      value={item._id}\n                    />\n                  </TableCell>\n                  <TableCell id={`analyst-name-${index}`}>{item.first_name + ' ' + item.last_name}</TableCell>\n                  <TableCell id={`analyst-status-${index}`}>{item.status}</TableCell>\n                  <TableCell id={`analyst-assigned-count-${index}`} align='center'>\n                    {item.assignedCount}\n                  </TableCell>\n                  <TableCell id={`analyst-clients-${index}`}>\n                    {EllipsisFormatter(\n                      item.clients\n                        .map(account => {\n                          return account.client.account_name + ''\n                        })\n                        .join(),\n                      50\n                    )}\n                  </TableCell>\n                  <TableCell id={`analyst-view-more-${index}`}>\n                    <Link className={classes['view-more']} onClick={onShowViewMore(item)}>\n                      View More\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              ))\n            : 'No Data'}\n          <div>\n            <ViewMore viewMore={viewMore} setViewMore={setViewMore} />\n          </div>\n        </TableBody>\n      </EnhancedTable>\n      <AssignClientPageFooter analyst={selectedAnalyst} setAnalyst={setSelectedAnalyst} clientInfo={clientInfo} />\n    </>\n  )\n}\n","// import numeral from 'numeral'\n// import moment from 'moment'\n\nconst EllipsisFormatter = (value, tolerance) => {\n  // value = value.substring(0, value.length - 1)\n  value.toString().length > tolerance\n    ? (value = value\n      .toString()\n      .slice(0, tolerance)\n      .concat('...'))\n    : (value = value\n      .toString()\n      .slice(0, tolerance)\n      .concat(' '))\n\n  return value\n}\n\n// TODO: Move to TextFormatter\n\nexport { EllipsisFormatter }\n","import React from 'react'\n\n// Styles\nimport classes from './BillingInstructionsTab.module.scss'\n\nexport default function BillingInstructionsTab () {\n  return <div>BILLING INSTRUCTIONS</div>\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport { CurrencyFormatter, DateFormatterByAbbreviation } from 'Utilities/TextFormatter'\nimport { CustomTab, CustomTabs } from 'StandardComponents/CustomTabs/CustomTabs'\n\nimport BillingAnalystTab from '../../Components/BillingAnalystTab/BillingAnalystTab'\n// import BillingCycleTab from '../Components/BillingCycleTab/BillingCycleTab'\nimport BillingInstructionsTab from '../../Components/BillingInstructionsTab/BillingInstructionsTab'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\n\n// CSS\nimport classes from './AssignClientPage.module.scss'\n\nconst header_items = [\n  {\n    id: 'assign',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Assign Billing Analyst',\n    width: '50px'\n  },\n  {\n    id: 'name',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Name'\n  },\n  {\n    id: 'status',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Status',\n    width: '70px'\n  },\n  {\n    id: 'assigned_count',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Number of Accounts'\n  },\n  {\n    id: 'assigned',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Accounts Assigned'\n  },\n  {\n    id: 'action',\n    numeric: true,\n    center: false,\n    disablePadding: false,\n    label: ''\n  }\n]\n\nconst ClientInformation = ({ classes, clientInfo, hmoinfo }) => {\n  return (\n    <>\n      {clientInfo && (\n        <Paper className={classes.client_details}>\n          <div className={classes['client-details-wrapper']}>\n            <div className={classes['corporate-name-wrapper']}>\n              <Typography className={classes['corporate-name-value']}>{clientInfo.client.account_name}</Typography>\n            </div>\n            <div className={classes['basic-hmo-information-wrapper']}>\n              <div className={classes['left-container']}>\n                <Typography className={classes['information-title']}>Basic Information</Typography>\n                <div className={classes['basic-information-wrapper']}>\n                  <div className={classes.field}>\n                    <Typography className={classes.text} color='textSecondary'>\n                      ACCOUNT NO.\n                    </Typography>\n                    <Typography className={classes.text} color='textSecondary'>\n                      CLIENT SEGMENT\n                    </Typography>\n                    <Typography className={classes.text} color='textSecondary'>\n                      PAYMENT TERM\n                    </Typography>\n                    <Typography className={classes.text} color='textSecondary'>\n                      ANNUAL BENEFIT LIMIT\n                    </Typography>\n                  </div>\n                  <div className={classes.value}>\n                    {clientInfo.client.account_number === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.client.account_number}</Typography>\n                    )}\n                    {clientInfo.client.segment === '' || !clientInfo.client.segment ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.client.segment}</Typography>\n                    )}\n                    {clientInfo.contract.payment_terms === '' ? (\n                      <Typography className={classes.text}></Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.contract.payment_terms}</Typography>\n                    )}\n                    {/* Did not remove. To be used as future reference. */}\n                    {/* {clientInfo.contract.annual_benefit_limit === 0 ? (\n                      <Typography className={classes.text}>{'Php ' + CurrencyFormatter(0)}</Typography>\n                    ) : (\n                      <Typography className={classes.text}>\n                        {'Php ' + CurrencyFormatter(clientInfo.contract.annual_benefit_limit)}\n                      </Typography>\n                    )} */}\n                    <Typography className={classes.text}>{clientInfo.contract.payment_term}</Typography>\n                  </div>\n                </div>\n              </div>\n              <div className={classes['center-container']}>\n                <div className={classes['basic-information-wrapper']}>\n                  <div className={classes.field}>\n                    <Typography className={classes.text} color='textSecondary'>\n                      TAX TYPE\n                    </Typography>\n                    <Typography className={classes.text} color='textSecondary'>\n                      TIN NO.\n                    </Typography>\n                  </div>\n                  <div className={classes.value}>\n                    {clientInfo.client.tax_type === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.client.tax_type}</Typography>\n                    )}\n                    {clientInfo.client.tin === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.client.tin}</Typography>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className={classes['right-container']}>\n                <Typography className={classes['information-title']}>HMO information</Typography>\n                <div className={classes['hmo-information-wrapper']}>\n                  <div className={classes.field}>\n                    <Typography>\n                      <Typography className={classes.text} color='textSecondary'>\n                        ACCOUNT STATUS\n                      </Typography>\n                      <Typography className={classes.text} color='textSecondary'>\n                        CONTRACT\n                      </Typography>\n                      <Typography className={classes.text} color='textSecondary'>\n                        CONTRACT PLAN TYPE\n                      </Typography>\n                      <Typography className={classes.text} color='textSecondary'>\n                        EFFECTIVITY DATE\n                      </Typography>\n                      <Typography className={classes.text} color='textSecondary'>\n                        EXPIRATION DATE\n                      </Typography>\n                    </Typography>\n                  </div>\n                  <div className={classes.value}>\n                    {clientInfo.client.account_status === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.client.account_status}</Typography>\n                    )}\n                    {clientInfo.contract.name === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.contract.name}</Typography>\n                    )}\n                    {clientInfo.contract.plan_type === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>{clientInfo.contract.type}</Typography>\n                    )}\n                    {clientInfo.contract.effectivity === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>\n                        {DateFormatterByAbbreviation(clientInfo.contract.effectivity)}\n                      </Typography>\n                    )}\n                    {clientInfo.contract.expiration === '' ? (\n                      <Typography className={classes.text}>-</Typography>\n                    ) : (\n                      <Typography className={classes.text}>\n                        {DateFormatterByAbbreviation(clientInfo.contract.expiration)}\n                      </Typography>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Paper>\n      )}\n    </>\n  )\n}\n\nconst ActionTabs = props => {\n  const { headCells, users, clientInfo, onShowViewMore, viewMore, setViewMore } = props\n  console.log(users)\n  return (\n    // TODO permissions (if necessary) and Tab Components\n    <CustomTabs defaultIndex={0}>\n      <CustomTab id='billing-analyst-tab' label='BILLING ANALYST'>\n        <BillingAnalystTab\n          headCells={headCells}\n          users={users}\n          onShowViewMore={onShowViewMore}\n          viewMore={viewMore}\n          setViewMore={setViewMore}\n          clientInfo={clientInfo}\n        />\n      </CustomTab>\n      {/* <CustomTab id='billing-cycle-tab' label='BILLING CYCLE'>\n        <BillingCycleTab />\n      </CustomTab> */}\n      <CustomTab id='billing-instructions-tab' label='BILLING INSTRUCTIONS'>\n        <BillingInstructionsTab />\n      </CustomTab>\n    </CustomTabs>\n  )\n}\n\nexport default function AssignClientPage (props) {\n  const initialValue = {\n    show: false,\n    title: '',\n    subtitle: '',\n    count: 0,\n    search: '',\n    limit: 10,\n    page: 1,\n    data: [],\n    orderBy: 'row.client.account_name',\n    order: true\n  }\n\n  const [viewMore, setViewMore] = React.useState(initialValue)\n\n  const handleOnShowViewMore = analyst => () => {\n    const title = analyst.first_name + ' ' + analyst.last_name\n    const count = analyst.assignedCount\n    const subtitle = `Billing Analyst for ${count} Accounts`\n    const limit = 5\n    const page = 1\n\n    setViewMore({ ...initialValue, show: true })\n\n    // TODO API CALL\n\n    const results = analyst.clients\n\n    setViewMore(state => ({ ...state, data: results, title, subtitle, count, limit, page }))\n  }\n\n  const handleOnViewMoreChange = params => {\n    const _params = {\n      category: viewMore.category,\n      limit: viewMore.limit,\n      page: viewMore.page,\n      ...params\n    }\n\n    // TODO API CALL\n    const results = [\n      {\n        account: 'Global IT',\n        payment_term: 'Monthly',\n        billing_cycle: 'CY02 - 10th and 25th of the month'\n      },\n      {\n        account: 'Hitair, Inc',\n        payment_term: 'Quarterly',\n        billing_cycle: 'CY04 - 15th of the month'\n      },\n      {\n        account: 'World Class Software',\n        payment_term: 'Annually',\n        billing_cycle: 'CY04 - 15th of the month'\n      }\n    ]\n\n    const count = 3\n    const limit = 5\n    const page = 1\n\n    setViewMore(state => ({ ...state, data: results, count, limit, page }))\n  }\n\n  const [users, setUsers] = React.useState({})\n\n  const [clientContract, setClientContract] = React.useState({ data: 0 })\n\n  const [pagination, setPagination] = React.useState({\n    count: 0,\n    rowsPerPage: 10,\n    page: 0,\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: +event.target.value }))\n    }\n  })\n\n  React.useEffect(() => {\n    const { _id, account_number } = props.match.params\n\n    PageTitleService('Assign Billing Analyst')\n    BreadcrumbsService.setSelectedItems(['dashboard', 'clients', 'assign', `assignId:${account_number}`])\n\n    /* Client Info */\n    Promise.all([BillingSupervisorServices.getClientLedgerToSetup({ _id })]).then(values => {\n      const client_contract = values[0].data.data\n      setClientContract(prevState => ({\n        ...prevState,\n        data: client_contract\n      }))\n    })\n\n    /* Table */\n    Promise.all([\n      // BillingSupervisorServices.getClientConfig({\n      //   sort: 'effectivity_date'\n      // })\n      BillingSupervisorServices.getUsersByRole('BILLING_ANALYST')\n    ]).then(values => {\n      const userData = values[0].data.data[0]\n      // const page = clients.data.data.page\n      const page = 3\n      setUsers(prevState => ({\n        ...prevState,\n        data: userData\n      }))\n      setPagination(prevState => ({\n        ...prevState,\n        count: userData.length,\n        rowsPerPage: 10,\n        page: page - 1\n      }))\n    })\n\n    // ])\n  }, [])\n\n  return (\n    <>\n      <ClientInformation clientInfo={clientContract.data} classes={classes} />\n      <ActionTabs\n        headCells={header_items}\n        users={users}\n        clientInfo={clientContract.data}\n        onShowViewMore={handleOnShowViewMore}\n        viewMore={viewMore}\n        setViewMore={setViewMore}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport * as moment from 'moment'\n\nimport PropTypes from 'prop-types'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport StepConnector from '@material-ui/core/StepConnector'\n\n// CSS\nimport classes from './HeaderDetails.module.scss'\nimport { Typography } from '@material-ui/core'\n\nexport default function HeaderDetails (props) {\n  const { ledger, activeStep, steps, type = '' } = props\n\n  const QontoConnector = withStyles({\n    alternativeLabel: {\n      top: 10,\n      left: 'calc(-50% + 5px)',\n      right: 'calc(50% + 5px)'\n    },\n    active: {\n      '& $line': {\n        borderColor: '#3ab77d'\n      }\n    },\n    completed: {\n      '& $line': {\n        borderColor: '#3ab77d'\n      }\n    },\n    line: {\n      borderColor: '#eaeaf0',\n      borderTopWidth: 3,\n      borderRadius: 1\n    }\n  })(StepConnector)\n\n  const useQontoStepIconStyles = makeStyles({\n    root: {\n      color: '#eaeaf0',\n      display: 'flex',\n      height: 22,\n      alignItems: 'center'\n      // fontSize: 10\n    },\n    active: {\n      color: '#3ab77d'\n    },\n    circle: {\n      width: 10,\n      height: 10,\n      borderRadius: '50%',\n      backgroundColor: 'currentColor'\n    },\n    completed: {\n      color: '#3ab77d',\n      zIndex: 1\n      // fontSize: 18\n    },\n    label: {\n      backgroundColor: 'powderBlue'\n    }\n  })\n\n  function QontoStepIcon (props) {\n    const classes = useQontoStepIconStyles()\n    const { active, completed } = props\n\n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active\n        })}\n      >\n        {completed ? (\n          <div className={`${classes.completed} && ${classes.circle} && ${classes.active}`} />\n        ) : (\n          <div className={classes.circle} />\n        )}\n      </div>\n    )\n  }\n\n  QontoStepIcon.propTypes = {\n    active: PropTypes.bool,\n    completed: PropTypes.bool\n  }\n\n  return (\n    <div>\n      {type === 'analyst' ? (\n        <React.Fragment>\n          <div>\n            <Paper className={classes.root}>\n              {ledger && (\n                <div className={classes.container}>\n                  <div className={classes.details}>\n                    <Typography variant='h5' id='ledger-name'>\n                      {ledger.account_name} - Statement of Account\n                    </Typography>\n                    <Typography id='ledger-account-number'>\n                      ACCOUNT NUMBER {ledger.journal.client.account_number}\n                    </Typography>\n                    {ledger.journal && ledger.journal.contract ? (\n                      <Typography id='ledger-effectivity-expiration'>\n                        {moment(ledger.journal.contract.effectivity.toUpperCase()).format('MMM DD,YYYY')} -{' '}\n                        {moment(ledger.journal.contract.expiration.toUpperCase()).format('MMM DD,YYYY')}\n                      </Typography>\n                    ) : (\n                      ''\n                    )}\n                    {ledger.journal && ledger.journal.contract ? (\n                      <Typography id='ledger-payment-terms'>\n                        {ledger.journal.contract.payment_term && ledger.journal.contract.payment_term.toUpperCase()}{' '}\n                        PAYMENT TERM\n                      </Typography>\n                    ) : (\n                      ''\n                    )}\n                  </div>\n                  <Stepper\n                    activeStep={activeStep}\n                    alternativeLabel\n                    connector={<QontoConnector />}\n                    className={classes.stepper}\n                  >\n                    {steps.map((label, index) => (\n                      <Step key={label}>\n                        <StepLabel\n                          id={`step-label-${index}`}\n                          className={classes.label}\n                          StepIconComponent={QontoStepIcon}\n                        >\n                          {label}\n                        </StepLabel>\n                      </Step>\n                    ))}\n                  </Stepper>\n                </div>\n              )}\n            </Paper>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n      {type === 'validated' ? (\n        <React.Fragment>\n          <div>\n            <Paper className={classes.root}>\n              {ledger && (\n                <div className={classes.container}>\n                  <div className={classes.details}>\n                    <Typography variant='h5' id='ledger-name'>\n                      {ledger.account_name} - Statement of Account\n                    </Typography>\n                    <Typography id='ledger-account-number'>\n                      ACCOUNT NUMBER {ledger.journal.client.account_number}\n                    </Typography>\n                    {ledger.journal && ledger.journal.contract ? (\n                      <Typography id='ledger-effectivity-expiration'>\n                        {moment(ledger.journal.contract.effectivity.toUpperCase()).format('MMM DD,YYYY')} -{' '}\n                        {moment(ledger.journal.contract.expiration.toUpperCase()).format('MMM DD,YYYY')}\n                      </Typography>\n                    ) : (\n                      ''\n                    )}\n                    {ledger.journal && ledger.journal.contract ? (\n                      <Typography id='ledger-payment-terms'>\n                        {ledger.journal.contract.payment_term && ledger.journal.contract.payment_term.toUpperCase()}{' '}\n                        PAYMENT TERM\n                      </Typography>\n                    ) : (\n                      ''\n                    )}\n                  </div>\n                  <div className={classes.pre_soa_details}>\n                    <Typography variant='h5'>PRE- SOA NO.</Typography>\n                    <Typography color='textSecondary'>DATE APPROVE</Typography>\n                  </div>\n                  {ledger.journal && ledger.journal.soa ? (\n                    <div className={classes.values}>\n                      <Typography variant='h5'>{ledger.journal.soa.number}</Typography>\n                      <Typography color='textSecondary'>\n                        {moment(ledger.journal.date.modified).format('MMM DD,YYYY')}\n                      </Typography>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                  {ledger.journal && ledger.journal.soa ? (\n                    <div className={classes.status}>\n                      <Typography variant='h5' color='error'>\n                        {ledger.journal.soa.status}\n                      </Typography>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                  {/* <div className={classes.details}>\n                    <Typography variant='h5' color='error'>\n                      {ledger.journal.soa.status}\n                    </Typography>\n                  </div> */}\n                </div>\n              )}\n            </Paper>\n          </div>\n        </React.Fragment>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\n\nimport classes from './CustomTextField.module.scss'\nexport default function CustomTextField (props) {\n  const { label = '', required, readOnly, constainerStyle = {}, error, onChange, type, ...other } = props\n  const { value = '' } = props\n\n  const [_error, setError] = React.useState()\n  React.useEffect(() => {\n    setError()\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n    if (typeof value === 'number') {\n      if (value <= 0) setError(error)\n    }\n  }, [error, value])\n\n  const handleOnChange = e => {\n    setError()\n    if (typeof onChange === 'function') onChange(e)\n  }\n\n  return (\n    <div className={classes.root} style={constainerStyle}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {props.value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper className={`${classes['text-field']} ${_error && classes['has-error']}`}>\n              <InputBase className={classes.input} onChange={handleOnChange} type={type} {...other} autoComplete='no' />\n            </Paper>\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  remarks: Joi.string()\n    .label('Remarks')\n    .messages({ 'string.empty': `Please enter your reason for voiding the SOA.` })\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'StandardComponents/TextField/CustomTextField'\nimport VoidValidator from './VoidValidator'\n\n// Styles\nimport classes from './Void.module.scss'\n\nconst SuccessDialog = props => {\n  const { page, openSuccessDialog, setOpenSuccessDialog, submitFunction, setOpenDialog } = props\n\n  const handleOnCloseSuccessDialog = () => {\n    setOpenSuccessDialog(false)\n    setOpenDialog(false)\n  }\n\n  const submitVoidFunction = () => {\n    setOpenSuccessDialog(false)\n    setOpenDialog(false)\n    submitFunction()\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='xs'\n      onClose={handleOnCloseSuccessDialog}\n      aria-labelledby='customized-dialog-title'\n      open={openSuccessDialog}\n      className={classes.root}\n      PaperProps={{ style: { height: '35%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <IconButton\n            aria-label='close'\n            id='success-close-button'\n            className={classes.button}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' id={`${page}-title`} className={classes.title}>\n            Void Statement of Account\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        Statement of Account (SOA) was successfully voided by the Supervisor and Manager.\n        <div className={classes.button}>\n          <Button\n            variant='contained'\n            id={`${page}-ok-button`}\n            className={classes['button-positive']}\n            onClick={submitVoidFunction}\n          >\n            OK\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default function CustomizedDialogs (props) {\n  const { page, openDialog, setOpenDialog, submitFunction } = props\n  const [openSuccessDialog, setOpenSuccessDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({\n    disapprove: []\n  })\n  const [value, setValue] = React.useState({ remarks: '' })\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const _allowedFields = {\n    remarks: ''\n  }\n\n  setTimeout(() => {\n    // setValue(_allowedFields)\n    setAllowedFields(_allowedFields)\n  }, 10)\n\n  const handleOnchange = value => {\n    setValue({\n      remarks: value\n    })\n  }\n\n  const handleOnClose = () => {\n    setOpenDialog(false)\n  }\n\n  const doValidatedisapprove = value => {\n    let { error } = VoidValidator({\n      remarks: value.remarks\n    })\n\n    if (error) {\n      error = { ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ disapprove: state.disapprove, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const disapprove = doValidatedisapprove(data)\n\n    setErrors(state => ({ ...state, disapprove }))\n    return !!disapprove\n  }\n\n  const onShowSuccessDialog = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = value[f]\n    const hasError = doValidateAll(data)\n    if (hasError) return\n    setOpenSuccessDialog(true)\n    if (openSuccessDialog === true) setOpenDialog(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        onClose={handleOnClose}\n        aria-labelledby='customized-dialog-title'\n        open={openDialog}\n        className={classes.root}\n        PaperProps={{ style: { height: '400px', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <IconButton aria-label='close' id='confirm-close-button' className={classes.button} onClick={handleOnClose}>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant='h6' id='confirm-title' className={classes.title}>\n              Void Statement of Account\n            </Typography>\n          </div>\n        </DialogTitle>\n        <DialogContent id='soa-content'>\n          Are you sure you want to void the Statement of Account?\n          <br />\n          <br />\n          This SOA and attachments will be included in the Bill Run Schedule for Release.\n          <br />\n          <br />\n          <TextField\n            id='remarks-approve-id'\n            defaultValue={value.remarks}\n            onChange={event => handleOnchange(event.target.value)}\n            label='Enter your remarks here'\n            required\n            error={errors.remarks}\n          />\n          <br />\n          <br />\n          <div className={classes.button}>\n            <Button\n              variant='outlined'\n              id='soa-cancel-button'\n              className={classes['button-negative']}\n              onClick={handleOnClose}\n            >\n              No\n            </Button>\n            <Button\n              variant='contained'\n              id='soa-submit-button'\n              className={classes['button-positive']}\n              onClick={onShowSuccessDialog}\n            >\n              Yes\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      {openSuccessDialog === true ? (\n        <SuccessDialog\n          page={page}\n          openSuccessDialog={openSuccessDialog}\n          setOpenSuccessDialog={setOpenSuccessDialog}\n          submitFunction={submitFunction}\n          setOpenDialog={setOpenDialog}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// components\nimport Void from 'StandardComponents/Void/Void'\n\n// styles\nimport classes from './ContentPageComponent.module.scss'\n\nexport default function ContentPage (props) {\n  const {\n    voidFunction,\n    type,\n    shift,\n    soaPage,\n    getStepContent,\n    activeStep,\n    save,\n    steps,\n    nextStep,\n    stepBack,\n    reset,\n    content\n  } = props\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const handleVoid = () => {\n    setOpenDialog(true)\n  }\n\n  return (\n    <div className={`${classes.root} ${shift ? classes.contentShift : ''}`}>\n      {soaPage ? (\n        <div>\n          {type === 'analyst' ? (\n            <div>\n              {activeStep === 4 ? (\n                <Typography className={classes.instructions}>{getStepContent({ stepIndex: 3, activeStep })}</Typography>\n              ) : (\n                <Typography className={classes.instructions}>{getStepContent({ stepIndex: activeStep })}</Typography>\n              )}\n              <div className={classes.button}>\n                <Button\n                  variant='contained'\n                  id={`${activeStep}-prev-button`}\n                  onClick={stepBack}\n                  className={classes['button-negative']}\n                >\n                  {activeStep === 0 ? 'Cancel' : 'Back'}\n                </Button>\n                <div className={classes['item-right-side']}>\n                  <Button variant='contained' id={'save-button'} onClick={save} className={classes['button-positive']}>\n                    Save\n                  </Button>\n                  &emsp;&emsp;\n                  <Button\n                    variant='contained'\n                    id={`${activeStep}-next-button`}\n                    className={classes['button-positive']}\n                    onClick={nextStep}\n                  >\n                    {activeStep === 3 || activeStep === 4 ? 'Submit' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            ''\n          )}\n\n          {type === 'supervisor' ? (\n            <div>\n              {activeStep === 4 ? (\n                <Typography className={classes.instructions}>{getStepContent({ stepIndex: 3, activeStep })}</Typography>\n              ) : (\n                <Typography className={classes.instructions}>{getStepContent({ stepIndex: activeStep })}</Typography>\n              )}\n              <div className={classes.button}>\n                <Button\n                  variant='contained'\n                  id={`${activeStep}-prev-button`}\n                  onClick={stepBack}\n                  className={classes['button-negative']}\n                >\n                  {activeStep === 0 ? 'Cancel' : 'Back'}\n                </Button>\n                <div className={classes['item-right-side']}>\n                  <Button\n                    variant='contained'\n                    id={'void-button'}\n                    onClick={handleVoid}\n                    className={classes['button-void']}\n                  >\n                    Void\n                  </Button>\n                  &emsp;&emsp;\n                  <Button\n                    variant='contained'\n                    id={`${activeStep}-next-button`}\n                    className={classes['button-positive']}\n                    onClick={nextStep}\n                  >\n                    {activeStep === 3 || activeStep === 4 ? 'Approve' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n              {openDialog === true ? (\n                <Void openDialog={openDialog} setOpenDialog={setOpenDialog} submitFunction={voidFunction} />\n              ) : (\n                ''\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      ) : content != null ? (\n        content\n      ) : (\n        'Test'\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretSquareLeft, faCaretSquareDown } from '@fortawesome/free-regular-svg-icons'\n\nimport ContentPage from 'StandardComponents/ContentPageComponent/ContentPageComponent'\n\nconst drawerWidth = 350\nconst useStyles = makeStyles(theme => ({\n  sideBarWrapper: {\n    display: 'flex'\n  },\n  menuButton: {\n    backgroundColor: '#F5F7FB',\n    color: 'rgba(0, 0, 0, 0.54)'\n  },\n  iconWrapper: {\n    padding: '0px',\n    marginRight: '10px',\n    marginTop: '-20px',\n    color: 'rgba(0, 0, 0, 0.54) !important'\n  },\n  hide: {\n    display: 'none',\n    color: 'rgba(0, 0, 0, 0.54)'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    backgroundColor: '#F5F7FB',\n    padding: '0px'\n  },\n  drawerHeaderContent: {\n    padding: '0px',\n    flex: 1\n  },\n  drawerContentContainer: {\n    flexGrow: 1,\n    backgroundColor: '#F5F7FB',\n    paddingTop: 7\n  }\n}))\n\nexport default function PersistentDrawerLeft (props) {\n  const {\n    voidFunction,\n    type,\n    soaPage,\n    activeStep,\n    steps,\n    nextStep,\n    stepBack,\n    reset,\n    edit,\n    save,\n    getStepContent,\n    drawerContent,\n    drawerHeaderContent,\n    children,\n    drawerHeight,\n    // drawerWidth,\n    permanent\n  } = props\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.sideBarWrapper}>\n      <CssBaseline />\n      {permanent ? (\n        ''\n      ) : (\n        <div>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={`${classes.menuButton} && ${open ? classes.hide : ''}`}\n          >\n            <FontAwesomeIcon icon={faCaretSquareDown} />\n          </IconButton>\n        </div>\n      )}\n      <Drawer\n        className={classes.drawer}\n        variant={permanent ? 'permanent' : 'persistent'}\n        anchor='left'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n        style={{ height: drawerHeight }}\n      >\n        {permanent ? (\n          ''\n        ) : (\n          <div className={classes.drawerHeader}>\n            <div className={classes.drawerHeaderContent}>{drawerHeaderContent}</div>\n            <div className={classes.drawerHeaderColseButton}>\n              <IconButton id='drawer-arrow-icon-button' className={classes.iconWrapper} onClick={handleDrawerClose}>\n                <FontAwesomeIcon icon={faCaretSquareLeft} />\n              </IconButton>\n            </div>\n          </div>\n        )}\n        <Divider />\n        <div className={classes.drawerContentContainer}>{drawerContent}</div>\n      </Drawer>\n      <ContentPage\n        voidFunction={voidFunction}\n        type={type}\n        shift={open}\n        soaPage={soaPage}\n        getStepContent={getStepContent}\n        activeStep={activeStep}\n        steps={steps}\n        save={save}\n        edit={edit}\n        nextStep={nextStep}\n        stepBack={stepBack}\n        reset={reset}\n        content={children != null ? children : null}\n      />\n    </div>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  remarks: Joi.string()\n    .label('Remarks')\n    .messages({ 'string.empty': `Please enter your reason for voiding the SOA.` })\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'StandardComponents/TextField/CustomTextField'\nimport VoidValidator from './VoidValidator'\n\n// Styles\nimport classes from './Void.module.scss'\n\nconst SuccessDialog = props => {\n  const { page, openSuccessDialog, setOpenSuccessDialog, submitFunction, setOpenDialog } = props\n\n  const handleOnCloseSuccessDialog = () => {\n    setOpenSuccessDialog(false)\n    setOpenDialog(false)\n  }\n\n  const submitVoidFunction = () => {\n    setOpenSuccessDialog(false)\n    setOpenDialog(false)\n    submitFunction()\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='xs'\n      onClose={handleOnCloseSuccessDialog}\n      aria-labelledby='customized-dialog-title'\n      open={openSuccessDialog}\n      className={classes.root}\n      PaperProps={{ style: { height: '35%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <IconButton\n            aria-label='close'\n            id='success-close-button'\n            className={classes.button}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' id={`${page}-title`} className={classes.title}>\n            Void Statement of Account\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        Statement of Account (SOA) was successfully voided by the Supervisor and Manager.\n        <div className={classes.button}>\n          <Button\n            variant='contained'\n            id={`${page}-ok-button`}\n            className={classes['button-positive']}\n            onClick={submitVoidFunction}\n          >\n            OK\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default function CustomizedDialogs (props) {\n  const { page, openDialog, setOpenDialog, submitFunction } = props\n  const [openSuccessDialog, setOpenSuccessDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({\n    disapprove: []\n  })\n  const [value, setValue] = React.useState({ remarks: '' })\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const _allowedFields = {\n    remarks: ''\n  }\n\n  setTimeout(() => {\n    // setValue(_allowedFields)\n    setAllowedFields(_allowedFields)\n  }, 10)\n\n  const handleOnchange = value => {\n    setValue({\n      remarks: value\n    })\n  }\n\n  const handleOnClose = () => {\n    setOpenDialog(false)\n  }\n\n  const doValidatedisapprove = value => {\n    let { error } = VoidValidator({\n      remarks: value.remarks\n    })\n\n    if (error) {\n      error = { ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ disapprove: state.disapprove, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const disapprove = doValidatedisapprove(data)\n\n    setErrors(state => ({ ...state, disapprove }))\n    return !!disapprove\n  }\n\n  const onShowSuccessDialog = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = value[f]\n    const hasError = doValidateAll(data)\n    if (hasError) return\n    setOpenSuccessDialog(true)\n    if (openSuccessDialog === true) setOpenDialog(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        onClose={handleOnClose}\n        aria-labelledby='customized-dialog-title'\n        open={openDialog}\n        className={classes.root}\n        PaperProps={{ style: { height: '400px', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <IconButton aria-label='close' id='confirm-close-button' className={classes.button} onClick={handleOnClose}>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant='h6' id='confirm-title' className={classes.title}>\n              Void Statement of Account\n            </Typography>\n          </div>\n        </DialogTitle>\n        <DialogContent id='soa-content'>\n          Are you sure you want to void the Statement of Account?\n          <br />\n          <br />\n          This SOA and attachments will be included in the Bill Run Schedule for Release.\n          <br />\n          <br />\n          <TextField\n            id='remarks-approve-id'\n            defaultValue={value.remarks}\n            onChange={event => handleOnchange(event.target.value)}\n            label='Enter your remarks here'\n            required\n            error={errors.remarks}\n          />\n          <br />\n          <br />\n          <div className={classes.button}>\n            <Button\n              variant='outlined'\n              id='soa-cancel-button'\n              className={classes['button-negative']}\n              onClick={handleOnClose}\n            >\n              No\n            </Button>\n            <Button\n              variant='contained'\n              id='soa-submit-button'\n              className={classes['button-positive']}\n              onClick={onShowSuccessDialog}\n            >\n              Yes\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      {openSuccessDialog === true ? (\n        <SuccessDialog\n          page={page}\n          openSuccessDialog={openSuccessDialog}\n          setOpenSuccessDialog={setOpenSuccessDialog}\n          submitFunction={submitFunction}\n          setOpenDialog={setOpenDialog}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// Components\nimport Void from '../Void/Void'\n\n// styles\nimport classes from './ContentPageComponent.module.scss'\n\nexport default function ContentPage (props) {\n  const { shift, soaPage, getStepContent, activeStep, nextStep, stepBack, content, voided } = props\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n\n  const handleVoid = () => {\n    setOpenDialog(true)\n  }\n\n  return (\n    <div className={`${classes.root} ${shift ? classes.contentShift : ''}`}>\n      {soaPage ? (\n        <div>\n          <div>\n            {activeStep === 4 ? (\n              <Typography className={classes.instructions}>{getStepContent({ stepIndex: 3, activeStep })}</Typography>\n            ) : (\n              <Typography className={classes.instructions}>{getStepContent({ stepIndex: activeStep })}</Typography>\n            )}\n            <div className={classes.button}>\n              <Button\n                variant='contained'\n                id={`${activeStep}-prev-button`}\n                onClick={stepBack}\n                className={classes['button-negative']}\n              >\n                {activeStep === 0 ? 'Cancel' : 'Back'}\n              </Button>\n              <div className={classes['item-right-side']}>\n                <Button variant='contained' id={'void-button'} onClick={handleVoid} className={classes['button-void']}>\n                  Void\n                </Button>\n                &emsp;&emsp;\n                <Button\n                  variant='contained'\n                  id={`${activeStep}-next-button`}\n                  className={classes['button-positive']}\n                  onClick={nextStep}\n                >\n                  {activeStep === 3 || activeStep === 4 ? 'Approve' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : content != null ? (\n        content\n      ) : (\n        'Test'\n      )}\n      {openDialog === true ? (\n        <Void openDialog={openDialog} setOpenDialog={setOpenDialog} submitFunction={voided} />\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretSquareLeft, faCaretSquareDown } from '@fortawesome/free-regular-svg-icons'\n\nimport ContentPage from '../../Components/ContentPageComponent/ContentPageComponent'\n\nconst drawerWidth = 350\nconst useStyles = makeStyles(theme => ({\n  sideBarWrapper: {\n    display: 'flex'\n  },\n  menuButton: {\n    backgroundColor: '#F5F7FB',\n    color: 'rgba(0, 0, 0, 0.54)'\n  },\n  iconWrapper: {\n    padding: '0px',\n    marginRight: '10px',\n    marginTop: '-20px',\n    color: 'rgba(0, 0, 0, 0.54) !important'\n  },\n  hide: {\n    display: 'none',\n    color: 'rgba(0, 0, 0, 0.54)'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    backgroundColor: '#F5F7FB',\n    padding: '0px'\n  },\n  drawerHeaderContent: {\n    padding: '0px',\n    flex: 1\n  },\n  drawerContentContainer: {\n    flexGrow: 1,\n    backgroundColor: '#F5F7FB',\n    paddingTop: 7\n  }\n}))\n\nexport default function PersistentDrawerLeft (props) {\n  const {\n    soaPage,\n    activeStep,\n    steps,\n    nextStep,\n    stepBack,\n    reset,\n    openDialog,\n    setOpenDialog,\n    voided,\n    handleVoid,\n    getStepContent,\n    drawerContent,\n    drawerHeaderContent,\n    children,\n    drawerHeight,\n    // drawerWidth,\n    permanent\n  } = props\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.sideBarWrapper}>\n      <CssBaseline />\n      {permanent ? (\n        ''\n      ) : (\n        <div>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={`${classes.menuButton} && ${open ? classes.hide : ''}`}\n          >\n            <FontAwesomeIcon icon={faCaretSquareDown} />\n          </IconButton>\n        </div>\n      )}\n      <Drawer\n        className={classes.drawer}\n        variant={permanent ? 'permanent' : 'persistent'}\n        anchor='left'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n        style={{ height: drawerHeight }}\n      >\n        {permanent ? (\n          ''\n        ) : (\n          <div className={classes.drawerHeader}>\n            <div className={classes.drawerHeaderContent}>{drawerHeaderContent}</div>\n            <div className={classes.drawerHeaderColseButton}>\n              <IconButton id='drawer-arrow-icon-button' className={classes.iconWrapper} onClick={handleDrawerClose}>\n                <FontAwesomeIcon icon={faCaretSquareLeft} />\n              </IconButton>\n            </div>\n          </div>\n        )}\n        <Divider />\n        <div className={classes.drawerContentContainer}>{drawerContent}</div>\n      </Drawer>\n      <ContentPage\n        shift={open}\n        soaPage={soaPage}\n        getStepContent={getStepContent}\n        activeStep={activeStep}\n        openDialog={openDialog}\n        handleVoid={handleVoid}\n        voided={voided}\n        setOpenDialog={setOpenDialog}\n        steps={steps}\n        nextStep={nextStep}\n        stepBack={stepBack}\n        reset={reset}\n        content={children != null ? children : null}\n      />\n    </div>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/b/cs')\n\nexport default class BillingSOAReportService {\n  static getReport ({ type, soaNumber }) {\n    return axios({\n      url: `/billing/reports?category=${type}&soaNumber=${soaNumber}`,\n      method: 'GET',\n      responseType: 'blob',\n      headers: { Accept: 'application/pdf' }\n    })\n  }\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\n\n// Components\nimport PdfViewer from './PdfViewer'\nimport downloadServices from './downloadServices'\nimport getPreviewReport from './getPreviewReport'\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}))\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />\n})\n\nexport default function Fullscreen (props) {\n  const { close, open, soaNumber, options, type } = props\n  console.group('soa number and options')\n  console.log(soaNumber)\n  console.log(options)\n  console.groupEnd()\n  const classes = useStyles()\n  const [file, setFile] = React.useState(null)\n  React.useEffect(() => {\n    getPreviewReport({ options: options, soaNumber: soaNumber, setFile: setFile, type: type })\n  }, [options, soaNumber])\n  return (\n    <div>\n      <Dialog fullScreen open={open} onClose={close} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge='start' color='inherit' onClick={close} aria-label='close'>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant='h6' className={classes.title}>\n              Preview Sheet\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <DialogContent style={{ padding: '0px' }}>\n          {file ? (\n            <PdfViewer\n              soaNumber={soaNumber}\n              options={options}\n              file={file}\n              download={() => downloadServices({ type: type, soaNumber: soaNumber, options: options })}\n              type={type}\n            />\n          ) : (\n            ''\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","// Services\nimport BillingSOAReportService from '../../Services/Api/BillingSOAReportService'\n\nexport default function getPreviewReport (props) {\n  const { options, soaNumber, setFile, type } = props\n  function getReports ({ type, soaNumber }) {\n    BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n      const blob = new Blob([response.data])\n      setFile(blob)\n    })\n  }\n  switch (options) {\n    case 'bir':\n      getReports({ type: type, soaNumber: soaNumber })\n      break\n    case 'corporate':\n      getReports({ type: type, soaNumber: soaNumber })\n      break\n    case 'attachment':\n      getReports({ type: type, soaNumber: soaNumber })\n      break\n  }\n}\n","// Services\nimport BillingSOAReportService from '../../Services/Api/BillingSOAReportService'\nexport default function downloadServices (props) {\n  const { soaNumber, options, type } = props\n  switch (options) {\n    case 'bir':\n      BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n        const url = URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', 'soa-bir.pdf')\n        document.body.appendChild(link)\n        link.click()\n      })\n      break\n\n    case 'corporate':\n      BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n        const url = URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', 'soa-corporate.pdf')\n        document.body.appendChild(link)\n        link.click()\n      })\n      break\n\n    case 'attachment':\n      BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n        const url = URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', 'soa-attachment.pdf')\n        document.body.appendChild(link)\n        link.click()\n      })\n      break\n  }\n}\n","import React from 'react'\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport ZoomInIcon from '@material-ui/icons/ZoomIn'\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut'\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore'\nimport PrintIcon from '@material-ui/icons/Print'\nimport SaveIcon from '@material-ui/icons/Save'\nimport TurnedInNotIcon from '@material-ui/icons/TurnedInNot'\nimport Fullscreen from './Fullscreen'\nimport showReport from './showReport'\nimport BillingSOAReportService from '../../Services/Api/BillingSOAReportService'\n\n// import file from './INTELLICARE SPECIMEN CONTRACT_2017.pdf'\n// Styles\nimport classes from './PdfViewer.module.scss'\n\npdfjs.GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nexport default function PdfViewer (props) {\n  const {\n    rotate,\n    file,\n    fileName,\n    initialPageNumber = 1,\n    initialScale = 1,\n    download = () => {},\n    // print = () => {},\n    soaNumber,\n    options,\n    type\n  } = props\n  const [scale, setScale] = React.useState(initialScale)\n  const [pageNumber, setPageNumber] = React.useState(initialPageNumber)\n  const [numPages, setNumPages] = React.useState(0)\n\n  const [isShowReport, setIsShowReport] = React.useState(false)\n  const [option, setOption] = React.useState(false)\n  const [selectedClaimReport, setSelectedSoaReport] = React.useState(null)\n\n  console.log(scale)\n\n  const onClickEvent = scale => {\n    if (scale === 1) {\n      setScale(scale + 0.9)\n    }\n    if (scale < 1) {\n      setScale(scale + 0.9)\n    }\n    if (scale > 1) {\n      setScale(scale - 0.9)\n    }\n  }\n\n  function handleClickSubmitted () {\n    showReport({\n      soaNumber: soaNumber,\n      options: options,\n      setSelectedSoaReport,\n      setIsShowReport,\n      setOption\n    })\n  }\n\n  function closePDFView () {\n    setIsShowReport(false)\n  }\n\n  function printWindow (args) {\n    let { type, soaNumber } = args\n    if (!type) return\n    if (type === 'preview') {\n      type = 'print'\n      BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n        const url = URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', 'for-print.pdf')\n        document.body.appendChild(link)\n        link.click()\n      })\n    } else {\n      BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n        const url = URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', 'for-print.pdf')\n        document.body.appendChild(link)\n        link.click()\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.pdf} id={'document'}>\n        <Document\n          file={file}\n          onLoadSuccess={document => {\n            setNumPages(document.numPages)\n          }}\n        >\n          <Page pageNumber={pageNumber} scale={scale} rotate={rotate} />\n        </Document>\n      </div>\n      <div className={classes.controls}>\n        <Typography className={classes['file-name']} align='left'>\n          {fileName}\n        </Typography>\n        <Tooltip title='Zoom in' className={classes.controlLeft}>\n          <IconButton onClick={() => setScale(scale + 0.2)}>\n            <SearchIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='Next Page' className={classes.control}>\n          <IconButton onClick={() => setPageNumber(pageNumber < numPages ? pageNumber + 1 : pageNumber)}>\n            <ArrowUpwardIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='Previous Page' className={classes.back}>\n          <IconButton onClick={() => setPageNumber(pageNumber > 1 ? pageNumber - 1 : pageNumber)}>\n            <ArrowDownwardIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n\n        <Typography className={classes['page-number']}>\n          {pageNumber} of {pageNumber}\n        </Typography>\n\n        <Tooltip title='Zoom in' className={classes.zoom}>\n          <IconButton onClick={() => setScale(scale + 0.2)}>\n            <ZoomInIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title='Zoom out' className={classes.control}>\n          <IconButton onClick={() => (scale === 0.6 ? '' : setScale(scale - 0.2))}>\n            <ZoomOutIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='Automatic Zoom' className={classes.autozoom}>\n          <IconButton onClick={() => onClickEvent(scale)}>\n            Automatic Zoom\n            <UnfoldMoreIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title='Fullscreen' className={classes.fullscreen}>\n          <IconButton onClick={handleClickSubmitted}>\n            <ZoomOutMapIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title='Print' className={classes.control}>\n          <IconButton onClick={() => printWindow({ type: type, soaNumber: soaNumber })}>\n            <PrintIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title='Download' className={classes.control}>\n          <IconButton onClick={download}>\n            <SaveIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='In Not' className={classes.control}>\n          <IconButton onClick={download}>\n            <TurnedInNotIcon style={{ color: 'white' }} />\n          </IconButton>\n        </Tooltip>\n      </div>\n\n      {isShowReport ? (\n        <Fullscreen\n          soaNumber={soaNumber}\n          open={isShowReport}\n          close={() => closePDFView()}\n          claimNo={selectedClaimReport}\n          options={options}\n          type={type}\n        />\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","export default function showReport (props) {\n  const { soaNumber, options, setSelectedSoaReport, setIsShowReport, setOption } = props\n  if (!soaNumber) {\n    setIsShowReport(false)\n    return\n  }\n  setSelectedSoaReport(soaNumber)\n  setIsShowReport(true)\n  setOption(options)\n}\n","import React from 'react'\n// Components\nimport PdfViewer from 'StandardComponents/PdfViewer/PdfViewer'\n\n// Service\nimport BillingSOAReportService from '../../Services/Api/BillingSOAReportService'\n\nimport classes from './BIR.module.scss'\n\nexport default function BIR (props) {\n  const { soaNumber } = props\n  const [file, setFile] = React.useState(null)\n  const type = 'preview'\n  React.useEffect(() => {\n    BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n      const blob = new Blob([response.data])\n      setFile(blob)\n    })\n  }, [type])\n  const downloadServices = args => {\n    const { type } = args\n    BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n      const url = URL.createObjectURL(new Blob([response.data]))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', 'soa-bir.pdf')\n      document.body.appendChild(link)\n      link.click()\n    })\n  }\n  return (\n    <div className={classes.root}>\n      {file ? (\n        <PdfViewer\n          soaNumber={soaNumber}\n          options={'bir'}\n          file={file}\n          download={() => downloadServices({ type: 'preview' })}\n          type={'preview'}\n        />\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\n// Components\nimport PdfViewer from 'StandardComponents/PdfViewer/PdfViewer'\n\n// Service\nimport BillingSOAReportService from '../../Services/Api/BillingSOAReportService'\n\nimport classes from './Corporate.module.scss'\n\nexport default function Corporate (props) {\n  const { soaNumber } = props\n  const [file, setFile] = React.useState(null)\n  const type = 'category'\n  React.useEffect(() => {\n    BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n      const blob = new Blob([response.data])\n      setFile(blob)\n    })\n  }, [type])\n  const downloadServices = args => {\n    const { type } = args\n    BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n      const url = URL.createObjectURL(new Blob([response.data]))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', 'soa-corporate.pdf')\n      document.body.appendChild(link)\n      link.click()\n    })\n  }\n  return (\n    <div className={classes.root}>\n      {file ? (\n        <PdfViewer\n          soaNumber={soaNumber}\n          options={'corporate'}\n          file={file}\n          download={() => downloadServices({ type: 'category' })}\n          type={'category'}\n        />\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Styles\nimport classes from './Submit.module.scss'\n\nconst SuccessDialog = props => {\n  const { page, openSuccessDialog, setOpenSuccessDialog, submitFunction } = props\n\n  const handleOnCloseSuccessDialog = () => {\n    setOpenSuccessDialog(false)\n    submitFunction()\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='xs'\n      onClose={handleOnCloseSuccessDialog}\n      aria-labelledby='customized-dialog-title'\n      open={openSuccessDialog}\n      className={classes.root}\n      PaperProps={{ style: { height: '35%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <IconButton\n            aria-label='close'\n            id='success-close-button'\n            className={classes.button}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' id={`${page}-title`} className={classes.title}>\n            {page === 'debit'\n              ? 'Debit Note Submitted'\n              : page === 'credit'\n                ? 'Credit Note Submitted'\n                : page === 'soa'\n                  ? 'Statement of Account (SOA) Successfully Submitted'\n                  : ''}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        {page === 'debit' ? 'Debit Note ' : page === 'credit' ? 'Credit Note ' : 'Statement of Account (SOA) '}was\n        successfully submitted to the Supervisor and Manager for approval.\n        <div className={classes.button}>\n          <Button\n            variant='contained'\n            id={`${page}-ok-button`}\n            className={classes['button-positive']}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            OK\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default function CustomizedDialogs (props) {\n  const { page, openDialog, setOpenDialog, submitFunction } = props\n  const [openSuccessDialog, setOpenSuccessDialog] = React.useState(false)\n\n  const handleOnClose = () => {\n    setOpenDialog(false)\n  }\n\n  const onShowSuccessDialog = () => {\n    setOpenDialog(false)\n    setOpenSuccessDialog(true)\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        onClose={handleOnClose}\n        aria-labelledby='customized-dialog-title'\n        open={openDialog}\n        className={classes.root}\n        PaperProps={{ style: { height: '270px', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <IconButton aria-label='close' id='confirm-close-button' className={classes.button} onClick={handleOnClose}>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant='h6' id='confirm-title' className={classes.title}>\n              Confirm Submission\n            </Typography>\n          </div>\n        </DialogTitle>\n        {page === 'debit' ? (\n          <DialogContent id='debit-content'>\n            Are you sure you want to submit the debit note? Are you sure you want to submit the debit note? This debit\n            note will be sent to both the Billing Supervisor and Billing Manager for approval.\n            <div className={classes.button}>\n              <Button\n                variant='outlined'\n                id='debit-cancel-button'\n                className={classes['button-negative']}\n                onClick={handleOnClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                id='debit-submit-button'\n                className={classes['button-positive']}\n                onClick={onShowSuccessDialog}\n              >\n                Submit Debit Note\n              </Button>\n            </div>\n          </DialogContent>\n        ) : page === 'credit' ? (\n          <DialogContent id='credit-content'>\n            Are you sure you want to submit the credit note? Are you sure you want to submit the credit note? This debit\n            note will be sent to both the Billing Supervisor and Billing Manager for approval.\n            <div className={classes.button}>\n              <Button\n                variant='outlined'\n                id='credit-cancel-button'\n                className={classes['button-negative']}\n                onClick={handleOnClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                id='credit-submit-button'\n                className={classes['button-positive']}\n                onClick={onShowSuccessDialog}\n              >\n                Submit Credit Note\n              </Button>\n            </div>\n          </DialogContent>\n        ) : page === 'soa' ? (\n          <DialogContent id='soa-content'>\n            Are you sure you want to submit the Statement of Account (SOA) and attachment?\n            <br />\n            <br />\n            This SOA and attachment will be sent to both the Billing Supervisor and Billing Manager for approval.\n            <div className={classes.button}>\n              <Button\n                variant='outlined'\n                id='soa-cancel-button'\n                className={classes['button-negative']}\n                onClick={handleOnClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                id='soa-submit-button'\n                className={classes['button-positive']}\n                onClick={onShowSuccessDialog}\n              >\n                Submit\n              </Button>\n            </div>\n          </DialogContent>\n        ) : (\n          ''\n        )}\n      </Dialog>\n      <SuccessDialog\n        page={page}\n        openSuccessDialog={openSuccessDialog}\n        setOpenSuccessDialog={setOpenSuccessDialog}\n        submitFunction={submitFunction}\n      />\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  remarks: Joi.string()\n    .label('Remarks')\n    .messages({ 'string.empty': `Please enter your reason for disapproving the SOA.` })\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Components\nimport TextField from 'StandardComponents/TextField/CustomTextField'\nimport DisapproveValidator from './DisapproveValidator'\n\n// Styles\nimport classes from './Disapprove.module.scss'\n\nconst SuccessDialogDisapprove = props => {\n  const {\n    setOpenDisapproveDialog,\n    page,\n    openSuccessDisapproveDialog,\n    setOpenSuccessDisapproveDialog,\n    submitFunction\n  } = props\n\n  const handleOnCloseSuccessDialog = () => {\n    setOpenSuccessDisapproveDialog(false)\n  }\n\n  const submitDisapproveFunction = () => {\n    setOpenSuccessDisapproveDialog(false)\n    setOpenDisapproveDialog(false)\n    submitFunction()\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='xs'\n      onClose={handleOnCloseSuccessDialog}\n      aria-labelledby='customized-dialog-title'\n      open={openSuccessDisapproveDialog}\n      className={classes.root}\n      PaperProps={{ style: { height: '35%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <IconButton\n            aria-label='close'\n            id='success-close-button'\n            className={classes.button}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' id={`${page}-title`} className={classes.title}>\n            Disapprove Statement of Account\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        Statement of Account (SOA) was successfully disapproved by the Supervisor and Manager.\n        <div className={classes.button}>\n          <Button\n            variant='contained'\n            id={`${page}-ok-button`}\n            className={classes['button-positive']}\n            onClick={submitDisapproveFunction}\n          >\n            OK\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default function CustomizedDialogs (props) {\n  const { openDisapproveDialog, setOpenDisapproveDialog, submitFunction } = props\n  const [openSuccessDisapproveDialog, setOpenSuccessDisapproveDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({\n    disapprove: []\n  })\n  const [value, setValue] = React.useState({ remarks: '' })\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const _allowedFields = {\n    remarks: ''\n  }\n\n  setTimeout(() => {\n    // setValue(_allowedFields)\n    setAllowedFields(_allowedFields)\n  }, 10)\n\n  const handleOnchange = value => {\n    setValue({\n      remarks: value\n    })\n  }\n\n  const handleOnClose = () => {\n    setOpenDisapproveDialog(false)\n  }\n\n  const doValidatedisapprove = value => {\n    let { error } = DisapproveValidator({\n      remarks: value.remarks\n    })\n\n    if (error) {\n      error = { ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ disapprove: state.disapprove, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const disapprove = doValidatedisapprove(data)\n\n    setErrors(state => ({ ...state, disapprove }))\n    return !!disapprove\n  }\n\n  const onShowSuccessDialog = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = value[f]\n    const hasError = doValidateAll(data)\n    if (hasError) return\n    setOpenSuccessDisapproveDialog(true)\n  }\n  console.log(value)\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        onClose={handleOnClose}\n        aria-labelledby='customized-dialog-title'\n        open={openDisapproveDialog}\n        className={classes.root}\n        PaperProps={{ style: { height: '400px', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <IconButton aria-label='close' id='confirm-close-button' className={classes.button} onClick={handleOnClose}>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant='h6' id='confirm-title' className={classes.title}>\n              Disapprove Statement of Account\n            </Typography>\n          </div>\n        </DialogTitle>\n        <DialogContent id='soa-content'>\n          Are you sure you want to disapprove the Statement of Account? this will return the SOA to the Billing Analyst\n          for correction.\n          <br />\n          <br />\n          Select \"No\" to return to the current screen.\n          <br />\n          <br />\n          <TextField\n            id='remarks-approve-id'\n            defaultValue={value.remarks}\n            onChange={event => handleOnchange(event.target.value)}\n            label='Reason for Disapproving SOA*'\n            required\n            error={errors.remarks}\n          />\n          <br />\n          <br />\n          <div className={classes.button}>\n            <Button\n              variant='outlined'\n              id='soa-cancel-button'\n              className={classes['button-negative']}\n              onClick={handleOnClose}\n            >\n              No\n            </Button>\n            <Button\n              variant='contained'\n              id='soa-disapprove-button'\n              className={classes['button-positive']}\n              onClick={onShowSuccessDialog}\n            >\n              Yes\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      {openSuccessDisapproveDialog === true ? (\n        <SuccessDialogDisapprove\n          openSuccessDisapproveDialog={openSuccessDisapproveDialog}\n          setOpenSuccessDisapproveDialog={setOpenSuccessDisapproveDialog}\n          submitFunction={submitFunction}\n          setOpenDisapproveDialog={setOpenDisapproveDialog}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  )\n}\n","import Joi from '@hapi/joi'\n\n// Services\nimport ExtractValidationResult from 'Services/ExtractValidationResult'\n\nconst schema = Joi.object({\n  remarks: Joi.string()\n    .label('Remarks')\n    .messages({ 'string.empty': `Please enter your reason for aprroving the SOA.` })\n    .required()\n}).options({ abortEarly: false })\n\nconst validate = data => ExtractValidationResult(schema.validate(data))\n\nexport default validate\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Disapprove from '../Disapprove/Disapprove'\n\n// Components\nimport TextField from 'StandardComponents/TextField/CustomTextField'\nimport ApproveValidator from './ApproveValidator'\n\n// Styles\nimport classes from './Approve.module.scss'\n\nconst SuccessDialog = props => {\n  const { page, openSuccessDialog, setOpenSuccessDialog, submitFunction } = props\n\n  const handleOnCloseSuccessDialog = () => {\n    setOpenSuccessDialog(false)\n    submitFunction()\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='xs'\n      onClose={handleOnCloseSuccessDialog}\n      aria-labelledby='customized-dialog-title'\n      open={openSuccessDialog}\n      className={classes.root}\n      PaperProps={{ style: { height: '35%', display: 'flex' } }}\n    >\n      <DialogTitle disableTypography className={classes['header-container']}>\n        <div className={classes.header}>\n          <IconButton\n            aria-label='close'\n            id='success-close-button'\n            className={classes.button}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant='h6' id={`${page}-title`} className={classes.title}>\n            Approve Statement of Account\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        Statement of Account (SOA) was successfully approved by the Supervisor and Manager.\n        <div className={classes.button}>\n          <Button\n            variant='contained'\n            id={`${page}-ok-button`}\n            className={classes['button-positive']}\n            onClick={handleOnCloseSuccessDialog}\n          >\n            OK\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default function CustomizedDialogs (props) {\n  const { page, openDialog, setOpenDialog, submitFunction, disapproveFunction } = props\n  const [openSuccessDialog, setOpenSuccessDialog] = React.useState(false)\n  const [errors, setErrors] = React.useState({\n    disapprove: []\n  })\n  const [value, setValue] = React.useState({ remarks: '' })\n  const [allowedFields, setAllowedFields] = React.useState({})\n  const _allowedFields = {\n    remarks: ''\n  }\n  const [openDisapproveDialog, setOpenDisapproveDialog] = React.useState(false)\n\n  setTimeout(() => {\n    // setValue(_allowedFields)\n    setAllowedFields(_allowedFields)\n  }, 10)\n\n  const handleDisapprove = () => {\n    setOpenDisapproveDialog(true)\n  }\n\n  const handleOnchange = value => {\n    setValue({\n      remarks: value\n    })\n  }\n\n  const handleOnClose = () => {\n    setOpenDialog(false)\n  }\n\n  const doValidatedisapprove = value => {\n    let { error } = ApproveValidator({\n      remarks: value.remarks\n    })\n\n    if (error) {\n      error = { ...error }\n      console.group('Base Error')\n      console.log(error)\n      console.groupEnd()\n      setErrors(state => ({ disapprove: state.disapprove, ...error }))\n      return !!error\n    }\n  }\n\n  const doValidateAll = data => {\n    const disapprove = doValidatedisapprove(data)\n\n    setErrors(state => ({ ...state, disapprove }))\n    return !!disapprove\n  }\n\n  const onShowSuccessDialog = () => {\n    const data = {}\n    for (let f in allowedFields) data[f] = value[f]\n    const hasError = doValidateAll(data)\n    if (hasError) return\n    setOpenDialog(false)\n    setOpenSuccessDialog(true)\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        onClose={handleOnClose}\n        aria-labelledby='customized-dialog-title'\n        open={openDialog}\n        className={classes.root}\n        PaperProps={{ style: { height: '400px', display: 'flex' } }}\n      >\n        <DialogTitle disableTypography className={classes['header-container']}>\n          <div className={classes.header}>\n            <IconButton aria-label='close' id='confirm-close-button' className={classes.button} onClick={handleOnClose}>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant='h6' id='confirm-title' className={classes.title}>\n              Approve Statement of Account\n            </Typography>\n          </div>\n        </DialogTitle>\n        <DialogContent id='soa-content'>\n          Are you sure you want to Approve the Statement of Account?\n          <br />\n          <br />\n          This SOA and attachments will be included in the Bill Run Schedule for Release.\n          <br />\n          <br />\n          <TextField\n            id='remarks-approve-id'\n            defaultValue={value.remarks}\n            onChange={event => handleOnchange(event.target.value)}\n            label='Reason for Approving SOA*'\n            required\n            error={errors.remarks}\n          />\n          <br />\n          <br />\n          <div className={classes.button}>\n            <Button\n              variant='outlined'\n              id='soa-cancel-button'\n              className={classes['button-negative']}\n              onClick={handleDisapprove}\n            >\n              No\n            </Button>\n            <Button\n              variant='contained'\n              id='soa-submit-button'\n              className={classes['button-positive']}\n              onClick={onShowSuccessDialog}\n            >\n              Yes\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <SuccessDialog\n        page={page}\n        openSuccessDialog={openSuccessDialog}\n        setOpenSuccessDialog={setOpenSuccessDialog}\n        submitFunction={submitFunction}\n      />\n      {openDisapproveDialog === true ? (\n        <Disapprove\n          openDisapproveDialog={openDisapproveDialog}\n          setOpenDisapproveDialog={setOpenDisapproveDialog}\n          submitFunction={disapproveFunction}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Submit from 'StandardComponents/Submit/Submit'\nimport { useHistory } from 'react-router-dom'\n\n// Components\nimport PdfViewer from 'StandardComponents/PdfViewer/PdfViewer'\nimport Approve from 'StandardComponents/Approve/Approve'\n\n// Service\nimport BillingSOAReportService from '../../Services/Api/BillingSOAReportService'\nimport BillingAnalystServices from 'Services/Api/BillingAnalystServices'\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\n\nimport classes from './Attachment.module.scss'\n\nexport default function Attachment (props) {\n  const { soaNumber, submit = {} } = props\n  const [file, setFile] = React.useState(null)\n  const [number, setNumber] = React.useState(soaNumber)\n  const [openDialog, setOpenDialog] = React.useState(true)\n  const history = useHistory()\n  const type = 'list'\n  React.useEffect(() => {\n    BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n      const blob = new Blob([response.data])\n      setFile(blob)\n      setNumber(soaNumber)\n    })\n  }, [type])\n  const downloadServices = args => {\n    const { type } = args\n    BillingSOAReportService.getReport({ type: type, soaNumber: soaNumber }).then(response => {\n      const url = URL.createObjectURL(new Blob([response.data]))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', 'soa-list.pdf')\n      document.body.appendChild(link)\n      link.click()\n    })\n  }\n\n  const approveFunction = soaNumber => {\n    BillingSupervisorServices.setClientSOAApprove({ soaNumber: soaNumber }).then(res => {\n      console.group('Void SOA')\n      console.log(res)\n      console.groupEnd()\n    })\n    history.push('/')\n  }\n\n  const disapproveFunction = soaNumber => {\n    BillingSupervisorServices.setClientSOADisapprove({ soaNumber: soaNumber }).then(res => {\n      console.group('Void SOA')\n      console.log(res)\n      console.groupEnd()\n    })\n    history.push('/')\n  }\n\n  const submitFunction = soaNumber => {\n    BillingAnalystServices.submitClientSOA({ soaNumber: soaNumber })\n    history.push('/')\n  }\n\n  return (\n    <div className={classes.root}>\n      {submit.type === 'supervisor' ? (\n        <div>\n          {file ? (\n            <PdfViewer\n              soaNumber={soaNumber}\n              options={'list'}\n              file={file}\n              download={() => downloadServices({ type: 'category' })}\n              type={'list'}\n            />\n          ) : (\n            ''\n          )}\n          {submit.activeStep && (\n            <Approve\n              page='soa'\n              openDialog={openDialog}\n              setOpenDialog={setOpenDialog}\n              submitFunction={() => approveFunction(number)}\n              disapproveFunction={() => disapproveFunction(number)}\n            />\n          )}\n        </div>\n      ) : (\n        <div>\n          {file ? (\n            <PdfViewer\n              soaNumber={soaNumber}\n              options={'list'}\n              file={file}\n              download={() => downloadServices({ type: 'category' })}\n              type={'list'}\n            />\n          ) : (\n            ''\n          )}\n          {submit.activeStep && (\n            <Submit\n              page='soa'\n              openDialog={openDialog}\n              setOpenDialog={setOpenDialog}\n              submitFunction={() => submitFunction(number)}\n            />\n          )}\n        </div>\n      )}\n      {submit.type === 'validated' ? (\n        <div>\n          {file ? (\n            <PdfViewer\n              soaNumber={soaNumber}\n              options={'list'}\n              file={file}\n              download={() => downloadServices({ type: 'category' })}\n              type={'list'}\n            />\n          ) : (\n            ''\n          )}\n          {submit.activeStep && history.push('/')}\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\nimport { Typography } from '@material-ui/core'\n\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport classes from './ContentHeader.module.scss'\n\nexport default function ContentHeader (props) {\n  const { children, summaryFields, summaryValues, fieldsWidth } = props\n  const highestValue = [\n    (summaryValues[0] + '').length,\n    (summaryValues[1] + '').length,\n    (summaryValues[2] + '').length\n  ].sort(function (a, b) {\n    return b - a\n  })\n  const valuesWidth = () => {\n    switch (highestValue[0]) {\n      case 5:\n        return '140px'\n      case 6:\n        return '150px'\n      case 7:\n        return '160px'\n      case 8:\n        return '170px'\n      case 9:\n        return '180px'\n      case 10:\n        return '190px'\n      case 11:\n        return '200px'\n      default:\n        return '130px'\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.container}>\n        <div className={classes['content-header-details']}>{children}</div>\n        <div className={classes['content-header-summary']}>\n          <div className={classes['summary-wrapper']}>\n            <div className={classes['summary-header']}>\n              <Typography id='summary-title' align='center'>\n                SUMMARY\n              </Typography>\n            </div>\n            <div className={classes['summary-content']}>\n              <div className={classes.top}>\n                <div style={{ width: fieldsWidth }} className={classes.fields}>\n                  <Typography id='summary-field-0' variant='caption'>\n                    {summaryFields[0]}\n                  </Typography>\n                  <br />\n                  <Typography id='summary-field-1' variant='caption'>\n                    {summaryFields[1]}\n                  </Typography>\n                </div>\n                <div style={{ width: valuesWidth() }} className={classes.values}>\n                  <Typography id='summary-value-full-0' variant='caption'>\n                    <span className={classes['php-text']}>PHP</span>\n                    <span id='summary-value--0' className={classes.value}>\n                      {CurrencyFormatter(summaryValues[0])}\n                    </span>\n                  </Typography>\n                  <br />\n                  <Typography id='summary-value-full-1' variant='caption'>\n                    <span className={classes['php-text']}>PHP</span>\n                    <span id='summary-value-1' className={classes.value}>\n                      {CurrencyFormatter(summaryValues[1])}\n                    </span>\n                  </Typography>\n                </div>\n              </div>\n              <hr style={{ width: '98%', float: 'right' }} />\n              <div className={classes.bottom}>\n                <div style={{ width: fieldsWidth }} className={classes.fields}>\n                  <Typography id='summary-field-2'>{summaryFields[2]}</Typography>\n                </div>\n                <div style={{ width: valuesWidth() }} className={classes.values}>\n                  <Typography id='summary-value-2'>PHP {CurrencyFormatter(summaryValues[2])}</Typography>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color='inherit' variant='subtitle1'>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant='h6' id='tableTitle'>\n            Nutrition\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title='Delete'>\n            <IconButton aria-label='delete'>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title='Filter list'>\n            <IconButton aria-label='filter list'>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n    // marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  analystTable: {\n    minWidth: 650\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport default function EnhancedTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleSelectAllClick,\n    order,\n    orderBy,\n    pagination,\n    checkAll,\n    sorter,\n    size,\n    indeterminate,\n    checked,\n    checkboxColor,\n    analyst\n  } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={`${analyst ? classes.analystTable : classes.table}`}\n            aria-labelledby='tableTitle'\n            size={size}\n          >\n            <TableHead>\n              <TableRow>\n                {checkAll && (\n                  <TableCell padding='checkbox'>\n                    <Checkbox\n                      indeterminate={indeterminate}\n                      checked={checked}\n                      onChange={handleSelectAllClick}\n                      color={checkboxColor}\n                    />\n                  </TableCell>\n                )}\n\n                {headCells.map(headCell => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'default'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    width={headCell.width}\n                  >\n                    {sorter ? (\n                      <TableSortLabel\n                        active={orderBy === headCell.id}\n                        direction={order}\n                        onClick={event => handleRequestSort(event, headCell.id)}\n                      >\n                        {headCell.label}\n                        {orderBy === headCell.id ? (\n                          <span className={classes.visuallyHidden}>\n                            {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                          </span>\n                        ) : null}\n                      </TableSortLabel>\n                    ) : (\n                      headCell.label\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {children}\n          </Table>\n        </div>\n        {pagination && <TablePagination rowsPerPageOptions={[5, 10, 25]} component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import instance from './instance'\nconst axios = instance('/b/cs')\n\nexport default class BillingSOAServices {\n  static getMembershipFees ({ journalId }) {\n    return axios({\n      url: `/billing/client-soa/${journalId}/compute/membership-fees/`,\n      method: 'GET'\n    })\n  }\n\n  static getProcessingFees ({ journalId, memberId }) {\n    return axios({\n      url: `/billing/client-soa/${journalId}/compute/processing-fees/`\n    })\n  }\n}\n","import React from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport Typography from '@material-ui/core/Typography'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport Link from '@material-ui/core/Link'\nimport * as moment from 'moment'\n\nimport ContractType from 'Constant/ContractTypes'\nimport FieldCode from 'Constant/MemberTableFields'\n\n// Components\nimport Table from 'SharedComponents/Table/Table'\nimport ContentHeader from 'StandardComponents/ContentHeader/ContentHeader'\nimport EnhancedTable from 'StandardComponents/EnhancedTable/EnhancedTable'\n\nimport classes from './Analyze.module.scss'\nimport { CurrencyFormatter, DateFormatterByAbbreviation } from 'Utilities/TextFormatter'\n\nimport BillingSOAServices from 'Services/Api/BillingSOAServices'\n\nconst headCells = [\n  { id: 'remove-icon', numeric: false, disablePadding: false, label: '' },\n  { id: 'head-count', numeric: true, disablePadding: false, label: 'HC' },\n  { id: 'account-number', numeric: false, disablePadding: true, label: 'ACCOUNT NUMBER' },\n  { id: 'last-name', numeric: false, disablePadding: true, label: 'LAST NAME' },\n  { id: 'first-name', numeric: false, disablePadding: true, label: 'FIRST NAME' },\n  { id: 'middle-initial', numeric: false, disablePadding: true, label: 'MIDDLE INITIAL' },\n  { id: 'reference-date', numeric: false, disablePadding: true, label: 'REFERENCE DATE' },\n  { id: 'renewal-date', numeric: false, disablePadding: true, label: 'RENEWAL DATE' },\n  { id: 'end-date', numeric: false, disablePadding: true, label: 'END DATE' },\n  { id: 'rnb', numeric: false, disablePadding: true, label: 'RNB' },\n  { id: 'membership-fees', numeric: true, disablePadding: false, label: 'MEMBERSHIP FEES' },\n  { id: 'processing-fees', numeric: true, disablePadding: false, label: 'PROCESSING FEES' },\n  { id: 'ad-d-rider', numeric: false, disablePadding: true, label: 'AD & D RIDER' },\n  { id: 'total', numeric: true, disablePadding: false, label: 'TOTAL' },\n  { id: 'remarks', numeric: false, disablePadding: true, label: 'REMARKS' }\n]\n\nexport default function Analyze (props) {\n  const { values = {} } = props\n  const [soaDetails, setSOADetails] = React.useState(null)\n  const [selected, setSelected] = React.useState([])\n  const [membershipFees, setMembershipFees] = React.useState([])\n  const [processingFees, setProcessingFees] = React.useState([])\n\n  React.useEffect(() => {\n    if (values.soa) {\n      setSOADetails(values.soa)\n\n      BillingSOAServices.getMembershipFees({ journalId: values.soa.journal._id }).then(value => {\n        setMembershipFees(value.data.data)\n      })\n\n      BillingSOAServices.getProcessingFees({ journalId: values.soa.journal._id }).then(value => {\n        setProcessingFees(value.data.data)\n      })\n    }\n  }, [values.soa])\n\n  return (\n    <div>\n      {values.type === 'validated' ? (\n        <div className={classes.root}>\n          <EnhancedTable\n            headCells={headCells}\n            // handleSelectAllClick={() => handleSelectAllClick({ members: soaDetails.approved_invoices })}\n            // indeterminate={!!soaDetails.approved_invoices.indeterminate}\n            // checked={!!soaDetails.approved_invoices.checked}\n            checkAll\n            checkboxColor='default'\n          >\n            <TableBody>\n              {soaDetails &&\n                soaDetails.journal.member.map((item, index) => {\n                  return (\n                    <TableRow>\n                      <TableCell padding='checkbox'>\n                        <Checkbox color='default' />\n                      </TableCell>\n                      <TableCell>\n                        <RemoveCircleIcon id={`remove-${index}`} className={classes.removeIcon} />\n                      </TableCell>\n                      <TableCell id={`head-count-${index}`} align='right'>\n                        {index + 1}\n                      </TableCell>\n                      <TableCell id={`account-number-${index}`}>{item.account_no}</TableCell>\n                      <TableCell id={`last-name-${index}`}>{item.last_name}</TableCell>\n                      <TableCell id={`first-name-${index}`}>{item.first_name}</TableCell>\n                      <TableCell id={`middle-initial-${index}`}>{item.middle_name.charAt(0)}</TableCell>\n                      <TableCell id={`reference-date-${index}`}>\n                        {moment(item.effectivity_date).format('MMM.DD,YYYY')}\n                      </TableCell>\n                      <TableCell id={`renewal-date-${index}`}>\n                        {moment(item.renewal_date).format('MMM.DD,YYYY')}\n                      </TableCell>\n                      <TableCell id={`end-date-${index}`}>{moment(item.end_date).format('MMM.DD,YYYY')}</TableCell>\n                      <TableCell id={`rnb-${index}`}>100.00</TableCell>\n                      <TableCell id={`membership-fee-${index}`} align='right'>\n                        {membershipFees.map((m, i) => {\n                          if (item._id === m.memberId) return CurrencyFormatter(m.fees)\n                        })}\n                      </TableCell>\n                      <TableCell id={`processing-fee-${index}`} align='right'>\n                        {processingFees.map((m, i) => {\n                          if (item._id === m.memberId) return CurrencyFormatter(m.fees)\n                        })}\n                      </TableCell>\n                      <TableCell id={`ad-d-rider-${index}`}>150.00</TableCell>\n                      <TableCell id={`total-${index}`} align='right'>\n                        1,600.00\n                      </TableCell>\n                      <TableCell id={`remarks-${index}`}>remarks</TableCell>\n                    </TableRow>\n                  )\n                })}\n            </TableBody>\n          </EnhancedTable>\n        </div>\n      ) : (\n        <React.Fragment>\n          <div className={classes.root}>\n            {soaDetails ? (\n              <div>\n                <div className={classes['display-settings-wrapper']}>\n                  <div className={classes['display-settings-content']}>\n                    <Link id='display-settings-link' className={classes['display-settings-link']} to='/' size='medium'>\n                      <ViewListIcon id='display-settings-icon' className={classes['display-settings-icon']} />\n                      Display Settings\n                    </Link>\n                  </div>\n                </div>\n                <ContentHeader\n                  summaryFields={['Sub Total', 'Tax Amount', 'Total Amount']}\n                  summaryValues={\n                    soaDetails.journal && soaDetails.journal.summary\n                      ? [\n                        soaDetails.journal.summary.sub_total,\n                        soaDetails.journal.summary.tax_amount,\n                        soaDetails.journal.summary.sub_total + soaDetails.journal.summary.tax_amount\n                      ]\n                      : [0, 0, 0]\n                  }\n                >\n                  <div className={classes['content-header-details']}>\n                    <div className={classes.fields}>\n                      <Typography id='content-details-soa-number' color='textSecondary'>\n                        SOA NO.\n                      </Typography>\n                      <Typography id='content-details-billing-coverage-field' color='textSecondary'>\n                        Period Covered\n                      </Typography>\n                      <Typography id='content-details-due-date-field' color='textSecondary'>\n                        Due Date\n                      </Typography>\n                    </div>\n                    <div className={classes.values}>\n                      <Typography id='content-details-soa-number-value'>{soaDetails.soa_number}</Typography>\n                      <Typography id='content-details-billing-coverage-value' color='textSecondary'>\n                        {soaDetails.period &&\n                          DateFormatterByAbbreviation(soaDetails.period.start) +\n                            ' - ' +\n                            DateFormatterByAbbreviation(soaDetails.period.end)}\n                      </Typography>\n                      <Typography id='content-details-due-date-value' color='textSecondary'>\n                        {DateFormatterByAbbreviation(soaDetails.due_date)}\n                      </Typography>\n                    </div>\n                    <Typography id='content-details-soa-staus' color='error'>\n                      {soaDetails.journal && soaDetails.journal.soa && soaDetails.journal.soa.status}\n                    </Typography>\n                  </div>\n                </ContentHeader>\n                <EnhancedTable\n                  headCells={headCells}\n                  // handleSelectAllClick={() => handleSelectAllClick({ members: soaDetails.approved_invoices })}\n                  // indeterminate={!!soaDetails.approved_invoices.indeterminate}\n                  // checked={!!soaDetails.approved_invoices.checked}\n                  checkAll\n                  checkboxColor='default'\n                >\n                  <TableBody>\n                    {soaDetails.journal &&\n                      soaDetails.journal.member.map((item, index) => {\n                        return (\n                          <TableRow>\n                            <TableCell padding='checkbox'>\n                              <Checkbox color='default' />\n                            </TableCell>\n                            <TableCell>\n                              <RemoveCircleIcon id={`remove-${index}`} className={classes.removeIcon} />\n                            </TableCell>\n                            <TableCell id={`head-count-${index}`} align='right'>\n                              {index + 1}\n                            </TableCell>\n                            <TableCell id={`account-number-${index}`}>{item.account_no}</TableCell>\n                            <TableCell id={`last-name-${index}`}>{item.last_name}</TableCell>\n                            <TableCell id={`first-name-${index}`}>{item.first_name}</TableCell>\n                            <TableCell id={`middle-initial-${index}`}>{item.middle_name.charAt(0)}</TableCell>\n                            <TableCell id={`reference-date-${index}`}>\n                              {moment(item.effectivity_date).format('MMM.DD,YYYY')}\n                            </TableCell>\n                            <TableCell id={`renewal-date-${index}`}>\n                              {moment(item.renewal_date).format('MMM.DD,YYYY')}\n                            </TableCell>\n                            <TableCell id={`end-date-${index}`}>\n                              {moment(item.end_date).format('MMM.DD,YYYY')}\n                            </TableCell>\n                            <TableCell id={`rnb-${index}`}>100.00</TableCell>\n                            <TableCell id={`membership-fee-${index}`} align='right'>\n                              {membershipFees.map((m, i) => {\n                                if (item._id === m.memberId) return CurrencyFormatter(m.fees)\n                              })}\n                            </TableCell>\n                            <TableCell id={`processing-fee-${index}`} align='right'>\n                              {processingFees.map((m, i) => {\n                                if (item._id === m.memberId) return CurrencyFormatter(m.fees)\n                              })}\n                            </TableCell>\n                            <TableCell id={`ad-d-rider-${index}`}>150.00</TableCell>\n                            <TableCell id={`total-${index}`} align='right'>\n                              1,600.00\n                            </TableCell>\n                            <TableCell id={`remarks-${index}`}>remarks</TableCell>\n                          </TableRow>\n                        )\n                      })}\n                  </TableBody>\n                </EnhancedTable>\n              </div>\n            ) : (\n              'No Data'\n            )}\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n","export default {\n  CURRENCY: 'Currency',\n  NUMBER: 'Number',\n  PERCENTAGE: 'Percentage',\n  OPTION: 'Option',\n  CHECKBOX: 'Checkbox'\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport DoneIcon from '@material-ui/icons/Done'\n\nimport FieldType from 'Constant/TermsAndConditions'\nimport SearchBox from '../CustomSearchTextComponent/CustomSearchTextComponent'\n\nimport classes from './TabPanelComponent.module.scss'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n}\n\nfunction a11yProps (index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: '#F5F7FB'\n  },\n  tabs: {\n    fontSize: 12\n  },\n  tabContent: {\n    marginTop: 20,\n    marginBottom: 20\n  },\n  selected: {\n    backgroundColor: 'yellow'\n  },\n  icon: {\n    fontSize: 'smaller'\n  }\n}))\n\nexport default function SimpleTabs (props) {\n  const { value, soa } = props\n\n  return (\n    <React.Fragment>\n      {soa && soa.journal && (\n        <div className={classes.root}>\n          <TabPanel value={value} index={0}>\n            <Typography>\n              <div className={classes.tabContent}>\n                <SearchBox id='search-billing-instructions' placeholder='Search Billing Instructions' />\n              </div>\n              <div className={classes.tabContent}>\n                <Typography id='drawer-additional-fields' color='textSecondary' variant='caption'>\n                  ADDITIONAL FIELDS TO BE INCLUDED IN THE SOA ATTACHMENT\n                </Typography>\n                <br />\n                {soa.journal.contract && soa.journal.contract.soa_attachment_addtl_fields ? (\n                  soa.journal.contract.soa_attachment_addtl_fields.map((item, index) => (\n                    <div>\n                      <Typography\n                        id={`drawer-additional-fields-value-${index}`}\n                        style={{ fontWeight: 'bold' }}\n                        variant='caption'\n                      >\n                        <DoneIcon style={{ fontSize: 'smaller' }} />\n                        {item.field_name}\n                      </Typography>\n                    </div>\n                  ))\n                ) : (\n                  <Typography id='drawer-additional-fields-value' style={{ fontWeight: 'bold' }} variant='caption'>\n                    No additional fields to attach\n                  </Typography>\n                )}\n              </div>\n\n              <div className={classes.tabContent}>\n                <Typography id='drawer-soas-generation-field' color='textSecondary' variant='caption'>\n                  SOAs GENERATION\n                </Typography>\n                <br />\n                <Typography id='drawer-choose-soas-generation-field' color='textSecondary' variant='caption'>\n                  Choose SOA generation and arrange their hierarchy\n                </Typography>\n                <br />\n                {soa.journal.contract && soa.journal.contract.soa_generation ? (\n                  soa.journal.contract.soa_generation.map((item, index) => (\n                    <div>\n                      <Typography\n                        id={`drawer-soas-generation-value-${index}`}\n                        style={{ fontWeight: 'bold' }}\n                        variant='caption'\n                      >\n                        <DoneIcon style={{ fontSize: 'smaller' }} />\n                        {item.field_name}\n                      </Typography>\n                    </div>\n                  ))\n                ) : (\n                  <Typography id='drawer-soas-generation-value' style={{ fontWeight: 'bold' }} variant='caption'>\n                    No required fields for SOA generation\n                  </Typography>\n                )}\n              </div>\n\n              <div className={classes.tabContent}>\n                <Typography id='drawer-soas-sorting-field' color='textSecondary' variant='caption'>\n                  SOAs SORTING\n                </Typography>\n                <br />\n                <Typography id='drawer-soas-sorting-options-field' color='textSecondary' variant='caption'>\n                  Sort SOA according to options and arrange the hierarchy\n                </Typography>\n                <br />\n                {soa.journal.contract && soa.journal.contract.soa_sorting ? (\n                  soa.journal.contract.soa_sorting.map((item, index) => (\n                    <div>\n                      <Typography\n                        id={`drawer-soas-sorting-value-${index}`}\n                        style={{ fontWeight: 'bold' }}\n                        variant='caption'\n                      >\n                        <DoneIcon style={{ fontSize: 'smaller' }} /> {item.field_name}\n                      </Typography>\n                    </div>\n                  ))\n                ) : (\n                  <Typography id='drawer-soas-sorting-value' style={{ fontWeight: 'bold' }} variant='caption'>\n                    No sorting options added\n                  </Typography>\n                )}\n              </div>\n\n              <div className={classes.tabContent}>\n                <Typography id='drawer-soa-address-field' color='textSecondary' variant='caption'>\n                  ADDRESS SOA TO\n                </Typography>\n                <br />\n                {soa.journal.contract && soa.journal.contract.soa_send_to && (\n                  <Typography id='drawer-soa-address-value' style={{ fontWeight: 'bold' }} variant='caption'>\n                    {soa.journal.contract.soa_send_to.name}\n                  </Typography>\n                )}\n              </div>\n\n              <div className={classes.tabContent}>\n                <Typography id='drawer-send-soa-field' color='textSecondary' variant='caption'>\n                  SEND SOA TO\n                </Typography>\n                <br />\n                {soa.journal.contract && soa.journal.contract.soa_send_to_address && (\n                  <Typography id='drawer-send-soa-value' style={{ fontWeight: 'bold' }} variant='caption'>\n                    {soa.journal.contract.soa_send_to_address.floor +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.unit +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.bldg_no +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.bldg_name +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.street +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.brgy +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.region +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.province +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.city +\n                      ' ' +\n                      soa.journal.contract.soa_send_to_address.zip_code}\n                  </Typography>\n                )}\n              </div>\n\n              <div className={classes.tabContent}>\n                <Typography id='drawer-send-soa-days-field' color='textSecondary' variant='caption'>\n                  SEND SOA ON SPECIFIC DAYS ONLY\n                </Typography>\n                <br />\n                {soa.journal.contract && soa.journal.contract.soa_send_on_days ? (\n                  soa.journal.contract.soa_send_on_days.map((item, index) => (\n                    <div>\n                      <Typography\n                        id={`drawer-send-soa-days-value-${index}`}\n                        style={{ fontWeight: 'bold' }}\n                        variant='caption'\n                      >\n                        <DoneIcon style={{ fontSize: 'smaller' }} /> {item}\n                      </Typography>\n                    </div>\n                  ))\n                ) : (\n                  <Typography id='drawer-send-soa-days-value' style={{ fontWeight: 'bold' }} variant='caption'>\n                    <DoneIcon style={{ fontSize: 'smaller' }} /> No specific day/s indicated\n                  </Typography>\n                )}\n              </div>\n            </Typography>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Typography>\n              <div className={classes.tabContent}>\n                <SearchBox id='search-terms-and-conditions' placeholder='Search Terms and Conditions' />\n              </div>\n              {soa.journal.contract &&\n                soa.journal.contract.terms_and_conditions &&\n                soa.journal.contract.terms_and_conditions.map((item, index) => (\n                  <React.Fragment>\n                    <div className={classes.tabContent}>\n                      <Typography id={`drawer-field-section-${index}`} color='textSecondary' variant='caption'>\n                        {item.field_section.toUpperCase()}\n                      </Typography>\n                      <br />\n                      {item.field_values &&\n                        item.field_values.map((v, index) => (\n                          <React.Fragment>\n                            <Typography\n                              id={`drawer-field-name-${index}`}\n                              style={{ fontWeight: 'bold' }}\n                              variant='caption'\n                            >\n                              {v.type === FieldType.CURRENCY ? (\n                                <div className={classes.currency}>\n                                  <div className={classes.fields}>{v.name}</div>\n                                  <div className={classes.values}>\n                                    {v.values && v.values.map((val, index) => 'PHP' + CurrencyFormatter(val))}\n                                  </div>\n                                </div>\n                              ) : v.type === FieldType.PERCENTAGE ? (\n                                <div>\n                                  {v.name}\n                                  <br />\n                                  {v.values && v.values.map((val, index) => val + '%')}\n                                </div>\n                              ) : v.type === FieldType.CHECKBOX ? (\n                                <div>\n                                  {v.name}\n                                  <br />\n                                  <DoneIcon style={{ fontSize: 'smaller' }} />\n                                  {v.values && v.values.map((val, index) => val)}\n                                </div>\n                              ) : v.type === FieldType.NUMBER ? (\n                                <div>\n                                  {v.name}\n                                  <br />\n                                  {v.values && v.values.map((val, index) => val)}\n                                </div>\n                              ) : (\n                                <div>\n                                  {v.name}\n                                  <br />\n                                  <DoneIcon style={{ fontSize: 'smaller' }} />\n                                  {v.values && v.values.map((val, index) => val)}\n                                </div>\n                              )}\n                            </Typography>\n                            <br />\n                          </React.Fragment>\n                        ))}\n                    </div>\n                  </React.Fragment>\n                ))}\n            </Typography>\n          </TabPanel>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\n// import Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\n\nimport HeaderDetails from 'StandardComponents/HeaderDetails/HeaderDetails'\nimport FormDrawer from 'StandardComponents/FormDrawer/FormDrawer'\nimport FormDrawerSupervisor from '../../Components/SoaSupervisorFormDrawer/FormDrawer'\nimport BIR from 'StandardComponents/BIR/BIR'\nimport Corporate from 'StandardComponents/Corporate/Corporate'\nimport Attachment from 'StandardComponents/Attachment/Attachment'\nimport Submit from 'StandardComponents/Submit/Submit'\nimport Analyze from 'StandardComponents/Analyze/Analyze'\nimport TabPanel from '../../Components/TabPanelComponent/TabPanelComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BillingAnalystServices from 'Services/Api/BillingAnalystServices'\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\n\n// CSS\nimport classes from './SOAPage.module.scss'\nimport { Divider } from '@material-ui/core'\n\nfunction a11yProps (index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: '#F5F7FB'\n  },\n  tabs: {\n    fontSize: 12\n  },\n  indicator: {\n    backgroundColor: '#3AB77D'\n  },\n  // button: {\n  selected: {\n    backgroundColor: 'yellow'\n  }\n  // }\n}))\n\nexport default function SOAPage (props) {\n  const { soaNumber, type } = props.match.params\n  const [ledger, setLedger] = React.useState({})\n  const [soaPage, setSOAPage] = React.useState(false)\n  const tabClasses = useStyles()\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [activeStep, setActiveStep] = React.useState(0)\n  const [value, setValue] = React.useState(0)\n  const history = useHistory()\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  PageTitleService()\n\n  React.useEffect(() => {\n    Promise.all([BillingAnalystServices.getClientSOA({ soaNumber })]).then(values => {\n      setLedger(state => ({ ...state, details: values[0].data.data[0] }))\n      setSOAPage(true)\n      console.log(values[0])\n    })\n  }, [activeStep])\n\n  if (ledger.details) {\n    BreadcrumbsService.setSelectedItems(['ledgers', `ledgerId:${ledger.details.account_name.toUpperCase()}`])\n  }\n\n  const voidFunction = soaNumber => {\n    BillingSupervisorServices.setClientSOAVoid({ soaNumber: soaNumber }).then(res => {\n      console.group('Void SOA')\n      console.log(res)\n      console.groupEnd()\n    })\n    history.push('/')\n  }\n\n  const getSteps = () => {\n    return ['Analyze Statement', 'Statement (BIR)', 'Statement (Corporate)', 'Attachment', 'Submit']\n  }\n\n  const getStepContent = props => {\n    const { stepIndex, activeStep } = props\n    switch (stepIndex) {\n      case 0:\n        return <Analyze values={{ soa: ledger.details, type: type }} />\n      case 1:\n        return <BIR soaNumber={soaNumber} />\n      case 2:\n        return <Corporate soaNumber={soaNumber} />\n      case 3:\n        return activeStep ? (\n          <Attachment submit={{ activeStep: activeStep, type: type }} />\n        ) : (\n          <Attachment soaNumber={soaNumber} />\n        )\n    }\n  }\n\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\n    if (activeStep === 0) history.push('/')\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n  // for saving\n  const save = soaNumber => {\n    BillingAnalystServices.saveClientSOA({ soaNumber: soaNumber }).then(res => {\n      console.group('Save SOA')\n      console.log(res)\n      console.groupEnd()\n    })\n    history.push('/')\n  }\n\n  const { role } = JSON.parse(localStorage.getItem('me'))\n\n  return (\n    <div className={classes.root}>\n      <React.Fragment>\n        <HeaderDetails ledger={ledger.details} activeStep={activeStep} steps={steps} type={'analyst'} />\n        {role === 'BILLING_ANALYST' && (\n          <FormDrawer\n            voided={() => voidFunction(soaNumber)}\n            type={type}\n            soaPage={soaPage}\n            getStepContent={getStepContent}\n            activeStep={activeStep}\n            steps={steps}\n            save={() => save(soaNumber)}\n            nextStep={handleNext}\n            stepBack={handleBack}\n            reset={handleReset}\n            drawerHeight={'570px'}\n            drawerHeaderContent={\n              <div className={tabClasses.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  aria-label='simple tabs example'\n                  classes={{ indicator: tabClasses.indicator }}\n                >\n                  <Tab className={tabClasses.tabs} label='Billing Instructions' {...a11yProps(0)} />\n                  <Tab className={tabClasses.tabs} label='Terms & Conditions' {...a11yProps(1)} />\n                </Tabs>\n              </div>\n            }\n            drawerContent={<TabPanel soa={ledger.details} value={value} />}\n          />\n        )}\n\n        {role === 'BILLING_SUPERVISOR' && (\n          <FormDrawerSupervisor\n            type={type}\n            soaPage={soaPage}\n            getStepContent={getStepContent}\n            activeStep={activeStep}\n            steps={steps}\n            openDialog={openDialog}\n            setOpenDialog={setOpenDialog}\n            nextStep={handleNext}\n            stepBack={handleBack}\n            voided={() => voidFunction(soaNumber)}\n            reset={handleReset}\n            drawerHeight={'570px'}\n            drawerHeaderContent={\n              <div className={tabClasses.root}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  aria-label='simple tabs example'\n                  classes={{ indicator: tabClasses.indicator }}\n                >\n                  <Tab className={tabClasses.tabs} label='Billing Instructions' {...a11yProps(0)} />\n                  <Tab className={tabClasses.tabs} label='Terms & Conditions' {...a11yProps(1)} />\n                </Tabs>\n              </div>\n            }\n            drawerContent={<TabPanel soa={ledger.details} value={value} />}\n          />\n        )}\n      </React.Fragment>\n      {/* <React.Fragment>\n        <HeaderDetails ledger={ledger.details} activeStep={activeStep} steps={steps} type={'analyst'} />\n        <FormDrawer\n          voidFunction={() => voidFunction(soaNumber)}\n          type={type}\n          soaPage={soaPage}\n          getStepContent={getStepContent}\n          activeStep={activeStep}\n          steps={steps}\n          save={() => save(soaNumber)}\n          nextStep={handleNext}\n          stepBack={handleBack}\n          reset={handleReset}\n          drawerHeight={'570px'}\n          drawerHeaderContent={\n            <div className={tabClasses.root}>\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label='simple tabs example'\n                classes={{ indicator: tabClasses.indicator }}\n              >\n                <Tab className={tabClasses.tabs} label='Billing Instructions' {...a11yProps(0)} />\n                <Tab className={tabClasses.tabs} label='Terms & Conditions' {...a11yProps(1)} />\n              </Tabs>\n            </div>\n          }\n        />\n      </React.Fragment> */}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport classes from './CustomPropertyText.module.scss'\nexport default function CustomPropertyText (props) {\n  const { label = '', required, readOnly, constainerStyle = {}, error, ...other } = props\n\n  return (\n    <div className={classes.root} style={constainerStyle}>\n      <div className={classes.label_container}>\n        <Typography variant='body1' color='textSecondary' className={classes.label}>\n          {label}\n        </Typography>\n      </div>\n      <div className={classes.value_container}>\n        <Typography variant='body1' className={classes.value}>\n          {props.value}\n        </Typography>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './BillingAnalystTab.module.scss'\n\nexport default function BillingAnalystTab () {\n  return <div>BILLING ANALYST</div>\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\n// Styles\nimport classes from './ConfirmDialog.module.scss'\nimport { Typography, DialogContent, Button } from '@material-ui/core'\n\nexport default function CustomizedDialogs (props) {\n  const { assign, setAssign, onCancel, onOK, negative_label, positive_label, preGenConflict } = props\n\n  return (\n    <Dialog maxWidth='xs' open={assign.show} className={classes.root} PaperProps={{ style: { display: 'flex' } }}>\n      <DialogTitle disableTypography>\n        <Typography>{assign.title}</Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>{assign.text}</Typography>\n        <br />\n        {preGenConflict ? <Typography>{assign.text2}</Typography> : null}\n\n        <div className={classes.button}>\n          {/* {negative_label && preGenConflict ? (\n            <Button variant='outlined' className={classes['button-negative']} onClick={onCancel}>\n              {negative_label}\n            </Button>\n          ) : (\n            ''\n          )} */}\n          {positive_label ? (\n            <Button variant='contained' className={classes['button-positive']} onClick={onOK}>\n              {positive_label}\n            </Button>\n          ) : (\n            ''\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import Select from '@material-ui/core/Select'\n\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from './DropDown.module.scss'\n\n/**\n * Props\n * id required\n * label\n * required\n * value\n * items array {value, text}\n * onChange\n *\n */\nexport default function DropDown (props) {\n  const {\n    id,\n    label = '',\n    required,\n    items = [],\n    readOnly,\n    onChange,\n    disableComponents,\n    error,\n    setShowInfo,\n    ...other\n  } = props\n  const { value = '' } = props\n\n  const [_error, setError] = React.useState()\n\n  React.useEffect(() => {\n    if (typeof value === 'string') {\n      if (!value.trim()) setError(error)\n    }\n  }, [error, value])\n\n  const handleChange = event => {\n    setError()\n    setShowInfo(true)\n    if (typeof onChange === 'function') onChange(event)\n    console.log(event)\n  }\n\n  console.log(items)\n  return (\n    <div className={classes.root}>\n      <Typography variant='subtitle2' className={classes.label}>\n        {label}\n        {!readOnly && required ? ' *' : ''}\n      </Typography>\n      <div className={classes.wrapper}>\n        {readOnly ? (\n          //  Read Only Value\n          <Typography id={props.id} variant='subtitle2' className={`${classes.label} ${classes['read-only-value']}`}>\n            {value}\n          </Typography>\n        ) : (\n          <React.Fragment>\n            <Paper\n              className={`${classes['select-container']} ${_error && classes['has-error']} ${disableComponents &&\n                classes.disabled}`}\n            >\n              <Select\n                id={id}\n                onChange={handleChange}\n                classes={{ root: classes.select }}\n                input={<InputBase className={classes.input} />}\n                {...other}\n                disabled={disableComponents}\n              >\n                {items.map((item, index) => (\n                  <MenuItem key={`${id}-items${index}`} id={`${id}-items${index}`} value={item.code}>\n                    {item.code + ` - ` + item.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Paper>\n\n            {_error && <span className={classes.error}>{_error}</span>}\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport moment from 'moment'\nimport ability from '../../../SecurityConfig/rbac-config.js'\n\n// Components\nimport ConfirmDialog from '../ConfirmDialog/ConfirmDialog'\nimport DropDown from 'StandardComponents/DropDown/DropDown'\n\n// Services\nimport BillingAnalystServices from 'Services/Api/BillingAnalystServices'\n\n// Styles\nimport classes from './BillingCycleTab.module.scss'\n\nlet billingCycleSelected = []\nlet hasConflict = false\nlet dateIsEqual = false\nlet initialDateAndEffectivityIsEqual = false\n\nconst FooterBar = props => {\n  const { clientInfo, processingRule } = props\n\n  const [assign, setAssign] = React.useState({ show: false, title: '', text: '', text2: '' })\n\n  const history = useHistory()\n\n  const handleOnClickAssign = () => {\n    console.log(hasConflict)\n    const title = hasConflict || dateIsEqual ? 'Pre-Generate Bill Conflict' : 'Billing Cycle Successfully Saved'\n    const text = hasConflict\n      ? dateIsEqual\n        ? \"There is a conflict on the first instance of the pre-generate (SOA) days of the selected billing cycle with the account's effectivity date.\"\n        : initialDateAndEffectivityIsEqual\n          ? 'There is a conflict on the first instance of the selected billing cycle with the contract effectivity date.'\n          : 'The first instance of the pre-generate bill (SOA) days of the selected billing cycle has already past.'\n      : 'The billing cycle has been saved sucessfully.'\n    const text2 = hasConflict\n      ? dateIsEqual || initialDateAndEffectivityIsEqual\n        ? 'Please note that the system will perform the pre-generation of SOA for this account on the next scheduled pre-generation date.'\n        : 'Please note that the system will only perform an immediate bill run for the initial transactions of the account.'\n      : ''\n\n    BillingAnalystServices.updateBillingCycle({\n      clientId: clientInfo._id,\n      data: {\n        id: billingCycleSelected[0]._id,\n        ruleExcludeZero: processingRule,\n        preGenEqualConflict: dateIsEqual,\n        preGenConflict: hasConflict\n      }\n    }).then(res => {\n      setAssign(state => ({ ...state, show: true, title, text, text2 }))\n    })\n  }\n\n  const handleOnCLickCancel = () => {\n    setAssign(state => ({ ...state, show: false }))\n  }\n\n  const handleOnCLickOK = () => {\n    setAssign(state => ({ ...state, show: false }))\n    history.push('/')\n  }\n  console.log(history)\n  const handleOnCLickCancelCycle = () => {\n    if (history.location.hash.replace(/[#/]/g, '') === 'from_modal') {\n      history.push('/#Client-Ledger-Setup')\n    } else {\n      history.push('/')\n    }\n  }\n\n  // this will check if user has an access to this page!\n  // if (ability.can('update', 'set-billing-cycle')) {\n  //   console.log('Has access to this page')\n  // } else {\n    // redirect if has no access\n  //   history.replace('/404')\n  // }\n\n  return (\n    <React.Fragment>\n      <div className={classes.button}>\n        <Button onClick={handleOnCLickCancelCycle} variant='contained' className={classes['button-negative']}>\n          Cancel\n        </Button>\n\n        <Button variant='contained' className={classes['button-positive']} onClick={handleOnClickAssign}>\n          Save\n        </Button>\n        <ConfirmDialog\n          preGenConflict={hasConflict}\n          positive_label={'OK'}\n          negative_label={'Cancel'}\n          assign={assign}\n          setAssign={setAssign}\n          onCancel={handleOnCLickCancel}\n          onOK={handleOnCLickOK}\n        />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default function AnalyzeClientPage (props) {\n  const { clientInfo } = props\n\n  const [selectedBillingCycle, setSelectedBillingCycle] = React.useState('')\n  const [showInfo, setShowInfo] = React.useState(false)\n  const [checkProcessingRule, setCheckProcessingRule] = React.useState(true)\n  const [billingCycles, setBillingCycles] = React.useState([])\n\n  const infoRef = useRef()\n\n  const handleOnChangeBillingCycle = e => {\n    const { value } = e.target.value\n    billingCycleSelected = billingCycles.filter(cycle => cycle.code === e.target.value)\n    const effectivityDate = moment(clientInfo.contract.effectivity).subtract(\n      parseInt(clientInfo.contract.effectivity.substring(11, 13)),\n      'h'\n    )._d\n\n    try {\n      const billingCycleFrequency = billingCycleSelected[0].frequency\n      let possibleInitialDate = moment(effectivityDate).date(billingCycleFrequency.criterias[0].criteria)._d\n      console.log(billingCycleFrequency.name)\n      console.log(new Date(possibleInitialDate).toISOString() < new Date(effectivityDate).toISOString())\n\n      // If the possible initial date is less than the effectivity date, jump to next criteria\n      if (new Date(possibleInitialDate).toISOString() < new Date(effectivityDate).toISOString()) {\n        for (let i = 0; i < billingCycleFrequency.criterias.length; i++) {\n          if (new Date(possibleInitialDate).toISOString() < new Date(effectivityDate).toISOString()) {\n            possibleInitialDate = moment(effectivityDate).date(billingCycleSelected[i].frequency.criterias[0].criteria)\n              ._d\n          }\n        }\n        if (new Date(possibleInitialDate).toISOString() < new Date(effectivityDate).toISOString()) {\n          possibleInitialDate = moment(new Date(possibleInitialDate)).add(1, 'M')._d\n        }\n      }\n      const preGen = moment(new Date(possibleInitialDate).toISOString()).subtract(\n        billingCycleSelected[0].pre_generate_formula.unit,\n        'd'\n      )._d\n\n      console.log(new Date(preGen).toISOString())\n      console.log(new Date(possibleInitialDate).toISOString())\n      console.log(new Date(effectivityDate).toISOString())\n\n      // Conflict if pregenerated date has passed, pregenerated date is equal to effectivity and possible initial date is equal to effectivity of the contract\n      hasConflict =\n        new Date(preGen).toISOString() < new Date(effectivityDate).toISOString() ||\n        new Date(preGen).toISOString() === new Date(effectivityDate).toISOString()\n      // Instance that pregenerated is equal to effectivity of contract\n      dateIsEqual = new Date(preGen).toISOString() === new Date(effectivityDate).toISOString()\n      // Instance if possible initial date is equal to effectivity date of contract\n      initialDateAndEffectivityIsEqual =\n        new Date(possibleInitialDate).toISOString() === new Date(effectivityDate).toISOString()\n      console.log(hasConflict)\n      console.log(dateIsEqual)\n      console.log(initialDateAndEffectivityIsEqual)\n    } catch (error) {\n      console.log('undefined error in selecting billing cycle')\n    }\n\n    try {\n      const ref = infoRef\n      const info = () => {\n        ref.current.innerText = `${billingCycleSelected[0].pre_generate_formula.unit +\n          ' ' +\n          billingCycleSelected[0].pre_generate_formula.period +\n          ' ' +\n          'before bill run schedule'}`\n      }\n      info()\n    } catch (error) {}\n    return setSelectedBillingCycle(value)\n  }\n\n  const handleOnChangeProcessingRule = e => {\n    if (!e.target.checked) setCheckProcessingRule(false)\n    else setCheckProcessingRule(true)\n  }\n\n  const [pagination, setPagination] = React.useState({\n    count: 0,\n    rowsPerPage: 10,\n    page: 0,\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: +event.target.value }))\n    }\n  })\n\n  React.useEffect(() => {\n    BillingAnalystServices.getBillingCycleList()\n      .then(response => {\n        console.log(response)\n        setBillingCycles(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Typography variant='subtitle2' style={{ fontWeight: 'bold' }} className={classes.title}>\n        Select Billing Cycle\n      </Typography>\n      <FormControlLabel\n        className={classes['dropdown-option']}\n        control={<DropDown onChange={handleOnChangeBillingCycle} items={billingCycles} setShowInfo={setShowInfo} />}\n      />\n      <br />\n      {showInfo && (\n        <div className={classes['show-info']}>\n          <div className={classes['content-header-details']}>\n            <Typography\n              id='drawer-premium-percentage-field'\n              style={{ fontWeight: 'bold' }}\n              className={classes.fields}\n              variant='subtitle2'\n            >\n              Pre-generate Bill (SOA)\n            </Typography>\n            <Typography id='drawer-premium-percentage-value' className={classes.values} variant='body2'>\n              <div ref={infoRef}>\n                {billingCycleSelected[0].pre_generate_formula.unit +\n                  ' ' +\n                  billingCycleSelected[0].pre_generate_formula.period +\n                  ' '}\n                before bill run schedule\n              </div>\n            </Typography>\n          </div>\n          <div className={classes['content-header-details']}>\n            <Typography\n              id='drawer-ibnr-percentage-field'\n              style={{ fontWeight: 'bold' }}\n              className={classes.fields}\n              variant='subtitle2'\n            >\n              Bill (SOA) Due Date\n            </Typography>\n            <Typography id='drawer-ibnr-percentage-value' className={classes.values} variant='body2'>\n              after 30 days\n            </Typography>\n          </div>\n        </div>\n      )}\n      <div className={classes['footer-divider']} />\n      <Typography variant='subtitle2' className={classes.title}>\n        Processing Rules\n      </Typography>\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checkProcessingRule}\n            onChange={handleOnChangeProcessingRule}\n            className={checkProcessingRule ? classes.checkbox_option : null}\n            value\n            style={{ color: 'gray', maxWidth: '300px' }}\n            color='default'\n          />\n        }\n        label={\n          <Typography variant='body2' className={classes.title}>\n            Do not include in printing Statement of Accounts (SOA) with zero (0) Total Amount due\n          </Typography>\n        }\n      />\n      <div className={classes['footer-divider']} />\n      <FooterBar\n        clientInfo={clientInfo}\n        billingCycle={selectedBillingCycle}\n        processingRule={checkProcessingRule}\n        className={classes['form-bar']}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\n// Styles\nimport classes from './BillingTermsAndConditionsTab.module.scss'\n\nexport default function BillingTermsAndConditionsTab () {\n  return <div>BILLING TERMS & CONDITIONS</div>\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport moment from 'moment'\n\n// Components\nimport { CurrencyFormatter, DateFormatterByAbbreviation } from 'Utilities/TextFormatter'\nimport CustomPropertyText from '../../Components/CustomPropertyText/CustomPropertyText'\nimport FormDrawer from 'StandardComponents/FormDrawer/FormDrawer'\nimport { CustomTab, CustomTabs } from 'StandardComponents/CustomTabs/CustomTabs'\n\n// Tab Components\nimport BillingAnalystTab from '../../Components/AnalystTab/BillingAnalystTab'\nimport BillingCycleTab from '../../Components/BillingCycleTab/BillingCycleTab'\nimport BillingInstructionsTab from '../../Components/BillingInstructionsTab/BillingInstructionsTab'\nimport BillingTermsAndConditionsTab from '../../Components/BillingTermsAndConditionsTab/BillingTermsAndConditionsTab'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\n\n// CSS\nimport classes from './AnalyzeClientPage.module.scss'\n\nconst ClientInformation = ({ classes, clientInfo, hmoInfo }) => {\n  return (\n    <React.Fragment className={classes.client_details}>\n      {clientInfo && (\n        <React.Fragment>\n          <Typography variant='h6' className={classes.title}>\n            {clientInfo.client.account_name}\n          </Typography>\n\n          <Typography className={classes.title} style={{ fontWeight: 'bold', marginTop: '10px' }}>\n            Basic Information\n          </Typography>\n\n          <CustomPropertyText\n            className={classes.customText}\n            readOnly='true'\n            label='ACCOUNT NO.'\n            value={clientInfo.client.account_number}\n          />\n\n          <CustomPropertyText readOnly='true' label='ACCOUNT STATUS' value={clientInfo.client.account_status} />\n\n          <CustomPropertyText\n            className={classes.customTextComponent}\n            readOnly='true'\n            label='PAYMENT TERM'\n            value={clientInfo.contract.payment_terms}\n          />\n\n          <CustomPropertyText\n            readOnly='true'\n            label='ANNUAL BENEFIT LIMIT'\n            value={'Php ' + CurrencyFormatter(clientInfo.contract.annual_benefit_limit)}\n          />\n\n          <CustomPropertyText\n            className={classes.customTextComponent}\n            readOnly='true'\n            label='CLIENT SEGMENT'\n            value={clientInfo.client.segment}\n          />\n\n          <CustomPropertyText readOnly='true' label='TAX TYPE' value={clientInfo.client.tax_type} />\n\n          <CustomPropertyText readOnly='true' label='ACCOUNT TIN' value={clientInfo.client.tin} />\n\n          <Typography className={classes.title} style={{ fontWeight: 'bold', marginTop: '15px' }}>\n            HMO Information\n          </Typography>\n\n          <CustomPropertyText readOnly='true' label='CONTRACT' value={clientInfo.contract.name} />\n\n          <CustomPropertyText readOnly='true' label='CONTRACT TYPE' value={clientInfo.contract.type} />\n          <CustomPropertyText\n            readOnly='true'\n            label='EFFECTIVITY DATE'\n            value={DateFormatterByAbbreviation(\n              new Date(\n                moment(clientInfo.contract.effectivity).subtract(\n                  parseInt(clientInfo.contract.effectivity.substring(11, 13)),\n                  'h'\n                )\n              )\n            )}\n          />\n          <CustomPropertyText\n            readOnly='true'\n            label='EXPIRATION DATE'\n            value={DateFormatterByAbbreviation(\n              new Date(\n                moment(clientInfo.contract.expiration).subtract(\n                  parseInt(clientInfo.contract.expiration.substring(11, 13)),\n                  'h'\n                )\n              )\n            )}\n          />\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst ActionTabs = props => {\n  const { clientInfo } = props\n\n  return (\n    // TODO permissions (if necessary) and Tab Components\n    <CustomTabs defaultIndex={1}>\n      <CustomTab id='billing-analyst-tab' label='BILLING ANALYST'>\n        <BillingAnalystTab />\n      </CustomTab>\n      <CustomTab id='billing-cycle-tab' label='BILLING CYCLE'>\n        <BillingCycleTab clientInfo={clientInfo} />\n      </CustomTab>\n      <CustomTab id='billing-instructions-tab' label='BILLING INSTRUCTIONS'>\n        <BillingInstructionsTab />\n      </CustomTab>\n      <CustomTab id='billing-ternms-and-conditions-tab' label='BILLING TERMS & CONDITIONS'>\n        <BillingTermsAndConditionsTab />\n      </CustomTab>\n    </CustomTabs>\n  )\n}\n\nexport default function AnalyzeClientPage (props) {\n  const [users, setUsers] = React.useState({})\n\n  const [clientContract, setClientContract] = React.useState({ data: 0 })\n\n  const [pagination, setPagination] = React.useState({\n    count: 0,\n    rowsPerPage: 10,\n    page: 0,\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: +event.target.value }))\n    }\n  })\n\n  React.useEffect(() => {\n    const { _id } = props.match.params\n    PageTitleService('Setup Billing Cycle')\n    // BreadcrumbsService.setSelectedItems(['dashboard', 'clientSetup', 'clientBillingCycle'])\n\n    /* Client Info */\n    Promise.all([BillingSupervisorServices.getClientLedgerToSetup({ _id })]).then(values => {\n      const client_contract = values[0].data.data\n\n      setClientContract(prevState => ({\n        ...prevState,\n        data: client_contract\n      }))\n    })\n\n    /* Table */\n    Promise.all([\n      // BillingSupervisorServices.getClientConfig({\n      //   sort: 'effectivity_date'\n      // })\n      BillingSupervisorServices.getUsersByRole('BILLING_ANALYST')\n    ]).then(values => {\n      const userData = values[0].data.data[0]\n      // const page = clients.data.data.page\n      const page = 3\n      setUsers(prevState => ({\n        ...prevState,\n        data: userData\n      }))\n      setPagination(prevState => ({\n        ...prevState,\n        count: userData.length,\n        rowsPerPage: 10,\n        page: page - 1\n      }))\n    })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <FormDrawer\n        permanent\n        drawerWidth='500'\n        drawerContent={<ClientInformation clientInfo={clientContract.data} classes={classes} />}\n      >\n        <FormGroup className={classes.form_right}>\n          <ActionTabs clientInfo={clientContract.data} />\n          <div className={classes.form_divider} />\n        </FormGroup>\n      </FormDrawer>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n// import Button from '@material-ui/core/Button'\n\nimport { DateFormatter } from 'Utilities/TextFormatter'\nimport CustomTextField from 'SharedComponents/TextField/CustomTextField'\nimport IconButton from '@material-ui/core/IconButton'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Button from '@material-ui/core/Button'\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport ViewList from '../../Components/ViewList/ViewList'\n\nimport TableFooterComponent from 'SharedComponents/TableFooterComponent/TableFooterComponent'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\n\n// CSS\nimport classes from './ClientTransactionSetupPage.module.scss'\n\nconst useStyles = makeStyles(theme => ({\n  searchAndAddContainer: {\n    padding: '0 0 10px 0',\n    minWidth: '1060px',\n\n    addButton: {\n      width: 200\n    }\n  },\n\n  table: {\n    minWidth: '640px'\n  },\n\n  tableCaption: {\n    minWidth: '200px'\n  }\n}))\n\nconst search_classes = useStyles\n\nconst headCells = [\n  {\n    id: 'corporate_id',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Corporate Account ID'\n  },\n  {\n    id: 'corporate_name',\n    numeric: false,\n    center: false,\n    disablePadding: false,\n    label: 'Corporate Account Name'\n  },\n  {\n    id: 'plan_type',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Plan Type'\n  },\n  {\n    id: 'effectivity_date',\n    numeric: false,\n    center: true,\n    disablePadding: false,\n    label: 'Effectivity Date'\n  }\n]\n\nexport default function ClientTransactionSetupPage (props) {\n  // const [] = React.useState(null)\n  const [clients, setClients] = React.useState({\n    config: { data: [], metadata: String }\n  })\n\n  const [pagination, setPagination] = React.useState({\n    count: 0,\n    rowsPerPage: 10,\n    page: 0,\n    onChangePage: (event, newPage) => {\n      setPagination(state => ({ ...state, page: newPage }))\n    },\n    onChangeRowsPerPage: event => {\n      setPagination(state => ({ ...state, rowsPerPage: +event.target.value }))\n    }\n  })\n\n  React.useEffect(() => {\n    const { corporate_id } = props.match.params\n    const current_user_id = JSON.parse(localStorage.getItem('me'))._id\n    console.log({ corporate_id })\n    PageTitleService(`List of Client Transaction Ledgers to Setup`)\n    BreadcrumbsService.setSelectedItems(['dashboard', 'clients', 'ledger'])\n\n    // setBundleNumber(bundle_number)\n    // PaymentRequestServices.getPaymentRequest({ bundle_number }).then(\n    //   ({ data: res }) => {\n    //     const { data } = res\n    //     setBundle(data)\n    //     getBatches({ bundle_number, bundle: data })\n    //   }\n    // )\n\n    // const sort = '{effectivity_date: -1}'\n\n    Promise.all([\n      BillingSupervisorServices.getClientConfig({\n        sort: {\n          field: 'effectivity_date',\n          direction: '-1'\n        }\n      })\n      // PaymentRequestServices.getClaims({\n      //   category: 'payment-request',\n      //   range: 'this-week',\n      //   sort: 'claim.date.due'g\n      // }),\n      // PaymentRequestServices.getClaimCount({ category: 'payment-request' })\n    ]).then(values => {\n      const [clients] = values\n      const clientData = clients.data.data.results\n\n      const page = clients.data.data.page\n      setClients(prevState => ({\n        ...prevState,\n        config: {\n          data: clientData,\n          metadata: page\n        }\n      }))\n      setPagination(prevState => ({\n        ...prevState,\n        count: clientData.length,\n        rowsPerPage: 10,\n        page: page - 1\n      }))\n    })\n  }, [])\n\n  console.log(clients)\n  const clientList = clients.config.data\n\n  const SearchAndAdd = ({ classes }) => {\n    console.log(classes)\n    return (\n      <Grid item container className={classes.searchBar} alignItems='center' wrap='nowrap'>\n        <Grid item xs={12}>\n          <SearchTextComponent />\n        </Grid>\n\n        <Grid item container className={classes.addButton} justify='flex-end'>\n          <Link to='/' color='primary' size='medium'>\n            <IconButton>\n              <Typography className='text-link underline'>Display Settings</Typography>\n            </IconButton>\n            {/* <Button color='primary' size='medium'>\n              <Typography variant='caption' className='text-link underline'>\n                Display Settings\n              </Typography>\n            </Button> */}\n          </Link>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  const ClientTable = ({ clientList }) => {\n    return (\n      <Paper className='table'>\n        <Table className={classes.table} aria-label='caption pagination table'>\n          <TableHead>\n            <TableRow>\n              <TableCell>{headCells[0].label}</TableCell>\n              <TableCell>{headCells[1].label}</TableCell>\n              <TableCell>{headCells[2].label}</TableCell>\n              <TableCell>{headCells[3].label}</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {clientList.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell>{item.corporate_id}</TableCell>\n                <TableCell>{item.corporate_name}</TableCell>\n                {item.contract ? <TableCell>{item.contract.plan_type}</TableCell> : ''}\n                {item.contract ? <TableCell>{DateFormatter(item.contract.effectivity, 'MMM DD, YYYY')}</TableCell> : ''}\n                <Typography>\n                  <Link to={`/clients/assign/${item.corporate_id}`}>\n                    <Typography variant='caption' className='text-link underline'>\n                      Setup\n                    </Typography>\n                  </Link>\n                </Typography>\n              </TableRow>\n            ))}\n            {/* <Alert\n                open={openDialog}\n                message='Are you sure you want to delete this batch?'\n                cancelLabel='No'\n                okLabel='Yes'\n                onCancel={onCancel}\n                onOk={onDelete}\n              />\n              <Alert\n                open={openError}\n                message='Delete Error: This Batch has existing claim records'\n                cancelLabel='Ok'\n                onCancel={onCancel}\n              /> */}\n          </TableBody>\n        </Table>\n        {pagination ? (\n          <caption className={classes.table_caption}>\n            1 - {pagination.count} out of{' '}\n            {pagination.count > pagination.rowsPerPage ? pagination.rowsPerPage : pagination.count} Client Ledgers to\n            Setup\n          </caption>\n        ) : (\n          ''\n        )}\n        {pagination ? (\n          <TablePagination\n            className={classes.table_pagination}\n            rowsPerPageOptions={[10, 15, 20]}\n            component='div'\n            {...pagination}\n          />\n        ) : (\n          ''\n        )}\n        {/* <TableFooterComponent itemsLength={clients.length} fetching /> */}\n      </Paper>\n    )\n  }\n\n  const search_style = useStyles()\n\n  return (\n    <React.Fragment>\n      <SearchAndAdd classes={classes.searchBar} />\n      <ClientTable clientList={clientList} pagination={pagination} />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\n\nimport classes from './HeaderDetails.module.scss'\n\nexport default function HeaderDetails (props) {\n  const { children } = props\n\n  return (\n    <div>\n      <Paper className={classes['header-wrapper']}>\n        <div className={classes['header-details']}>{children}</div>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport classes from './ContentPage.module.scss'\n\nexport default function ContentPage (props) {\n  const { open, children } = props\n  return <div className={`${classes.root} ${open ? classes['content-shift'] : ''}`}>{children}</div>\n}\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretSquareLeft, faCaretSquareDown } from '@fortawesome/free-regular-svg-icons'\n\nimport ContentPage from '../ContentPage/ContentPage'\n\nconst drawerWidth = 300\nconst useStyles = makeStyles(theme => ({\n  drawerWrapper: {\n    display: 'flex'\n  },\n  menuButton: {\n    backgroundColor: '#F5F7FB',\n    color: '#9ea3ac'\n  },\n  iconWrapper: {\n    padding: '0px',\n    marginRight: '10px',\n    marginTop: '-20px',\n    color: '#9ea3ac !important'\n  },\n  hide: {\n    display: 'none',\n    color: '#9ea3ac'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    height: 'auto'\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative',\n    zIndex: 1\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    backgroundColor: '#F5F7FB',\n    padding: '0px'\n  },\n  drawerHeaderContent: {\n    padding: '0px',\n    flex: 1\n  },\n  drawerContentContainer: {\n    flexGrow: 1,\n    backgroundColor: '#F5F7FB'\n  }\n}))\n\nexport default function FormDrawer (props) {\n  const { children, drawerContent, drawerHeaderContent, drawerHeight } = props\n\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.drawerWrapper}>\n      <CssBaseline />\n      <div>\n        <IconButton\n          color='inherit'\n          aria-label='open drawer'\n          onClick={handleDrawerOpen}\n          edge='start'\n          className={`${classes.menuButton} && ${open ? classes.hide : ''}`}\n        >\n          <FontAwesomeIcon icon={faCaretSquareDown} />\n        </IconButton>\n      </div>\n      <Drawer\n        className={classes.drawer}\n        variant='persistent'\n        anchor='left'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n        style={{ height: `${drawerHeight || 'auto'}` }}\n      >\n        <div className={classes.drawerHeader}>\n          <div className={classes.drawerHeaderContent}>{drawerHeaderContent}</div>\n          <div className={classes.drawerHeaderColseButton}>\n            <IconButton id='drawer-arrow-icon-button' className={classes.menuButton} onClick={handleDrawerClose}>\n              <FontAwesomeIcon icon={faCaretSquareLeft} />\n            </IconButton>\n          </div>\n        </div>\n        <div className={classes.drawerContentContainer}>{drawerContent}</div>\n      </Drawer>\n      <ContentPage open={open}>{children}</ContentPage>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Typography } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport ReplyIcon from '@material-ui/icons/Reply'\n\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport * as moment from 'moment'\n\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport HeaderDetails from '../../Components/HeaderDetails/HeaderDetails'\nimport FormDrawer from '../../Components/FormDrawer/FormDrawer'\nimport ContentHeader from 'StandardComponents/ContentHeader/ContentHeader'\nimport CustomEnhancedTable from '../../Components/CustomEnhancedTable/CustomEnhancedTable'\n\nimport BillingClientInvoicesServices from 'Services/Api/BillingClientInvoicesServices'\n\nimport classes from './InvoiceApprovedPage.module.scss'\n\nconst tableHeaders = [\n  {\n    id: 'approved-invoice-transaction-type',\n    numeric: false,\n    disablePadding: false,\n    label: 'Billing Code & Type *',\n    center: false\n  },\n  {\n    id: 'approved-invoice-member-account-id',\n    numeric: false,\n    disablePadding: false,\n    label: 'Member Account ID'\n  },\n  {\n    id: 'approved-invoice-member-name',\n    numeric: false,\n    disablePadding: false,\n    label: 'Member Name'\n  },\n  {\n    id: 'approved-invoice-description',\n    numeric: false,\n    disablePadding: false,\n    label: 'Description *'\n  },\n  {\n    id: 'approved-invoice-tax-type',\n    numeric: false,\n    disablePadding: false,\n    label: 'Taxable Amount *'\n  },\n  {\n    id: 'approved-invoice-amount',\n    numeric: false,\n    disablePadding: false,\n    label: 'Tax Amount'\n  }\n]\n\nexport default function InvoicePage (props) {\n  PageTitleService()\n  const { transaction_number } = props.match.params\n  const [totalTaxAmount, setTotalTaxAmount] = React.useState(0)\n  const [approvedInvoice, setApprovedInvoice] = React.useState({\n    data: {}\n  })\n\n  const [invoiceDetail, setInvoiceDetail] = React.useState({})\n\n  React.useEffect(() => {\n    Promise.all([BillingClientInvoicesServices.getTobeRevisedInvoice({ transaction_number })]).then(value => {\n      const [invoice] = value\n      setApprovedInvoice(prevState => ({\n        ...prevState,\n        data: invoice.data.data\n      }))\n    })\n\n    // TODO API CALL FOR CURRENT INVOICE TRANSACTIONS\n    Promise.all([BillingClientInvoicesServices.getInvoiceDetails({ transaction_number })]).then(value => {\n      const [detail] = value\n      setInvoiceDetail(prevState => ({\n        ...prevState,\n        data: detail.data.data\n      }))\n    })\n  }, [])\n\n  const transactionInfo = approvedInvoice.data\n  const clientInfo = approvedInvoice.data.client\n  const billingInfo = approvedInvoice.data.billing\n  const contractInfo = approvedInvoice.data.contract\n  const summaryInfo = approvedInvoice.data.summary\n  const dateInfo = approvedInvoice.data.date\n  const invoiceInfo = invoiceDetail.data\n\n  return (\n    <div className={classes.root}>\n      <HeaderDetails>\n        <Typography id='header-details-corporate-name' variant='h5'>\n          {clientInfo && clientInfo.account_name} - Invoice\n        </Typography>\n        <Typography id='header-details-account-number' color='textSecondary'>\n          ACCOUNT NUMBER {clientInfo && clientInfo.account_number}\n        </Typography>\n      </HeaderDetails>\n      <FormDrawer\n        drawerHeight={'580px'}\n        drawerContent={\n          <div>\n            <Typography variant='h6'>{clientInfo && clientInfo.account_name}</Typography>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-number-field' color='textSecondary'>\n                ACCOUNT NO.\n              </Typography>\n              <Typography id='drawer-account-number-value'>{clientInfo && clientInfo.account_number}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-status-field' color='textSecondary'>\n                ACCOUNT STATUS\n              </Typography>\n              <Typography id='drawer-account-status-value'>{clientInfo && clientInfo.account_status}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-tax-type-field' color='textSecondary'>\n                TAX TYPE\n              </Typography>\n              <Typography id='drawer-tax-type-value'>{clientInfo && clientInfo.tax_type}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-billing-cyle-field' color='textSecondary'>\n                BILLING CYCLE\n              </Typography>\n              <Typography id='drawer-billing-cyle-value'>\n                {billingInfo && billingInfo.cycle.code + ' ' + billingInfo.cycle.name}\n              </Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-corporate-tin-field' color='textSecondary'>\n                ACCOUNT TIN\n              </Typography>\n              <Typography id='drawer-corporate-tin-value'>{clientInfo && clientInfo.tin}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-payment-term-field' color='textSecondary'>\n                PAYMENT TERM\n              </Typography>\n              <Typography id='drawer-payment-term-value'>{contractInfo && contractInfo.payment_term}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-contract-plan-type-field' color='textSecondary'>\n                CONTRACT PLAN TYPE\n              </Typography>\n              <Typography id='drawer-contract-plan-type-value'>{contractInfo && contractInfo.type}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-effectivity-date-field' color='textSecondary'>\n                EFFECTIVITY DATE\n              </Typography>\n              <Typography id='drawer-effectivity-date-value'>\n                {moment(contractInfo && contractInfo.effectivity).format('MMM, DD, YYYY')}\n              </Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-expiration-date-field' color='textSecondary'>\n                EXPIRATION DATE\n              </Typography>\n              <Typography id='drawer-expiration-date-value'>\n                {moment(contractInfo && contractInfo.expiration).format('MMM, DD, YYYY')}\n              </Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-location-field' color='textSecondary'>\n                LOCATION\n              </Typography>\n              <Typography id='drawer-location-value'>{clientInfo && clientInfo.location}</Typography>\n            </div>\n          </div>\n        }\n      >\n        <div className={classes['export-view-billing-cycle-wrapper']}>\n          <div className={classes['export-view-content']}>\n            <ReplyIcon id='export-icon' className={classes['export-icon']} />\n            <Link id='export-link' to={`/`} className={classes['export-link']}>\n              Export\n            </Link>\n            <VisibilityIcon id='view-billing-icon' className={classes['view-icon']} />\n            <Link id='view-billing-link' to={`/`} className={classes['view-link']}>\n              View Billing Cycle\n            </Link>\n          </div>\n        </div>\n        <ContentHeader\n          summaryFields={['Total Taxable Amount', 'Total Tax (VAT) Amount', 'Total Amount']}\n          summaryValues={[\n            summaryInfo && summaryInfo.sub_total,\n            summaryInfo && summaryInfo.tax_amount,\n            summaryInfo && summaryInfo.sub_total + summaryInfo.tax_amount\n          ]}\n        >\n          <div className={classes['content-header-details']}>\n            <div className={classes.fields}>\n              <Typography id='content-details-invoice-number-field' variant='h6' color='textSecondary'>\n                INVOICE NO.\n              </Typography>\n              <Typography id='content-details-trasaction-date-field' color='textSecondary'>\n                TRANSACTION DATE\n              </Typography>\n              <Typography id='content-details-trasaction-date-field' color='textSecondary'>\n                PERIOD COVERED\n              </Typography>\n              <Typography id='content-details-ticket-number-field' color='textSecondary'>\n                TICKET NO\n              </Typography>\n              {transactionInfo.soa_number && (\n                <Typography id='content-details-soa-number-field' color='textSecondary'>\n                  SOA NO\n                </Typography>\n              )}\n            </div>\n            <div className={classes.values}>\n              <Typography id='content-details-invoice-number-value' variant='h6'>\n                {transaction_number}\n              </Typography>\n              <Typography id='content-details-trasaction-date-value'>\n                {moment(transactionInfo.transaction && transactionInfo.transaction.date).format('MMM DD, YYYY')}\n              </Typography>\n              <Typography\n                id='content-details-trasaction-date-value'\n                style={{ width: '100px', 'white-space': 'nowrap', overflow: 'visible' }}\n              >\n                {moment(transactionInfo.transaction && transactionInfo.transaction.period.start).format(\n                  'MMM, DD, YYYY'\n                )}{' '}\n                -{' '}\n                {moment(transactionInfo.transaction && transactionInfo.transaction.period.end).format('MMM, DD, YYYY')}\n              </Typography>\n              <Typography id='content-details-ticket-number-value' style={{ width: '100px' }}>\n                {transactionInfo && transactionInfo.case_number}\n              </Typography>\n              {transactionInfo.soa_number && (\n                <Typography id='content-details-soa-number-value' style={{ width: '100px' }}>\n                  {transactionInfo.soa_number}\n                </Typography>\n              )}\n            </div>\n            <div className={classes.status}>\n              <Typography id='content-details-status' style={{ fontSize: '14px', marginTop: '8px', fontWeight: '500' }}>\n                APPROVED\n              </Typography>\n            </div>\n          </div>\n        </ContentHeader>\n        <CustomEnhancedTable className={classes.table} tableHeaders={tableHeaders} tableHeight={'350px'}>\n          <TableBody>\n            {console.log(invoiceInfo)}\n            {console.log(clientInfo)}\n            {invoiceInfo &&\n              invoiceInfo.map((detail, detailIndex) => (\n                <TableRow hover tabIndex={-1} key={detailIndex}>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='left'\n                  >\n                    {detail.billingCodeType}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='left'\n                  >\n                    {detail.memberAccountId}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='left'\n                  >\n                    {detail.memberName}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='left'\n                  >\n                    {detail.description}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='left'\n                  >\n                    {CurrencyFormatter(detail.taxableAmount)}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='left'\n                  >\n                    {CurrencyFormatter(detail.taxAmount)}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </CustomEnhancedTable>\n        <div className={classes['button-wrapper']}>\n          <div className={classes.button}>\n            <Link id='close-link' to={`/`} style={{ textDecoration: 'none' }}>\n              <Button id='close-button' variant='contained' className={classes['close-button']}>\n                Close\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </FormDrawer>\n    </div>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\n\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n// import ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport useAutocomplete from '@material-ui/lab/useAutocomplete'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormControl from '@material-ui/core/FormControl'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircle, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport classes from './EnhancedSearchComponent.module.scss'\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    display: 'block'\n  },\n  input: {\n    width: 100\n  },\n  listbox: {\n    marginTop: '40px',\n    width: '190px',\n    margin: 0,\n    marginLeft: '-10px',\n    padding: 0,\n    zIndex: 1,\n    position: 'absolute',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 400,\n    '& li:active': {\n      // backgroundColor: '#2977f5',\n      color: 'white'\n    }\n  }\n}))\n\nconst StyledMenu = withStyles({\n  paper: {\n    marginTop: '5px'\n    // borderTop: '0.5px solid rgba(0, 0, 0, 0.54)'\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'left'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'left'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    padding: '15px 20px 15px 20px',\n    '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n      top: '289px',\n      color: 'rgba(0, 0, 0, 0.54)',\n      fontSize: '15px'\n    }\n  }\n}))(MenuItem)\n\nconst clientInfo = [\n  { client_info_no: '95-987-6530', name: 'Happy Innovative, Inc', date: 'Feb 05, 2019 to Feb 05, 2020' },\n  { client_info_no: '94-987-6599', name: 'Diane Lee Fashion', date: 'Jan 01, 2019 to Dec 31, 2019' }\n]\n\nexport default function EnhancedSearchComponent (props) {\n  const { id, onChange, placeholder = '', width, children, menuItems } = props\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [currentSelected, setCurrentSelected] = React.useState('Member')\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions\n  } = useAutocomplete({\n    id: 'search-input',\n    options: clientInfo,\n    getOptionLabel: option => option.client_info_no\n  })\n\n  const autoCompClasses = useStyles()\n\n  return (\n    <div>\n      <Paper id='enhanced-search-component-wrapper' style={{ width: width }} className={classes.root}>\n        <div>\n          <Button\n            id='drop-down-button'\n            className={classes['menu-button']}\n            aria-controls='customized-menu'\n            aria-haspopup='true'\n            onClick={handleClick}\n            style={{ marginRight: '10px', borderRadius: '0px', width: '100px', textAlign: 'left' }}\n            endIcon={<FontAwesomeIcon style={{ fontSize: '20px', marginBottom: '-3px' }} icon={faAngleDown} />}\n          >\n            {currentSelected}\n          </Button>\n          <StyledMenu\n            id='drop-down-items'\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <StyledMenuItem\n              id='drop-down-item-1'\n              onClick={e => {\n                setCurrentSelected('Member')\n                setAnchorEl(null)\n              }}\n            >\n              <ListItemText id='drop-down-item-1-label'>Member</ListItemText>\n            </StyledMenuItem>\n            <StyledMenuItem\n              id='drop-down-item-2'\n              onClick={e => {\n                setCurrentSelected('Client')\n                setAnchorEl(null)\n              }}\n            >\n              <ListItemText id='drop-down-item-2-label'>Client</ListItemText>\n            </StyledMenuItem>\n          </StyledMenu>\n        </div>\n        <FormControl\n          id='search-input-wrapper'\n          className={clsx(classes.margin, classes.withoutLabel, classes.textField)}\n        >\n          <InputBase\n            id='search-input'\n            // endAdornment={\n            //   <InputAdornment position='end'>\n            //     <IconButton\n            //       style={{ display: 'inline-block', padding: 0, minHeight: 0, minWidth: 0 }}\n            //       aria-label='toggle password visibility'\n            //     >\n            //       <SearchIcon />\n            //       <span style={{ fontSize: '14px' }}>Search</span>\n            //     </IconButton>\n            //   </InputAdornment>\n            // }\n            aria-describedby='standard-weight-helper-text'\n            inputProps={{\n              'aria-label': 'weight'\n            }}\n            className={autoCompClasses.input}\n            {...getInputProps()}\n          />\n          {groupedOptions.length > 0 ? (\n            <ul className={autoCompClasses.listbox} {...getListboxProps()}>\n              {groupedOptions.map((option, index) => (\n                <li id={`autocomplete-item-${index}`} {...getOptionProps({ option, index })}>\n                  <div\n                    style={{\n                      height: '80px',\n                      borderBottom: '0.5px solid rgba(0, 0, 0, 0.54)',\n                      padding: '15px',\n                      fontSize: '12px'\n                    }}\n                  >\n                    <div>\n                      <FontAwesomeIcon\n                        style={{ float: 'left', color: ' #0d5e40', margin: '0px 18px -10px 0px' }}\n                        icon={faCircle}\n                      />\n                    </div>\n                    {option.client_info_no}\n                    <div>{option.name}</div>\n                    <div>{option.date}</div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </FormControl>\n        <IconButton\n          id='search-button'\n          style={{ display: 'inline-block', padding: 0, minHeight: 0, minWidth: 0 }}\n          aria-label='toggle password visibility'\n        >\n          <SearchIcon id='search-icon' />\n          <span id='search-label' style={{ fontSize: '14px' }}>\n            Search\n          </span>\n        </IconButton>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\n\nimport Button from '@material-ui/core/Button'\n\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport FormDrawer from '../../Components/FormDrawer/FormDrawer'\nimport HeaderDetails from '../../Components/HeaderDetails/HeaderDetails'\nimport EnhancedSearchComponent from '../../Components/EnhancedSearchComponent/EnhancedSearchComponent'\n\nimport classes from './CreateTransactionPage.module.scss'\n\nexport default function (props) {\n  PageTitleService()\n  BreadcrumbsService.setSelectedItems(['dashboard', 'createTransaction'])\n\n  return (\n    <div>\n      <HeaderDetails>\n        <Typography id='header-details-create-transaction' variant='h5'>\n          Create Transaction\n        </Typography>\n      </HeaderDetails>\n      <FormDrawer\n        drawerHeight={'595px'}\n        drawerHeaderContent={\n          <div>\n            <Typography id='drawer-header-search'>SEARCH ID</Typography>\n          </div>\n        }\n        drawerContent={\n          <div>\n            <EnhancedSearchComponent width={'290px'} />\n            <Link\n              id='advanced-search-link'\n              className={classes['advanced-search-link']}\n              to='/'\n              color='primary'\n              size='medium'\n            >\n              Advanced Search\n            </Link>\n          </div>\n        }\n      >\n        <div className={classes['button-wrapper']}>\n          <div className={classes.button}>\n            <Link id='cancel-link' to={`/`} className={classes['cancel-link']}>\n              <Button id='cancel-button' variant='contained' className={classes['cancel-button']}>\n                Cancel\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </FormDrawer>\n\n      {/* <div className={classes['button-wrapper']}>\n        <div className={classes.button}>\n          <Link id='close-link' to={`/`} className={classes['close-link']}>\n            <Button id='close-button' variant='contained' className={classes['close-button']}>\n              Close\n            </Button>\n          </Link>\n        </div>\n      </div> */}\n    </div>\n  )\n}\n","import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Icon from '@material-ui/core/Icon'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SvgMore from '@material-ui/icons/ExpandMore'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { Exposure } from '@material-ui/icons'\nimport { ArrowForwardIos } from '@material-ui/icons'\n\nimport CustomSearchTextComponent from '../../Pages/Protected/BillingAndCollection/Components/CustomSearchTextComponent/CustomSearchTextComponent'\n\nconst classes = './TreeViewTable.module.scss'\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     width: '100%',\n//     marginTop: theme.spacing(3)\n//   },\n//   paper: {\n//     width: '100%',\n//     marginBottom: theme.spacing(2)\n//   },\n//   table: {\n//     minWidth: 750\n//   },\n//   analystTable: {\n//     minWidth: 650\n//   },\n//   tableWrapper: {\n//     overflowX: 'hidden'\n//   },\n//   visuallyHidden: {\n//     border: 0,\n//     clip: 'rect(0 0 0 0)',\n//     height: 1,\n//     margin: -1,\n//     overflow: 'hidden',\n//     padding: 0,\n//     position: 'absolute',\n//     top: 20,\n//     width: 1\n//   }\n// }))\n\nexport default function TreeViewTable (props) {\n  const {\n    headCells,\n    children,\n    handleRequestSort,\n    handleCollapseEvent,\n    order,\n    orderBy,\n    pagination,\n    sorter,\n    isViewTree,\n    actionText,\n    actionTo\n  } = props\n\n  React.useEffect(() => {}, [])\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper}>\n        <Table size='small' aria-label='a dense table'>\n          <TableHead className={classes.headerbar}>\n            <TableRow>\n              {isViewTree ? (\n                <TableCell>\n                  <IconButton onClick={handleCollapseEvent}>\n                    <Exposure className={classes.sidescroll_button} />\n                  </IconButton>\n                </TableCell>\n              ) : (\n                ''\n              )}\n              {headCells.map(headCell => (\n                <TableCell\n                  key={headCell.id}\n                  sortDirection={orderBy === headCell.id ? order : false}\n                  width={headCell.width}\n                  className={classes.headerCell}\n                  // align={headCell.center ? 'center' : headCell.numeric ? 'right' : 'left'}\n                  // padding={headCell.disablePadding ? 'none' : 'default'}\n                >\n                  {sorter ? (\n                    <TableSortLabel\n                      active={orderBy === headCell.id}\n                      direction={order}\n                      onClick={event => handleRequestSort(event, headCell.id)}\n                    >\n                      {headCell.label}\n                      {orderBy === headCell.id ? (\n                        <span>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\n                      ) : null}\n                    </TableSortLabel>\n                  ) : headCell.label === '>' ? (\n                    <IconButton onClick={handleCollapseEvent}>\n                      <ArrowForwardIos />\n                    </IconButton>\n                  ) : (\n                    headCell.label\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          {children}\n        </Table>\n        {pagination && <TablePagination rowsPerPageOptions={[5, 10, 25]} component='div' {...pagination} />}\n        {/* pagination && (<TablePagination rowsPerPageOptions={[5, 10, 25]} component='div' {...pagination} />) */}\n      </TableContainer>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Collapse from '@material-ui/core/Collapse'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded'\n\nimport classes from './TreeViewTable.module.scss'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { CurrencyFormatter, DateFormatterByAbbreviation } from 'Utilities/TextFormatter'\n\nexport default function CollapsibleRow (props) {\n  const {\n    index,\n    id,\n    data,\n    objectKey,\n    tableColumnOrder,\n    subColumnOrder,\n    offset,\n    collapseAllState,\n    collapseFunction,\n    actionText,\n    actionTo,\n    param\n  } = props\n\n  const [collapse, setCollapse] = React.useState(collapseAllState)\n  const [iconImage, setIconImage] = React.useState(null)\n  const add_icon = 'plus-square'\n  const remove_icon = 'minus-square'\n\n  const handleTableCollapse = () => {\n    if (collapseAllState) {\n      if (collapse) {\n        setCollapse(collapseAllState)\n        setIconImage(remove_icon)\n      } else {\n        setIconImage(add_icon)\n        // setCollapse(!collapse)\n      }\n    } else {\n      if (collapse) {\n        setCollapse(collapseAllState)\n        setIconImage(add_icon)\n      } else {\n        setCollapse(!collapse)\n        setIconImage(remove_icon)\n      }\n    }\n    collapseFunction(collapse)\n    console.log(' set: to', collapse)\n  }\n\n  const offsetCells = []\n  for (var i = 0; i < offset; i++) {\n    offsetCells.push(<TableCell colspan='1' />)\n  }\n\n  React.useEffect(() => {\n    setCollapse(collapseAllState)\n    setIconImage(add_icon)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <TableRow key={index}>\n        <TableCell id={`button-${id}`} className={classes.collapse_button}>\n          <IconButton onClick={handleTableCollapse}>\n            <FontAwesomeIcon icon={iconImage} />\n          </IconButton>\n        </TableCell>\n        {tableColumnOrder.map((rowItem, rowIndex) => (\n          <TableCell id={rowIndex} className={classes.cell}>\n            {moment(data[rowItem], moment.ISO_8601).isValid()\n              ? DateFormatterByAbbreviation(data[rowItem])\n              : data[rowItem]}\n          </TableCell>\n        ))}\n        <TableCell>\n          <Link\n            id={`link-table-${index}`}\n            to={param == null ? actionTo : actionTo.concat('/', data[param])}\n            style={{ textDecoration: 'none' }}\n          >\n            {actionText}\n          </Link>\n        </TableCell>\n      </TableRow>\n      {/* <Collapse in={collapse.show} className={classes.collapse}> */}\n      {(collapseAllState || collapse) &&\n        data[objectKey].map((subItem, subIndex) => (\n          <TableRow key={index}>\n            {subColumnOrder.map((colItem, colindex) =>\n              subColumnOrder === '' ? (\n                <TableCell />\n              ) : (\n                <TableCell className={classes.cell}>\n                  {moment(subItem[colItem], moment.ISO_8601).isValid()\n                    ? DateFormatterByAbbreviation(subItem[colItem])\n                    : subItem[colItem]}\n                </TableCell>\n              )\n            )}\n            {actionTo && (\n              <TableCell className={classes.cell}>\n                <Link\n                  color='primary'\n                  id={`link-table-sub-${index}`}\n                  to={param == null ? actionTo : actionTo.concat('/', data[param])}\n                  className={classes.link}\n                >\n                  {actionText}\n                </Link>\n              </TableCell>\n            )}\n          </TableRow>\n        ))}\n      {/* </Collapse> */}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport Collapse from '@material-ui/core/Collapse'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded'\n\nimport classes from './TreeViewTable.module.scss'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { CurrencyFormatter, DateFormatterByAbbreviation } from 'Utilities/TextFormatter'\n\nexport default function NormalRow (props) {\n  const { index, table_columns, data, id, to, param, actionTo, style } = props\n\n  return (\n    <React.Fragment>\n      <TableRow key={index}>\n        <TableCell id={`account-id-${index}`} />\n        {table_columns.map((column, iteration) => (\n          <TableCell className={classes.cell}>\n            {moment(data[column], moment.ISO_8601).isValid() ? DateFormatterByAbbreviation(data[column]) : data[column]}\n          </TableCell>\n        ))}\n        <TableCell className={classes.cell}>\n          <Link id to={param == null ? actionTo : actionTo.concat('/', data[param])} style={style}>\n            View\n          </Link>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\n// import Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter, DateFormatterByAbbreviation } from 'Utilities/TextFormatter'\nimport { EllipsisFormatter } from 'Utilities/TextLengthFormatter'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TreeViewTable from 'StandardComponents/TreeViewTable/TreeViewTable'\nimport CollapsibleRow from 'StandardComponents/TreeViewTable/CollapsibleRow'\nimport NormalRow from 'StandardComponents/TreeViewTable/NormalRow'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport RadioButton from '@material-ui/core/Radio/Radio'\nimport Divider from '@material-ui/core/Divider/Divider'\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded'\nimport ReplyIcon from '@material-ui/icons/Reply'\n\nimport ViewMore from '../../Components/ViewMore/ViewMore'\nimport ConfirmDialog from '../../Components/ConfirmDialog/ConfirmDialog'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SvgMore from '@material-ui/icons/ExpandMore'\n\nimport SearchTextComponent from 'SharedComponents/SearchTextComponent/SearchTextComponent'\nimport TableFooterComponent from 'SharedComponents/TableFooterComponent/TableFooterComponent'\nimport CustomPropertyText from '../../Components/CustomPropertyText/CustomPropertyText'\n\nimport FormDrawer from 'StandardComponents/FormDrawer/FormDrawer'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport BillAnalystServices from 'Services/Api/BillingAnalystServices'\n\n// CSS\nimport classes from './ListOfAccountsPage.module.scss'\n\nimport { array } from 'prop-types'\nimport { createClassExpression } from 'typescript'\nimport { Collapse } from '@material-ui/core'\n\nconst header_items = [\n  {\n    id: 'corporate_id',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Account No.'\n  },\n  {\n    id: 'corporate_name',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Corporate Name'\n  },\n  {\n    id: 'status',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Account Status'\n  },\n  {\n    id: 'plan_type',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Plan Type'\n  },\n  {\n    id: 'effectivity',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Effectivity Date'\n  },\n  {\n    id: 'expiry',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Expiration Date'\n  },\n  {\n    id: 'action',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: '>'\n  }\n]\n\nconst header_items_collapsed = [\n  {\n    id: 'corporate_id',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Account No.'\n  },\n  {\n    id: 'corporate_name',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Corporate Name'\n  },\n  {\n    id: 'status',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Account Status'\n  },\n  {\n    id: 'plan_type',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Plan Type'\n  },\n  {\n    id: 'member_name',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Member Name'\n  },\n  {\n    id: 'member_id',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Member Id'\n  },\n  {\n    id: 'effectivity',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Effectivity Date'\n  },\n  {\n    id: 'expiry',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: 'Expiration Date'\n  },\n  {\n    id: 'action',\n    numeric: false,\n    center: false,\n    disablePadding: true,\n    label: '>'\n  }\n]\n\nconst mainColumn = ['corporate_id', 'corporate_name', 'status', 'plan_type', 'effectivity', 'expiry']\nconst mainColumn_collapsed = ['corporate_id', 'corporate_name', 'status', 'plan_type', '', '', 'effectivity', 'expiry']\nconst subColumn = ['', '', 'corporate_name', 'status', '', 'member_name', 'member_id', 'effectivity', 'expiry']\n\n// const subColumn_collapsed = [\n//   '',\n//   '',\n//   'corporate_name',\n//   'status',\n//   '',\n//   'member_name',\n//   'member_id',\n//   'effectivity',\n//   'expiry'\n// ]\n\nexport default function AccountListPage (props) {\n  // const [accountList, setAccountList] = React.useState({ account_list: {} })\n  const [collapseAll, setCollapseAll] = React.useState(false)\n  const [header_collapsed, setHeaderState] = React.useState()\n  const [headers, setHeaders] = React.useState(header_items)\n  const [tableData, setTableData] = React.useState([])\n  const [clientTransactionLedgerData, setTransactionData] = React.useState([])\n  const [table_columns, setColumns] = React.useState(mainColumn)\n  const [sub_columns, setSubColumns] = React.useState(subColumn)\n\n  const handleTableCollapseAll = () => {\n    console.log('ALL: ', collapseAll)\n    setCollapseAll(!collapseAll)\n    setHeaderState(!collapseAll)\n    header_collapsed == true ? setHeaders(header_items) : setHeaders(header_items_collapsed)\n    header_collapsed == true ? setColumns(mainColumn) : setColumns(mainColumn_collapsed)\n    console.log('set to: ', collapseAll)\n  }\n\n  const handleHeaders = header_collapsed => {\n    console.log('header_collapsed')\n    header_collapsed ? setHeaders(header_items) : setHeaders(header_items_collapsed)\n    header_collapsed ? setColumns(mainColumn) : setColumns(mainColumn_collapsed)\n  }\n\n  // const handleTableCollapse = () => {\n  //   collapseAll ? setHeaders(header_items_collapsed) : setHeaders(header_items)\n  //   collapseAll ? setColumns(mainColumn) : setColumns(mainColumn_collapsed)\n  //   console.log('header_collapsed')\n  // }\n\n  React.useEffect(() => {\n    try {\n      const current_user_id = JSON.parse(localStorage.getItem('me'))._id\n      const current_user_role = JSON.parse(localStorage.getItem('me')).role\n\n      let queryString = null\n\n      if ((current_user_role === 'BILLING_SUPERVISOR') | (current_user_role === 'BILLING_MANAGER')) {\n        queryString = { role: current_user_role }\n      } else {\n        queryString = { userID: current_user_id }\n      }\n\n      Promise.all([BillAnalystServices.getClientTransactionLedgerEntries(queryString)]).then(values => {\n        const [transactions] = values\n        // console.log(values)\n        setTableData(transactions.data.data)\n        // setTableData(prevState => ({\n        //   ...prevState,\n        //   data: transactions.data\n        // }))\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    // setTableData(table_data.data)\n    setCollapseAll(false)\n    PageTitleService(`List of Accounts`)\n    BreadcrumbsService.setSelectedItems(['journal', 'accountList'])\n    // setTableData(clientTransactionLedgerData)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <div className={classes['search-container']}>\n        <div id='modal-search-field' className={classes['search-field']}>\n          <SearchTextComponent />\n        </div>\n        <Link id='display-settings-link' className={classes['display-settings']} to='/' color='primary' size='medium'>\n          <IconButton id='export-icon'>\n            <ReplyIcon className={classes['export-icon']} />\n            <Typography className='text-link underline'>Export</Typography>\n          </IconButton>\n        </Link>\n        <Link id='display-settings-link' className={classes['display-settings']} to='/' color='primary' size='medium'>\n          <IconButton id='display-settings-icon'>\n            <ViewListRoundedIcon className={classes['display-settings-icon']} />\n            <Typography className='text-link underline'>Display Settings</Typography>\n          </IconButton>\n        </Link>\n      </div>\n      <TreeViewTable\n        headCells={headers}\n        handleCollapseEvent={handleTableCollapseAll}\n        isViewTree\n        pagination={{ rowsPerPage: 5, page: 0, count: tableData.length }}\n      >\n        <TableBody>\n          {tableData.map((item, index) =>\n            Array.isArray(item.members) & (item.members[0] !== null) & (item.members.length > 0) ? (\n              <CollapsibleRow\n                index={index}\n                id={`account-id-${index}`}\n                data={item}\n                objectKey={'members'}\n                tableColumnOrder={table_columns}\n                subColumnOrder={sub_columns}\n                offset={3}\n                collapseAllState={collapseAll}\n                collapseFunction={handleHeaders}\n                actionTo={`/billing/journal/transactions`}\n                param='corporate_id'\n                actionText={'View'}\n              />\n            ) : (\n              <NormalRow\n                index={index}\n                table_columns={table_columns}\n                data={item}\n                id={`link-table-${index}`}\n                actionTo={`/billing/journal/transactions`}\n                param='corporate_id'\n                actionText={'View'}\n                style={{ textDecoration: 'none' }}\n              />\n            )\n          )}\n        </TableBody>\n      </TreeViewTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 400,\n    border: '1px solid transparent'\n  },\n  focus: {\n    borderColor: 'green'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n})\n\nexport default function SearchTextComponent ({ onChange, placeholder = '', id }) {\n  const classes = useStyles()\n\n  const [focus, setFocus] = React.useState()\n\n  return (\n    <Paper className={`${classes.root} ${focus && classes.focus} box-shadow-field`} onBlur={() => setFocus(false)}>\n      <IconButton className={classes.iconButton} aria-label='search'>\n        <SearchIcon />\n      </IconButton>\n      <InputBase\n        id={id}\n        className={classes.input}\n        placeholder={placeholder}\n        onChange={e => onChange && onChange(e)}\n        autoComplete='off'\n        onFocus={() => setFocus(true)}\n      />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from 'SharedComponents/Alert/Alert'\n// import Button from '@material-ui/core/Button'\n\nimport { CurrencyFormatter, DateFormatter } from 'Utilities/TextFormatter'\nimport { EllipsisFormatter } from 'Utilities/TextLengthFormatter'\nimport TextFieldCurrency from 'SharedComponents/TextFieldCurrency/TextFieldCurrency'\nimport TreeViewTable from 'StandardComponents/TreeViewTable/TreeViewTable'\nimport CollapsibleRow from 'StandardComponents/TreeViewTable/CollapsibleRow'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport RadioButton from '@material-ui/core/Radio/Radio'\nimport Divider from '@material-ui/core/Divider/Divider'\nimport ViewListRoundedIcon from '@material-ui/icons/ViewListRounded'\nimport ReplyIcon from '@material-ui/icons/Reply'\n\nimport ViewMore from '../../Components/ViewMore/ViewMore'\nimport ConfirmDialog from '../../Components/ConfirmDialog/ConfirmDialog'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SvgMore from '@material-ui/icons/ExpandMore'\n\nimport SearchTextComponent from 'StandardComponents/SearchTextComponent/SearchTextComponent'\nimport TableFooterComponent from 'SharedComponents/TableFooterComponent/TableFooterComponent'\nimport CustomPropertyText from '../../Components/CustomPropertyText/CustomPropertyText'\n\nimport FormDrawer from 'StandardComponents/FormDrawer/FormDrawer'\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nimport BillAnalystServices from 'Services/Api/BillingAnalystServices'\n\n// CSS\nimport classes from './ClientTransactionJournalPage.module.scss'\n\n// import json_data from './data.json'\n\nimport { array } from 'prop-types'\nimport { createClassExpression } from 'typescript'\nimport { Collapse } from '@material-ui/core'\n\nconst header_items = [\n  { id: 'category', numeric: false, center: false, disablePadding: true, label: ' Category' },\n  { id: 'transaction_date', numeric: false, center: false, disablePadding: true, label: ' Transaction Date' },\n  { id: 'member_name', numeric: false, center: false, disablePadding: true, label: ' Member Name' },\n  { id: 'member_id', numeric: false, center: false, disablePadding: true, label: ' Member ID' },\n  { id: 'member_type', numeric: false, center: false, disablePadding: true, label: ' Member Type' },\n  { id: 'plan_type', numeric: false, center: false, disablePadding: true, label: ' Plan Type' },\n  { id: 'effectivity_date', numeric: false, center: false, disablePadding: true, label: ' Effectivity Date' },\n  { id: 'cancelled_date', numeric: false, center: false, disablePadding: true, label: ' Cancelled Date' },\n  { id: 'ticket_no', numeric: false, center: false, disablePadding: true, label: ' Ticket No' },\n  { id: 'transaction_no', numeric: false, center: false, disablePadding: true, label: ' Transaction No' },\n  { id: 'transaction_status', numeric: false, center: false, disablePadding: true, label: ' Transaction Status' },\n  { id: 'billing_code', numeric: false, center: false, disablePadding: true, label: ' Billing Code' },\n  { id: 'billing_type', numeric: false, center: false, disablePadding: true, label: ' Billing Type' },\n  { id: 'amount', numeric: false, center: false, disablePadding: true, label: ' Amount' },\n  { id: 'loa_no', numeric: false, center: false, disablePadding: true, label: ' LOA No.' },\n  { id: 'claim_no', numeric: false, center: false, disablePadding: true, label: ' Claim No.' },\n  { id: 'soa_no', numeric: false, center: false, disablePadding: true, label: ' SOA No.' },\n  { id: 'atp_no', numeric: false, center: false, disablePadding: true, label: ' ATP No.' }\n  // {\n  //   id: 'action',\n  //   numeric: false,\n  //   center: false,\n  //   disablePadding: true,\n  //   label: ''\n  // }\n]\n\n// const header_items_collapsed = [\n//   {\n//     id: 'action',\n//     numeric: false,\n//     center: false,\n//     disablePadding: true,\n//     label: ''\n//   }\n// ]\n\n// const table_data = {\n//   data: json_data\n// }\n\nconst mainColumn = [\n  'category',\n  'transaction_date',\n  '', // 'member_name',\n  '', // 'member_id',\n  '', // 'member_type',\n  'plan_type',\n  'effectivity_date',\n  'cancelled_date',\n  'ticket_no',\n  'transaction_no',\n  'transaction_status',\n  'billing_code',\n  'billing_type',\n  'amount',\n  'loa_no',\n  'claim_no',\n  'soa_no',\n  'atp_no'\n]\nconst mainColumn_collapsed = [\n  'category',\n  '', // 'transaction_date',\n  '',\n  '',\n  '',\n  'plan_type',\n  'effectivity_date',\n  '',\n  'ticket_no',\n  'transaction_no',\n  'transaction_status',\n  'billing_code',\n  'billing_type',\n  'amount',\n  'loa_no',\n  'claim_no',\n  'soa_no',\n  'atp_no'\n]\n\nconst subColumn = [\n  '',\n  '',\n  'transaction_date',\n  'member_name',\n  'member_id',\n  'member_type',\n  'plan_type',\n  'effectivity_date',\n  'cancelled_date',\n  'ticket_no',\n  'transaction_no',\n  'transaction_status',\n  'billing_type',\n  'billing_code',\n  'amount',\n  'loa_no',\n  'claim_no',\n  '',\n  ''\n]\n\n// const subColumn_collapsed = [\n//   '',\n//   '',\n//   'corporate_name',\n//   'status',\n//   '',\n//   'member_name',\n//   'member_id',\n//   'effectivity',\n//   'expiry'\n// ]\n\nexport default function ClientTransactionJournalPage (props) {\n  const clientId = props.match.params.clientId\n  const [collapseAll, setCollapseAll] = React.useState(false)\n  const [header_collapsed, setHeaderState] = React.useState()\n  const [headers, setHeaders] = React.useState(header_items)\n  const [data, setTableData] = React.useState([])\n  const [clientData, setClientData] = React.useState([])\n  const [sourceData, setSourceData] = React.useState([])\n  const [table_columns, setColumns] = React.useState(mainColumn)\n  const [sub_columns, setSubColumns] = React.useState(subColumn)\n  const handleTableCollapseAll = () => {\n    console.log('ALL: ', collapseAll)\n    setCollapseAll(!collapseAll)\n    setHeaderState(!collapseAll)\n    header_collapsed == false ? setHeaders(header_items) : setHeaders(header_items)\n    header_collapsed == false ? setColumns(mainColumn) : setColumns(mainColumn_collapsed)\n    console.log('set to: ', collapseAll)\n  }\n\n  const handleHeaders = header_collapsed => {\n    header_collapsed ? setHeaders(header_items) : setHeaders(header_items)\n    header_collapsed ? setColumns(mainColumn) : setColumns(mainColumn_collapsed)\n  }\n\n  React.useEffect(() => {\n    Promise.all([BillAnalystServices.getSelectedClient(clientId)]).then(values => {\n      const { data } = values.pop().data\n      setClientData(data)\n      PageTitleService(data.client.account_name.concat(' - Transaction Journal'))\n    })\n  }, [])\n\n  // Get the Client transactionLedger Entry\n  React.useEffect(() => {\n    try {\n      const current_user_id = JSON.parse(localStorage.getItem('me'))._id\n      Promise.all([BillAnalystServices.getClientTransactionLedgerEntryContents(clientId)]).then(values => {\n        const [transactions] = values\n        setTableData(transactions.data.data)\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    setCollapseAll(false)\n    BreadcrumbsService.setSelectedItems(['journal', 'accountList', 'clientJournal'])\n\n    setTableData(sourceData)\n  }, [])\n\n  const accountNumber = clientData.client != null ? clientData.client.account_number : ''\n  const accountEffectivity = DateFormatter(clientData.contract != null ? clientData.contract.effectivity : '')\n  const accountExpiry = DateFormatter(clientData.contract != null ? clientData.contract.expiration : '')\n  const paymentTerm = clientData.contract != null ? clientData.contract.payment_term : ''\n\n  console.log(clientData)\n\n  return (\n    <React.Fragment>\n      <div className={classes.account_info}>\n        <div className={classes.info_text_left}>\n          <Typography>{'ACCOUNT NUMBER   ' + accountNumber}</Typography>\n        </div>\n        <div className={classes.info_text_right}>\n          <Typography>{accountEffectivity + '--' + accountExpiry}</Typography>\n          <Typography>{paymentTerm.toUpperCase() + ' PAYMENT TERM'}</Typography>\n        </div>\n      </div>\n      <div className={classes['search-container']}>\n        <div id='modal-search-field' className={classes['search-field']}>\n          <SearchTextComponent />\n        </div>\n        <Link id='display-settings-link' className={classes['display-settings']} to='/' color='primary' size='medium'>\n          <IconButton id='export-icon'>\n            <ReplyIcon className={classes['export-icon']} />\n            <Typography className='text-link underline'>Export</Typography>\n          </IconButton>\n        </Link>\n        <Link id='display-settings-link' className={classes['display-settings']} to='/' color='primary' size='medium'>\n          <IconButton id='display-settings-icon'>\n            <ViewListRoundedIcon className={classes['display-settings-icon']} />\n            <Typography className='text-link underline'>Display Settings</Typography>\n          </IconButton>\n        </Link>\n      </div>\n      <TreeViewTable\n        headCells={headers}\n        handleCollapseEvent={handleTableCollapseAll}\n        isViewTree\n        pagination={{ rowsPerPage: 5, page: 0, count: data.length }}\n      >\n        <TableBody>\n          {data.map((item, index) =>\n            Array.isArray(item.members) && item.members.length > 0 ? (\n              <CollapsibleRow\n                key={index}\n                id={`account-id-${index}`}\n                data={item}\n                objectKey={'members'}\n                index={index}\n                tableColumnOrder={table_columns}\n                subColumnOrder={subColumn}\n                offset={3}\n                collapseAllState={collapseAll}\n                collapseFunction={handleHeaders}\n                actionTo={null}\n              />\n            ) : (\n              <TableRow key={index}>\n                <TableCell id={`account-id-${index}`} />\n                {mainColumn.map((column, iteration) => (\n                  <TableCell>{item[column]}</TableCell>\n                ))}\n              </TableRow>\n            )\n          )}\n        </TableBody>\n      </TreeViewTable>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\n\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n// import ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport useAutocomplete from '@material-ui/lab/useAutocomplete'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormControl from '@material-ui/core/FormControl'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircle, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport classes from './EnhacedSearchReferenceNo.module.scss'\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    display: 'block'\n  },\n  input: {\n    width: 230\n  },\n  listbox: {\n    marginTop: '40px',\n    width: '245px',\n    margin: 0,\n    marginLeft: '-8px',\n    padding: 0,\n    zIndex: 1,\n    position: 'absolute',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 400,\n    '& li:active': {\n      // backgroundColor: '#2977f5',\n      color: 'white'\n    }\n  }\n}))\n\nconst StyledMenu = withStyles({\n  paper: {\n    marginTop: '5px'\n    // borderTop: '0.5px solid rgba(0, 0, 0, 0.54)'\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'left'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'left'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    padding: '15px 20px 15px 20px',\n    '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n      top: '289px',\n      color: 'rgba(0, 0, 0, 0.54)',\n      fontSize: '15px'\n    }\n  }\n}))(MenuItem)\n\nconst clientInfo = [\n  { client_info_no: 'Happy Innovative, Inc', name: 'SOA 001-000000007', date: 'Total Amount Due: PHP x,xxx.xx' },\n  { client_info_no: 'Happy Innovative, Inc', name: 'SOA 001-000000006', date: 'Total Amount Due: PHP x,xxx.xx' },\n  { client_info_no: 'Happy Innovative, Inc', name: 'SOA 001-000000005', date: 'Total Amount Due: PHP x,xxx.xx' },\n  { client_info_no: 'Happy Innovative, Inc', name: 'SOA 001-000000004', date: 'Total Amount Due: PHP x,xxx.xx' },\n  { client_info_no: 'Happy Innovative, Inc', name: 'SOA 001-000000003', date: 'Total Amount Due: PHP x,xxx.xx' }\n]\n\nexport default function EnhancedSearchComponent (props) {\n  const { id, onChange, placeholder = '', width, children, menuItems } = props\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [currentSelected, setCurrentSelected] = React.useState('Invoice')\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions\n  } = useAutocomplete({\n    id: 'use-autocomplete-demo',\n    options: clientInfo,\n    getOptionLabel: option => option.name\n  })\n\n  const autoCompClasses = useStyles()\n\n  return (\n    <div>\n      <Paper id='enhanced-search-component-wrapper' style={{ width: width }} className={classes.root}>\n        <div>\n          <Button\n            id='enhanced-search-component-button'\n            className={classes['menu-button']}\n            aria-controls='customized-menu'\n            aria-haspopup='true'\n            onClick={handleClick}\n            style={{ marginRight: '10px', borderRadius: '0px', width: '200px', textAlign: 'left' }}\n            endIcon={<FontAwesomeIcon style={{ fontSize: '20px', marginBottom: '-3px' }} icon={faAngleDown} />}\n          >\n            {currentSelected}\n          </Button>\n          <StyledMenu\n            id='reference-number-items'\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <StyledMenuItem\n              id='reference-number-item-1'\n              onClick={e => {\n                setCurrentSelected('Invoice')\n                setAnchorEl(null)\n              }}\n            >\n              <ListItemText id='reference-number-item-1-label'>Invoice</ListItemText>\n            </StyledMenuItem>\n            <StyledMenuItem\n              id='reference-number-item-2'\n              onClick={e => {\n                setCurrentSelected('Statement of Account')\n                setAnchorEl(null)\n              }}\n            >\n              <ListItemText id='reference-number-item-2-label'>Statement of Account</ListItemText>\n            </StyledMenuItem>\n          </StyledMenu>\n        </div>\n        <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\n          <InputBase\n            id='search-input'\n            // endAdornment={\n            //   <InputAdornment position='end'>\n            //     <IconButton\n            //       style={{ display: 'inline-block', padding: 0, minHeight: 0, minWidth: 0 }}\n            //       aria-label='toggle password visibility'\n            //     >\n            //       <SearchIcon />\n            //       <span style={{ fontSize: '14px' }}>Search</span>\n            //     </IconButton>\n            //   </InputAdornment>\n            // }\n            aria-describedby='standard-weight-helper-text'\n            inputProps={{\n              'aria-label': 'weight'\n            }}\n            className={autoCompClasses.input}\n            {...getInputProps()}\n          />\n          {groupedOptions.length > 0 ? (\n            <ul className={autoCompClasses.listbox} {...getListboxProps()}>\n              {groupedOptions.map((option, index) => (\n                <li id={`autocomplete-item-${index}`} {...getOptionProps({ option, index })}>\n                  <div\n                    style={{\n                      height: '80px',\n                      borderBottom: '0.5px solid rgba(0, 0, 0, 0.54)',\n                      padding: '15px',\n                      fontSize: '12px'\n                    }}\n                  >\n                    <div>{option.name}</div>\n                    <div>\n                      <FontAwesomeIcon\n                        style={{ float: 'left', color: ' #0d5e40', margin: '0px 18px -10px 0px' }}\n                        icon={faCircle}\n                      />\n                    </div>\n                    {option.client_info_no}\n                    <div>{option.date}</div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </FormControl>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\n\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\n\nimport Button from '@material-ui/core/Button'\nimport HeaderDetails from '../../Components/HeaderDetails/HeaderDetails'\nimport FormDrawer from '../../Components/FormDrawer/FormDrawer'\n\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faAngleDown,\n  faFileInvoice,\n  faMoneyBillWaveAlt,\n  faFileAlt,\n  faFileSignature\n} from '@fortawesome/free-solid-svg-icons'\n\n// Temp EnhancedSearchComponent\nimport EnhacedSearchReferenceNo from './EnhacedSearchReferenceNo'\n\nimport classes from './CreateTransactionTypePage.module.scss'\n\nconst StyledMenu = withStyles({\n  paper: {\n    // border: '1px solid #d3d4d5'\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '& .MuiListItemText-primary': {\n      fontSize: '13px'\n    }\n  }\n}))(MenuItem)\n\nexport default function (props) {\n  PageTitleService()\n  BreadcrumbsService.setSelectedItems(['dashboard', 'createTransaction'])\n\n  const [dropDownAnchor, setDropDownAnchor] = React.useState(null)\n  const [currentSelected, setCurrentSelected] = React.useState(1)\n\n  const handleDropDownClick = event => {\n    setDropDownAnchor(event.currentTarget)\n  }\n\n  const handleDropDownClose = () => {\n    setDropDownAnchor(null)\n  }\n\n  const selectedItem = item => {\n    switch (item) {\n      case 1:\n        return (\n          <React.Fragment>\n            <ListItemIcon>\n              <FontAwesomeIcon className={classes['transaction-type-item-icon-invoice']} icon={faFileInvoice} />\n            </ListItemIcon>\n            <ListItemText primary='Invoice' />\n          </React.Fragment>\n        )\n      case 2:\n        return (\n          <React.Fragment>\n            <ListItemIcon>\n              <FontAwesomeIcon\n                className={classes['transaction-type-item-icon-credit-memo']}\n                icon={faMoneyBillWaveAlt}\n              />\n            </ListItemIcon>\n            <ListItemText primary='Credit Memo' />\n          </React.Fragment>\n        )\n      case 3:\n        return (\n          <React.Fragment>\n            <ListItemIcon>\n              <FontAwesomeIcon className={classes['transaction-type-item-icon-debit-note']} icon={faFileAlt} />\n            </ListItemIcon>\n            <ListItemText primary='Debit Note' />\n          </React.Fragment>\n        )\n      case 4:\n        return (\n          <React.Fragment>\n            <ListItemIcon>\n              <FontAwesomeIcon className={classes['transaction-type-item-icon-credit-note']} icon={faFileSignature} />\n            </ListItemIcon>\n            <ListItemText primary='Credit Note' />\n          </React.Fragment>\n        )\n    }\n  }\n\n  return (\n    <div>\n      <HeaderDetails>\n        <Typography id='header-details-create-transaction' variant='h5'>\n          Create Transaction\n        </Typography>\n      </HeaderDetails>\n      <FormDrawer\n        drawerHeight={'595px'}\n        drawerHeaderContent={''}\n        drawerContent={\n          <div>\n            <Typography id='drawer-corporate-name-value' variant='h6'>\n              Happy Innovative, Inc\n              <RemoveCircleIcon className={classes['remove-icon']} />\n            </Typography>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-number-field' color='textSecondary'>\n                ACCOUNT NO.\n              </Typography>\n              <Typography id='drawer-account-number-value'>6112-0954-0299</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-status-field' color='textSecondary'>\n                ACCOUNT STATUS\n              </Typography>\n              <Typography id='drawer-account-status-value'>Active</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-tax-type-field' color='textSecondary'>\n                TAX TYPE\n              </Typography>\n              <Typography id='drawer-tax-type-value'>VAT</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-billing-cyle-field' color='textSecondary'>\n                BILLING CYCLE\n              </Typography>\n              <Typography id='drawer-billing-cyle-value'>448-49-7280</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-corporate-tin-field' color='textSecondary'>\n                CORPORATE TIN\n              </Typography>\n              <Typography id='drawer-corporate-tin-value'>593-18-7261</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-payment-term-field' color='textSecondary'>\n                PAYMENT TERM\n              </Typography>\n              <Typography id='drawer-payment-term-value'>Monthly</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-contract-plan-type-field' color='textSecondary'>\n                CONTRACT PLAN TYPE\n              </Typography>\n              <Typography id='drawer-contract-plan-type-value'>TPA</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-effectivity-date-field' color='textSecondary'>\n                EFFECTIVITY DATE\n              </Typography>\n              <Typography id='drawer-effectivity-date-value'>Jan 18, 2019</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-expiration-date-field' color='textSecondary'>\n                EXPIRATION DATE\n              </Typography>\n              <Typography id='drawer-expiration-date-value'>Jan 18, 2020</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-location-field' color='textSecondary'>\n                LOCATION\n              </Typography>\n              <Typography id='drawer-location-value'>\n                <Typography>5659 10F Rim Lichen Morning Street,</Typography>\n                <Typography>Bacidiaceae Subdivision, Amarillo City</Typography>\n                <Typography>Brgy. Fordem, Texas 1792</Typography>\n              </Typography>\n            </div>\n          </div>\n        }\n      >\n        {\n          <div className={classes['main-content-wrapper']}>\n            <div className={classes['transaction-type-container']}>\n              <div className={classes['transaction-type-field']}>\n                <Typography id='transaction-type-field' color='textSecondary'>\n                  Transaction Type\n                </Typography>\n              </div>\n\n              <div className={classes['transaction-type-value']}>\n                <Button\n                  id='transaction-type-button'\n                  className={classes['transaction-type-button']}\n                  aria-controls='customized-menu'\n                  aria-haspopup='true'\n                  onClick={handleDropDownClick}\n                  endIcon={<FontAwesomeIcon className={classes['transaction-type-button-icon']} icon={faAngleDown} />}\n                >\n                  {selectedItem(currentSelected)}\n                </Button>\n                <StyledMenu\n                  id='transaction-type-items'\n                  anchorEl={dropDownAnchor}\n                  keepMounted\n                  open={Boolean(dropDownAnchor)}\n                  onClose={handleDropDownClose}\n                >\n                  <StyledMenuItem\n                    id='transaction-type-item-1'\n                    onClick={e => {\n                      setCurrentSelected(1)\n                      handleDropDownClose()\n                    }}\n                  >\n                    <ListItemIcon>\n                      <FontAwesomeIcon className={classes['transaction-type-item-icon-invoice']} icon={faFileInvoice} />\n                    </ListItemIcon>\n                    <ListItemText primary='Invoice' />\n                  </StyledMenuItem>\n                  <StyledMenuItem\n                    id='transaction-type-item-2'\n                    onClick={e => {\n                      setCurrentSelected(2)\n                      handleDropDownClose()\n                    }}\n                  >\n                    <ListItemIcon>\n                      <FontAwesomeIcon\n                        className={classes['transaction-type-item-icon-credit-memo']}\n                        icon={faMoneyBillWaveAlt}\n                      />\n                    </ListItemIcon>\n                    <ListItemText primary='Credit Memo' />\n                  </StyledMenuItem>\n                  <StyledMenuItem\n                    id='transaction-type-item-3'\n                    onClick={e => {\n                      setCurrentSelected(3)\n                      handleDropDownClose()\n                    }}\n                  >\n                    <ListItemIcon>\n                      <FontAwesomeIcon className={classes['transaction-type-item-icon-debit-note']} icon={faFileAlt} />\n                    </ListItemIcon>\n                    <ListItemText primary='Debit Note' />\n                  </StyledMenuItem>\n                  <StyledMenuItem\n                    id='transaction-type-item-4'\n                    onClick={e => {\n                      setCurrentSelected(4)\n                      handleDropDownClose()\n                    }}\n                  >\n                    <ListItemIcon>\n                      <FontAwesomeIcon\n                        className={classes['transaction-type-item-icon-credit-note']}\n                        icon={faFileSignature}\n                      />\n                    </ListItemIcon>\n                    <ListItemText primary='Credit Note' />\n                  </StyledMenuItem>\n                </StyledMenu>\n              </div>\n            </div>\n\n            <div className={classes['reference-number-container']}>\n              <div className={classes['reference-number-field']}>\n                <Typography id='reference-number-field' color='textSecondary'>\n                  Reference No.\n                </Typography>\n              </div>\n              <div className={classes['reference-number-value']}>\n                <EnhacedSearchReferenceNo width={'450px'} />\n              </div>\n            </div>\n\n            <Link\n              id='advanced-search-link'\n              className={classes['advanced-search-link']}\n              to='/'\n              color='primary'\n              size='medium'\n            >\n              Advanced Search\n            </Link>\n          </div>\n        }\n        <div className={classes['button-wrapper']}>\n          <div className={classes.button}>\n            <Link id='cancel-link' to={`/`} className={classes['cancel-link']}>\n              <Button id='cancel-button' variant='contained' className={classes['cancel-button']}>\n                Cancel\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </FormDrawer>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\n\nimport { Link } from 'react-router-dom'\n\nimport CustomSearchTextComponent from '../../Components/CustomSearchTextComponent/CustomSearchTextComponent'\n\nimport classes from './TempTableForMemo.module.scss'\nimport { TableBody, Typography } from '@material-ui/core'\n\nconst headers = [\n  {\n    id: '1',\n    numeric: false,\n    disablePadding: false,\n    label: 'Choose Transaction Type',\n    width: 120,\n    labelwidth: '120px'\n  },\n  {\n    id: '2',\n    numeric: false,\n    disablePadding: false,\n    label: 'Enter Member Account ID',\n    width: 158,\n    labelwidth: '100px'\n  },\n  {\n    id: '1',\n    numeric: false,\n    disablePadding: false,\n    label: 'Enter Description',\n    width: 120,\n    labelwidth: '120px'\n  },\n  {\n    id: '1',\n    numeric: false,\n    disablePadding: false,\n    label: 'Choose Tax Type',\n    width: 90,\n    labelwidth: '70px'\n  },\n  {\n    id: '1',\n    numeric: false,\n    disablePadding: false,\n    label: 'Enter Amount',\n    width: 94,\n    labelwidth: '90px'\n  },\n  {\n    id: '1',\n    numeric: false,\n    disablePadding: false,\n    label: 'Add',\n    width: 10,\n    labelwidth: '30px'\n  }\n]\n\nexport default function TempTableForMemo (props) {\n  const { search, tableHeaders, tableHeight, children, pagination, size, sort } = props\n\n  // Get width of the element\n  // const [elemWidth, setElemWidth] = React.useState('')\n  // const refElem = React.useRef(0)\n\n  return (\n    <div className={classes.root}>\n      <Paper style={{ height: tableHeight }} className={classes.paper}>\n        <div className={classes['table-wrapper']}>\n          <Table className={classes.table} aria-labelledby='tableTitle' size={size}>\n            <TableHead>\n              <TableRow>\n                {headers.map(header => (\n                  <TableCell\n                    // For getting width of the element\n                    // ref={refElem => {\n                    //   if (refElem) {\n                    //     // setElemWidth(refElem.offsetWidth)\n                    //     console.log(refElem.offsetWidth)\n                    //   }\n                    // }}\n                    id={header.id}\n                    key={header.id}\n                    align={header.center ? 'center' : header.numeric ? 'right' : 'left'}\n                    padding={header.disablePadding ? 'none' : 'default'}\n                    sortDirection={false}\n                    width={header.width}\n                  >\n                    {header.label !== 'Add' ? (\n                      <div style={{ width: header.labelwidth }}>{header.label}</div>\n                    ) : (\n                      <Link to={`/`} style={{ color: '#0d5e40' }}>\n                        + Add\n                      </Link>\n                    )}\n                    {header.label !== '' && sort ? (\n                      <FontAwesomeIcon className={classes['sort-icon']} style={{ float: 'right' }} icon={faSort} />\n                    ) : (\n                      ''\n                    )}\n                    {header.label !== '' && search && header.label !== 'Add' ? (\n                      <CustomSearchTextComponent id={`${header.label}-search`} width={header.width} />\n                    ) : (\n                      ''\n                    )}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            {/* {children} */}\n            <TableBody>\n              {/* <TableRow> */}\n              <Typography align='center'>No transactions added yet</Typography>\n              {/* </TableRow> */}\n            </TableBody>\n          </Table>\n        </div>\n        {pagination && <TablePagination rowsPerPageOptions={[5, 10, 25]} component='div' {...pagination} />}\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\n\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport Popover from '@material-ui/core/Popover'\n\nimport CloseIcon from '@material-ui/icons/Close'\nimport ReplyIcon from '@material-ui/icons/Reply'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\n\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport HeaderDetails from '../../Components/HeaderDetails/HeaderDetails'\nimport FormDrawer from '../../Components/FormDrawer/FormDrawer'\n\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Submit from 'StandardComponents/Submit/Submit'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport ContentHeader from 'StandardComponents/ContentHeader/ContentHeader'\n\n// Temp TableForMemo\nimport TempTableForMemo from './TempTableForMemo'\n\nimport classes from './CreateTransactionCreditNotePage.module.scss'\n\nexport default function (props) {\n  PageTitleService()\n  BreadcrumbsService.setSelectedItems(['dashboard', 'createTransaction'])\n  const [dropDownAnchor, setDropDownAnchor] = React.useState(null)\n  const [popOverAnchor, setPopOverAnchor] = React.useState(null)\n  const [currentSelected, setCurrentSelected] = React.useState('CY06 - 20th of the month')\n  const open = Boolean(dropDownAnchor)\n  const id = open ? 'simple-popover' : undefined\n  const [submit, setSubmit] = React.useState(false)\n\n  const handleDropDownClick = event => {\n    setDropDownAnchor(event.currentTarget)\n  }\n\n  const handleDropDownClose = () => {\n    setDropDownAnchor(null)\n  }\n\n  const handlePopOverClick = event => {\n    setPopOverAnchor(event.currentTarget)\n  }\n\n  const handlePopOverClose = () => {\n    setPopOverAnchor(null)\n  }\n\n  const handleOnSubmit = () => {\n    setSubmit(true)\n  }\n\n  return (\n    <div>\n      <HeaderDetails>\n        <Typography id='header-details-create-transaction' variant='h5'>\n          Create Transaction\n        </Typography>\n      </HeaderDetails>\n      <FormDrawer\n        drawerHeight={'595px'}\n        drawerHeaderContent={''}\n        drawerContent={\n          <div>\n            <Typography id='drawer-corporate-name-field' variant='h6'>\n              Happy Innovative, Inc\n              <RemoveCircleIcon className={classes['remove-icon']} />\n            </Typography>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-number-field' color='textSecondary'>\n                ACCOUNT NO.\n              </Typography>\n              <Typography id='drawer-account-number-value'>6112-0954-0299</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-status-field' color='textSecondary'>\n                ACCOUNT STATUS\n              </Typography>\n              <Typography id='drawer-account-status-value'>Active</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-tax-type-field' color='textSecondary'>\n                TAX TYPE\n              </Typography>\n              <Typography id='drawer-tax-type-value'>VAT</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-billing-cyle-field' color='textSecondary'>\n                BILLING CYCLE\n              </Typography>\n              <Typography id='drawer-billing-cyle-value'>448-49-7280</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-corporate-tin-field' color='textSecondary'>\n                CORPORATE TIN\n              </Typography>\n              <Typography id='drawer-corporate-tin-value'>593-18-7261</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-payment-term-field' color='textSecondary'>\n                PAYMENT TERM\n              </Typography>\n              <Typography id='drawer-payment-term-value'>Monthly</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-contract-plan-type-field' color='textSecondary'>\n                CONTRACT PLAN TYPE\n              </Typography>\n              <Typography id='drawer-contract-plan-type-value'>TPA</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-effectivity-date-field' color='textSecondary'>\n                EFFECTIVITY DATE\n              </Typography>\n              <Typography id='drawer-effectivity-date-value'>Jan 18, 2019</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-expiration-date-field' color='textSecondary'>\n                EXPIRATION DATE\n              </Typography>\n              <Typography id='drawer-expiration-date-value'>Jan 18, 2020</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-location-field' color='textSecondary'>\n                LOCATION\n              </Typography>\n              <Typography id='drawer-location-value'>\n                <Typography>5659 10F Rim Lichen Morning Street,</Typography>\n                <Typography>Bacidiaceae Subdivision, Amarillo City</Typography>\n                <Typography>Brgy. Fordem, Texas 1792</Typography>\n              </Typography>\n            </div>\n          </div>\n        }\n      >\n        {\n          <div>\n            <div className={classes['export-modify-billing-cycle-wrapper']}>\n              <div className={classes['export-modify-content']}>\n                <ReplyIcon id='export-icon' className={classes['export-icon']} />\n                <Link id='export-link' to={`/`} className={classes['export-link']}>\n                  Export\n                </Link>\n                <FontAwesomeIcon\n                  id='modify-billing-cycle-icon'\n                  className={classes['modify-billing-cycle-icon']}\n                  icon={faEdit}\n                />\n                <Link\n                  id='modify-billing-cycle-link'\n                  onClick={handleDropDownClick}\n                  className={classes['modify-billing-cycle-link']}\n                >\n                  Modify Billing Cycle\n                </Link>\n              </div>\n            </div>\n            <Popover\n              id={id}\n              className={classes['pop-over-wrapper']}\n              open={open}\n              anchorEl={dropDownAnchor}\n              onClose={handleDropDownClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n            >\n              <div className={classes['popover-container']}>\n                Select Billing Cycle to include this transaction{' '}\n                <IconButton\n                  id='pop-over-close-button'\n                  aria-label='close'\n                  className={classes['pop-over-close-button']}\n                  onClick={handleDropDownClose}\n                >\n                  <CloseIcon id='pop-over-close-icon' />\n                </IconButton>\n                <Button\n                  id='modify-billing-cycle-button'\n                  className={classes['modify-billing-cycle-button']}\n                  aria-controls='customized-menu'\n                  aria-haspopup='true'\n                  onClick={handlePopOverClick}\n                  endIcon={\n                    <FontAwesomeIcon className={classes['modify-billing-cycle-button-icon']} icon={faAngleDown} />\n                  }\n                >\n                  {currentSelected}\n                </Button>\n                <Menu\n                  id='modify-billing-cycle-menu'\n                  className={classes['modify-billing-cycle-menu']}\n                  anchorEl={popOverAnchor}\n                  keepMounted\n                  open={Boolean(popOverAnchor)}\n                  onClose={handlePopOverClose}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                >\n                  <MenuItem\n                    id='modify-billing-cycle-item-1'\n                    onClick={e => {\n                      setCurrentSelected('CY01 - 1st and 15th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY01 - 1st and 15th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-2'\n                    onClick={e => {\n                      setCurrentSelected('CY02 - 10th and 25th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY02 - 10th and 25th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-3'\n                    onClick={e => {\n                      setCurrentSelected('CY03 - 30th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY03 - 30th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-4'\n                    onClick={e => {\n                      setCurrentSelected('CY04 - 15th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY04 - 15th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-5'\n                    onClick={e => {\n                      setCurrentSelected('CY05 - 7th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY05 - 7th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-6'\n                    onClick={e => {\n                      setCurrentSelected('CY06 - 20th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY06 - 20th of the month\n                  </MenuItem>\n                </Menu>\n                <div className={classes['pop-over-apply-close-button-container']}>\n                  <div className={classes['pop-over-close-button-wrapper']}>\n                    <Button\n                      id='pop-over-cancel-button'\n                      variant='contained'\n                      className={classes['pop-over-cancel-button']}\n                      onClick={handleDropDownClose}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                  <div className={classes['pop-over-apply-button-wrapper']}>\n                    <Button\n                      id='pop-over-apply-button'\n                      variant='contained'\n                      className={classes['pop-over-apply-button']}\n                      // onClick={handleOnSubmit}\n                    >\n                      Apply\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Popover>\n            <ContentHeader summaryFields={['Sub Total', 'Tax Amount', 'Total Amount']} summaryValues={[0, 0, 0]}>\n              <div className={classes['content-header-details']}>\n                <div className={classes.fields}>\n                  <Typography id='content-details-credit-memo-field' variant='h6' color='textSecondary'>\n                    CREDIT MEMO\n                  </Typography>\n                  <Typography id='content-details-trasaction-date-field' color='textSecondary'>\n                    TRANSACTION DATE\n                  </Typography>\n                  <Typography id='content-details-ticket-number-field' color='textSecondary'>\n                    TICKET NO\n                  </Typography>\n                  <Typography id='content-details-soa-number-field' color='textSecondary'>\n                    SOA NO\n                  </Typography>\n                </div>\n                <div className={classes.values}>\n                  <Typography id='content-details-credit-memo-value' variant='h6'>\n                    CM000001\n                    <RemoveCircleIcon className={classes['remove-icon']} />\n                  </Typography>\n                  <Typography id='content-details-trasaction-date-value'>Dec 01, 2019</Typography>\n                  <Typography id='content-details-ticket-number-value'>-</Typography>\n                  <Typography id='content-details-soa-number-value'>\n                    SOA 001-000000007 <RemoveCircleIcon className={classes['remove-icon']} />\n                  </Typography>\n                </div>\n              </div>\n            </ContentHeader>\n            <TempTableForMemo search />\n          </div>\n        }\n        <div className={classes['button-wrapper']}>\n          <div className={classes.button}>\n            <Link id='cancel-link' to={`/`} className={classes['cancel-link']}>\n              <Button id='cancel-button' variant='contained' className={classes['cancel-button']}>\n                Cancel\n              </Button>\n            </Link>\n            <Button\n              id='submit-button'\n              variant='contained'\n              className={classes['submit-button']}\n              onClick={handleOnSubmit}\n            >\n              Save and Submit\n            </Button>\n          </div>\n        </div>\n      </FormDrawer>\n      {/* <div className={classes.test}>\n        <div className={classes.button}>\n          <Link id='close-link' to={`/`}>\n            <Button id='close-button' variant='contained' className={classes['close-button']}>\n              Cancel\n            </Button>\n          </Link>\n          <Button id='submit-button' variant='contained' className={classes['submit-button']} onClick={handleOnSubmit}>\n            Save and Submit\n          </Button>\n        </div>\n      </div> */}\n      <Submit page='credit' openDialog={submit} setOpenDialog={setSubmit} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\n\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport Popover from '@material-ui/core/Popover'\n\nimport CloseIcon from '@material-ui/icons/Close'\nimport ReplyIcon from '@material-ui/icons/Reply'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\n\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport HeaderDetails from '../../Components/HeaderDetails/HeaderDetails'\nimport FormDrawer from '../../Components/FormDrawer/FormDrawer'\n\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Submit from 'StandardComponents/Submit/Submit'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport ContentHeader from 'StandardComponents/ContentHeader/ContentHeader'\n\n// Temp TableForMemo\nimport TempTableForMemo from './TempTableForMemo'\n\nimport classes from './CreateTransactionCreditNotePage.module.scss'\n\nexport default function (props) {\n  PageTitleService()\n  BreadcrumbsService.setSelectedItems(['dashboard', 'createTransaction'])\n  const [dropDownAnchor, setDropDownAnchor] = React.useState(null)\n  const [popOverAnchor, setPopOverAnchor] = React.useState(null)\n  const [currentSelected, setCurrentSelected] = React.useState('CY06 - 20th of the month')\n  const open = Boolean(dropDownAnchor)\n  const id = open ? 'simple-popover' : undefined\n  const [submit, setSubmit] = React.useState(false)\n\n  const handleDropDownClick = event => {\n    setDropDownAnchor(event.currentTarget)\n  }\n\n  const handleDropDownClose = () => {\n    setDropDownAnchor(null)\n  }\n\n  const handlePopOverClick = event => {\n    setPopOverAnchor(event.currentTarget)\n  }\n\n  const handlePopOverClose = () => {\n    setPopOverAnchor(null)\n  }\n\n  const handleOnSubmit = () => {\n    setSubmit(true)\n  }\n\n  return (\n    <div>\n      <HeaderDetails>\n        <Typography id='header-details-create-transaction' variant='h5'>\n          Create Transaction\n        </Typography>\n      </HeaderDetails>\n      <FormDrawer\n        drawerHeight={'595px'}\n        drawerHeaderContent={''}\n        drawerContent={\n          <div>\n            <Typography id='drawer-corporate-name-field' variant='h6'>\n              Happy Innovative, Inc\n              <RemoveCircleIcon className={classes['remove-icon']} />\n            </Typography>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-number-field' color='textSecondary'>\n                ACCOUNT NO.\n              </Typography>\n              <Typography id='drawer-account-number-value'>6112-0954-0299</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-status-field' color='textSecondary'>\n                ACCOUNT STATUS\n              </Typography>\n              <Typography id='drawer-account-status-value'>Active</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-tax-type-field' color='textSecondary'>\n                TAX TYPE\n              </Typography>\n              <Typography id='drawer-tax-type-value'>VAT</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-billing-cyle-field' color='textSecondary'>\n                BILLING CYCLE\n              </Typography>\n              <Typography id='drawer-billing-cyle-value'>448-49-7280</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-corporate-tin-field' color='textSecondary'>\n                CORPORATE TIN\n              </Typography>\n              <Typography id='drawer-corporate-tin-value'>593-18-7261</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-payment-term-field' color='textSecondary'>\n                PAYMENT TERM\n              </Typography>\n              <Typography id='drawer-payment-term-value'>Monthly</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-contract-plan-type-field' color='textSecondary'>\n                CONTRACT PLAN TYPE\n              </Typography>\n              <Typography id='drawer-contract-plan-type-value'>TPA</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-effectivity-date-field' color='textSecondary'>\n                EFFECTIVITY DATE\n              </Typography>\n              <Typography id='drawer-effectivity-date-value'>Jan 18, 2019</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-expiration-date-field' color='textSecondary'>\n                EXPIRATION DATE\n              </Typography>\n              <Typography id='drawer-expiration-date-value'>Jan 18, 2020</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-location-field' color='textSecondary'>\n                LOCATION\n              </Typography>\n              <Typography id='drawer-location-value'>\n                <Typography>5659 10F Rim Lichen Morning Street,</Typography>\n                <Typography>Bacidiaceae Subdivision, Amarillo City</Typography>\n                <Typography>Brgy. Fordem, Texas 1792</Typography>\n              </Typography>\n            </div>\n          </div>\n        }\n      >\n        {\n          <div>\n            <div className={classes['export-modify-billing-cycle-wrapper']}>\n              <div className={classes['export-modify-content']}>\n                <ReplyIcon id='export-icon' className={classes['export-icon']} />\n                <Link id='export-link' to={`/`} className={classes['export-link']}>\n                  Export\n                </Link>\n                <FontAwesomeIcon\n                  id='modify-billing-cycle-icon'\n                  className={classes['modify-billing-cycle-icon']}\n                  icon={faEdit}\n                />\n                <Link\n                  id='modify-billing-cycle-link'\n                  onClick={handleDropDownClick}\n                  className={classes['modify-billing-cycle-link']}\n                >\n                  Modify Billing Cycle\n                </Link>\n              </div>\n            </div>\n            <Popover\n              id={id}\n              className={classes['pop-over-wrapper']}\n              open={open}\n              anchorEl={dropDownAnchor}\n              onClose={handleDropDownClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n            >\n              <div className={classes['popover-container']}>\n                Select Billing Cycle to include this transaction{' '}\n                <IconButton\n                  id='pop-over-close-button'\n                  aria-label='close'\n                  className={classes['pop-over-close-button']}\n                  onClick={handleDropDownClose}\n                >\n                  <CloseIcon id='pop-over-close-icon' />\n                </IconButton>\n                <Button\n                  id='modify-billing-cycle-button'\n                  className={classes['modify-billing-cycle-button']}\n                  aria-controls='customized-menu'\n                  aria-haspopup='true'\n                  onClick={handlePopOverClick}\n                  endIcon={\n                    <FontAwesomeIcon className={classes['modify-billing-cycle-button-icon']} icon={faAngleDown} />\n                  }\n                >\n                  {currentSelected}\n                </Button>\n                <Menu\n                  id='modify-billing-cycle-menu'\n                  className={classes['modify-billing-cycle-menu']}\n                  anchorEl={popOverAnchor}\n                  keepMounted\n                  open={Boolean(popOverAnchor)}\n                  onClose={handlePopOverClose}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                >\n                  <MenuItem\n                    id='modify-billing-cycle-item-1'\n                    onClick={e => {\n                      setCurrentSelected('CY01 - 1st and 15th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY01 - 1st and 15th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-2'\n                    onClick={e => {\n                      setCurrentSelected('CY02 - 10th and 25th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY02 - 10th and 25th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-3'\n                    onClick={e => {\n                      setCurrentSelected('CY03 - 30th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY03 - 30th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-4'\n                    onClick={e => {\n                      setCurrentSelected('CY04 - 15th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY04 - 15th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-5'\n                    onClick={e => {\n                      setCurrentSelected('CY05 - 7th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY05 - 7th of the month\n                  </MenuItem>\n                  <MenuItem\n                    id='modify-billing-cycle-item-6'\n                    onClick={e => {\n                      setCurrentSelected('CY06 - 20th of the month')\n                      handlePopOverClose()\n                    }}\n                  >\n                    CY06 - 20th of the month\n                  </MenuItem>\n                </Menu>\n                <div className={classes['pop-over-apply-close-button-container']}>\n                  <div className={classes['pop-over-close-button-wrapper']}>\n                    <Button\n                      id='pop-over-cancel-button'\n                      variant='contained'\n                      className={classes['pop-over-cancel-button']}\n                      onClick={handleDropDownClose}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                  <div className={classes['pop-over-apply-button-wrapper']}>\n                    <Button\n                      id='pop-over-apply-button'\n                      variant='contained'\n                      className={classes['pop-over-apply-button']}\n                      // onClick={handleOnSubmit}\n                    >\n                      Apply\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Popover>\n            <ContentHeader summaryFields={['Sub Total', 'Tax Amount', 'Total Amount']} summaryValues={[0, 0, 0]}>\n              <div className={classes['content-header-details']}>\n                <div className={classes.fields}>\n                  <Typography id='content-details-credit-memo-field' variant='h6' color='textSecondary'>\n                    DEBIT NOTE\n                  </Typography>\n                  <Typography id='content-details-trasaction-date-field' color='textSecondary'>\n                    TRANSACTION DATE\n                  </Typography>\n                  <Typography id='content-details-ticket-number-field' color='textSecondary'>\n                    TICKET NO\n                  </Typography>\n                  <Typography id='content-details-soa-number-field' color='textSecondary'>\n                    SOA NO\n                  </Typography>\n                </div>\n                <div className={classes.values}>\n                  <Typography id='content-details-credit-memo-value' variant='h6'>\n                    DN000001\n                    <RemoveCircleIcon className={classes['remove-icon']} />\n                  </Typography>\n                  <Typography id='content-details-trasaction-date-value'>Dec 01, 2019</Typography>\n                  <Typography id='content-details-ticket-number-value'>-</Typography>\n                  <Typography id='content-details-soa-number-value'>\n                    SOA 001-000000007 <RemoveCircleIcon className={classes['remove-icon']} />\n                  </Typography>\n                </div>\n              </div>\n            </ContentHeader>\n            <TempTableForMemo search />\n          </div>\n        }\n        <div className={classes['button-wrapper']}>\n          <div className={classes.button}>\n            <Link id='cancel-link' to={`/`} className={classes['cancel-link']}>\n              <Button id='cancel-button' variant='contained' className={classes['cancel-button']}>\n                Cancel\n              </Button>\n            </Link>\n            <Button\n              id='submit-button'\n              variant='contained'\n              className={classes['submit-button']}\n              onClick={handleOnSubmit}\n            >\n              Save and Submit\n            </Button>\n          </div>\n        </div>\n      </FormDrawer>\n      {/* <div className={classes.test}>\n        <div className={classes.button}>\n          <Link id='close-link' to={`/`}>\n            <Button id='close-button' variant='contained' className={classes['close-button']}>\n              Cancel\n            </Button>\n          </Link>\n          <Button id='submit-button' variant='contained' className={classes['submit-button']} onClick={handleOnSubmit}>\n            Save and Submit\n          </Button>\n        </div>\n      </div> */}\n      <Submit page='debit' openDialog={submit} setOpenDialog={setSubmit} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { Typography } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport ReplyIcon from '@material-ui/icons/Reply'\n\nimport * as moment from 'moment'\n\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport { CurrencyFormatter } from 'Utilities/TextFormatter'\n\nimport HeaderDetails from '../../Components/HeaderDetails/HeaderDetails'\nimport FormDrawer from '../../Components/FormDrawer/FormDrawer'\nimport ContentHeader from 'StandardComponents/ContentHeader/ContentHeader'\nimport CustomEnhancedTable from '../../Components/CustomEnhancedTable/CustomEnhancedTable'\n\n// import BillingAnalystServices from 'Services/Api/BillingAnalystServices'\nimport BillingInvoiceServices from 'Services/Api/BillingClientInvoicesServices'\n\nimport classes from './InvoicePendingPage.module.scss'\n\nconst tableHeaders = [\n  {\n    id: 'pending-invoice-transaction-type',\n    numeric: false,\n    disablePadding: false,\n    label: 'Choose Billing Code & Type',\n    center: true\n  },\n  {\n    id: 'pending-invoice-member-account-id',\n    numeric: false,\n    disablePadding: false,\n    label: 'Enter Member ID',\n    center: true\n  },\n  {\n    id: 'pending-invoice-member-name',\n    numeric: false,\n    disablePadding: false,\n    label: 'Enter Member Name',\n    center: true\n  },\n  {\n    id: 'pending-invoice-description',\n    numeric: false,\n    disablePadding: false,\n    label: 'Enter Description',\n    center: true\n  },\n  {\n    id: 'pending-invoice-amount',\n    numeric: false,\n    disablePadding: false,\n    label: 'Enter Taxable Amount',\n    center: true\n  },\n  {\n    id: '',\n    numeric: false,\n    disablePadding: false,\n    label: '',\n    center: true\n  }\n]\n\nexport default function InvoiceToBeRevised (props) {\n  PageTitleService()\n  const history = useHistory()\n\n  const transaction_number = props.match.params.transactionNumber\n  const [approvedInvoice, setApprovedInvoice] = React.useState({\n    data: {}\n  })\n  const [disabledSave, setDisabledSave] = React.useState(false)\n  console.log(transaction_number)\n  const [invoiceDetail, setInvoiceDetail] = React.useState({})\n  React.useEffect(() => {\n    Promise.all([BillingInvoiceServices.getTobeRevisedInvoice({ transaction_number })]).then(value => {\n      const [invoice] = value\n      console.log(invoice.data.data)\n      setApprovedInvoice(prevState => ({\n        ...prevState,\n        data: invoice.data.data\n      }))\n    })\n\n    // TODO API CALL FOR CURRENT INVOICE TRANSACTIONS\n    Promise.all([BillingInvoiceServices.getInvoiceDetails({ transaction_number })]).then(value => {\n      const [detail] = value\n      setInvoiceDetail(prevState => ({\n        ...prevState,\n        data: detail.data.data\n      }))\n    })\n  }, [])\n\n  const transactionInfo = approvedInvoice.data\n  const clientInfo = approvedInvoice.data.client\n  const billingInfo = approvedInvoice.data.billing\n  const contractInfo = approvedInvoice.data.contract\n  const summaryInfo = approvedInvoice.data.summary\n  const dateInfo = approvedInvoice.data.date\n  const invoiceInfo = invoiceDetail.data\n  function handleClose () {\n    history.push('/')\n  }\n\n  function handleSaved (transaction_number) {\n    BillingInvoiceServices.saveRevisedInvoices({ transaction_number: transaction_number })\n    setDisabledSave(true)\n  }\n\n  function handleSubmitted (transaction_number) {\n    BillingInvoiceServices.submitRevisedInvoices({ transaction_number: transaction_number })\n    history.push('/')\n  }\n\n  BreadcrumbsService.setSelectedItems([\n    'dashboard',\n    'invoice',\n    `invoiceID:${clientInfo && clientInfo.account_name + ' - Invoice to be Revised'}`\n  ])\n\n  return (\n    <div>\n      <HeaderDetails>\n        <Typography id='header-details-corporate-name' variant='h5'>\n          {clientInfo && clientInfo.account_name} - Invoice\n        </Typography>\n        <Typography id='header-details-account-number' color='textSecondary'>\n          ACCOUNT NUMBER {clientInfo && clientInfo.account_number}\n        </Typography>\n      </HeaderDetails>\n      <FormDrawer\n        drawerHeight={'570px'}\n        drawerContent={\n          <div>\n            <Typography variant='h6'>{clientInfo && clientInfo.account_name}</Typography>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-number-field' color='textSecondary'>\n                ACCOUNT NO.\n              </Typography>\n              <Typography id='drawer-account-number-value'>{clientInfo && clientInfo.account_number}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-account-status-field' color='textSecondary'>\n                ACCOUNT STATUS\n              </Typography>\n              <Typography id='drawer-account-status-value'>{clientInfo && clientInfo.account_status}</Typography>\n            </div>\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-payment-term-field' color='textSecondary'>\n                PAYMENT TERM\n              </Typography>\n              <Typography id='drawer-payment-term-value'>{contractInfo && contractInfo.payment_term}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-tax-type-field' color='textSecondary'>\n                TAX TYPE\n              </Typography>\n              <Typography id='drawer-tax-type-value'>{clientInfo && clientInfo.tax_type}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-billing-cyle-field' color='textSecondary'>\n                BILLING CYCLE\n              </Typography>\n              <Typography id='drawer-billing-cyle-value'>\n                {billingInfo && billingInfo.cycle.code + ' - ' + billingInfo.cycle.description}\n              </Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-corporate-tin-field' color='textSecondary'>\n                CORPORATE TIN\n              </Typography>\n              <Typography id='drawer-corporate-tin-value'>{clientInfo && clientInfo.tin}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-payment-term-field' color='textSecondary'>\n                PAYMENT TERM\n              </Typography>\n              <Typography id='drawer-payment-term-value'>{contractInfo && contractInfo.payment_terms}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-contract-plan-type-field' color='textSecondary'>\n                CONTRACT PLAN TYPE\n              </Typography>\n              <Typography id='drawer-contract-plan-type-value'>{contractInfo && contractInfo.type}</Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-effectivity-date-field' color='textSecondary'>\n                EFFECTIVITY DATE\n              </Typography>\n              <Typography id='drawer-effectivity-date-value'>\n                {moment(contractInfo && contractInfo.effectivity).format('MMM, DD, YYYY')}\n              </Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-expiration-date-field' color='textSecondary'>\n                EXPIRATION DATE\n              </Typography>\n              <Typography id='drawer-expiration-date-value'>\n                {moment(contractInfo && contractInfo.expiration).format('MMM, DD, YYYY')}\n              </Typography>\n            </div>\n\n            <div className={classes['drawer-content']}>\n              <Typography id='drawer-location-field' color='textSecondary'>\n                LOCATION\n              </Typography>\n              <Typography id='drawer-location-value'>{clientInfo && clientInfo.location}</Typography>\n            </div>\n          </div>\n        }\n      >\n        <div className={classes['export-view-billing-cycle-wrapper']}>\n          <div className={classes['export-view-content']}>\n            <ReplyIcon id='export-icon' className={classes['export-icon']} />\n            <Link id='export-link' to={`/`} className={classes['export-link']}>\n              Export\n            </Link>\n            <VisibilityIcon id='view-billing-icon' className={classes['view-icon']} />\n            <Link id='view-billing-link' to={`/`} className={classes['view-link']}>\n              View Billing Cycle\n            </Link>\n          </div>\n        </div>\n        <ContentHeader\n          summaryFields={['Total Taxable Amount', 'Total Tax (VAT) Amount', 'Total Amount']}\n          summaryValues={[\n            summaryInfo && summaryInfo.sub_total,\n            summaryInfo && summaryInfo.tax_amount,\n            summaryInfo && summaryInfo.sub_total + summaryInfo.tax_amount\n          ]}\n        >\n          <div className={classes['content-header-details']}>\n            <div className={classes.fields}>\n              <Typography id='content-details-invoice-number-field' variant='h6' color='textSecondary'>\n                INVOICE NO.\n              </Typography>\n              <Typography id='content-details-trasaction-date-field' color='textSecondary'>\n                TRANSACTION DATE\n              </Typography>\n              <Typography id='content-details-ticket-number-field' color='textSecondary'>\n                TICKET NO\n              </Typography>\n            </div>\n            <div className={classes.values}>\n              <Typography id='content-details-invoice-number-value' variant='h6'>\n                {transaction_number}{' '}\n                <RemoveCircleIcon id='view-billing-icon' color='secondary' className={classes['remove-icon']} />\n              </Typography>\n              <Typography id='content-details-trasaction-date-value'>\n                {moment(dateInfo && dateInfo.created).format('MMM DD, YYYY')}\n              </Typography>\n              <Typography id='content-details-ticket-number-value' style={{ width: '100px' }}>\n                {transactionInfo && transactionInfo.case_number}\n              </Typography>\n            </div>\n          </div>\n        </ContentHeader>\n        <CustomEnhancedTable search className={classes.table} tableHeaders={tableHeaders} tableHeight={'325px'}>\n          <TableBody>\n            {console.log(invoiceInfo)}\n            {invoiceInfo &&\n              invoiceInfo.map((detail, detailIndex) => (\n                <TableRow hover tabIndex={-1} key={detailIndex}>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='center'\n                  >\n                    {detail.billingCodeType}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='center'\n                  >\n                    {detail.memberAccountId}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='center'\n                  >\n                    {detail.memberName}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='center'\n                  >\n                    {detail.description}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='right'\n                  >\n                    {CurrencyFormatter(detail.taxableAmount)}\n                  </TableCell>\n                  <TableCell\n                    // id={`${content[0]}-${contentsIndex}`}\n                    key={detailIndex}\n                    align='right'\n                  >\n                    <RemoveCircleIcon id='view-billing-icon' color='secondary' className={classes['remove-icon']} />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </CustomEnhancedTable>\n        <div className={classes.button}>\n          <Button\n            id='close-button'\n            variant='contained'\n            color='primary'\n            className={classes['button-negative']}\n            onClick={e => handleClose()}\n          >\n            Close\n          </Button>\n          <Button\n            id='save-button'\n            variant='contained'\n            color='primary'\n            className={classes['button-positive']}\n            disabled={disabledSave}\n            onClick={e => handleSaved(transaction_number)}\n          >\n            Save\n          </Button>\n          <Button\n            id='submitted-link'\n            variant='contained'\n            className={classes['button-positive']}\n            onClick={e => handleSubmitted(transaction_number)}\n          >\n            {' '}\n            Submit\n          </Button>\n        </div>\n      </FormDrawer>\n    </div>\n  )\n}\n","import { AbilityBuilder, Ability } from '@casl/ability'\n\n// TO DO Refine Rbac\nexport default class Rbac {}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\n// components\nimport Void from 'StandardComponents/Void/Void'\n\n// styles\nimport classes from './ContentPageComponent.module.scss'\n\nexport default function ContentPage (props) {\n  const {\n    voidFunction,\n    type,\n    shift,\n    soaPage,\n    getStepContent,\n    activeStep,\n    save,\n    steps,\n    nextStep,\n    stepBack,\n    reset,\n    content\n  } = props\n  console.log('Type of Role', type)\n\n  return (\n    <div className={`${classes.root} ${shift ? classes.contentShift : ''}`}>\n      {soaPage ? (\n        <div>\n          {activeStep === 4 ? (\n            <Typography className={classes.instructions}>{getStepContent({ stepIndex: 3, activeStep })}</Typography>\n          ) : (\n            <Typography className={classes.instructions}>{getStepContent({ stepIndex: activeStep })}</Typography>\n          )}\n          <div className={classes.button}>\n            <Button\n              variant='contained'\n              id={`${activeStep}-prev-button`}\n              onClick={stepBack}\n              className={classes['button-negative']}\n            >\n              {activeStep === 0 ? 'Cancel' : 'Back'}\n            </Button>\n            <div className={classes['item-right-side']}>\n              &emsp;&emsp;\n              <Button\n                variant='contained'\n                id={`${activeStep}-next-button`}\n                className={classes['button-positive']}\n                onClick={nextStep}\n              >\n                {activeStep === 3 || activeStep === 4 ? 'Close' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        </div>\n      ) : content != null ? (\n        content\n      ) : (\n        'Test'\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\n\nimport ContentPage from 'StandardComponents/ContentPageComponent/ContentPageForValidatedSOA'\n\nconst drawerWidth = 350\nconst useStyles = makeStyles(theme => ({\n  sideBarWrapper: {\n    display: 'flex'\n  },\n  menuButton: {\n    backgroundColor: '#F5F7FB',\n    color: 'rgba(0, 0, 0, 0.54)'\n  },\n  iconWrapper: {\n    padding: '0px',\n    marginRight: '10px',\n    marginTop: '-20px',\n    color: 'rgba(0, 0, 0, 0.54) !important'\n  },\n  hide: {\n    display: 'none',\n    color: 'rgba(0, 0, 0, 0.54)'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    backgroundColor: '#F5F7FB',\n    padding: '0px'\n  },\n  drawerHeaderContent: {\n    padding: '0px',\n    flex: 1\n  },\n  drawerContentContainer: {\n    flexGrow: 1,\n    backgroundColor: '#F5F7FB',\n    paddingTop: 7\n  }\n}))\n\nexport default function PersistentDrawerLeft (props) {\n  const {\n    voidFunction,\n    type,\n    soaPage,\n    activeStep,\n    steps,\n    nextStep,\n    stepBack,\n    reset,\n    edit,\n    save,\n    getStepContent,\n    children\n  } = props\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n\n  return (\n    <div className={classes.sideBarWrapper}>\n      <ContentPage\n        voidFunction={voidFunction}\n        type={type}\n        shift={open}\n        soaPage={soaPage}\n        getStepContent={getStepContent}\n        activeStep={activeStep}\n        steps={steps}\n        save={save}\n        edit={edit}\n        nextStep={nextStep}\n        stepBack={stepBack}\n        reset={reset}\n        content={children != null ? children : null}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport FormOnly from 'StandardComponents/FormDrawer/FormOnly'\nimport BIR from 'StandardComponents/BIR/BIR'\nimport Corporate from 'StandardComponents/Corporate/Corporate'\nimport Attachment from 'StandardComponents/Attachment/Attachment'\nimport Analyze from 'StandardComponents/Analyze/Analyze'\nimport HeaderDetails from 'StandardComponents/HeaderDetails/HeaderDetails'\n\n// Services\nimport { PageTitleService } from 'SharedComponents/PageTitleComponent/PageTitleComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\nimport BillingAnalystServices from 'Services/Api/BillingAnalystServices'\nimport BillingSupervisorServices from 'Services/Api/BillingSupervisorServices'\n\n// CSS\nimport classes from './SOAPage.module.scss'\n\nfunction a11yProps (index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: '#F5F7FB'\n  },\n  tabs: {\n    fontSize: 12\n  },\n  indicator: {\n    backgroundColor: '#3AB77D'\n  },\n  // button: {\n  selected: {\n    backgroundColor: 'yellow'\n  }\n  // }\n}))\n\nexport default function SOAPage (props) {\n  const { soaNumber, type } = props.match.params\n  const [ledger, setLedger] = React.useState({})\n  const [soaPage, setSOAPage] = React.useState(false)\n  const tabClasses = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const [value, setValue] = React.useState(0)\n  const history = useHistory()\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  PageTitleService()\n\n  React.useEffect(() => {\n    Promise.all([BillingAnalystServices.getClientSOA({ soaNumber })]).then(values => {\n      setLedger(state => ({ ...state, details: values[0].data.data[0] }))\n      setSOAPage(true)\n    })\n  }, [activeStep])\n\n  if (ledger.details) {\n    BreadcrumbsService.setSelectedItems(['ledgers', `ledgerId:${ledger.details.account_name.toUpperCase()}`])\n  }\n\n  const voidFunction = soaNumber => {\n    BillingSupervisorServices.setClientSOAVoid({ soaNumber: soaNumber }).then(res => {\n      console.group('Void SOA')\n      console.log(res)\n      console.groupEnd()\n    })\n    history.push('/')\n  }\n\n  const getSteps = () => {\n    return ['Analyze Statement', 'Statement (BIR)', 'Statement (Corporate)', 'Attachment', 'Submit']\n  }\n\n  const getStepContent = props => {\n    const { stepIndex, activeStep } = props\n    switch (stepIndex) {\n      case 0:\n        return <Analyze values={{ soa: ledger.details, type: type }} />\n      case 1:\n        return <BIR soaNumber={soaNumber} />\n      case 2:\n        return <Corporate soaNumber={soaNumber} />\n      case 3:\n        return activeStep ? (\n          <Attachment submit={{ activeStep: activeStep, type: type }} />\n        ) : (\n          <Attachment soaNumber={soaNumber} />\n        )\n    }\n  }\n\n  const steps = getSteps()\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\n    if (activeStep === 0) history.push('/')\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n  // for saving\n  const save = soaNumber => {\n    BillingAnalystServices.saveClientSOA({ soaNumber: soaNumber }).then(res => {\n      console.group('Save SOA')\n      console.log(res)\n      console.groupEnd()\n    })\n    history.push('/')\n  }\n\n  return (\n    <div className={classes.root}>\n      <React.Fragment>\n        <HeaderDetails ledger={ledger.details} activeStep={activeStep} steps={steps} type={'validated'} />\n        <FormOnly\n          voidFunction={() => voidFunction(soaNumber)}\n          type={type}\n          soaPage={soaPage}\n          getStepContent={getStepContent}\n          activeStep={activeStep}\n          steps={steps}\n          save={() => save(soaNumber)}\n          nextStep={handleNext}\n          stepBack={handleBack}\n          reset={handleReset}\n          drawerHeight={'570px'}\n          drawerHeaderContent={\n            <div className={tabClasses.root}>\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label='simple tabs example'\n                classes={{ indicator: tabClasses.indicator }}\n              >\n                <Tab className={tabClasses.tabs} label='Billing Instructions' {...a11yProps(0)} />\n                <Tab className={tabClasses.tabs} label='Terms & Conditions' {...a11yProps(1)} />\n              </Tabs>\n            </div>\n          }\n        />\n      </React.Fragment>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport DashboardAnalyst from './BillingPages/DashboardAnalyst/DashboardAnalyst'\nimport DashboardSupervisor from './BillingPages/DashboardSupervisor/DashboardSupervisor'\nimport AssignAnalystPage from './BillingPages/AssignAnalystPage/AssignAnalystPage'\nimport SOAPage from './BillingPages/SOAPage/SOAPage'\nimport BillingCycleSetupPage from './BillingPages/BillingCycleSetupPage/BillingCycleSetupPage'\nimport ClientTransactionSetupPage from './BillingPages/ClientTransactionSetupPage/ClientTransactionSetupPage'\nimport InvoiceApprovedPage from './BillingPages/InvoiceApprovedPage/InvoiceApprovedPage'\nimport CreateTransactionPage from './BillingPages/CreateTransactionPage/CreateTransactionPage'\nimport ListOfAccountsPage from './BillingPages/ListOfAccountsPage/ListOfAccountsPage'\nimport ClientTransactionJournalPage from './BillingPages/ClientTransactionJournalPage/ClientTransactionJournalPage'\nimport CreateTransactionTypePage from './BillingPages/CreateTransactionPage/CreateTransactionTypePage'\nimport CreateTransactionCreditNotePage from './BillingPages/CreateTransactionPage/CreateTransactionCreditNotePage'\nimport CreateTransactionDebiNotetPage from './BillingPages/CreateTransactionPage/CreateTransactionDebitNotePage'\nimport InvoicePendingPage from './BillingPages/InvoicePendingPage/InvoicePendingPage'\nimport ability from '../SecurityConfig/RbacConfig'\n\nimport ValidatedSOAPage from './BillingPages/SOAPage/ValidatedSOAPage'\n\nimport { SideBarService } from 'SharedComponents/SideBarComponent/SideBarComponent'\nimport { BreadcrumbsService } from 'SharedComponents/BreadcrumbsComponent/BreadcrumbsComponent'\n\nconsole.log(ability)\n\nconst sideBarItems = [\n  {\n    label: 'Dashboard',\n    icon: 'home',\n    to: '/'\n  },\n  {\n    label: 'Client',\n    icon: 'users',\n    to: '/clients'\n  },\n  {\n    label: 'Reports',\n    icon: 'file-signature',\n    to: '/reports'\n  },\n  {\n    label: 'Tickets',\n    icon: 'tasks',\n    to: '/tickets'\n  },\n  {\n    label: 'Create Transaction',\n    icon: 'edit',\n    to: '/billing/create/transaction'\n  },\n  {\n    label: 'Transaction Journal',\n    icon: 'table',\n    to: '/billing/journal/accounts'\n  },\n  // {\n  //   label: 'Billing Maintenance',\n  //   icon: 'file-alt',\n  //   to: '/billing/maintenance'\n  // }\n  {\n    label: 'Activity Log',\n    icon: 'id-card-alt',\n    to: '/activitylog'\n  }\n]\n\nconst analystBreadcrumbs = {\n  dashboard: {\n    text: 'DASHBOARD',\n    to: '/'\n  },\n  createTransaction: {\n    text: 'CREATE TRANSACTION',\n    to: '/billing/create/transaction'\n  },\n  createTransactionType: {\n    text: 'CREATE TRANSACTION',\n    to: '/billing/create/transaction/type'\n  },\n  createTransactionMemo: {\n    text: 'CREATE TRANSACTION',\n    to: '/billing/create/transaction/credit'\n  },\n  createTransactionMemoDebit: {\n    text: 'CREATE TRANSACTION',\n    to: '/billing/create/transaction/debit'\n  },\n  billing: {\n    text: 'BILLING',\n    to: '/billing'\n  },\n  clientSetup: {\n    text: 'CLIENT TRANSACTION LEDGERS TO SETUP',\n    to: '/clients/analyze'\n  },\n  clientBillingCycle: {\n    text: 'SETUP BILLING CYCLE',\n    to: `/clients/analyze/`\n  },\n  clientId: {\n    text: data => data,\n    to: data => `/clients/analyze/${data}`\n  },\n  invoice: {\n    text: 'LIST OF APPROVED INVOICES',\n    to: '/billing/invoice/approved'\n  },\n  invoiceID: {\n    text: data => data,\n    to: data => `/billing/invoice/approved/${data}`\n  },\n\n  journal: {\n    text: 'TRANSACTION JOURNAL',\n    to: '/billing/journal'\n  },\n\n  accountList: {\n    text: 'LIST OF ACCOUNTS',\n    to: '/billing/journal/accounts'\n  },\n\n  clientJournal: {\n    text: data => `${data}/TRANSACTION JOURNAL`,\n    to: data => `/billing/transaction/ledgers/${data}/TRANSACTION JOURNAL`\n  },\n\n  ledgers: {\n    text: 'LIST OF CLIENT SOAs TO VALIDATE',\n    to: data => `/billing/ledgers`\n  },\n  ledgerId: {\n    text: data => data,\n    to: data => `/billing/ledgers/${data}`\n  },\n  transactionLedger: {\n    text: 'TRANSACTION LEDGERS',\n    to: '/transaction'\n  },\n  specificPaymentRequest: {\n    text: data => data,\n    to: data => `/payment-request/${data}`\n  }\n  // transactionNumber: {\n  //   text: transactionNumber => transactionNumber,\n  //   to: transactionNumber => `/billing/invoice/form/${transactionNumber}`\n  // }\n}\n\nconst supervisorBreadcrumbs = {\n  dashboard: {\n    text: 'Dashboard',\n    to: '/'\n  },\n  clients: {\n    text: 'Clients',\n    to: '/clients'\n  },\n  ledger: {\n    text: 'Ledger',\n    to: '/ledger'\n  },\n  ledgers: {\n    text: 'LIST OF CLIENT SOAs TO VALIDATE',\n    to: data => `/billing/ledgers`\n  },\n  ledgerId: {\n    text: data => data,\n    to: data => `/billing/ledgers/${data}`\n  },\n  transactionLedger: {\n    text: 'TRANSACTION LEDGERS',\n    to: '/transaction'\n  },\n  assign: {\n    text: 'Assign',\n    to: '/assign'\n  },\n  createTransaction: {\n    text: 'CREATE TRANSACTION',\n    to: '/billing/create/transaction'\n  },\n  journal: {\n    text: 'TRANSACTION JOURNAL',\n    to: '/billing/journal/'\n  },\n  accountList: {\n    text: 'LIST OF ACCOUNTS',\n    to: '/billing/journal/accounts'\n  },\n  reports: {\n    text: 'REPORTS',\n    to: '/reports'\n  },\n  assignId: {\n    text: data => data,\n    to: data => `/assign/${data}`\n  },\n\n  clientJournal: {\n    text: data => `${data}/TRANSACTION JOURNAL`,\n    to: data => `/billing/transaction/ledgers/${data}/TRANSACTION JOURNAL`\n  }\n}\n\nfunction BillingAnalystRoutes () {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Billing'\n    const { role } = JSON.parse(localStorage.getItem('me'))\n    setUserRole(role)\n    setIsLoading(false)\n  })\n\n  SideBarService.setItems(sideBarItems)\n\n  if (userRole === 'BILLING_ANALYST') {\n    BreadcrumbsService.setItems(analystBreadcrumbs)\n  } else {\n    BreadcrumbsService.setItems(supervisorBreadcrumbs)\n  }\n\n  console.log(ability)\n\n  return (\n    <Switch>\n      {userRole === 'BILLING_ANALYST' && <Route path='/' exact component={DashboardAnalyst} />}\n      {/* {userRole === 'BILLING_ANALYST' && <Route path='/Supervisor' exact component={DashboardSupervisor} />} */}\n      {userRole === 'BILLING_SUPERVISOR' || userRole === 'BILLING_MANAGER' ? (\n        <Route path='/' exact component={DashboardSupervisor} />\n      ) : null}\n      {userRole === 'BILLING_SUPERVISOR' || userRole === 'BILLING_MANAGER' ? (\n        <Route path='/Analyst' exact component={DashboardAnalyst} />\n      ) : null}\n      {/* {userRole === 'BILLING_SUPERVISOR' || userRole === 'BILLING_MANAGER' ? (\n        <Route path='/Supervisor' exact component={DashboardSupervisor} />\n      ) : null} */}\n\n      <Route path='/clients/ledger/' exact component={ClientTransactionSetupPage} />\n      <Route path='/clients/analyze/:_id/:account_number' exact component={BillingCycleSetupPage} />\n      <Route path='/billing/invoice/form/:transactionNumber/:transactionStatus' exact component={InvoicePendingPage} />\n      <Route path='/billing/ledgers/:soaNumber/:type' exact component={SOAPage} />\n      <Route path='/billing/ledgers-validated/:soaNumber/:type' exact component={ValidatedSOAPage} />\n      <Route path='/billing/journal/accounts' exact component={ListOfAccountsPage} />\n      <Route path='/billing/journal/transactions/:clientId' exact component={ClientTransactionJournalPage} />\n      <Route path='/billing/invoice' exact component={InvoiceApprovedPage} />\n      <Route path='/billing/invoice/approved/:transaction_number' exact component={InvoiceApprovedPage} />\n      <Route path='/billing/create/transaction' exact component={CreateTransactionPage} />\n      <Route path='/billing/create/transaction/type' exact component={CreateTransactionTypePage} />\n      <Route path='/billing/create/transaction/credit' exact component={CreateTransactionCreditNotePage} />\n      <Route path='/billing/create/transaction/debit' exact component={CreateTransactionDebiNotetPage} />\n\n      <Route path='/clients/assign/:_id/:account_number' exact component={AssignAnalystPage} />\n    </Switch>\n  )\n}\n\nexport default BillingAnalystRoutes\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n// Routes by role\n\nimport BillingModuleRoutes from './Routes'\n// import ClaimsDetailsEncoderRoutes from './ClaimsDetailsEncoder/Routes'\n// import ClaimsAnalystRoutes from './ClaimsAnalyst/Routes'\n// import PaymentRequestRoutes from './PaymentRequest/Routes'\n// import BatchEncodingServices from 'Services/Api/BatchEncodingServices'\n\nexport default function BillingModule ({ history }) {\n  const [userRole, setUserRole] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(true)\n\n  React.useEffect(() => {\n    document.title = 'HIMS - Billing'\n    const { role } = JSON.parse(localStorage.getItem('me'))\n    setUserRole(role)\n    setIsLoading(false)\n  }, [])\n\n  const billingModuleLogic = () => {\n    return <Route path='/' component={BillingModuleRoutes} />\n  }\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        ''\n      ) : (\n        <Switch>\n          {userRole === 'BILLING_ANALYST' && billingModuleLogic()}\n          {userRole === 'BILLING_SUPERVISOR' && billingModuleLogic()}\n          {/* {userRole === 'BILLING_SUPERVISOR' && billingSupervisorLogic()} */}\n          {/* {userRole === 'CLAIMS_DETAILS_ENCODER' && <Route path='/' component={ClaimsDetailsEncoderRoutes} />} */}\n          {/* {userRole === 'CLAIMS_ANALYST' && <Route path='/' component={ClaimsAnalystRoutes} />} */}\n          {/* {userRole === 'PR_OFFICER' && <Route path='/' component={PaymentRequestRoutes} />} */}\n        </Switch>\n      )}\n    </React.Fragment>\n  )\n}\n"],"sourceRoot":""}